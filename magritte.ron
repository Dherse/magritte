Source(
  global: [
    ("IMG", "IMG", Tag, 0),
    ("AMD", "AMD", Tag, 1),
    ("AMDX", "AMDX", Tag, 2),
    ("ARM", "ARM", Tag, 3),
    ("FSL", "FSL", Tag, 4),
    ("BRCM", "BRCM", Tag, 5),
    ("NXP", "NXP", Tag, 6),
    ("NV", "NV", Tag, 7),
    ("NVX", "NVX", Tag, 8),
    ("VIV", "VIV", Tag, 9),
    ("VSI", "VSI", Tag, 10),
    ("KDAB", "KDAB", Tag, 11),
    ("ANDROID", "ANDROID", Tag, 12),
    ("CHROMIUM", "CHROMIUM", Tag, 13),
    ("FUCHSIA", "FUCHSIA", Tag, 14),
    ("GGP", "GGP", Tag, 15),
    ("GOOGLE", "GOOGLE", Tag, 16),
    ("QCOM", "QCOM", Tag, 17),
    ("LUNARG", "LUNARG", Tag, 18),
    ("NZXT", "NZXT", Tag, 19),
    ("SAMSUNG", "SAMSUNG", Tag, 20),
    ("SEC", "SEC", Tag, 21),
    ("TIZEN", "TIZEN", Tag, 22),
    ("RENDERDOC", "RENDERDOC", Tag, 23),
    ("NN", "NN", Tag, 24),
    ("MVK", "MVK", Tag, 25),
    ("KHR", "KHR", Tag, 26),
    ("KHX", "KHX", Tag, 27),
    ("EXT", "EXT", Tag, 28),
    ("MESA", "MESA", Tag, 29),
    ("INTEL", "INTEL", Tag, 30),
    ("HUAWEI", "HUAWEI", Tag, 31),
    ("VALVE", "VALVE", Tag, 32),
    ("QNX", "QNX", Tag, 33),
    ("JUICE", "JUICE", Tag, 34),
    ("FB", "FB", Tag, 35),
    ("RASTERGRID", "RASTERGRID", Tag, 36),
    ("VkFramebufferCreateFlags", "FramebufferCreateFlags", Bitmask, 0),
    ("VkQueryPoolCreateFlags", "QueryPoolCreateFlags", Bitmask, 1),
    ("VkRenderPassCreateFlags", "RenderPassCreateFlags", Bitmask, 2),
    ("VkSamplerCreateFlags", "SamplerCreateFlags", Bitmask, 3),
    ("VkPipelineLayoutCreateFlags", "PipelineLayoutCreateFlags", Bitmask, 4),
    ("VkPipelineCacheCreateFlags", "PipelineCacheCreateFlags", Bitmask, 5),
    ("VkPipelineDepthStencilStateCreateFlags", "PipelineDepthStencilStateCreateFlags", Bitmask, 6),
    ("VkPipelineDynamicStateCreateFlags", "PipelineDynamicStateCreateFlags", Bitmask, 7),
    ("VkPipelineColorBlendStateCreateFlags", "PipelineColorBlendStateCreateFlags", Bitmask, 8),
    ("VkPipelineMultisampleStateCreateFlags", "PipelineMultisampleStateCreateFlags", Bitmask, 9),
    ("VkPipelineRasterizationStateCreateFlags", "PipelineRasterizationStateCreateFlags", Bitmask, 10),
    ("VkPipelineViewportStateCreateFlags", "PipelineViewportStateCreateFlags", Bitmask, 11),
    ("VkPipelineTessellationStateCreateFlags", "PipelineTessellationStateCreateFlags", Bitmask, 12),
    ("VkPipelineInputAssemblyStateCreateFlags", "PipelineInputAssemblyStateCreateFlags", Bitmask, 13),
    ("VkPipelineVertexInputStateCreateFlags", "PipelineVertexInputStateCreateFlags", Bitmask, 14),
    ("VkPipelineShaderStageCreateFlags", "PipelineShaderStageCreateFlags", Bitmask, 15),
    ("VkDescriptorSetLayoutCreateFlags", "DescriptorSetLayoutCreateFlags", Bitmask, 16),
    ("VkBufferViewCreateFlags", "BufferViewCreateFlags", Bitmask, 17),
    ("VkInstanceCreateFlags", "InstanceCreateFlags", Bitmask, 18),
    ("VkDeviceCreateFlags", "DeviceCreateFlags", Bitmask, 19),
    ("VkDeviceQueueCreateFlags", "DeviceQueueCreateFlags", Bitmask, 20),
    ("VkQueueFlags", "QueueFlags", Bitmask, 21),
    ("VkMemoryPropertyFlags", "MemoryPropertyFlags", Bitmask, 22),
    ("VkMemoryHeapFlags", "MemoryHeapFlags", Bitmask, 23),
    ("VkAccessFlags", "AccessFlags", Bitmask, 24),
    ("VkBufferUsageFlags", "BufferUsageFlags", Bitmask, 25),
    ("VkBufferCreateFlags", "BufferCreateFlags", Bitmask, 26),
    ("VkShaderStageFlags", "ShaderStageFlags", Bitmask, 27),
    ("VkImageUsageFlags", "ImageUsageFlags", Bitmask, 28),
    ("VkImageCreateFlags", "ImageCreateFlags", Bitmask, 29),
    ("VkImageViewCreateFlags", "ImageViewCreateFlags", Bitmask, 30),
    ("VkPipelineCreateFlags", "PipelineCreateFlags", Bitmask, 31),
    ("VkColorComponentFlags", "ColorComponentFlags", Bitmask, 32),
    ("VkFenceCreateFlags", "FenceCreateFlags", Bitmask, 33),
    ("VkSemaphoreCreateFlags", "SemaphoreCreateFlags", Bitmask, 34),
    ("VkFormatFeatureFlags", "FormatFeatureFlags", Bitmask, 35),
    ("VkQueryControlFlags", "QueryControlFlags", Bitmask, 36),
    ("VkQueryResultFlags", "QueryResultFlags", Bitmask, 37),
    ("VkShaderModuleCreateFlags", "ShaderModuleCreateFlags", Bitmask, 38),
    ("VkEventCreateFlags", "EventCreateFlags", Bitmask, 39),
    ("VkCommandPoolCreateFlags", "CommandPoolCreateFlags", Bitmask, 40),
    ("VkCommandPoolResetFlags", "CommandPoolResetFlags", Bitmask, 41),
    ("VkCommandBufferResetFlags", "CommandBufferResetFlags", Bitmask, 42),
    ("VkCommandBufferUsageFlags", "CommandBufferUsageFlags", Bitmask, 43),
    ("VkQueryPipelineStatisticFlags", "QueryPipelineStatisticFlags", Bitmask, 44),
    ("VkMemoryMapFlags", "MemoryMapFlags", Bitmask, 45),
    ("VkImageAspectFlags", "ImageAspectFlags", Bitmask, 46),
    ("VkSparseMemoryBindFlags", "SparseMemoryBindFlags", Bitmask, 47),
    ("VkSparseImageFormatFlags", "SparseImageFormatFlags", Bitmask, 48),
    ("VkSubpassDescriptionFlags", "SubpassDescriptionFlags", Bitmask, 49),
    ("VkPipelineStageFlags", "PipelineStageFlags", Bitmask, 50),
    ("VkSampleCountFlags", "SampleCountFlags", Bitmask, 51),
    ("VkAttachmentDescriptionFlags", "AttachmentDescriptionFlags", Bitmask, 52),
    ("VkStencilFaceFlags", "StencilFaceFlags", Bitmask, 53),
    ("VkCullModeFlags", "CullModeFlags", Bitmask, 54),
    ("VkDescriptorPoolCreateFlags", "DescriptorPoolCreateFlags", Bitmask, 55),
    ("VkDescriptorPoolResetFlags", "DescriptorPoolResetFlags", Bitmask, 56),
    ("VkDependencyFlags", "DependencyFlags", Bitmask, 57),
    ("VkSubgroupFeatureFlags", "SubgroupFeatureFlags", Bitmask, 58),
    ("VkIndirectCommandsLayoutUsageFlagsNV", "IndirectCommandsLayoutUsageFlagsNV", Bitmask, 59),
    ("VkIndirectStateFlagsNV", "IndirectStateFlagsNV", Bitmask, 60),
    ("VkGeometryFlagsKHR", "GeometryFlagsKHR", Bitmask, 61),
    ("VkGeometryInstanceFlagsKHR", "GeometryInstanceFlagsKHR", Bitmask, 62),
    ("VkBuildAccelerationStructureFlagsKHR", "BuildAccelerationStructureFlagsKHR", Bitmask, 63),
    ("VkPrivateDataSlotCreateFlags", "PrivateDataSlotCreateFlags", Bitmask, 64),
    ("VkAccelerationStructureCreateFlagsKHR", "AccelerationStructureCreateFlagsKHR", Bitmask, 65),
    ("VkDescriptorUpdateTemplateCreateFlags", "DescriptorUpdateTemplateCreateFlags", Bitmask, 66),
    ("VkPipelineCreationFeedbackFlags", "PipelineCreationFeedbackFlags", Bitmask, 67),
    ("VkPerformanceCounterDescriptionFlagsKHR", "PerformanceCounterDescriptionFlagsKHR", Bitmask, 68),
    ("VkAcquireProfilingLockFlagsKHR", "AcquireProfilingLockFlagsKHR", Bitmask, 69),
    ("VkSemaphoreWaitFlags", "SemaphoreWaitFlags", Bitmask, 70),
    ("VkPipelineCompilerControlFlagsAMD", "PipelineCompilerControlFlagsAMD", Bitmask, 71),
    ("VkShaderCorePropertiesFlagsAMD", "ShaderCorePropertiesFlagsAMD", Bitmask, 72),
    ("VkDeviceDiagnosticsConfigFlagsNV", "DeviceDiagnosticsConfigFlagsNV", Bitmask, 73),
    ("VkAccessFlags2", "AccessFlags2", Bitmask, 74),
    ("VkPipelineStageFlags2", "PipelineStageFlags2", Bitmask, 75),
    ("VkAccelerationStructureMotionInfoFlagsNV", "AccelerationStructureMotionInfoFlagsNV", Bitmask, 76),
    ("VkAccelerationStructureMotionInstanceFlagsNV", "AccelerationStructureMotionInstanceFlagsNV", Bitmask, 77),
    ("VkFormatFeatureFlags2", "FormatFeatureFlags2", Bitmask, 78),
    ("VkRenderingFlags", "RenderingFlags", Bitmask, 79),
    ("VkCompositeAlphaFlagsKHR", "CompositeAlphaFlagsKHR", Bitmask, 80),
    ("VkDisplayPlaneAlphaFlagsKHR", "DisplayPlaneAlphaFlagsKHR", Bitmask, 81),
    ("VkSurfaceTransformFlagsKHR", "SurfaceTransformFlagsKHR", Bitmask, 82),
    ("VkSwapchainCreateFlagsKHR", "SwapchainCreateFlagsKHR", Bitmask, 83),
    ("VkDisplayModeCreateFlagsKHR", "DisplayModeCreateFlagsKHR", Bitmask, 84),
    ("VkDisplaySurfaceCreateFlagsKHR", "DisplaySurfaceCreateFlagsKHR", Bitmask, 85),
    ("VkAndroidSurfaceCreateFlagsKHR", "AndroidSurfaceCreateFlagsKHR", Bitmask, 86),
    ("VkViSurfaceCreateFlagsNN", "ViSurfaceCreateFlagsNN", Bitmask, 87),
    ("VkWaylandSurfaceCreateFlagsKHR", "WaylandSurfaceCreateFlagsKHR", Bitmask, 88),
    ("VkWin32SurfaceCreateFlagsKHR", "Win32SurfaceCreateFlagsKHR", Bitmask, 89),
    ("VkXlibSurfaceCreateFlagsKHR", "XlibSurfaceCreateFlagsKHR", Bitmask, 90),
    ("VkXcbSurfaceCreateFlagsKHR", "XcbSurfaceCreateFlagsKHR", Bitmask, 91),
    ("VkDirectFBSurfaceCreateFlagsEXT", "DirectFBSurfaceCreateFlagsEXT", Bitmask, 92),
    ("VkIOSSurfaceCreateFlagsMVK", "IosSurfaceCreateFlagsMVK", Bitmask, 93),
    ("VkMacOSSurfaceCreateFlagsMVK", "MacOsSurfaceCreateFlagsMVK", Bitmask, 94),
    ("VkMetalSurfaceCreateFlagsEXT", "MetalSurfaceCreateFlagsEXT", Bitmask, 95),
    ("VkImagePipeSurfaceCreateFlagsFUCHSIA", "ImagePipeSurfaceCreateFlagsFUCHSIA", Bitmask, 96),
    ("VkStreamDescriptorSurfaceCreateFlagsGGP", "StreamDescriptorSurfaceCreateFlagsGGP", Bitmask, 97),
    ("VkHeadlessSurfaceCreateFlagsEXT", "HeadlessSurfaceCreateFlagsEXT", Bitmask, 98),
    ("VkScreenSurfaceCreateFlagsQNX", "ScreenSurfaceCreateFlagsQNX", Bitmask, 99),
    ("VkPeerMemoryFeatureFlags", "PeerMemoryFeatureFlags", Bitmask, 100),
    ("VkMemoryAllocateFlags", "MemoryAllocateFlags", Bitmask, 101),
    ("VkDeviceGroupPresentModeFlagsKHR", "DeviceGroupPresentModeFlagsKHR", Bitmask, 102),
    ("VkDebugReportFlagsEXT", "DebugReportFlagsEXT", Bitmask, 103),
    ("VkCommandPoolTrimFlags", "CommandPoolTrimFlags", Bitmask, 104),
    ("VkExternalMemoryHandleTypeFlagsNV", "ExternalMemoryHandleTypeFlagsNV", Bitmask, 105),
    ("VkExternalMemoryFeatureFlagsNV", "ExternalMemoryFeatureFlagsNV", Bitmask, 106),
    ("VkExternalMemoryHandleTypeFlags", "ExternalMemoryHandleTypeFlags", Bitmask, 107),
    ("VkExternalMemoryFeatureFlags", "ExternalMemoryFeatureFlags", Bitmask, 108),
    ("VkExternalSemaphoreHandleTypeFlags", "ExternalSemaphoreHandleTypeFlags", Bitmask, 109),
    ("VkExternalSemaphoreFeatureFlags", "ExternalSemaphoreFeatureFlags", Bitmask, 110),
    ("VkSemaphoreImportFlags", "SemaphoreImportFlags", Bitmask, 111),
    ("VkExternalFenceHandleTypeFlags", "ExternalFenceHandleTypeFlags", Bitmask, 112),
    ("VkExternalFenceFeatureFlags", "ExternalFenceFeatureFlags", Bitmask, 113),
    ("VkFenceImportFlags", "FenceImportFlags", Bitmask, 114),
    ("VkSurfaceCounterFlagsEXT", "SurfaceCounterFlagsEXT", Bitmask, 115),
    ("VkPipelineViewportSwizzleStateCreateFlagsNV", "PipelineViewportSwizzleStateCreateFlagsNV", Bitmask, 116),
    ("VkPipelineDiscardRectangleStateCreateFlagsEXT", "PipelineDiscardRectangleStateCreateFlagsEXT", Bitmask, 117),
    ("VkPipelineCoverageToColorStateCreateFlagsNV", "PipelineCoverageToColorStateCreateFlagsNV", Bitmask, 118),
    ("VkPipelineCoverageModulationStateCreateFlagsNV", "PipelineCoverageModulationStateCreateFlagsNV", Bitmask, 119),
    ("VkPipelineCoverageReductionStateCreateFlagsNV", "PipelineCoverageReductionStateCreateFlagsNV", Bitmask, 120),
    ("VkValidationCacheCreateFlagsEXT", "ValidationCacheCreateFlagsEXT", Bitmask, 121),
    ("VkDebugUtilsMessageSeverityFlagsEXT", "DebugUtilsMessageSeverityFlagsEXT", Bitmask, 122),
    ("VkDebugUtilsMessageTypeFlagsEXT", "DebugUtilsMessageTypeFlagsEXT", Bitmask, 123),
    ("VkDebugUtilsMessengerCreateFlagsEXT", "DebugUtilsMessengerCreateFlagsEXT", Bitmask, 124),
    ("VkDebugUtilsMessengerCallbackDataFlagsEXT", "DebugUtilsMessengerCallbackDataFlagsEXT", Bitmask, 125),
    ("VkDeviceMemoryReportFlagsEXT", "DeviceMemoryReportFlagsEXT", Bitmask, 126),
    ("VkPipelineRasterizationConservativeStateCreateFlagsEXT", "PipelineRasterizationConservativeStateCreateFlagsEXT", Bitmask, 127),
    ("VkDescriptorBindingFlags", "DescriptorBindingFlags", Bitmask, 128),
    ("VkConditionalRenderingFlagsEXT", "ConditionalRenderingFlagsEXT", Bitmask, 129),
    ("VkResolveModeFlags", "ResolveModeFlags", Bitmask, 130),
    ("VkPipelineRasterizationStateStreamCreateFlagsEXT", "PipelineRasterizationStateStreamCreateFlagsEXT", Bitmask, 131),
    ("VkPipelineRasterizationDepthClipStateCreateFlagsEXT", "PipelineRasterizationDepthClipStateCreateFlagsEXT", Bitmask, 132),
    ("VkSwapchainImageUsageFlagsANDROID", "SwapchainImageUsageFlagsANDROID", Bitmask, 133),
    ("VkToolPurposeFlags", "ToolPurposeFlags", Bitmask, 134),
    ("VkSubmitFlags", "SubmitFlags", Bitmask, 135),
    ("VkImageFormatConstraintsFlagsFUCHSIA", "ImageFormatConstraintsFlagsFUCHSIA", Bitmask, 136),
    ("VkImageConstraintsInfoFlagsFUCHSIA", "ImageConstraintsInfoFlagsFUCHSIA", Bitmask, 137),
    ("VkVideoCodecOperationFlagsKHR", "VideoCodecOperationFlagsKHR", Bitmask, 138),
    ("VkVideoCapabilityFlagsKHR", "VideoCapabilityFlagsKHR", Bitmask, 139),
    ("VkVideoSessionCreateFlagsKHR", "VideoSessionCreateFlagsKHR", Bitmask, 140),
    ("VkVideoBeginCodingFlagsKHR", "VideoBeginCodingFlagsKHR", Bitmask, 141),
    ("VkVideoEndCodingFlagsKHR", "VideoEndCodingFlagsKHR", Bitmask, 142),
    ("VkVideoCodingQualityPresetFlagsKHR", "VideoCodingQualityPresetFlagsKHR", Bitmask, 143),
    ("VkVideoCodingControlFlagsKHR", "VideoCodingControlFlagsKHR", Bitmask, 144),
    ("VkVideoDecodeCapabilityFlagsKHR", "VideoDecodeCapabilityFlagsKHR", Bitmask, 145),
    ("VkVideoDecodeFlagsKHR", "VideoDecodeFlagsKHR", Bitmask, 146),
    ("VkVideoDecodeH264PictureLayoutFlagsEXT", "VideoDecodeH264PictureLayoutFlagsEXT", Bitmask, 147),
    ("VkVideoEncodeFlagsKHR", "VideoEncodeFlagsKHR", Bitmask, 148),
    ("VkVideoEncodeCapabilityFlagsKHR", "VideoEncodeCapabilityFlagsKHR", Bitmask, 149),
    ("VkVideoEncodeRateControlFlagsKHR", "VideoEncodeRateControlFlagsKHR", Bitmask, 150),
    ("VkVideoEncodeRateControlModeFlagsKHR", "VideoEncodeRateControlModeFlagsKHR", Bitmask, 151),
    ("VkVideoChromaSubsamplingFlagsKHR", "VideoChromaSubsamplingFlagsKHR", Bitmask, 152),
    ("VkVideoComponentBitDepthFlagsKHR", "VideoComponentBitDepthFlagsKHR", Bitmask, 153),
    ("VkVideoEncodeH264CapabilityFlagsEXT", "VideoEncodeH264CapabilityFlagsEXT", Bitmask, 154),
    ("VkVideoEncodeH264InputModeFlagsEXT", "VideoEncodeH264InputModeFlagsEXT", Bitmask, 155),
    ("VkVideoEncodeH264OutputModeFlagsEXT", "VideoEncodeH264OutputModeFlagsEXT", Bitmask, 156),
    ("VkVideoEncodeH264RateControlStructureFlagsEXT", "VideoEncodeH264RateControlStructureFlagsEXT", Bitmask, 157),
    ("VkVideoEncodeH265CapabilityFlagsEXT", "VideoEncodeH265CapabilityFlagsEXT", Bitmask, 158),
    ("VkVideoEncodeH265InputModeFlagsEXT", "VideoEncodeH265InputModeFlagsEXT", Bitmask, 159),
    ("VkVideoEncodeH265OutputModeFlagsEXT", "VideoEncodeH265OutputModeFlagsEXT", Bitmask, 160),
    ("VkVideoEncodeH265RateControlStructureFlagsEXT", "VideoEncodeH265RateControlStructureFlagsEXT", Bitmask, 161),
    ("VkVideoEncodeH265CtbSizeFlagsEXT", "VideoEncodeH265CtbSizeFlagsEXT", Bitmask, 162),
    ("VkVideoEncodeH265TransformBlockSizeFlagsEXT", "VideoEncodeH265TransformBlockSizeFlagsEXT", Bitmask, 163),
    ("ANativeWindow", "ANativeWindow", BaseType, 0),
    ("AHardwareBuffer", "AHardwareBuffer", BaseType, 1),
    ("CAMetalLayer", "CaMetalLayer", BaseType, 2),
    ("VkSampleMask", "SampleMask", BaseType, 3),
    ("VkBool32", "Bool32", BaseType, 4),
    ("VkFlags", "Flags", BaseType, 5),
    ("VkFlags64", "Flags64", BaseType, 6),
    ("VkDeviceSize", "DeviceSize", BaseType, 7),
    ("VkDeviceAddress", "DeviceAddress", BaseType, 8),
    ("VkRemoteAddressNV", "RemoteAddressNV", BaseType, 9),
    ("PFN_vkInternalAllocationNotification", "PFNInternalAllocationNotification", FunctionPointer, 0),
    ("PFN_vkInternalFreeNotification", "PFNInternalFreeNotification", FunctionPointer, 1),
    ("PFN_vkReallocationFunction", "PFNReallocationFunction", FunctionPointer, 2),
    ("PFN_vkAllocationFunction", "PFNAllocationFunction", FunctionPointer, 3),
    ("PFN_vkFreeFunction", "PFNFreeFunction", FunctionPointer, 4),
    ("PFN_vkVoidFunction", "PFNVoidFunction", FunctionPointer, 5),
    ("PFN_vkDebugReportCallbackEXT", "PFNDebugReportCallbackEXT", FunctionPointer, 6),
    ("PFN_vkDebugUtilsMessengerCallbackEXT", "PFNDebugUtilsMessengerCallbackEXT", FunctionPointer, 7),
    ("PFN_vkDeviceMemoryReportCallbackEXT", "PFNDeviceMemoryReportCallbackEXT", FunctionPointer, 8),
    ("VkClearColorValue", "ClearColorValue", Union, 0),
    ("VkClearValue", "ClearValue", Union, 1),
    ("VkPerformanceCounterResultKHR", "PerformanceCounterResultKHR", Union, 2),
    ("VkPerformanceValueDataINTEL", "PerformanceValueDataINTEL", Union, 3),
    ("VkPipelineExecutableStatisticValueKHR", "PipelineExecutableStatisticValueKHR", Union, 4),
    ("VkDeviceOrHostAddressKHR", "DeviceOrHostAddressKHR", Union, 5),
    ("VkDeviceOrHostAddressConstKHR", "DeviceOrHostAddressConstKHR", Union, 6),
    ("VkAccelerationStructureGeometryDataKHR", "AccelerationStructureGeometryDataKHR", Union, 7),
    ("VkAccelerationStructureMotionInstanceDataNV", "AccelerationStructureMotionInstanceDataNV", Union, 8),
    ("VkInstance", "Instance", Handle, 0),
    ("VkPhysicalDevice", "PhysicalDevice", Handle, 1),
    ("VkDevice", "Device", Handle, 2),
    ("VkQueue", "Queue", Handle, 3),
    ("VkCommandBuffer", "CommandBuffer", Handle, 4),
    ("VkDeviceMemory", "DeviceMemory", Handle, 5),
    ("VkCommandPool", "CommandPool", Handle, 6),
    ("VkBuffer", "Buffer", Handle, 7),
    ("VkBufferView", "BufferView", Handle, 8),
    ("VkImage", "Image", Handle, 9),
    ("VkImageView", "ImageView", Handle, 10),
    ("VkShaderModule", "ShaderModule", Handle, 11),
    ("VkPipeline", "Pipeline", Handle, 12),
    ("VkPipelineLayout", "PipelineLayout", Handle, 13),
    ("VkSampler", "Sampler", Handle, 14),
    ("VkDescriptorSet", "DescriptorSet", Handle, 15),
    ("VkDescriptorSetLayout", "DescriptorSetLayout", Handle, 16),
    ("VkDescriptorPool", "DescriptorPool", Handle, 17),
    ("VkFence", "Fence", Handle, 18),
    ("VkSemaphore", "Semaphore", Handle, 19),
    ("VkEvent", "Event", Handle, 20),
    ("VkQueryPool", "QueryPool", Handle, 21),
    ("VkFramebuffer", "Framebuffer", Handle, 22),
    ("VkRenderPass", "RenderPass", Handle, 23),
    ("VkPipelineCache", "PipelineCache", Handle, 24),
    ("VkIndirectCommandsLayoutNV", "IndirectCommandsLayoutNV", Handle, 25),
    ("VkDescriptorUpdateTemplate", "DescriptorUpdateTemplate", Handle, 26),
    ("VkSamplerYcbcrConversion", "SamplerYcbcrConversion", Handle, 27),
    ("VkValidationCacheEXT", "ValidationCacheEXT", Handle, 28),
    ("VkAccelerationStructureKHR", "AccelerationStructureKHR", Handle, 29),
    ("VkAccelerationStructureNV", "AccelerationStructureNV", Handle, 30),
    ("VkPerformanceConfigurationINTEL", "PerformanceConfigurationINTEL", Handle, 31),
    ("VkBufferCollectionFUCHSIA", "BufferCollectionFUCHSIA", Handle, 32),
    ("VkDeferredOperationKHR", "DeferredOperationKHR", Handle, 33),
    ("VkPrivateDataSlot", "PrivateDataSlot", Handle, 34),
    ("VkCuModuleNVX", "CuModuleNVX", Handle, 35),
    ("VkCuFunctionNVX", "CuFunctionNVX", Handle, 36),
    ("VkDisplayKHR", "DisplayKHR", Handle, 37),
    ("VkDisplayModeKHR", "DisplayModeKHR", Handle, 38),
    ("VkSurfaceKHR", "SurfaceKHR", Handle, 39),
    ("VkSwapchainKHR", "SwapchainKHR", Handle, 40),
    ("VkDebugReportCallbackEXT", "DebugReportCallbackEXT", Handle, 41),
    ("VkDebugUtilsMessengerEXT", "DebugUtilsMessengerEXT", Handle, 42),
    ("VkVideoSessionKHR", "VideoSessionKHR", Handle, 43),
    ("VkVideoSessionParametersKHR", "VideoSessionParametersKHR", Handle, 44),
    ("VkBaseOutStructure", "BaseOutStructure", Struct, 0),
    ("VkBaseInStructure", "BaseInStructure", Struct, 1),
    ("VkOffset2D", "Offset2D", Struct, 2),
    ("VkOffset3D", "Offset3D", Struct, 3),
    ("VkExtent2D", "Extent2D", Struct, 4),
    ("VkExtent3D", "Extent3D", Struct, 5),
    ("VkViewport", "Viewport", Struct, 6),
    ("VkRect2D", "Rect2D", Struct, 7),
    ("VkClearRect", "ClearRect", Struct, 8),
    ("VkComponentMapping", "ComponentMapping", Struct, 9),
    ("VkPhysicalDeviceProperties", "PhysicalDeviceProperties", Struct, 10),
    ("VkExtensionProperties", "ExtensionProperties", Struct, 11),
    ("VkLayerProperties", "LayerProperties", Struct, 12),
    ("VkApplicationInfo", "ApplicationInfo", Struct, 13),
    ("VkAllocationCallbacks", "AllocationCallbacks", Struct, 14),
    ("VkDeviceQueueCreateInfo", "DeviceQueueCreateInfo", Struct, 15),
    ("VkDeviceCreateInfo", "DeviceCreateInfo", Struct, 16),
    ("VkInstanceCreateInfo", "InstanceCreateInfo", Struct, 17),
    ("VkQueueFamilyProperties", "QueueFamilyProperties", Struct, 18),
    ("VkPhysicalDeviceMemoryProperties", "PhysicalDeviceMemoryProperties", Struct, 19),
    ("VkMemoryAllocateInfo", "MemoryAllocateInfo", Struct, 20),
    ("VkMemoryRequirements", "MemoryRequirements", Struct, 21),
    ("VkSparseImageFormatProperties", "SparseImageFormatProperties", Struct, 22),
    ("VkSparseImageMemoryRequirements", "SparseImageMemoryRequirements", Struct, 23),
    ("VkMemoryType", "MemoryType", Struct, 24),
    ("VkMemoryHeap", "MemoryHeap", Struct, 25),
    ("VkMappedMemoryRange", "MappedMemoryRange", Struct, 26),
    ("VkFormatProperties", "FormatProperties", Struct, 27),
    ("VkImageFormatProperties", "ImageFormatProperties", Struct, 28),
    ("VkDescriptorBufferInfo", "DescriptorBufferInfo", Struct, 29),
    ("VkDescriptorImageInfo", "DescriptorImageInfo", Struct, 30),
    ("VkWriteDescriptorSet", "WriteDescriptorSet", Struct, 31),
    ("VkCopyDescriptorSet", "CopyDescriptorSet", Struct, 32),
    ("VkBufferCreateInfo", "BufferCreateInfo", Struct, 33),
    ("VkBufferViewCreateInfo", "BufferViewCreateInfo", Struct, 34),
    ("VkImageSubresource", "ImageSubresource", Struct, 35),
    ("VkImageSubresourceLayers", "ImageSubresourceLayers", Struct, 36),
    ("VkImageSubresourceRange", "ImageSubresourceRange", Struct, 37),
    ("VkMemoryBarrier", "MemoryBarrier", Struct, 38),
    ("VkBufferMemoryBarrier", "BufferMemoryBarrier", Struct, 39),
    ("VkImageMemoryBarrier", "ImageMemoryBarrier", Struct, 40),
    ("VkImageCreateInfo", "ImageCreateInfo", Struct, 41),
    ("VkSubresourceLayout", "SubresourceLayout", Struct, 42),
    ("VkImageViewCreateInfo", "ImageViewCreateInfo", Struct, 43),
    ("VkBufferCopy", "BufferCopy", Struct, 44),
    ("VkSparseMemoryBind", "SparseMemoryBind", Struct, 45),
    ("VkSparseImageMemoryBind", "SparseImageMemoryBind", Struct, 46),
    ("VkSparseBufferMemoryBindInfo", "SparseBufferMemoryBindInfo", Struct, 47),
    ("VkSparseImageOpaqueMemoryBindInfo", "SparseImageOpaqueMemoryBindInfo", Struct, 48),
    ("VkSparseImageMemoryBindInfo", "SparseImageMemoryBindInfo", Struct, 49),
    ("VkBindSparseInfo", "BindSparseInfo", Struct, 50),
    ("VkImageCopy", "ImageCopy", Struct, 51),
    ("VkImageBlit", "ImageBlit", Struct, 52),
    ("VkBufferImageCopy", "BufferImageCopy", Struct, 53),
    ("VkImageResolve", "ImageResolve", Struct, 54),
    ("VkShaderModuleCreateInfo", "ShaderModuleCreateInfo", Struct, 55),
    ("VkDescriptorSetLayoutBinding", "DescriptorSetLayoutBinding", Struct, 56),
    ("VkDescriptorSetLayoutCreateInfo", "DescriptorSetLayoutCreateInfo", Struct, 57),
    ("VkDescriptorPoolSize", "DescriptorPoolSize", Struct, 58),
    ("VkDescriptorPoolCreateInfo", "DescriptorPoolCreateInfo", Struct, 59),
    ("VkDescriptorSetAllocateInfo", "DescriptorSetAllocateInfo", Struct, 60),
    ("VkSpecializationMapEntry", "SpecializationMapEntry", Struct, 61),
    ("VkSpecializationInfo", "SpecializationInfo", Struct, 62),
    ("VkPipelineShaderStageCreateInfo", "PipelineShaderStageCreateInfo", Struct, 63),
    ("VkComputePipelineCreateInfo", "ComputePipelineCreateInfo", Struct, 64),
    ("VkVertexInputBindingDescription", "VertexInputBindingDescription", Struct, 65),
    ("VkVertexInputAttributeDescription", "VertexInputAttributeDescription", Struct, 66),
    ("VkPipelineVertexInputStateCreateInfo", "PipelineVertexInputStateCreateInfo", Struct, 67),
    ("VkPipelineInputAssemblyStateCreateInfo", "PipelineInputAssemblyStateCreateInfo", Struct, 68),
    ("VkPipelineTessellationStateCreateInfo", "PipelineTessellationStateCreateInfo", Struct, 69),
    ("VkPipelineViewportStateCreateInfo", "PipelineViewportStateCreateInfo", Struct, 70),
    ("VkPipelineRasterizationStateCreateInfo", "PipelineRasterizationStateCreateInfo", Struct, 71),
    ("VkPipelineMultisampleStateCreateInfo", "PipelineMultisampleStateCreateInfo", Struct, 72),
    ("VkPipelineColorBlendAttachmentState", "PipelineColorBlendAttachmentState", Struct, 73),
    ("VkPipelineColorBlendStateCreateInfo", "PipelineColorBlendStateCreateInfo", Struct, 74),
    ("VkPipelineDynamicStateCreateInfo", "PipelineDynamicStateCreateInfo", Struct, 75),
    ("VkStencilOpState", "StencilOpState", Struct, 76),
    ("VkPipelineDepthStencilStateCreateInfo", "PipelineDepthStencilStateCreateInfo", Struct, 77),
    ("VkGraphicsPipelineCreateInfo", "GraphicsPipelineCreateInfo", Struct, 78),
    ("VkPipelineCacheCreateInfo", "PipelineCacheCreateInfo", Struct, 79),
    ("VkPipelineCacheHeaderVersionOne", "PipelineCacheHeaderVersionOne", Struct, 80),
    ("VkPushConstantRange", "PushConstantRange", Struct, 81),
    ("VkPipelineLayoutCreateInfo", "PipelineLayoutCreateInfo", Struct, 82),
    ("VkSamplerCreateInfo", "SamplerCreateInfo", Struct, 83),
    ("VkCommandPoolCreateInfo", "CommandPoolCreateInfo", Struct, 84),
    ("VkCommandBufferAllocateInfo", "CommandBufferAllocateInfo", Struct, 85),
    ("VkCommandBufferInheritanceInfo", "CommandBufferInheritanceInfo", Struct, 86),
    ("VkCommandBufferBeginInfo", "CommandBufferBeginInfo", Struct, 87),
    ("VkRenderPassBeginInfo", "RenderPassBeginInfo", Struct, 88),
    ("VkClearDepthStencilValue", "ClearDepthStencilValue", Struct, 89),
    ("VkClearAttachment", "ClearAttachment", Struct, 90),
    ("VkAttachmentDescription", "AttachmentDescription", Struct, 91),
    ("VkAttachmentReference", "AttachmentReference", Struct, 92),
    ("VkSubpassDescription", "SubpassDescription", Struct, 93),
    ("VkSubpassDependency", "SubpassDependency", Struct, 94),
    ("VkRenderPassCreateInfo", "RenderPassCreateInfo", Struct, 95),
    ("VkEventCreateInfo", "EventCreateInfo", Struct, 96),
    ("VkFenceCreateInfo", "FenceCreateInfo", Struct, 97),
    ("VkPhysicalDeviceFeatures", "PhysicalDeviceFeatures", Struct, 98),
    ("VkPhysicalDeviceSparseProperties", "PhysicalDeviceSparseProperties", Struct, 99),
    ("VkPhysicalDeviceLimits", "PhysicalDeviceLimits", Struct, 100),
    ("VkSemaphoreCreateInfo", "SemaphoreCreateInfo", Struct, 101),
    ("VkQueryPoolCreateInfo", "QueryPoolCreateInfo", Struct, 102),
    ("VkFramebufferCreateInfo", "FramebufferCreateInfo", Struct, 103),
    ("VkDrawIndirectCommand", "DrawIndirectCommand", Struct, 104),
    ("VkDrawIndexedIndirectCommand", "DrawIndexedIndirectCommand", Struct, 105),
    ("VkDispatchIndirectCommand", "DispatchIndirectCommand", Struct, 106),
    ("VkMultiDrawInfoEXT", "MultiDrawInfoEXT", Struct, 107),
    ("VkMultiDrawIndexedInfoEXT", "MultiDrawIndexedInfoEXT", Struct, 108),
    ("VkSubmitInfo", "SubmitInfo", Struct, 109),
    ("VkDisplayPropertiesKHR", "DisplayPropertiesKHR", Struct, 110),
    ("VkDisplayPlanePropertiesKHR", "DisplayPlanePropertiesKHR", Struct, 111),
    ("VkDisplayModeParametersKHR", "DisplayModeParametersKHR", Struct, 112),
    ("VkDisplayModePropertiesKHR", "DisplayModePropertiesKHR", Struct, 113),
    ("VkDisplayModeCreateInfoKHR", "DisplayModeCreateInfoKHR", Struct, 114),
    ("VkDisplayPlaneCapabilitiesKHR", "DisplayPlaneCapabilitiesKHR", Struct, 115),
    ("VkDisplaySurfaceCreateInfoKHR", "DisplaySurfaceCreateInfoKHR", Struct, 116),
    ("VkDisplayPresentInfoKHR", "DisplayPresentInfoKHR", Struct, 117),
    ("VkSurfaceCapabilitiesKHR", "SurfaceCapabilitiesKHR", Struct, 118),
    ("VkAndroidSurfaceCreateInfoKHR", "AndroidSurfaceCreateInfoKHR", Struct, 119),
    ("VkViSurfaceCreateInfoNN", "ViSurfaceCreateInfoNN", Struct, 120),
    ("VkWaylandSurfaceCreateInfoKHR", "WaylandSurfaceCreateInfoKHR", Struct, 121),
    ("VkWin32SurfaceCreateInfoKHR", "Win32SurfaceCreateInfoKHR", Struct, 122),
    ("VkXlibSurfaceCreateInfoKHR", "XlibSurfaceCreateInfoKHR", Struct, 123),
    ("VkXcbSurfaceCreateInfoKHR", "XcbSurfaceCreateInfoKHR", Struct, 124),
    ("VkDirectFBSurfaceCreateInfoEXT", "DirectFBSurfaceCreateInfoEXT", Struct, 125),
    ("VkImagePipeSurfaceCreateInfoFUCHSIA", "ImagePipeSurfaceCreateInfoFUCHSIA", Struct, 126),
    ("VkStreamDescriptorSurfaceCreateInfoGGP", "StreamDescriptorSurfaceCreateInfoGGP", Struct, 127),
    ("VkScreenSurfaceCreateInfoQNX", "ScreenSurfaceCreateInfoQNX", Struct, 128),
    ("VkSurfaceFormatKHR", "SurfaceFormatKHR", Struct, 129),
    ("VkSwapchainCreateInfoKHR", "SwapchainCreateInfoKHR", Struct, 130),
    ("VkPresentInfoKHR", "PresentInfoKHR", Struct, 131),
    ("VkDebugReportCallbackCreateInfoEXT", "DebugReportCallbackCreateInfoEXT", Struct, 132),
    ("VkValidationFlagsEXT", "ValidationFlagsEXT", Struct, 133),
    ("VkValidationFeaturesEXT", "ValidationFeaturesEXT", Struct, 134),
    ("VkPipelineRasterizationStateRasterizationOrderAMD", "PipelineRasterizationStateRasterizationOrderAMD", Struct, 135),
    ("VkDebugMarkerObjectNameInfoEXT", "DebugMarkerObjectNameInfoEXT", Struct, 136),
    ("VkDebugMarkerObjectTagInfoEXT", "DebugMarkerObjectTagInfoEXT", Struct, 137),
    ("VkDebugMarkerMarkerInfoEXT", "DebugMarkerMarkerInfoEXT", Struct, 138),
    ("VkDedicatedAllocationImageCreateInfoNV", "DedicatedAllocationImageCreateInfoNV", Struct, 139),
    ("VkDedicatedAllocationBufferCreateInfoNV", "DedicatedAllocationBufferCreateInfoNV", Struct, 140),
    ("VkDedicatedAllocationMemoryAllocateInfoNV", "DedicatedAllocationMemoryAllocateInfoNV", Struct, 141),
    ("VkExternalImageFormatPropertiesNV", "ExternalImageFormatPropertiesNV", Struct, 142),
    ("VkExternalMemoryImageCreateInfoNV", "ExternalMemoryImageCreateInfoNV", Struct, 143),
    ("VkExportMemoryAllocateInfoNV", "ExportMemoryAllocateInfoNV", Struct, 144),
    ("VkImportMemoryWin32HandleInfoNV", "ImportMemoryWin32HandleInfoNV", Struct, 145),
    ("VkExportMemoryWin32HandleInfoNV", "ExportMemoryWin32HandleInfoNV", Struct, 146),
    ("VkWin32KeyedMutexAcquireReleaseInfoNV", "Win32KeyedMutexAcquireReleaseInfoNV", Struct, 147),
    ("VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV", "PhysicalDeviceDeviceGeneratedCommandsFeaturesNV", Struct, 148),
    ("VkDevicePrivateDataCreateInfo", "DevicePrivateDataCreateInfo", Struct, 149),
    ("VkPrivateDataSlotCreateInfo", "PrivateDataSlotCreateInfo", Struct, 150),
    ("VkPhysicalDevicePrivateDataFeatures", "PhysicalDevicePrivateDataFeatures", Struct, 151),
    ("VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV", "PhysicalDeviceDeviceGeneratedCommandsPropertiesNV", Struct, 152),
    ("VkPhysicalDeviceMultiDrawPropertiesEXT", "PhysicalDeviceMultiDrawPropertiesEXT", Struct, 153),
    ("VkGraphicsShaderGroupCreateInfoNV", "GraphicsShaderGroupCreateInfoNV", Struct, 154),
    ("VkGraphicsPipelineShaderGroupsCreateInfoNV", "GraphicsPipelineShaderGroupsCreateInfoNV", Struct, 155),
    ("VkBindShaderGroupIndirectCommandNV", "BindShaderGroupIndirectCommandNV", Struct, 156),
    ("VkBindIndexBufferIndirectCommandNV", "BindIndexBufferIndirectCommandNV", Struct, 157),
    ("VkBindVertexBufferIndirectCommandNV", "BindVertexBufferIndirectCommandNV", Struct, 158),
    ("VkSetStateFlagsIndirectCommandNV", "SetStateFlagsIndirectCommandNV", Struct, 159),
    ("VkIndirectCommandsStreamNV", "IndirectCommandsStreamNV", Struct, 160),
    ("VkIndirectCommandsLayoutTokenNV", "IndirectCommandsLayoutTokenNV", Struct, 161),
    ("VkIndirectCommandsLayoutCreateInfoNV", "IndirectCommandsLayoutCreateInfoNV", Struct, 162),
    ("VkGeneratedCommandsInfoNV", "GeneratedCommandsInfoNV", Struct, 163),
    ("VkGeneratedCommandsMemoryRequirementsInfoNV", "GeneratedCommandsMemoryRequirementsInfoNV", Struct, 164),
    ("VkPhysicalDeviceFeatures2", "PhysicalDeviceFeatures2", Struct, 165),
    ("VkPhysicalDeviceProperties2", "PhysicalDeviceProperties2", Struct, 166),
    ("VkFormatProperties2", "FormatProperties2", Struct, 167),
    ("VkImageFormatProperties2", "ImageFormatProperties2", Struct, 168),
    ("VkPhysicalDeviceImageFormatInfo2", "PhysicalDeviceImageFormatInfo2", Struct, 169),
    ("VkQueueFamilyProperties2", "QueueFamilyProperties2", Struct, 170),
    ("VkPhysicalDeviceMemoryProperties2", "PhysicalDeviceMemoryProperties2", Struct, 171),
    ("VkSparseImageFormatProperties2", "SparseImageFormatProperties2", Struct, 172),
    ("VkPhysicalDeviceSparseImageFormatInfo2", "PhysicalDeviceSparseImageFormatInfo2", Struct, 173),
    ("VkPhysicalDevicePushDescriptorPropertiesKHR", "PhysicalDevicePushDescriptorPropertiesKHR", Struct, 174),
    ("VkConformanceVersion", "ConformanceVersion", Struct, 175),
    ("VkPhysicalDeviceDriverProperties", "PhysicalDeviceDriverProperties", Struct, 176),
    ("VkPresentRegionsKHR", "PresentRegionsKHR", Struct, 177),
    ("VkPresentRegionKHR", "PresentRegionKHR", Struct, 178),
    ("VkRectLayerKHR", "RectLayerKHR", Struct, 179),
    ("VkPhysicalDeviceVariablePointersFeatures", "PhysicalDeviceVariablePointersFeatures", Struct, 180),
    ("VkExternalMemoryProperties", "ExternalMemoryProperties", Struct, 181),
    ("VkPhysicalDeviceExternalImageFormatInfo", "PhysicalDeviceExternalImageFormatInfo", Struct, 182),
    ("VkExternalImageFormatProperties", "ExternalImageFormatProperties", Struct, 183),
    ("VkPhysicalDeviceExternalBufferInfo", "PhysicalDeviceExternalBufferInfo", Struct, 184),
    ("VkExternalBufferProperties", "ExternalBufferProperties", Struct, 185),
    ("VkPhysicalDeviceIDProperties", "PhysicalDeviceIdProperties", Struct, 186),
    ("VkExternalMemoryImageCreateInfo", "ExternalMemoryImageCreateInfo", Struct, 187),
    ("VkExternalMemoryBufferCreateInfo", "ExternalMemoryBufferCreateInfo", Struct, 188),
    ("VkExportMemoryAllocateInfo", "ExportMemoryAllocateInfo", Struct, 189),
    ("VkImportMemoryWin32HandleInfoKHR", "ImportMemoryWin32HandleInfoKHR", Struct, 190),
    ("VkExportMemoryWin32HandleInfoKHR", "ExportMemoryWin32HandleInfoKHR", Struct, 191),
    ("VkImportMemoryZirconHandleInfoFUCHSIA", "ImportMemoryZirconHandleInfoFUCHSIA", Struct, 192),
    ("VkMemoryZirconHandlePropertiesFUCHSIA", "MemoryZirconHandlePropertiesFUCHSIA", Struct, 193),
    ("VkMemoryGetZirconHandleInfoFUCHSIA", "MemoryGetZirconHandleInfoFUCHSIA", Struct, 194),
    ("VkMemoryWin32HandlePropertiesKHR", "MemoryWin32HandlePropertiesKHR", Struct, 195),
    ("VkMemoryGetWin32HandleInfoKHR", "MemoryGetWin32HandleInfoKHR", Struct, 196),
    ("VkImportMemoryFdInfoKHR", "ImportMemoryFdInfoKHR", Struct, 197),
    ("VkMemoryFdPropertiesKHR", "MemoryFdPropertiesKHR", Struct, 198),
    ("VkMemoryGetFdInfoKHR", "MemoryGetFdInfoKHR", Struct, 199),
    ("VkWin32KeyedMutexAcquireReleaseInfoKHR", "Win32KeyedMutexAcquireReleaseInfoKHR", Struct, 200),
    ("VkPhysicalDeviceExternalSemaphoreInfo", "PhysicalDeviceExternalSemaphoreInfo", Struct, 201),
    ("VkExternalSemaphoreProperties", "ExternalSemaphoreProperties", Struct, 202),
    ("VkExportSemaphoreCreateInfo", "ExportSemaphoreCreateInfo", Struct, 203),
    ("VkImportSemaphoreWin32HandleInfoKHR", "ImportSemaphoreWin32HandleInfoKHR", Struct, 204),
    ("VkExportSemaphoreWin32HandleInfoKHR", "ExportSemaphoreWin32HandleInfoKHR", Struct, 205),
    ("VkD3D12FenceSubmitInfoKHR", "D3d12FenceSubmitInfoKHR", Struct, 206),
    ("VkSemaphoreGetWin32HandleInfoKHR", "SemaphoreGetWin32HandleInfoKHR", Struct, 207),
    ("VkImportSemaphoreFdInfoKHR", "ImportSemaphoreFdInfoKHR", Struct, 208),
    ("VkSemaphoreGetFdInfoKHR", "SemaphoreGetFdInfoKHR", Struct, 209),
    ("VkImportSemaphoreZirconHandleInfoFUCHSIA", "ImportSemaphoreZirconHandleInfoFUCHSIA", Struct, 210),
    ("VkSemaphoreGetZirconHandleInfoFUCHSIA", "SemaphoreGetZirconHandleInfoFUCHSIA", Struct, 211),
    ("VkPhysicalDeviceExternalFenceInfo", "PhysicalDeviceExternalFenceInfo", Struct, 212),
    ("VkExternalFenceProperties", "ExternalFenceProperties", Struct, 213),
    ("VkExportFenceCreateInfo", "ExportFenceCreateInfo", Struct, 214),
    ("VkImportFenceWin32HandleInfoKHR", "ImportFenceWin32HandleInfoKHR", Struct, 215),
    ("VkExportFenceWin32HandleInfoKHR", "ExportFenceWin32HandleInfoKHR", Struct, 216),
    ("VkFenceGetWin32HandleInfoKHR", "FenceGetWin32HandleInfoKHR", Struct, 217),
    ("VkImportFenceFdInfoKHR", "ImportFenceFdInfoKHR", Struct, 218),
    ("VkFenceGetFdInfoKHR", "FenceGetFdInfoKHR", Struct, 219),
    ("VkPhysicalDeviceMultiviewFeatures", "PhysicalDeviceMultiviewFeatures", Struct, 220),
    ("VkPhysicalDeviceMultiviewProperties", "PhysicalDeviceMultiviewProperties", Struct, 221),
    ("VkRenderPassMultiviewCreateInfo", "RenderPassMultiviewCreateInfo", Struct, 222),
    ("VkSurfaceCapabilities2EXT", "SurfaceCapabilities2EXT", Struct, 223),
    ("VkDisplayPowerInfoEXT", "DisplayPowerInfoEXT", Struct, 224),
    ("VkDeviceEventInfoEXT", "DeviceEventInfoEXT", Struct, 225),
    ("VkDisplayEventInfoEXT", "DisplayEventInfoEXT", Struct, 226),
    ("VkSwapchainCounterCreateInfoEXT", "SwapchainCounterCreateInfoEXT", Struct, 227),
    ("VkPhysicalDeviceGroupProperties", "PhysicalDeviceGroupProperties", Struct, 228),
    ("VkMemoryAllocateFlagsInfo", "MemoryAllocateFlagsInfo", Struct, 229),
    ("VkBindBufferMemoryInfo", "BindBufferMemoryInfo", Struct, 230),
    ("VkBindBufferMemoryDeviceGroupInfo", "BindBufferMemoryDeviceGroupInfo", Struct, 231),
    ("VkBindImageMemoryInfo", "BindImageMemoryInfo", Struct, 232),
    ("VkBindImageMemoryDeviceGroupInfo", "BindImageMemoryDeviceGroupInfo", Struct, 233),
    ("VkDeviceGroupRenderPassBeginInfo", "DeviceGroupRenderPassBeginInfo", Struct, 234),
    ("VkDeviceGroupCommandBufferBeginInfo", "DeviceGroupCommandBufferBeginInfo", Struct, 235),
    ("VkDeviceGroupSubmitInfo", "DeviceGroupSubmitInfo", Struct, 236),
    ("VkDeviceGroupBindSparseInfo", "DeviceGroupBindSparseInfo", Struct, 237),
    ("VkDeviceGroupPresentCapabilitiesKHR", "DeviceGroupPresentCapabilitiesKHR", Struct, 238),
    ("VkImageSwapchainCreateInfoKHR", "ImageSwapchainCreateInfoKHR", Struct, 239),
    ("VkBindImageMemorySwapchainInfoKHR", "BindImageMemorySwapchainInfoKHR", Struct, 240),
    ("VkAcquireNextImageInfoKHR", "AcquireNextImageInfoKHR", Struct, 241),
    ("VkDeviceGroupPresentInfoKHR", "DeviceGroupPresentInfoKHR", Struct, 242),
    ("VkDeviceGroupDeviceCreateInfo", "DeviceGroupDeviceCreateInfo", Struct, 243),
    ("VkDeviceGroupSwapchainCreateInfoKHR", "DeviceGroupSwapchainCreateInfoKHR", Struct, 244),
    ("VkDescriptorUpdateTemplateEntry", "DescriptorUpdateTemplateEntry", Struct, 245),
    ("VkDescriptorUpdateTemplateCreateInfo", "DescriptorUpdateTemplateCreateInfo", Struct, 246),
    ("VkXYColorEXT", "XyColorEXT", Struct, 247),
    ("VkPhysicalDevicePresentIdFeaturesKHR", "PhysicalDevicePresentIdFeaturesKHR", Struct, 248),
    ("VkPresentIdKHR", "PresentIdKHR", Struct, 249),
    ("VkPhysicalDevicePresentWaitFeaturesKHR", "PhysicalDevicePresentWaitFeaturesKHR", Struct, 250),
    ("VkHdrMetadataEXT", "HdrMetadataEXT", Struct, 251),
    ("VkDisplayNativeHdrSurfaceCapabilitiesAMD", "DisplayNativeHdrSurfaceCapabilitiesAMD", Struct, 252),
    ("VkSwapchainDisplayNativeHdrCreateInfoAMD", "SwapchainDisplayNativeHdrCreateInfoAMD", Struct, 253),
    ("VkRefreshCycleDurationGOOGLE", "RefreshCycleDurationGOOGLE", Struct, 254),
    ("VkPastPresentationTimingGOOGLE", "PastPresentationTimingGOOGLE", Struct, 255),
    ("VkPresentTimesInfoGOOGLE", "PresentTimesInfoGOOGLE", Struct, 256),
    ("VkPresentTimeGOOGLE", "PresentTimeGOOGLE", Struct, 257),
    ("VkIOSSurfaceCreateInfoMVK", "IosSurfaceCreateInfoMVK", Struct, 258),
    ("VkMacOSSurfaceCreateInfoMVK", "MacOsSurfaceCreateInfoMVK", Struct, 259),
    ("VkMetalSurfaceCreateInfoEXT", "MetalSurfaceCreateInfoEXT", Struct, 260),
    ("VkViewportWScalingNV", "ViewportWScalingNV", Struct, 261),
    ("VkPipelineViewportWScalingStateCreateInfoNV", "PipelineViewportWScalingStateCreateInfoNV", Struct, 262),
    ("VkViewportSwizzleNV", "ViewportSwizzleNV", Struct, 263),
    ("VkPipelineViewportSwizzleStateCreateInfoNV", "PipelineViewportSwizzleStateCreateInfoNV", Struct, 264),
    ("VkPhysicalDeviceDiscardRectanglePropertiesEXT", "PhysicalDeviceDiscardRectanglePropertiesEXT", Struct, 265),
    ("VkPipelineDiscardRectangleStateCreateInfoEXT", "PipelineDiscardRectangleStateCreateInfoEXT", Struct, 266),
    ("VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX", "PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX", Struct, 267),
    ("VkInputAttachmentAspectReference", "InputAttachmentAspectReference", Struct, 268),
    ("VkRenderPassInputAttachmentAspectCreateInfo", "RenderPassInputAttachmentAspectCreateInfo", Struct, 269),
    ("VkPhysicalDeviceSurfaceInfo2KHR", "PhysicalDeviceSurfaceInfo2KHR", Struct, 270),
    ("VkSurfaceCapabilities2KHR", "SurfaceCapabilities2KHR", Struct, 271),
    ("VkSurfaceFormat2KHR", "SurfaceFormat2KHR", Struct, 272),
    ("VkDisplayProperties2KHR", "DisplayProperties2KHR", Struct, 273),
    ("VkDisplayPlaneProperties2KHR", "DisplayPlaneProperties2KHR", Struct, 274),
    ("VkDisplayModeProperties2KHR", "DisplayModeProperties2KHR", Struct, 275),
    ("VkDisplayPlaneInfo2KHR", "DisplayPlaneInfo2KHR", Struct, 276),
    ("VkDisplayPlaneCapabilities2KHR", "DisplayPlaneCapabilities2KHR", Struct, 277),
    ("VkSharedPresentSurfaceCapabilitiesKHR", "SharedPresentSurfaceCapabilitiesKHR", Struct, 278),
    ("VkPhysicalDevice16BitStorageFeatures", "PhysicalDevice16BitStorageFeatures", Struct, 279),
    ("VkPhysicalDeviceSubgroupProperties", "PhysicalDeviceSubgroupProperties", Struct, 280),
    ("VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures", "PhysicalDeviceShaderSubgroupExtendedTypesFeatures", Struct, 281),
    ("VkBufferMemoryRequirementsInfo2", "BufferMemoryRequirementsInfo2", Struct, 282),
    ("VkDeviceBufferMemoryRequirements", "DeviceBufferMemoryRequirements", Struct, 283),
    ("VkImageMemoryRequirementsInfo2", "ImageMemoryRequirementsInfo2", Struct, 284),
    ("VkImageSparseMemoryRequirementsInfo2", "ImageSparseMemoryRequirementsInfo2", Struct, 285),
    ("VkDeviceImageMemoryRequirements", "DeviceImageMemoryRequirements", Struct, 286),
    ("VkMemoryRequirements2", "MemoryRequirements2", Struct, 287),
    ("VkSparseImageMemoryRequirements2", "SparseImageMemoryRequirements2", Struct, 288),
    ("VkPhysicalDevicePointClippingProperties", "PhysicalDevicePointClippingProperties", Struct, 289),
    ("VkMemoryDedicatedRequirements", "MemoryDedicatedRequirements", Struct, 290),
    ("VkMemoryDedicatedAllocateInfo", "MemoryDedicatedAllocateInfo", Struct, 291),
    ("VkImageViewUsageCreateInfo", "ImageViewUsageCreateInfo", Struct, 292),
    ("VkPipelineTessellationDomainOriginStateCreateInfo", "PipelineTessellationDomainOriginStateCreateInfo", Struct, 293),
    ("VkSamplerYcbcrConversionInfo", "SamplerYcbcrConversionInfo", Struct, 294),
    ("VkSamplerYcbcrConversionCreateInfo", "SamplerYcbcrConversionCreateInfo", Struct, 295),
    ("VkBindImagePlaneMemoryInfo", "BindImagePlaneMemoryInfo", Struct, 296),
    ("VkImagePlaneMemoryRequirementsInfo", "ImagePlaneMemoryRequirementsInfo", Struct, 297),
    ("VkPhysicalDeviceSamplerYcbcrConversionFeatures", "PhysicalDeviceSamplerYcbcrConversionFeatures", Struct, 298),
    ("VkSamplerYcbcrConversionImageFormatProperties", "SamplerYcbcrConversionImageFormatProperties", Struct, 299),
    ("VkTextureLODGatherFormatPropertiesAMD", "TextureLodGatherFormatPropertiesAMD", Struct, 300),
    ("VkConditionalRenderingBeginInfoEXT", "ConditionalRenderingBeginInfoEXT", Struct, 301),
    ("VkProtectedSubmitInfo", "ProtectedSubmitInfo", Struct, 302),
    ("VkPhysicalDeviceProtectedMemoryFeatures", "PhysicalDeviceProtectedMemoryFeatures", Struct, 303),
    ("VkPhysicalDeviceProtectedMemoryProperties", "PhysicalDeviceProtectedMemoryProperties", Struct, 304),
    ("VkDeviceQueueInfo2", "DeviceQueueInfo2", Struct, 305),
    ("VkPipelineCoverageToColorStateCreateInfoNV", "PipelineCoverageToColorStateCreateInfoNV", Struct, 306),
    ("VkPhysicalDeviceSamplerFilterMinmaxProperties", "PhysicalDeviceSamplerFilterMinmaxProperties", Struct, 307),
    ("VkSampleLocationEXT", "SampleLocationEXT", Struct, 308),
    ("VkSampleLocationsInfoEXT", "SampleLocationsInfoEXT", Struct, 309),
    ("VkAttachmentSampleLocationsEXT", "AttachmentSampleLocationsEXT", Struct, 310),
    ("VkSubpassSampleLocationsEXT", "SubpassSampleLocationsEXT", Struct, 311),
    ("VkRenderPassSampleLocationsBeginInfoEXT", "RenderPassSampleLocationsBeginInfoEXT", Struct, 312),
    ("VkPipelineSampleLocationsStateCreateInfoEXT", "PipelineSampleLocationsStateCreateInfoEXT", Struct, 313),
    ("VkPhysicalDeviceSampleLocationsPropertiesEXT", "PhysicalDeviceSampleLocationsPropertiesEXT", Struct, 314),
    ("VkMultisamplePropertiesEXT", "MultisamplePropertiesEXT", Struct, 315),
    ("VkSamplerReductionModeCreateInfo", "SamplerReductionModeCreateInfo", Struct, 316),
    ("VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT", "PhysicalDeviceBlendOperationAdvancedFeaturesEXT", Struct, 317),
    ("VkPhysicalDeviceMultiDrawFeaturesEXT", "PhysicalDeviceMultiDrawFeaturesEXT", Struct, 318),
    ("VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT", "PhysicalDeviceBlendOperationAdvancedPropertiesEXT", Struct, 319),
    ("VkPipelineColorBlendAdvancedStateCreateInfoEXT", "PipelineColorBlendAdvancedStateCreateInfoEXT", Struct, 320),
    ("VkPhysicalDeviceInlineUniformBlockFeatures", "PhysicalDeviceInlineUniformBlockFeatures", Struct, 321),
    ("VkPhysicalDeviceInlineUniformBlockProperties", "PhysicalDeviceInlineUniformBlockProperties", Struct, 322),
    ("VkWriteDescriptorSetInlineUniformBlock", "WriteDescriptorSetInlineUniformBlock", Struct, 323),
    ("VkDescriptorPoolInlineUniformBlockCreateInfo", "DescriptorPoolInlineUniformBlockCreateInfo", Struct, 324),
    ("VkPipelineCoverageModulationStateCreateInfoNV", "PipelineCoverageModulationStateCreateInfoNV", Struct, 325),
    ("VkImageFormatListCreateInfo", "ImageFormatListCreateInfo", Struct, 326),
    ("VkValidationCacheCreateInfoEXT", "ValidationCacheCreateInfoEXT", Struct, 327),
    ("VkShaderModuleValidationCacheCreateInfoEXT", "ShaderModuleValidationCacheCreateInfoEXT", Struct, 328),
    ("VkPhysicalDeviceMaintenance3Properties", "PhysicalDeviceMaintenance3Properties", Struct, 329),
    ("VkPhysicalDeviceMaintenance4Features", "PhysicalDeviceMaintenance4Features", Struct, 330),
    ("VkPhysicalDeviceMaintenance4Properties", "PhysicalDeviceMaintenance4Properties", Struct, 331),
    ("VkDescriptorSetLayoutSupport", "DescriptorSetLayoutSupport", Struct, 332),
    ("VkPhysicalDeviceShaderDrawParametersFeatures", "PhysicalDeviceShaderDrawParametersFeatures", Struct, 333),
    ("VkPhysicalDeviceShaderFloat16Int8Features", "PhysicalDeviceShaderFloat16Int8Features", Struct, 334),
    ("VkPhysicalDeviceFloatControlsProperties", "PhysicalDeviceFloatControlsProperties", Struct, 335),
    ("VkPhysicalDeviceHostQueryResetFeatures", "PhysicalDeviceHostQueryResetFeatures", Struct, 336),
    ("VkNativeBufferUsage2ANDROID", "NativeBufferUsage2ANDROID", Struct, 337),
    ("VkNativeBufferANDROID", "NativeBufferANDROID", Struct, 338),
    ("VkSwapchainImageCreateInfoANDROID", "SwapchainImageCreateInfoANDROID", Struct, 339),
    ("VkPhysicalDevicePresentationPropertiesANDROID", "PhysicalDevicePresentationPropertiesANDROID", Struct, 340),
    ("VkShaderResourceUsageAMD", "ShaderResourceUsageAMD", Struct, 341),
    ("VkShaderStatisticsInfoAMD", "ShaderStatisticsInfoAMD", Struct, 342),
    ("VkDeviceQueueGlobalPriorityCreateInfoKHR", "DeviceQueueGlobalPriorityCreateInfoKHR", Struct, 343),
    ("VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR", "PhysicalDeviceGlobalPriorityQueryFeaturesKHR", Struct, 344),
    ("VkQueueFamilyGlobalPriorityPropertiesKHR", "QueueFamilyGlobalPriorityPropertiesKHR", Struct, 345),
    ("VkDebugUtilsObjectNameInfoEXT", "DebugUtilsObjectNameInfoEXT", Struct, 346),
    ("VkDebugUtilsObjectTagInfoEXT", "DebugUtilsObjectTagInfoEXT", Struct, 347),
    ("VkDebugUtilsLabelEXT", "DebugUtilsLabelEXT", Struct, 348),
    ("VkDebugUtilsMessengerCreateInfoEXT", "DebugUtilsMessengerCreateInfoEXT", Struct, 349),
    ("VkDebugUtilsMessengerCallbackDataEXT", "DebugUtilsMessengerCallbackDataEXT", Struct, 350),
    ("VkPhysicalDeviceDeviceMemoryReportFeaturesEXT", "PhysicalDeviceDeviceMemoryReportFeaturesEXT", Struct, 351),
    ("VkDeviceDeviceMemoryReportCreateInfoEXT", "DeviceDeviceMemoryReportCreateInfoEXT", Struct, 352),
    ("VkDeviceMemoryReportCallbackDataEXT", "DeviceMemoryReportCallbackDataEXT", Struct, 353),
    ("VkImportMemoryHostPointerInfoEXT", "ImportMemoryHostPointerInfoEXT", Struct, 354),
    ("VkMemoryHostPointerPropertiesEXT", "MemoryHostPointerPropertiesEXT", Struct, 355),
    ("VkPhysicalDeviceExternalMemoryHostPropertiesEXT", "PhysicalDeviceExternalMemoryHostPropertiesEXT", Struct, 356),
    ("VkPhysicalDeviceConservativeRasterizationPropertiesEXT", "PhysicalDeviceConservativeRasterizationPropertiesEXT", Struct, 357),
    ("VkCalibratedTimestampInfoEXT", "CalibratedTimestampInfoEXT", Struct, 358),
    ("VkPhysicalDeviceShaderCorePropertiesAMD", "PhysicalDeviceShaderCorePropertiesAMD", Struct, 359),
    ("VkPhysicalDeviceShaderCoreProperties2AMD", "PhysicalDeviceShaderCoreProperties2AMD", Struct, 360),
    ("VkPipelineRasterizationConservativeStateCreateInfoEXT", "PipelineRasterizationConservativeStateCreateInfoEXT", Struct, 361),
    ("VkPhysicalDeviceDescriptorIndexingFeatures", "PhysicalDeviceDescriptorIndexingFeatures", Struct, 362),
    ("VkPhysicalDeviceDescriptorIndexingProperties", "PhysicalDeviceDescriptorIndexingProperties", Struct, 363),
    ("VkDescriptorSetLayoutBindingFlagsCreateInfo", "DescriptorSetLayoutBindingFlagsCreateInfo", Struct, 364),
    ("VkDescriptorSetVariableDescriptorCountAllocateInfo", "DescriptorSetVariableDescriptorCountAllocateInfo", Struct, 365),
    ("VkDescriptorSetVariableDescriptorCountLayoutSupport", "DescriptorSetVariableDescriptorCountLayoutSupport", Struct, 366),
    ("VkAttachmentDescription2", "AttachmentDescription2", Struct, 367),
    ("VkAttachmentReference2", "AttachmentReference2", Struct, 368),
    ("VkSubpassDescription2", "SubpassDescription2", Struct, 369),
    ("VkSubpassDependency2", "SubpassDependency2", Struct, 370),
    ("VkRenderPassCreateInfo2", "RenderPassCreateInfo2", Struct, 371),
    ("VkSubpassBeginInfo", "SubpassBeginInfo", Struct, 372),
    ("VkSubpassEndInfo", "SubpassEndInfo", Struct, 373),
    ("VkPhysicalDeviceTimelineSemaphoreFeatures", "PhysicalDeviceTimelineSemaphoreFeatures", Struct, 374),
    ("VkPhysicalDeviceTimelineSemaphoreProperties", "PhysicalDeviceTimelineSemaphoreProperties", Struct, 375),
    ("VkSemaphoreTypeCreateInfo", "SemaphoreTypeCreateInfo", Struct, 376),
    ("VkTimelineSemaphoreSubmitInfo", "TimelineSemaphoreSubmitInfo", Struct, 377),
    ("VkSemaphoreWaitInfo", "SemaphoreWaitInfo", Struct, 378),
    ("VkSemaphoreSignalInfo", "SemaphoreSignalInfo", Struct, 379),
    ("VkVertexInputBindingDivisorDescriptionEXT", "VertexInputBindingDivisorDescriptionEXT", Struct, 380),
    ("VkPipelineVertexInputDivisorStateCreateInfoEXT", "PipelineVertexInputDivisorStateCreateInfoEXT", Struct, 381),
    ("VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT", "PhysicalDeviceVertexAttributeDivisorPropertiesEXT", Struct, 382),
    ("VkPhysicalDevicePCIBusInfoPropertiesEXT", "PhysicalDevicePciBusInfoPropertiesEXT", Struct, 383),
    ("VkImportAndroidHardwareBufferInfoANDROID", "ImportAndroidHardwareBufferInfoANDROID", Struct, 384),
    ("VkAndroidHardwareBufferUsageANDROID", "AndroidHardwareBufferUsageANDROID", Struct, 385),
    ("VkAndroidHardwareBufferPropertiesANDROID", "AndroidHardwareBufferPropertiesANDROID", Struct, 386),
    ("VkMemoryGetAndroidHardwareBufferInfoANDROID", "MemoryGetAndroidHardwareBufferInfoANDROID", Struct, 387),
    ("VkAndroidHardwareBufferFormatPropertiesANDROID", "AndroidHardwareBufferFormatPropertiesANDROID", Struct, 388),
    ("VkCommandBufferInheritanceConditionalRenderingInfoEXT", "CommandBufferInheritanceConditionalRenderingInfoEXT", Struct, 389),
    ("VkExternalFormatANDROID", "ExternalFormatANDROID", Struct, 390),
    ("VkPhysicalDevice8BitStorageFeatures", "PhysicalDevice8BitStorageFeatures", Struct, 391),
    ("VkPhysicalDeviceConditionalRenderingFeaturesEXT", "PhysicalDeviceConditionalRenderingFeaturesEXT", Struct, 392),
    ("VkPhysicalDeviceVulkanMemoryModelFeatures", "PhysicalDeviceVulkanMemoryModelFeatures", Struct, 393),
    ("VkPhysicalDeviceShaderAtomicInt64Features", "PhysicalDeviceShaderAtomicInt64Features", Struct, 394),
    ("VkPhysicalDeviceShaderAtomicFloatFeaturesEXT", "PhysicalDeviceShaderAtomicFloatFeaturesEXT", Struct, 395),
    ("VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT", "PhysicalDeviceShaderAtomicFloat2FeaturesEXT", Struct, 396),
    ("VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT", "PhysicalDeviceVertexAttributeDivisorFeaturesEXT", Struct, 397),
    ("VkQueueFamilyCheckpointPropertiesNV", "QueueFamilyCheckpointPropertiesNV", Struct, 398),
    ("VkCheckpointDataNV", "CheckpointDataNV", Struct, 399),
    ("VkPhysicalDeviceDepthStencilResolveProperties", "PhysicalDeviceDepthStencilResolveProperties", Struct, 400),
    ("VkSubpassDescriptionDepthStencilResolve", "SubpassDescriptionDepthStencilResolve", Struct, 401),
    ("VkImageViewASTCDecodeModeEXT", "ImageViewAstcDecodeModeEXT", Struct, 402),
    ("VkPhysicalDeviceASTCDecodeFeaturesEXT", "PhysicalDeviceAstcDecodeFeaturesEXT", Struct, 403),
    ("VkPhysicalDeviceTransformFeedbackFeaturesEXT", "PhysicalDeviceTransformFeedbackFeaturesEXT", Struct, 404),
    ("VkPhysicalDeviceTransformFeedbackPropertiesEXT", "PhysicalDeviceTransformFeedbackPropertiesEXT", Struct, 405),
    ("VkPipelineRasterizationStateStreamCreateInfoEXT", "PipelineRasterizationStateStreamCreateInfoEXT", Struct, 406),
    ("VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV", "PhysicalDeviceRepresentativeFragmentTestFeaturesNV", Struct, 407),
    ("VkPipelineRepresentativeFragmentTestStateCreateInfoNV", "PipelineRepresentativeFragmentTestStateCreateInfoNV", Struct, 408),
    ("VkPhysicalDeviceExclusiveScissorFeaturesNV", "PhysicalDeviceExclusiveScissorFeaturesNV", Struct, 409),
    ("VkPipelineViewportExclusiveScissorStateCreateInfoNV", "PipelineViewportExclusiveScissorStateCreateInfoNV", Struct, 410),
    ("VkPhysicalDeviceCornerSampledImageFeaturesNV", "PhysicalDeviceCornerSampledImageFeaturesNV", Struct, 411),
    ("VkPhysicalDeviceComputeShaderDerivativesFeaturesNV", "PhysicalDeviceComputeShaderDerivativesFeaturesNV", Struct, 412),
    ("VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV", "PhysicalDeviceFragmentShaderBarycentricFeaturesNV", Struct, 413),
    ("VkPhysicalDeviceShaderImageFootprintFeaturesNV", "PhysicalDeviceShaderImageFootprintFeaturesNV", Struct, 414),
    ("VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV", "PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV", Struct, 415),
    ("VkShadingRatePaletteNV", "ShadingRatePaletteNV", Struct, 416),
    ("VkPipelineViewportShadingRateImageStateCreateInfoNV", "PipelineViewportShadingRateImageStateCreateInfoNV", Struct, 417),
    ("VkPhysicalDeviceShadingRateImageFeaturesNV", "PhysicalDeviceShadingRateImageFeaturesNV", Struct, 418),
    ("VkPhysicalDeviceShadingRateImagePropertiesNV", "PhysicalDeviceShadingRateImagePropertiesNV", Struct, 419),
    ("VkPhysicalDeviceInvocationMaskFeaturesHUAWEI", "PhysicalDeviceInvocationMaskFeaturesHUAWEI", Struct, 420),
    ("VkCoarseSampleLocationNV", "CoarseSampleLocationNV", Struct, 421),
    ("VkCoarseSampleOrderCustomNV", "CoarseSampleOrderCustomNV", Struct, 422),
    ("VkPipelineViewportCoarseSampleOrderStateCreateInfoNV", "PipelineViewportCoarseSampleOrderStateCreateInfoNV", Struct, 423),
    ("VkPhysicalDeviceMeshShaderFeaturesNV", "PhysicalDeviceMeshShaderFeaturesNV", Struct, 424),
    ("VkPhysicalDeviceMeshShaderPropertiesNV", "PhysicalDeviceMeshShaderPropertiesNV", Struct, 425),
    ("VkDrawMeshTasksIndirectCommandNV", "DrawMeshTasksIndirectCommandNV", Struct, 426),
    ("VkRayTracingShaderGroupCreateInfoNV", "RayTracingShaderGroupCreateInfoNV", Struct, 427),
    ("VkRayTracingShaderGroupCreateInfoKHR", "RayTracingShaderGroupCreateInfoKHR", Struct, 428),
    ("VkRayTracingPipelineCreateInfoNV", "RayTracingPipelineCreateInfoNV", Struct, 429),
    ("VkRayTracingPipelineCreateInfoKHR", "RayTracingPipelineCreateInfoKHR", Struct, 430),
    ("VkGeometryTrianglesNV", "GeometryTrianglesNV", Struct, 431),
    ("VkGeometryAABBNV", "GeometryAabbNV", Struct, 432),
    ("VkGeometryDataNV", "GeometryDataNV", Struct, 433),
    ("VkGeometryNV", "GeometryNV", Struct, 434),
    ("VkAccelerationStructureInfoNV", "AccelerationStructureInfoNV", Struct, 435),
    ("VkAccelerationStructureCreateInfoNV", "AccelerationStructureCreateInfoNV", Struct, 436),
    ("VkBindAccelerationStructureMemoryInfoNV", "BindAccelerationStructureMemoryInfoNV", Struct, 437),
    ("VkWriteDescriptorSetAccelerationStructureKHR", "WriteDescriptorSetAccelerationStructureKHR", Struct, 438),
    ("VkWriteDescriptorSetAccelerationStructureNV", "WriteDescriptorSetAccelerationStructureNV", Struct, 439),
    ("VkAccelerationStructureMemoryRequirementsInfoNV", "AccelerationStructureMemoryRequirementsInfoNV", Struct, 440),
    ("VkPhysicalDeviceAccelerationStructureFeaturesKHR", "PhysicalDeviceAccelerationStructureFeaturesKHR", Struct, 441),
    ("VkPhysicalDeviceRayTracingPipelineFeaturesKHR", "PhysicalDeviceRayTracingPipelineFeaturesKHR", Struct, 442),
    ("VkPhysicalDeviceRayQueryFeaturesKHR", "PhysicalDeviceRayQueryFeaturesKHR", Struct, 443),
    ("VkPhysicalDeviceAccelerationStructurePropertiesKHR", "PhysicalDeviceAccelerationStructurePropertiesKHR", Struct, 444),
    ("VkPhysicalDeviceRayTracingPipelinePropertiesKHR", "PhysicalDeviceRayTracingPipelinePropertiesKHR", Struct, 445),
    ("VkPhysicalDeviceRayTracingPropertiesNV", "PhysicalDeviceRayTracingPropertiesNV", Struct, 446),
    ("VkStridedDeviceAddressRegionKHR", "StridedDeviceAddressRegionKHR", Struct, 447),
    ("VkTraceRaysIndirectCommandKHR", "TraceRaysIndirectCommandKHR", Struct, 448),
    ("VkDrmFormatModifierPropertiesListEXT", "DrmFormatModifierPropertiesListEXT", Struct, 449),
    ("VkDrmFormatModifierPropertiesEXT", "DrmFormatModifierPropertiesEXT", Struct, 450),
    ("VkPhysicalDeviceImageDrmFormatModifierInfoEXT", "PhysicalDeviceImageDrmFormatModifierInfoEXT", Struct, 451),
    ("VkImageDrmFormatModifierListCreateInfoEXT", "ImageDrmFormatModifierListCreateInfoEXT", Struct, 452),
    ("VkImageDrmFormatModifierExplicitCreateInfoEXT", "ImageDrmFormatModifierExplicitCreateInfoEXT", Struct, 453),
    ("VkImageDrmFormatModifierPropertiesEXT", "ImageDrmFormatModifierPropertiesEXT", Struct, 454),
    ("VkImageStencilUsageCreateInfo", "ImageStencilUsageCreateInfo", Struct, 455),
    ("VkDeviceMemoryOverallocationCreateInfoAMD", "DeviceMemoryOverallocationCreateInfoAMD", Struct, 456),
    ("VkPhysicalDeviceFragmentDensityMapFeaturesEXT", "PhysicalDeviceFragmentDensityMapFeaturesEXT", Struct, 457),
    ("VkPhysicalDeviceFragmentDensityMap2FeaturesEXT", "PhysicalDeviceFragmentDensityMap2FeaturesEXT", Struct, 458),
    ("VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM", "PhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM", Struct, 459),
    ("VkPhysicalDeviceFragmentDensityMapPropertiesEXT", "PhysicalDeviceFragmentDensityMapPropertiesEXT", Struct, 460),
    ("VkPhysicalDeviceFragmentDensityMap2PropertiesEXT", "PhysicalDeviceFragmentDensityMap2PropertiesEXT", Struct, 461),
    ("VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM", "PhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM", Struct, 462),
    ("VkRenderPassFragmentDensityMapCreateInfoEXT", "RenderPassFragmentDensityMapCreateInfoEXT", Struct, 463),
    ("VkSubpassFragmentDensityMapOffsetEndInfoQCOM", "SubpassFragmentDensityMapOffsetEndInfoQCOM", Struct, 464),
    ("VkPhysicalDeviceScalarBlockLayoutFeatures", "PhysicalDeviceScalarBlockLayoutFeatures", Struct, 465),
    ("VkSurfaceProtectedCapabilitiesKHR", "SurfaceProtectedCapabilitiesKHR", Struct, 466),
    ("VkPhysicalDeviceUniformBufferStandardLayoutFeatures", "PhysicalDeviceUniformBufferStandardLayoutFeatures", Struct, 467),
    ("VkPhysicalDeviceDepthClipEnableFeaturesEXT", "PhysicalDeviceDepthClipEnableFeaturesEXT", Struct, 468),
    ("VkPipelineRasterizationDepthClipStateCreateInfoEXT", "PipelineRasterizationDepthClipStateCreateInfoEXT", Struct, 469),
    ("VkPhysicalDeviceMemoryBudgetPropertiesEXT", "PhysicalDeviceMemoryBudgetPropertiesEXT", Struct, 470),
    ("VkPhysicalDeviceMemoryPriorityFeaturesEXT", "PhysicalDeviceMemoryPriorityFeaturesEXT", Struct, 471),
    ("VkMemoryPriorityAllocateInfoEXT", "MemoryPriorityAllocateInfoEXT", Struct, 472),
    ("VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT", "PhysicalDevicePageableDeviceLocalMemoryFeaturesEXT", Struct, 473),
    ("VkPhysicalDeviceBufferDeviceAddressFeatures", "PhysicalDeviceBufferDeviceAddressFeatures", Struct, 474),
    ("VkPhysicalDeviceBufferDeviceAddressFeaturesEXT", "PhysicalDeviceBufferDeviceAddressFeaturesEXT", Struct, 475),
    ("VkBufferDeviceAddressInfo", "BufferDeviceAddressInfo", Struct, 476),
    ("VkBufferOpaqueCaptureAddressCreateInfo", "BufferOpaqueCaptureAddressCreateInfo", Struct, 477),
    ("VkBufferDeviceAddressCreateInfoEXT", "BufferDeviceAddressCreateInfoEXT", Struct, 478),
    ("VkPhysicalDeviceImageViewImageFormatInfoEXT", "PhysicalDeviceImageViewImageFormatInfoEXT", Struct, 479),
    ("VkFilterCubicImageViewImageFormatPropertiesEXT", "FilterCubicImageViewImageFormatPropertiesEXT", Struct, 480),
    ("VkPhysicalDeviceImagelessFramebufferFeatures", "PhysicalDeviceImagelessFramebufferFeatures", Struct, 481),
    ("VkFramebufferAttachmentsCreateInfo", "FramebufferAttachmentsCreateInfo", Struct, 482),
    ("VkFramebufferAttachmentImageInfo", "FramebufferAttachmentImageInfo", Struct, 483),
    ("VkRenderPassAttachmentBeginInfo", "RenderPassAttachmentBeginInfo", Struct, 484),
    ("VkPhysicalDeviceTextureCompressionASTCHDRFeatures", "PhysicalDeviceTextureCompressionAstchdrFeatures", Struct, 485),
    ("VkPhysicalDeviceCooperativeMatrixFeaturesNV", "PhysicalDeviceCooperativeMatrixFeaturesNV", Struct, 486),
    ("VkPhysicalDeviceCooperativeMatrixPropertiesNV", "PhysicalDeviceCooperativeMatrixPropertiesNV", Struct, 487),
    ("VkCooperativeMatrixPropertiesNV", "CooperativeMatrixPropertiesNV", Struct, 488),
    ("VkPhysicalDeviceYcbcrImageArraysFeaturesEXT", "PhysicalDeviceYcbcrImageArraysFeaturesEXT", Struct, 489),
    ("VkImageViewHandleInfoNVX", "ImageViewHandleInfoNVX", Struct, 490),
    ("VkImageViewAddressPropertiesNVX", "ImageViewAddressPropertiesNVX", Struct, 491),
    ("VkPresentFrameTokenGGP", "PresentFrameTokenGGP", Struct, 492),
    ("VkPipelineCreationFeedback", "PipelineCreationFeedback", Struct, 493),
    ("VkPipelineCreationFeedbackCreateInfo", "PipelineCreationFeedbackCreateInfo", Struct, 494),
    ("VkSurfaceFullScreenExclusiveInfoEXT", "SurfaceFullScreenExclusiveInfoEXT", Struct, 495),
    ("VkSurfaceFullScreenExclusiveWin32InfoEXT", "SurfaceFullScreenExclusiveWin32InfoEXT", Struct, 496),
    ("VkSurfaceCapabilitiesFullScreenExclusiveEXT", "SurfaceCapabilitiesFullScreenExclusiveEXT", Struct, 497),
    ("VkPhysicalDevicePerformanceQueryFeaturesKHR", "PhysicalDevicePerformanceQueryFeaturesKHR", Struct, 498),
    ("VkPhysicalDevicePerformanceQueryPropertiesKHR", "PhysicalDevicePerformanceQueryPropertiesKHR", Struct, 499),
    ("VkPerformanceCounterKHR", "PerformanceCounterKHR", Struct, 500),
    ("VkPerformanceCounterDescriptionKHR", "PerformanceCounterDescriptionKHR", Struct, 501),
    ("VkQueryPoolPerformanceCreateInfoKHR", "QueryPoolPerformanceCreateInfoKHR", Struct, 502),
    ("VkAcquireProfilingLockInfoKHR", "AcquireProfilingLockInfoKHR", Struct, 503),
    ("VkPerformanceQuerySubmitInfoKHR", "PerformanceQuerySubmitInfoKHR", Struct, 504),
    ("VkHeadlessSurfaceCreateInfoEXT", "HeadlessSurfaceCreateInfoEXT", Struct, 505),
    ("VkPhysicalDeviceCoverageReductionModeFeaturesNV", "PhysicalDeviceCoverageReductionModeFeaturesNV", Struct, 506),
    ("VkPipelineCoverageReductionStateCreateInfoNV", "PipelineCoverageReductionStateCreateInfoNV", Struct, 507),
    ("VkFramebufferMixedSamplesCombinationNV", "FramebufferMixedSamplesCombinationNV", Struct, 508),
    ("VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL", "PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL", Struct, 509),
    ("VkPerformanceValueINTEL", "PerformanceValueINTEL", Struct, 510),
    ("VkInitializePerformanceApiInfoINTEL", "InitializePerformanceApiInfoINTEL", Struct, 511),
    ("VkQueryPoolPerformanceQueryCreateInfoINTEL", "QueryPoolPerformanceQueryCreateInfoINTEL", Struct, 512),
    ("VkPerformanceMarkerInfoINTEL", "PerformanceMarkerInfoINTEL", Struct, 513),
    ("VkPerformanceStreamMarkerInfoINTEL", "PerformanceStreamMarkerInfoINTEL", Struct, 514),
    ("VkPerformanceOverrideInfoINTEL", "PerformanceOverrideInfoINTEL", Struct, 515),
    ("VkPerformanceConfigurationAcquireInfoINTEL", "PerformanceConfigurationAcquireInfoINTEL", Struct, 516),
    ("VkPhysicalDeviceShaderClockFeaturesKHR", "PhysicalDeviceShaderClockFeaturesKHR", Struct, 517),
    ("VkPhysicalDeviceIndexTypeUint8FeaturesEXT", "PhysicalDeviceIndexTypeUint8FeaturesEXT", Struct, 518),
    ("VkPhysicalDeviceShaderSMBuiltinsPropertiesNV", "PhysicalDeviceShaderSmBuiltinsPropertiesNV", Struct, 519),
    ("VkPhysicalDeviceShaderSMBuiltinsFeaturesNV", "PhysicalDeviceShaderSmBuiltinsFeaturesNV", Struct, 520),
    ("VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT", "PhysicalDeviceFragmentShaderInterlockFeaturesEXT", Struct, 521),
    ("VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures", "PhysicalDeviceSeparateDepthStencilLayoutsFeatures", Struct, 522),
    ("VkAttachmentReferenceStencilLayout", "AttachmentReferenceStencilLayout", Struct, 523),
    ("VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT", "PhysicalDevicePrimitiveTopologyListRestartFeaturesEXT", Struct, 524),
    ("VkAttachmentDescriptionStencilLayout", "AttachmentDescriptionStencilLayout", Struct, 525),
    ("VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR", "PhysicalDevicePipelineExecutablePropertiesFeaturesKHR", Struct, 526),
    ("VkPipelineInfoKHR", "PipelineInfoKHR", Struct, 527),
    ("VkPipelineExecutablePropertiesKHR", "PipelineExecutablePropertiesKHR", Struct, 528),
    ("VkPipelineExecutableInfoKHR", "PipelineExecutableInfoKHR", Struct, 529),
    ("VkPipelineExecutableStatisticKHR", "PipelineExecutableStatisticKHR", Struct, 530),
    ("VkPipelineExecutableInternalRepresentationKHR", "PipelineExecutableInternalRepresentationKHR", Struct, 531),
    ("VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures", "PhysicalDeviceShaderDemoteToHelperInvocationFeatures", Struct, 532),
    ("VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT", "PhysicalDeviceTexelBufferAlignmentFeaturesEXT", Struct, 533),
    ("VkPhysicalDeviceTexelBufferAlignmentProperties", "PhysicalDeviceTexelBufferAlignmentProperties", Struct, 534),
    ("VkPhysicalDeviceSubgroupSizeControlFeatures", "PhysicalDeviceSubgroupSizeControlFeatures", Struct, 535),
    ("VkPhysicalDeviceSubgroupSizeControlProperties", "PhysicalDeviceSubgroupSizeControlProperties", Struct, 536),
    ("VkPipelineShaderStageRequiredSubgroupSizeCreateInfo", "PipelineShaderStageRequiredSubgroupSizeCreateInfo", Struct, 537),
    ("VkSubpassShadingPipelineCreateInfoHUAWEI", "SubpassShadingPipelineCreateInfoHUAWEI", Struct, 538),
    ("VkPhysicalDeviceSubpassShadingPropertiesHUAWEI", "PhysicalDeviceSubpassShadingPropertiesHUAWEI", Struct, 539),
    ("VkMemoryOpaqueCaptureAddressAllocateInfo", "MemoryOpaqueCaptureAddressAllocateInfo", Struct, 540),
    ("VkDeviceMemoryOpaqueCaptureAddressInfo", "DeviceMemoryOpaqueCaptureAddressInfo", Struct, 541),
    ("VkPhysicalDeviceLineRasterizationFeaturesEXT", "PhysicalDeviceLineRasterizationFeaturesEXT", Struct, 542),
    ("VkPhysicalDeviceLineRasterizationPropertiesEXT", "PhysicalDeviceLineRasterizationPropertiesEXT", Struct, 543),
    ("VkPipelineRasterizationLineStateCreateInfoEXT", "PipelineRasterizationLineStateCreateInfoEXT", Struct, 544),
    ("VkPhysicalDevicePipelineCreationCacheControlFeatures", "PhysicalDevicePipelineCreationCacheControlFeatures", Struct, 545),
    ("VkPhysicalDeviceVulkan11Features", "PhysicalDeviceVulkan11Features", Struct, 546),
    ("VkPhysicalDeviceVulkan11Properties", "PhysicalDeviceVulkan11Properties", Struct, 547),
    ("VkPhysicalDeviceVulkan12Features", "PhysicalDeviceVulkan12Features", Struct, 548),
    ("VkPhysicalDeviceVulkan12Properties", "PhysicalDeviceVulkan12Properties", Struct, 549),
    ("VkPhysicalDeviceVulkan13Features", "PhysicalDeviceVulkan13Features", Struct, 550),
    ("VkPhysicalDeviceVulkan13Properties", "PhysicalDeviceVulkan13Properties", Struct, 551),
    ("VkPipelineCompilerControlCreateInfoAMD", "PipelineCompilerControlCreateInfoAMD", Struct, 552),
    ("VkPhysicalDeviceCoherentMemoryFeaturesAMD", "PhysicalDeviceCoherentMemoryFeaturesAMD", Struct, 553),
    ("VkPhysicalDeviceToolProperties", "PhysicalDeviceToolProperties", Struct, 554),
    ("VkSamplerCustomBorderColorCreateInfoEXT", "SamplerCustomBorderColorCreateInfoEXT", Struct, 555),
    ("VkPhysicalDeviceCustomBorderColorPropertiesEXT", "PhysicalDeviceCustomBorderColorPropertiesEXT", Struct, 556),
    ("VkPhysicalDeviceCustomBorderColorFeaturesEXT", "PhysicalDeviceCustomBorderColorFeaturesEXT", Struct, 557),
    ("VkSamplerBorderColorComponentMappingCreateInfoEXT", "SamplerBorderColorComponentMappingCreateInfoEXT", Struct, 558),
    ("VkPhysicalDeviceBorderColorSwizzleFeaturesEXT", "PhysicalDeviceBorderColorSwizzleFeaturesEXT", Struct, 559),
    ("VkAccelerationStructureGeometryTrianglesDataKHR", "AccelerationStructureGeometryTrianglesDataKHR", Struct, 560),
    ("VkAccelerationStructureGeometryAabbsDataKHR", "AccelerationStructureGeometryAabbsDataKHR", Struct, 561),
    ("VkAccelerationStructureGeometryInstancesDataKHR", "AccelerationStructureGeometryInstancesDataKHR", Struct, 562),
    ("VkAccelerationStructureGeometryKHR", "AccelerationStructureGeometryKHR", Struct, 563),
    ("VkAccelerationStructureBuildGeometryInfoKHR", "AccelerationStructureBuildGeometryInfoKHR", Struct, 564),
    ("VkAccelerationStructureBuildRangeInfoKHR", "AccelerationStructureBuildRangeInfoKHR", Struct, 565),
    ("VkAccelerationStructureCreateInfoKHR", "AccelerationStructureCreateInfoKHR", Struct, 566),
    ("VkAabbPositionsKHR", "AabbPositionsKHR", Struct, 567),
    ("VkTransformMatrixKHR", "TransformMatrixKHR", Struct, 568),
    ("VkAccelerationStructureInstanceKHR", "AccelerationStructureInstanceKHR", Struct, 569),
    ("VkAccelerationStructureDeviceAddressInfoKHR", "AccelerationStructureDeviceAddressInfoKHR", Struct, 570),
    ("VkAccelerationStructureVersionInfoKHR", "AccelerationStructureVersionInfoKHR", Struct, 571),
    ("VkCopyAccelerationStructureInfoKHR", "CopyAccelerationStructureInfoKHR", Struct, 572),
    ("VkCopyAccelerationStructureToMemoryInfoKHR", "CopyAccelerationStructureToMemoryInfoKHR", Struct, 573),
    ("VkCopyMemoryToAccelerationStructureInfoKHR", "CopyMemoryToAccelerationStructureInfoKHR", Struct, 574),
    ("VkRayTracingPipelineInterfaceCreateInfoKHR", "RayTracingPipelineInterfaceCreateInfoKHR", Struct, 575),
    ("VkPipelineLibraryCreateInfoKHR", "PipelineLibraryCreateInfoKHR", Struct, 576),
    ("VkPhysicalDeviceExtendedDynamicStateFeaturesEXT", "PhysicalDeviceExtendedDynamicStateFeaturesEXT", Struct, 577),
    ("VkPhysicalDeviceExtendedDynamicState2FeaturesEXT", "PhysicalDeviceExtendedDynamicState2FeaturesEXT", Struct, 578),
    ("VkRenderPassTransformBeginInfoQCOM", "RenderPassTransformBeginInfoQCOM", Struct, 579),
    ("VkCopyCommandTransformInfoQCOM", "CopyCommandTransformInfoQCOM", Struct, 580),
    ("VkCommandBufferInheritanceRenderPassTransformInfoQCOM", "CommandBufferInheritanceRenderPassTransformInfoQCOM", Struct, 581),
    ("VkPhysicalDeviceDiagnosticsConfigFeaturesNV", "PhysicalDeviceDiagnosticsConfigFeaturesNV", Struct, 582),
    ("VkDeviceDiagnosticsConfigCreateInfoNV", "DeviceDiagnosticsConfigCreateInfoNV", Struct, 583),
    ("VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures", "PhysicalDeviceZeroInitializeWorkgroupMemoryFeatures", Struct, 584),
    ("VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR", "PhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR", Struct, 585),
    ("VkPhysicalDeviceRobustness2FeaturesEXT", "PhysicalDeviceRobustness2FeaturesEXT", Struct, 586),
    ("VkPhysicalDeviceRobustness2PropertiesEXT", "PhysicalDeviceRobustness2PropertiesEXT", Struct, 587),
    ("VkPhysicalDeviceImageRobustnessFeatures", "PhysicalDeviceImageRobustnessFeatures", Struct, 588),
    ("VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR", "PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR", Struct, 589),
    ("VkPhysicalDevicePortabilitySubsetFeaturesKHR", "PhysicalDevicePortabilitySubsetFeaturesKHR", Struct, 590),
    ("VkPhysicalDevicePortabilitySubsetPropertiesKHR", "PhysicalDevicePortabilitySubsetPropertiesKHR", Struct, 591),
    ("VkPhysicalDevice4444FormatsFeaturesEXT", "PhysicalDevice4444FormatsFeaturesEXT", Struct, 592),
    ("VkPhysicalDeviceSubpassShadingFeaturesHUAWEI", "PhysicalDeviceSubpassShadingFeaturesHUAWEI", Struct, 593),
    ("VkBufferCopy2", "BufferCopy2", Struct, 594),
    ("VkImageCopy2", "ImageCopy2", Struct, 595),
    ("VkImageBlit2", "ImageBlit2", Struct, 596),
    ("VkBufferImageCopy2", "BufferImageCopy2", Struct, 597),
    ("VkImageResolve2", "ImageResolve2", Struct, 598),
    ("VkCopyBufferInfo2", "CopyBufferInfo2", Struct, 599),
    ("VkCopyImageInfo2", "CopyImageInfo2", Struct, 600),
    ("VkBlitImageInfo2", "BlitImageInfo2", Struct, 601),
    ("VkCopyBufferToImageInfo2", "CopyBufferToImageInfo2", Struct, 602),
    ("VkCopyImageToBufferInfo2", "CopyImageToBufferInfo2", Struct, 603),
    ("VkResolveImageInfo2", "ResolveImageInfo2", Struct, 604),
    ("VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT", "PhysicalDeviceShaderImageAtomicInt64FeaturesEXT", Struct, 605),
    ("VkFragmentShadingRateAttachmentInfoKHR", "FragmentShadingRateAttachmentInfoKHR", Struct, 606),
    ("VkPipelineFragmentShadingRateStateCreateInfoKHR", "PipelineFragmentShadingRateStateCreateInfoKHR", Struct, 607),
    ("VkPhysicalDeviceFragmentShadingRateFeaturesKHR", "PhysicalDeviceFragmentShadingRateFeaturesKHR", Struct, 608),
    ("VkPhysicalDeviceFragmentShadingRatePropertiesKHR", "PhysicalDeviceFragmentShadingRatePropertiesKHR", Struct, 609),
    ("VkPhysicalDeviceFragmentShadingRateKHR", "PhysicalDeviceFragmentShadingRateKHR", Struct, 610),
    ("VkPhysicalDeviceShaderTerminateInvocationFeatures", "PhysicalDeviceShaderTerminateInvocationFeatures", Struct, 611),
    ("VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV", "PhysicalDeviceFragmentShadingRateEnumsFeaturesNV", Struct, 612),
    ("VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV", "PhysicalDeviceFragmentShadingRateEnumsPropertiesNV", Struct, 613),
    ("VkPipelineFragmentShadingRateEnumStateCreateInfoNV", "PipelineFragmentShadingRateEnumStateCreateInfoNV", Struct, 614),
    ("VkAccelerationStructureBuildSizesInfoKHR", "AccelerationStructureBuildSizesInfoKHR", Struct, 615),
    ("VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE", "PhysicalDeviceMutableDescriptorTypeFeaturesVALVE", Struct, 616),
    ("VkMutableDescriptorTypeListVALVE", "MutableDescriptorTypeListVALVE", Struct, 617),
    ("VkMutableDescriptorTypeCreateInfoVALVE", "MutableDescriptorTypeCreateInfoVALVE", Struct, 618),
    ("VkPhysicalDeviceDepthClipControlFeaturesEXT", "PhysicalDeviceDepthClipControlFeaturesEXT", Struct, 619),
    ("VkPipelineViewportDepthClipControlCreateInfoEXT", "PipelineViewportDepthClipControlCreateInfoEXT", Struct, 620),
    ("VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT", "PhysicalDeviceVertexInputDynamicStateFeaturesEXT", Struct, 621),
    ("VkPhysicalDeviceExternalMemoryRDMAFeaturesNV", "PhysicalDeviceExternalMemoryRdmaFeaturesNV", Struct, 622),
    ("VkVertexInputBindingDescription2EXT", "VertexInputBindingDescription2EXT", Struct, 623),
    ("VkVertexInputAttributeDescription2EXT", "VertexInputAttributeDescription2EXT", Struct, 624),
    ("VkPhysicalDeviceColorWriteEnableFeaturesEXT", "PhysicalDeviceColorWriteEnableFeaturesEXT", Struct, 625),
    ("VkPipelineColorWriteCreateInfoEXT", "PipelineColorWriteCreateInfoEXT", Struct, 626),
    ("VkMemoryBarrier2", "MemoryBarrier2", Struct, 627),
    ("VkImageMemoryBarrier2", "ImageMemoryBarrier2", Struct, 628),
    ("VkBufferMemoryBarrier2", "BufferMemoryBarrier2", Struct, 629),
    ("VkDependencyInfo", "DependencyInfo", Struct, 630),
    ("VkSemaphoreSubmitInfo", "SemaphoreSubmitInfo", Struct, 631),
    ("VkCommandBufferSubmitInfo", "CommandBufferSubmitInfo", Struct, 632),
    ("VkSubmitInfo2", "SubmitInfo2", Struct, 633),
    ("VkQueueFamilyCheckpointProperties2NV", "QueueFamilyCheckpointProperties2NV", Struct, 634),
    ("VkCheckpointData2NV", "CheckpointData2NV", Struct, 635),
    ("VkPhysicalDeviceSynchronization2Features", "PhysicalDeviceSynchronization2Features", Struct, 636),
    ("VkVideoQueueFamilyProperties2KHR", "VideoQueueFamilyProperties2KHR", Struct, 637),
    ("VkQueueFamilyQueryResultStatusProperties2KHR", "QueueFamilyQueryResultStatusProperties2KHR", Struct, 638),
    ("VkVideoProfilesKHR", "VideoProfilesKHR", Struct, 639),
    ("VkPhysicalDeviceVideoFormatInfoKHR", "PhysicalDeviceVideoFormatInfoKHR", Struct, 640),
    ("VkVideoFormatPropertiesKHR", "VideoFormatPropertiesKHR", Struct, 641),
    ("VkVideoProfileKHR", "VideoProfileKHR", Struct, 642),
    ("VkVideoCapabilitiesKHR", "VideoCapabilitiesKHR", Struct, 643),
    ("VkVideoGetMemoryPropertiesKHR", "VideoGetMemoryPropertiesKHR", Struct, 644),
    ("VkVideoBindMemoryKHR", "VideoBindMemoryKHR", Struct, 645),
    ("VkVideoPictureResourceKHR", "VideoPictureResourceKHR", Struct, 646),
    ("VkVideoReferenceSlotKHR", "VideoReferenceSlotKHR", Struct, 647),
    ("VkVideoDecodeCapabilitiesKHR", "VideoDecodeCapabilitiesKHR", Struct, 648),
    ("VkVideoDecodeInfoKHR", "VideoDecodeInfoKHR", Struct, 649),
    ("VkVideoDecodeH264ProfileEXT", "VideoDecodeH264ProfileEXT", Struct, 650),
    ("VkVideoDecodeH264CapabilitiesEXT", "VideoDecodeH264CapabilitiesEXT", Struct, 651),
    ("VkVideoDecodeH264SessionParametersAddInfoEXT", "VideoDecodeH264SessionParametersAddInfoEXT", Struct, 652),
    ("VkVideoDecodeH264SessionParametersCreateInfoEXT", "VideoDecodeH264SessionParametersCreateInfoEXT", Struct, 653),
    ("VkVideoDecodeH264PictureInfoEXT", "VideoDecodeH264PictureInfoEXT", Struct, 654),
    ("VkVideoDecodeH264DpbSlotInfoEXT", "VideoDecodeH264DpbSlotInfoEXT", Struct, 655),
    ("VkVideoDecodeH264MvcEXT", "VideoDecodeH264MvcEXT", Struct, 656),
    ("VkVideoDecodeH265ProfileEXT", "VideoDecodeH265ProfileEXT", Struct, 657),
    ("VkVideoDecodeH265CapabilitiesEXT", "VideoDecodeH265CapabilitiesEXT", Struct, 658),
    ("VkVideoDecodeH265SessionParametersAddInfoEXT", "VideoDecodeH265SessionParametersAddInfoEXT", Struct, 659),
    ("VkVideoDecodeH265SessionParametersCreateInfoEXT", "VideoDecodeH265SessionParametersCreateInfoEXT", Struct, 660),
    ("VkVideoDecodeH265PictureInfoEXT", "VideoDecodeH265PictureInfoEXT", Struct, 661),
    ("VkVideoDecodeH265DpbSlotInfoEXT", "VideoDecodeH265DpbSlotInfoEXT", Struct, 662),
    ("VkVideoSessionCreateInfoKHR", "VideoSessionCreateInfoKHR", Struct, 663),
    ("VkVideoSessionParametersCreateInfoKHR", "VideoSessionParametersCreateInfoKHR", Struct, 664),
    ("VkVideoSessionParametersUpdateInfoKHR", "VideoSessionParametersUpdateInfoKHR", Struct, 665),
    ("VkVideoBeginCodingInfoKHR", "VideoBeginCodingInfoKHR", Struct, 666),
    ("VkVideoEndCodingInfoKHR", "VideoEndCodingInfoKHR", Struct, 667),
    ("VkVideoCodingControlInfoKHR", "VideoCodingControlInfoKHR", Struct, 668),
    ("VkVideoEncodeInfoKHR", "VideoEncodeInfoKHR", Struct, 669),
    ("VkVideoEncodeRateControlInfoKHR", "VideoEncodeRateControlInfoKHR", Struct, 670),
    ("VkVideoEncodeRateControlLayerInfoKHR", "VideoEncodeRateControlLayerInfoKHR", Struct, 671),
    ("VkVideoEncodeCapabilitiesKHR", "VideoEncodeCapabilitiesKHR", Struct, 672),
    ("VkVideoEncodeH264CapabilitiesEXT", "VideoEncodeH264CapabilitiesEXT", Struct, 673),
    ("VkVideoEncodeH264SessionParametersAddInfoEXT", "VideoEncodeH264SessionParametersAddInfoEXT", Struct, 674),
    ("VkVideoEncodeH264SessionParametersCreateInfoEXT", "VideoEncodeH264SessionParametersCreateInfoEXT", Struct, 675),
    ("VkVideoEncodeH264DpbSlotInfoEXT", "VideoEncodeH264DpbSlotInfoEXT", Struct, 676),
    ("VkVideoEncodeH264VclFrameInfoEXT", "VideoEncodeH264VclFrameInfoEXT", Struct, 677),
    ("VkVideoEncodeH264ReferenceListsEXT", "VideoEncodeH264ReferenceListsEXT", Struct, 678),
    ("VkVideoEncodeH264EmitPictureParametersEXT", "VideoEncodeH264EmitPictureParametersEXT", Struct, 679),
    ("VkVideoEncodeH264ProfileEXT", "VideoEncodeH264ProfileEXT", Struct, 680),
    ("VkVideoEncodeH264NaluSliceEXT", "VideoEncodeH264NaluSliceEXT", Struct, 681),
    ("VkVideoEncodeH264RateControlInfoEXT", "VideoEncodeH264RateControlInfoEXT", Struct, 682),
    ("VkVideoEncodeH264QpEXT", "VideoEncodeH264QpEXT", Struct, 683),
    ("VkVideoEncodeH264FrameSizeEXT", "VideoEncodeH264FrameSizeEXT", Struct, 684),
    ("VkVideoEncodeH264RateControlLayerInfoEXT", "VideoEncodeH264RateControlLayerInfoEXT", Struct, 685),
    ("VkVideoEncodeH265CapabilitiesEXT", "VideoEncodeH265CapabilitiesEXT", Struct, 686),
    ("VkVideoEncodeH265SessionParametersAddInfoEXT", "VideoEncodeH265SessionParametersAddInfoEXT", Struct, 687),
    ("VkVideoEncodeH265SessionParametersCreateInfoEXT", "VideoEncodeH265SessionParametersCreateInfoEXT", Struct, 688),
    ("VkVideoEncodeH265VclFrameInfoEXT", "VideoEncodeH265VclFrameInfoEXT", Struct, 689),
    ("VkVideoEncodeH265EmitPictureParametersEXT", "VideoEncodeH265EmitPictureParametersEXT", Struct, 690),
    ("VkVideoEncodeH265NaluSliceSegmentEXT", "VideoEncodeH265NaluSliceSegmentEXT", Struct, 691),
    ("VkVideoEncodeH265RateControlInfoEXT", "VideoEncodeH265RateControlInfoEXT", Struct, 692),
    ("VkVideoEncodeH265QpEXT", "VideoEncodeH265QpEXT", Struct, 693),
    ("VkVideoEncodeH265FrameSizeEXT", "VideoEncodeH265FrameSizeEXT", Struct, 694),
    ("VkVideoEncodeH265RateControlLayerInfoEXT", "VideoEncodeH265RateControlLayerInfoEXT", Struct, 695),
    ("VkVideoEncodeH265ProfileEXT", "VideoEncodeH265ProfileEXT", Struct, 696),
    ("VkVideoEncodeH265DpbSlotInfoEXT", "VideoEncodeH265DpbSlotInfoEXT", Struct, 697),
    ("VkVideoEncodeH265ReferenceListsEXT", "VideoEncodeH265ReferenceListsEXT", Struct, 698),
    ("VkPhysicalDeviceInheritedViewportScissorFeaturesNV", "PhysicalDeviceInheritedViewportScissorFeaturesNV", Struct, 699),
    ("VkCommandBufferInheritanceViewportScissorInfoNV", "CommandBufferInheritanceViewportScissorInfoNV", Struct, 700),
    ("VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT", "PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT", Struct, 701),
    ("VkPhysicalDeviceProvokingVertexFeaturesEXT", "PhysicalDeviceProvokingVertexFeaturesEXT", Struct, 702),
    ("VkPhysicalDeviceProvokingVertexPropertiesEXT", "PhysicalDeviceProvokingVertexPropertiesEXT", Struct, 703),
    ("VkPipelineRasterizationProvokingVertexStateCreateInfoEXT", "PipelineRasterizationProvokingVertexStateCreateInfoEXT", Struct, 704),
    ("VkCuModuleCreateInfoNVX", "CuModuleCreateInfoNVX", Struct, 705),
    ("VkCuFunctionCreateInfoNVX", "CuFunctionCreateInfoNVX", Struct, 706),
    ("VkCuLaunchInfoNVX", "CuLaunchInfoNVX", Struct, 707),
    ("VkPhysicalDeviceShaderIntegerDotProductFeatures", "PhysicalDeviceShaderIntegerDotProductFeatures", Struct, 708),
    ("VkPhysicalDeviceShaderIntegerDotProductProperties", "PhysicalDeviceShaderIntegerDotProductProperties", Struct, 709),
    ("VkPhysicalDeviceDrmPropertiesEXT", "PhysicalDeviceDrmPropertiesEXT", Struct, 710),
    ("VkPhysicalDeviceRayTracingMotionBlurFeaturesNV", "PhysicalDeviceRayTracingMotionBlurFeaturesNV", Struct, 711),
    ("VkAccelerationStructureGeometryMotionTrianglesDataNV", "AccelerationStructureGeometryMotionTrianglesDataNV", Struct, 712),
    ("VkAccelerationStructureMotionInfoNV", "AccelerationStructureMotionInfoNV", Struct, 713),
    ("VkSRTDataNV", "SrtDataNV", Struct, 714),
    ("VkAccelerationStructureSRTMotionInstanceNV", "AccelerationStructureSrtMotionInstanceNV", Struct, 715),
    ("VkAccelerationStructureMatrixMotionInstanceNV", "AccelerationStructureMatrixMotionInstanceNV", Struct, 716),
    ("VkAccelerationStructureMotionInstanceNV", "AccelerationStructureMotionInstanceNV", Struct, 717),
    ("VkMemoryGetRemoteAddressInfoNV", "MemoryGetRemoteAddressInfoNV", Struct, 718),
    ("VkImportMemoryBufferCollectionFUCHSIA", "ImportMemoryBufferCollectionFUCHSIA", Struct, 719),
    ("VkBufferCollectionImageCreateInfoFUCHSIA", "BufferCollectionImageCreateInfoFUCHSIA", Struct, 720),
    ("VkBufferCollectionBufferCreateInfoFUCHSIA", "BufferCollectionBufferCreateInfoFUCHSIA", Struct, 721),
    ("VkBufferCollectionCreateInfoFUCHSIA", "BufferCollectionCreateInfoFUCHSIA", Struct, 722),
    ("VkBufferCollectionPropertiesFUCHSIA", "BufferCollectionPropertiesFUCHSIA", Struct, 723),
    ("VkBufferConstraintsInfoFUCHSIA", "BufferConstraintsInfoFUCHSIA", Struct, 724),
    ("VkSysmemColorSpaceFUCHSIA", "SysmemColorSpaceFUCHSIA", Struct, 725),
    ("VkImageFormatConstraintsInfoFUCHSIA", "ImageFormatConstraintsInfoFUCHSIA", Struct, 726),
    ("VkImageConstraintsInfoFUCHSIA", "ImageConstraintsInfoFUCHSIA", Struct, 727),
    ("VkBufferCollectionConstraintsInfoFUCHSIA", "BufferCollectionConstraintsInfoFUCHSIA", Struct, 728),
    ("VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT", "PhysicalDeviceRgba10x6FormatsFeaturesEXT", Struct, 729),
    ("VkFormatProperties3", "FormatProperties3", Struct, 730),
    ("VkDrmFormatModifierPropertiesList2EXT", "DrmFormatModifierPropertiesList2EXT", Struct, 731),
    ("VkDrmFormatModifierProperties2EXT", "DrmFormatModifierProperties2EXT", Struct, 732),
    ("VkAndroidHardwareBufferFormatProperties2ANDROID", "AndroidHardwareBufferFormatProperties2ANDROID", Struct, 733),
    ("VkPipelineRenderingCreateInfo", "PipelineRenderingCreateInfo", Struct, 734),
    ("VkRenderingInfo", "RenderingInfo", Struct, 735),
    ("VkRenderingAttachmentInfo", "RenderingAttachmentInfo", Struct, 736),
    ("VkRenderingFragmentShadingRateAttachmentInfoKHR", "RenderingFragmentShadingRateAttachmentInfoKHR", Struct, 737),
    ("VkRenderingFragmentDensityMapAttachmentInfoEXT", "RenderingFragmentDensityMapAttachmentInfoEXT", Struct, 738),
    ("VkPhysicalDeviceDynamicRenderingFeatures", "PhysicalDeviceDynamicRenderingFeatures", Struct, 739),
    ("VkCommandBufferInheritanceRenderingInfo", "CommandBufferInheritanceRenderingInfo", Struct, 740),
    ("VkAttachmentSampleCountInfoAMD", "AttachmentSampleCountInfoAMD", Struct, 741),
    ("VkMultiviewPerViewAttributesInfoNVX", "MultiviewPerViewAttributesInfoNVX", Struct, 742),
    ("VkPhysicalDeviceImageViewMinLodFeaturesEXT", "PhysicalDeviceImageViewMinLodFeaturesEXT", Struct, 743),
    ("VkImageViewMinLodCreateInfoEXT", "ImageViewMinLodCreateInfoEXT", Struct, 744),
    ("VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM", "PhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM", Struct, 745),
    ("VkPhysicalDeviceLinearColorAttachmentFeaturesNV", "PhysicalDeviceLinearColorAttachmentFeaturesNV", Struct, 746),
    ("VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE", "PhysicalDeviceDescriptorSetHostMappingFeaturesVALVE", Struct, 747),
    ("VkDescriptorSetBindingReferenceVALVE", "DescriptorSetBindingReferenceVALVE", Struct, 748),
    ("VkDescriptorSetLayoutHostMappingInfoVALVE", "DescriptorSetLayoutHostMappingInfoVALVE", Struct, 749),
    ("VkGeometryFlagsNV", "GeometryFlagsNV", Alias, 0),
    ("VkGeometryInstanceFlagsNV", "GeometryInstanceFlagsNV", Alias, 1),
    ("VkBuildAccelerationStructureFlagsNV", "BuildAccelerationStructureFlagsNV", Alias, 2),
    ("VkPrivateDataSlotCreateFlagsEXT", "PrivateDataSlotCreateFlagsEXT", Alias, 3),
    ("VkDescriptorUpdateTemplateCreateFlagsKHR", "DescriptorUpdateTemplateCreateFlagsKHR", Alias, 4),
    ("VkPipelineCreationFeedbackFlagsEXT", "PipelineCreationFeedbackFlagsEXT", Alias, 5),
    ("VkSemaphoreWaitFlagsKHR", "SemaphoreWaitFlagsKHR", Alias, 6),
    ("VkAccessFlags2KHR", "AccessFlags2KHR", Alias, 7),
    ("VkPipelineStageFlags2KHR", "PipelineStageFlags2KHR", Alias, 8),
    ("VkFormatFeatureFlags2KHR", "FormatFeatureFlags2KHR", Alias, 9),
    ("VkRenderingFlagsKHR", "RenderingFlagsKHR", Alias, 10),
    ("VkPeerMemoryFeatureFlagsKHR", "PeerMemoryFeatureFlagsKHR", Alias, 11),
    ("VkMemoryAllocateFlagsKHR", "MemoryAllocateFlagsKHR", Alias, 12),
    ("VkCommandPoolTrimFlagsKHR", "CommandPoolTrimFlagsKHR", Alias, 13),
    ("VkExternalMemoryHandleTypeFlagsKHR", "ExternalMemoryHandleTypeFlagsKHR", Alias, 14),
    ("VkExternalMemoryFeatureFlagsKHR", "ExternalMemoryFeatureFlagsKHR", Alias, 15),
    ("VkExternalSemaphoreHandleTypeFlagsKHR", "ExternalSemaphoreHandleTypeFlagsKHR", Alias, 16),
    ("VkExternalSemaphoreFeatureFlagsKHR", "ExternalSemaphoreFeatureFlagsKHR", Alias, 17),
    ("VkSemaphoreImportFlagsKHR", "SemaphoreImportFlagsKHR", Alias, 18),
    ("VkExternalFenceHandleTypeFlagsKHR", "ExternalFenceHandleTypeFlagsKHR", Alias, 19),
    ("VkExternalFenceFeatureFlagsKHR", "ExternalFenceFeatureFlagsKHR", Alias, 20),
    ("VkFenceImportFlagsKHR", "FenceImportFlagsKHR", Alias, 21),
    ("VkDescriptorBindingFlagsEXT", "DescriptorBindingFlagsEXT", Alias, 22),
    ("VkResolveModeFlagsKHR", "ResolveModeFlagsKHR", Alias, 23),
    ("VkToolPurposeFlagsEXT", "ToolPurposeFlagsEXT", Alias, 24),
    ("VkSubmitFlagsKHR", "SubmitFlagsKHR", Alias, 25),
    ("VkDescriptorUpdateTemplateKHR", "DescriptorUpdateTemplateKHR", Alias, 26),
    ("VkSamplerYcbcrConversionKHR", "SamplerYcbcrConversionKHR", Alias, 27),
    ("VkPrivateDataSlotEXT", "PrivateDataSlotEXT", Alias, 28),
    ("VkPrivateDataSlotCreateFlagBitsEXT", "PrivateDataSlotCreateFlagBitsEXT", Alias, 29),
    ("VkDescriptorUpdateTemplateTypeKHR", "DescriptorUpdateTemplateTypeKHR", Alias, 30),
    ("VkPointClippingBehaviorKHR", "PointClippingBehaviorKHR", Alias, 31),
    ("VkQueueGlobalPriorityEXT", "QueueGlobalPriorityEXT", Alias, 32),
    ("VkResolveModeFlagBitsKHR", "ResolveModeFlagBitsKHR", Alias, 33),
    ("VkDescriptorBindingFlagBitsEXT", "DescriptorBindingFlagBitsEXT", Alias, 34),
    ("VkSemaphoreTypeKHR", "SemaphoreTypeKHR", Alias, 35),
    ("VkGeometryFlagBitsNV", "GeometryFlagBitsNV", Alias, 36),
    ("VkGeometryInstanceFlagBitsNV", "GeometryInstanceFlagBitsNV", Alias, 37),
    ("VkBuildAccelerationStructureFlagBitsNV", "BuildAccelerationStructureFlagBitsNV", Alias, 38),
    ("VkCopyAccelerationStructureModeNV", "CopyAccelerationStructureModeNV", Alias, 39),
    ("VkAccelerationStructureTypeNV", "AccelerationStructureTypeNV", Alias, 40),
    ("VkGeometryTypeNV", "GeometryTypeNV", Alias, 41),
    ("VkRayTracingShaderGroupTypeNV", "RayTracingShaderGroupTypeNV", Alias, 42),
    ("VkPipelineCreationFeedbackFlagBitsEXT", "PipelineCreationFeedbackFlagBitsEXT", Alias, 43),
    ("VkSemaphoreWaitFlagBitsKHR", "SemaphoreWaitFlagBitsKHR", Alias, 44),
    ("VkToolPurposeFlagBitsEXT", "ToolPurposeFlagBitsEXT", Alias, 45),
    ("VkAccessFlagBits2KHR", "AccessFlagBits2KHR", Alias, 46),
    ("VkPipelineStageFlagBits2KHR", "PipelineStageFlagBits2KHR", Alias, 47),
    ("VkFormatFeatureFlagBits2KHR", "FormatFeatureFlagBits2KHR", Alias, 48),
    ("VkRenderingFlagBitsKHR", "RenderingFlagBitsKHR", Alias, 49),
    ("VkExternalMemoryHandleTypeFlagBitsKHR", "ExternalMemoryHandleTypeFlagBitsKHR", Alias, 50),
    ("VkExternalMemoryFeatureFlagBitsKHR", "ExternalMemoryFeatureFlagBitsKHR", Alias, 51),
    ("VkExternalSemaphoreHandleTypeFlagBitsKHR", "ExternalSemaphoreHandleTypeFlagBitsKHR", Alias, 52),
    ("VkExternalSemaphoreFeatureFlagBitsKHR", "ExternalSemaphoreFeatureFlagBitsKHR", Alias, 53),
    ("VkSemaphoreImportFlagBitsKHR", "SemaphoreImportFlagBitsKHR", Alias, 54),
    ("VkExternalFenceHandleTypeFlagBitsKHR", "ExternalFenceHandleTypeFlagBitsKHR", Alias, 55),
    ("VkExternalFenceFeatureFlagBitsKHR", "ExternalFenceFeatureFlagBitsKHR", Alias, 56),
    ("VkFenceImportFlagBitsKHR", "FenceImportFlagBitsKHR", Alias, 57),
    ("VkPeerMemoryFeatureFlagBitsKHR", "PeerMemoryFeatureFlagBitsKHR", Alias, 58),
    ("VkMemoryAllocateFlagBitsKHR", "MemoryAllocateFlagBitsKHR", Alias, 59),
    ("VkTessellationDomainOriginKHR", "TessellationDomainOriginKHR", Alias, 60),
    ("VkSamplerYcbcrModelConversionKHR", "SamplerYcbcrModelConversionKHR", Alias, 61),
    ("VkSamplerYcbcrRangeKHR", "SamplerYcbcrRangeKHR", Alias, 62),
    ("VkChromaLocationKHR", "ChromaLocationKHR", Alias, 63),
    ("VkSamplerReductionModeEXT", "SamplerReductionModeEXT", Alias, 64),
    ("VkShaderFloatControlsIndependenceKHR", "ShaderFloatControlsIndependenceKHR", Alias, 65),
    ("VkSubmitFlagBitsKHR", "SubmitFlagBitsKHR", Alias, 66),
    ("VkDriverIdKHR", "DriverIdKHR", Alias, 67),
    ("VkDevicePrivateDataCreateInfoEXT", "DevicePrivateDataCreateInfoEXT", Alias, 68),
    ("VkPrivateDataSlotCreateInfoEXT", "PrivateDataSlotCreateInfoEXT", Alias, 69),
    ("VkPhysicalDevicePrivateDataFeaturesEXT", "PhysicalDevicePrivateDataFeaturesEXT", Alias, 70),
    ("VkPhysicalDeviceFeatures2KHR", "PhysicalDeviceFeatures2KHR", Alias, 71),
    ("VkPhysicalDeviceProperties2KHR", "PhysicalDeviceProperties2KHR", Alias, 72),
    ("VkFormatProperties2KHR", "FormatProperties2KHR", Alias, 73),
    ("VkImageFormatProperties2KHR", "ImageFormatProperties2KHR", Alias, 74),
    ("VkPhysicalDeviceImageFormatInfo2KHR", "PhysicalDeviceImageFormatInfo2KHR", Alias, 75),
    ("VkQueueFamilyProperties2KHR", "QueueFamilyProperties2KHR", Alias, 76),
    ("VkPhysicalDeviceMemoryProperties2KHR", "PhysicalDeviceMemoryProperties2KHR", Alias, 77),
    ("VkSparseImageFormatProperties2KHR", "SparseImageFormatProperties2KHR", Alias, 78),
    ("VkPhysicalDeviceSparseImageFormatInfo2KHR", "PhysicalDeviceSparseImageFormatInfo2KHR", Alias, 79),
    ("VkConformanceVersionKHR", "ConformanceVersionKHR", Alias, 80),
    ("VkPhysicalDeviceDriverPropertiesKHR", "PhysicalDeviceDriverPropertiesKHR", Alias, 81),
    ("VkPhysicalDeviceVariablePointersFeaturesKHR", "PhysicalDeviceVariablePointersFeaturesKHR", Alias, 82),
    ("VkPhysicalDeviceVariablePointerFeaturesKHR", "PhysicalDeviceVariablePointerFeaturesKHR", Alias, 83),
    ("VkPhysicalDeviceVariablePointerFeatures", "PhysicalDeviceVariablePointerFeatures", Alias, 84),
    ("VkExternalMemoryPropertiesKHR", "ExternalMemoryPropertiesKHR", Alias, 85),
    ("VkPhysicalDeviceExternalImageFormatInfoKHR", "PhysicalDeviceExternalImageFormatInfoKHR", Alias, 86),
    ("VkExternalImageFormatPropertiesKHR", "ExternalImageFormatPropertiesKHR", Alias, 87),
    ("VkPhysicalDeviceExternalBufferInfoKHR", "PhysicalDeviceExternalBufferInfoKHR", Alias, 88),
    ("VkExternalBufferPropertiesKHR", "ExternalBufferPropertiesKHR", Alias, 89),
    ("VkPhysicalDeviceIDPropertiesKHR", "PhysicalDeviceIdPropertiesKHR", Alias, 90),
    ("VkExternalMemoryImageCreateInfoKHR", "ExternalMemoryImageCreateInfoKHR", Alias, 91),
    ("VkExternalMemoryBufferCreateInfoKHR", "ExternalMemoryBufferCreateInfoKHR", Alias, 92),
    ("VkExportMemoryAllocateInfoKHR", "ExportMemoryAllocateInfoKHR", Alias, 93),
    ("VkPhysicalDeviceExternalSemaphoreInfoKHR", "PhysicalDeviceExternalSemaphoreInfoKHR", Alias, 94),
    ("VkExternalSemaphorePropertiesKHR", "ExternalSemaphorePropertiesKHR", Alias, 95),
    ("VkExportSemaphoreCreateInfoKHR", "ExportSemaphoreCreateInfoKHR", Alias, 96),
    ("VkPhysicalDeviceExternalFenceInfoKHR", "PhysicalDeviceExternalFenceInfoKHR", Alias, 97),
    ("VkExternalFencePropertiesKHR", "ExternalFencePropertiesKHR", Alias, 98),
    ("VkExportFenceCreateInfoKHR", "ExportFenceCreateInfoKHR", Alias, 99),
    ("VkPhysicalDeviceMultiviewFeaturesKHR", "PhysicalDeviceMultiviewFeaturesKHR", Alias, 100),
    ("VkPhysicalDeviceMultiviewPropertiesKHR", "PhysicalDeviceMultiviewPropertiesKHR", Alias, 101),
    ("VkRenderPassMultiviewCreateInfoKHR", "RenderPassMultiviewCreateInfoKHR", Alias, 102),
    ("VkPhysicalDeviceGroupPropertiesKHR", "PhysicalDeviceGroupPropertiesKHR", Alias, 103),
    ("VkMemoryAllocateFlagsInfoKHR", "MemoryAllocateFlagsInfoKHR", Alias, 104),
    ("VkBindBufferMemoryInfoKHR", "BindBufferMemoryInfoKHR", Alias, 105),
    ("VkBindBufferMemoryDeviceGroupInfoKHR", "BindBufferMemoryDeviceGroupInfoKHR", Alias, 106),
    ("VkBindImageMemoryInfoKHR", "BindImageMemoryInfoKHR", Alias, 107),
    ("VkBindImageMemoryDeviceGroupInfoKHR", "BindImageMemoryDeviceGroupInfoKHR", Alias, 108),
    ("VkDeviceGroupRenderPassBeginInfoKHR", "DeviceGroupRenderPassBeginInfoKHR", Alias, 109),
    ("VkDeviceGroupCommandBufferBeginInfoKHR", "DeviceGroupCommandBufferBeginInfoKHR", Alias, 110),
    ("VkDeviceGroupSubmitInfoKHR", "DeviceGroupSubmitInfoKHR", Alias, 111),
    ("VkDeviceGroupBindSparseInfoKHR", "DeviceGroupBindSparseInfoKHR", Alias, 112),
    ("VkDeviceGroupDeviceCreateInfoKHR", "DeviceGroupDeviceCreateInfoKHR", Alias, 113),
    ("VkDescriptorUpdateTemplateEntryKHR", "DescriptorUpdateTemplateEntryKHR", Alias, 114),
    ("VkDescriptorUpdateTemplateCreateInfoKHR", "DescriptorUpdateTemplateCreateInfoKHR", Alias, 115),
    ("VkInputAttachmentAspectReferenceKHR", "InputAttachmentAspectReferenceKHR", Alias, 116),
    ("VkRenderPassInputAttachmentAspectCreateInfoKHR", "RenderPassInputAttachmentAspectCreateInfoKHR", Alias, 117),
    ("VkPhysicalDevice16BitStorageFeaturesKHR", "PhysicalDevice16BitStorageFeaturesKHR", Alias, 118),
    ("VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR", "PhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR", Alias, 119),
    ("VkBufferMemoryRequirementsInfo2KHR", "BufferMemoryRequirementsInfo2KHR", Alias, 120),
    ("VkDeviceBufferMemoryRequirementsKHR", "DeviceBufferMemoryRequirementsKHR", Alias, 121),
    ("VkImageMemoryRequirementsInfo2KHR", "ImageMemoryRequirementsInfo2KHR", Alias, 122),
    ("VkImageSparseMemoryRequirementsInfo2KHR", "ImageSparseMemoryRequirementsInfo2KHR", Alias, 123),
    ("VkDeviceImageMemoryRequirementsKHR", "DeviceImageMemoryRequirementsKHR", Alias, 124),
    ("VkMemoryRequirements2KHR", "MemoryRequirements2KHR", Alias, 125),
    ("VkSparseImageMemoryRequirements2KHR", "SparseImageMemoryRequirements2KHR", Alias, 126),
    ("VkPhysicalDevicePointClippingPropertiesKHR", "PhysicalDevicePointClippingPropertiesKHR", Alias, 127),
    ("VkMemoryDedicatedRequirementsKHR", "MemoryDedicatedRequirementsKHR", Alias, 128),
    ("VkMemoryDedicatedAllocateInfoKHR", "MemoryDedicatedAllocateInfoKHR", Alias, 129),
    ("VkImageViewUsageCreateInfoKHR", "ImageViewUsageCreateInfoKHR", Alias, 130),
    ("VkPipelineTessellationDomainOriginStateCreateInfoKHR", "PipelineTessellationDomainOriginStateCreateInfoKHR", Alias, 131),
    ("VkSamplerYcbcrConversionInfoKHR", "SamplerYcbcrConversionInfoKHR", Alias, 132),
    ("VkSamplerYcbcrConversionCreateInfoKHR", "SamplerYcbcrConversionCreateInfoKHR", Alias, 133),
    ("VkBindImagePlaneMemoryInfoKHR", "BindImagePlaneMemoryInfoKHR", Alias, 134),
    ("VkImagePlaneMemoryRequirementsInfoKHR", "ImagePlaneMemoryRequirementsInfoKHR", Alias, 135),
    ("VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR", "PhysicalDeviceSamplerYcbcrConversionFeaturesKHR", Alias, 136),
    ("VkSamplerYcbcrConversionImageFormatPropertiesKHR", "SamplerYcbcrConversionImageFormatPropertiesKHR", Alias, 137),
    ("VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT", "PhysicalDeviceSamplerFilterMinmaxPropertiesEXT", Alias, 138),
    ("VkSamplerReductionModeCreateInfoEXT", "SamplerReductionModeCreateInfoEXT", Alias, 139),
    ("VkPhysicalDeviceInlineUniformBlockFeaturesEXT", "PhysicalDeviceInlineUniformBlockFeaturesEXT", Alias, 140),
    ("VkPhysicalDeviceInlineUniformBlockPropertiesEXT", "PhysicalDeviceInlineUniformBlockPropertiesEXT", Alias, 141),
    ("VkWriteDescriptorSetInlineUniformBlockEXT", "WriteDescriptorSetInlineUniformBlockEXT", Alias, 142),
    ("VkDescriptorPoolInlineUniformBlockCreateInfoEXT", "DescriptorPoolInlineUniformBlockCreateInfoEXT", Alias, 143),
    ("VkImageFormatListCreateInfoKHR", "ImageFormatListCreateInfoKHR", Alias, 144),
    ("VkPhysicalDeviceMaintenance3PropertiesKHR", "PhysicalDeviceMaintenance3PropertiesKHR", Alias, 145),
    ("VkPhysicalDeviceMaintenance4FeaturesKHR", "PhysicalDeviceMaintenance4FeaturesKHR", Alias, 146),
    ("VkPhysicalDeviceMaintenance4PropertiesKHR", "PhysicalDeviceMaintenance4PropertiesKHR", Alias, 147),
    ("VkDescriptorSetLayoutSupportKHR", "DescriptorSetLayoutSupportKHR", Alias, 148),
    ("VkPhysicalDeviceShaderDrawParameterFeatures", "PhysicalDeviceShaderDrawParameterFeatures", Alias, 149),
    ("VkPhysicalDeviceShaderFloat16Int8FeaturesKHR", "PhysicalDeviceShaderFloat16Int8FeaturesKHR", Alias, 150),
    ("VkPhysicalDeviceFloat16Int8FeaturesKHR", "PhysicalDeviceFloat16Int8FeaturesKHR", Alias, 151),
    ("VkPhysicalDeviceFloatControlsPropertiesKHR", "PhysicalDeviceFloatControlsPropertiesKHR", Alias, 152),
    ("VkPhysicalDeviceHostQueryResetFeaturesEXT", "PhysicalDeviceHostQueryResetFeaturesEXT", Alias, 153),
    ("VkDeviceQueueGlobalPriorityCreateInfoEXT", "DeviceQueueGlobalPriorityCreateInfoEXT", Alias, 154),
    ("VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT", "PhysicalDeviceGlobalPriorityQueryFeaturesEXT", Alias, 155),
    ("VkQueueFamilyGlobalPriorityPropertiesEXT", "QueueFamilyGlobalPriorityPropertiesEXT", Alias, 156),
    ("VkPhysicalDeviceDescriptorIndexingFeaturesEXT", "PhysicalDeviceDescriptorIndexingFeaturesEXT", Alias, 157),
    ("VkPhysicalDeviceDescriptorIndexingPropertiesEXT", "PhysicalDeviceDescriptorIndexingPropertiesEXT", Alias, 158),
    ("VkDescriptorSetLayoutBindingFlagsCreateInfoEXT", "DescriptorSetLayoutBindingFlagsCreateInfoEXT", Alias, 159),
    ("VkDescriptorSetVariableDescriptorCountAllocateInfoEXT", "DescriptorSetVariableDescriptorCountAllocateInfoEXT", Alias, 160),
    ("VkDescriptorSetVariableDescriptorCountLayoutSupportEXT", "DescriptorSetVariableDescriptorCountLayoutSupportEXT", Alias, 161),
    ("VkAttachmentDescription2KHR", "AttachmentDescription2KHR", Alias, 162),
    ("VkAttachmentReference2KHR", "AttachmentReference2KHR", Alias, 163),
    ("VkSubpassDescription2KHR", "SubpassDescription2KHR", Alias, 164),
    ("VkSubpassDependency2KHR", "SubpassDependency2KHR", Alias, 165),
    ("VkRenderPassCreateInfo2KHR", "RenderPassCreateInfo2KHR", Alias, 166),
    ("VkSubpassBeginInfoKHR", "SubpassBeginInfoKHR", Alias, 167),
    ("VkSubpassEndInfoKHR", "SubpassEndInfoKHR", Alias, 168),
    ("VkPhysicalDeviceTimelineSemaphoreFeaturesKHR", "PhysicalDeviceTimelineSemaphoreFeaturesKHR", Alias, 169),
    ("VkPhysicalDeviceTimelineSemaphorePropertiesKHR", "PhysicalDeviceTimelineSemaphorePropertiesKHR", Alias, 170),
    ("VkSemaphoreTypeCreateInfoKHR", "SemaphoreTypeCreateInfoKHR", Alias, 171),
    ("VkTimelineSemaphoreSubmitInfoKHR", "TimelineSemaphoreSubmitInfoKHR", Alias, 172),
    ("VkSemaphoreWaitInfoKHR", "SemaphoreWaitInfoKHR", Alias, 173),
    ("VkSemaphoreSignalInfoKHR", "SemaphoreSignalInfoKHR", Alias, 174),
    ("VkPhysicalDevice8BitStorageFeaturesKHR", "PhysicalDevice8BitStorageFeaturesKHR", Alias, 175),
    ("VkPhysicalDeviceVulkanMemoryModelFeaturesKHR", "PhysicalDeviceVulkanMemoryModelFeaturesKHR", Alias, 176),
    ("VkPhysicalDeviceShaderAtomicInt64FeaturesKHR", "PhysicalDeviceShaderAtomicInt64FeaturesKHR", Alias, 177),
    ("VkPhysicalDeviceDepthStencilResolvePropertiesKHR", "PhysicalDeviceDepthStencilResolvePropertiesKHR", Alias, 178),
    ("VkSubpassDescriptionDepthStencilResolveKHR", "SubpassDescriptionDepthStencilResolveKHR", Alias, 179),
    ("VkImageStencilUsageCreateInfoEXT", "ImageStencilUsageCreateInfoEXT", Alias, 180),
    ("VkPhysicalDeviceScalarBlockLayoutFeaturesEXT", "PhysicalDeviceScalarBlockLayoutFeaturesEXT", Alias, 181),
    ("VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR", "PhysicalDeviceUniformBufferStandardLayoutFeaturesKHR", Alias, 182),
    ("VkPhysicalDeviceBufferDeviceAddressFeaturesKHR", "PhysicalDeviceBufferDeviceAddressFeaturesKHR", Alias, 183),
    ("VkPhysicalDeviceBufferAddressFeaturesEXT", "PhysicalDeviceBufferAddressFeaturesEXT", Alias, 184),
    ("VkBufferDeviceAddressInfoKHR", "BufferDeviceAddressInfoKHR", Alias, 185),
    ("VkBufferDeviceAddressInfoEXT", "BufferDeviceAddressInfoEXT", Alias, 186),
    ("VkBufferOpaqueCaptureAddressCreateInfoKHR", "BufferOpaqueCaptureAddressCreateInfoKHR", Alias, 187),
    ("VkPhysicalDeviceImagelessFramebufferFeaturesKHR", "PhysicalDeviceImagelessFramebufferFeaturesKHR", Alias, 188),
    ("VkFramebufferAttachmentsCreateInfoKHR", "FramebufferAttachmentsCreateInfoKHR", Alias, 189),
    ("VkFramebufferAttachmentImageInfoKHR", "FramebufferAttachmentImageInfoKHR", Alias, 190),
    ("VkRenderPassAttachmentBeginInfoKHR", "RenderPassAttachmentBeginInfoKHR", Alias, 191),
    ("VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT", "PhysicalDeviceTextureCompressionAstchdrFeaturesEXT", Alias, 192),
    ("VkPipelineCreationFeedbackEXT", "PipelineCreationFeedbackEXT", Alias, 193),
    ("VkPipelineCreationFeedbackCreateInfoEXT", "PipelineCreationFeedbackCreateInfoEXT", Alias, 194),
    ("VkQueryPoolCreateInfoINTEL", "QueryPoolCreateInfoINTEL", Alias, 195),
    ("VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR", "PhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR", Alias, 196),
    ("VkAttachmentReferenceStencilLayoutKHR", "AttachmentReferenceStencilLayoutKHR", Alias, 197),
    ("VkAttachmentDescriptionStencilLayoutKHR", "AttachmentDescriptionStencilLayoutKHR", Alias, 198),
    ("VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT", "PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT", Alias, 199),
    ("VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT", "PhysicalDeviceTexelBufferAlignmentPropertiesEXT", Alias, 200),
    ("VkPhysicalDeviceSubgroupSizeControlFeaturesEXT", "PhysicalDeviceSubgroupSizeControlFeaturesEXT", Alias, 201),
    ("VkPhysicalDeviceSubgroupSizeControlPropertiesEXT", "PhysicalDeviceSubgroupSizeControlPropertiesEXT", Alias, 202),
    ("VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT", "PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT", Alias, 203),
    ("VkMemoryOpaqueCaptureAddressAllocateInfoKHR", "MemoryOpaqueCaptureAddressAllocateInfoKHR", Alias, 204),
    ("VkDeviceMemoryOpaqueCaptureAddressInfoKHR", "DeviceMemoryOpaqueCaptureAddressInfoKHR", Alias, 205),
    ("VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT", "PhysicalDevicePipelineCreationCacheControlFeaturesEXT", Alias, 206),
    ("VkPhysicalDeviceToolPropertiesEXT", "PhysicalDeviceToolPropertiesEXT", Alias, 207),
    ("VkAabbPositionsNV", "AabbPositionsNV", Alias, 208),
    ("VkTransformMatrixNV", "TransformMatrixNV", Alias, 209),
    ("VkAccelerationStructureInstanceNV", "AccelerationStructureInstanceNV", Alias, 210),
    ("VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR", "PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR", Alias, 211),
    ("VkPhysicalDeviceImageRobustnessFeaturesEXT", "PhysicalDeviceImageRobustnessFeaturesEXT", Alias, 212),
    ("VkBufferCopy2KHR", "BufferCopy2KHR", Alias, 213),
    ("VkImageCopy2KHR", "ImageCopy2KHR", Alias, 214),
    ("VkImageBlit2KHR", "ImageBlit2KHR", Alias, 215),
    ("VkBufferImageCopy2KHR", "BufferImageCopy2KHR", Alias, 216),
    ("VkImageResolve2KHR", "ImageResolve2KHR", Alias, 217),
    ("VkCopyBufferInfo2KHR", "CopyBufferInfo2KHR", Alias, 218),
    ("VkCopyImageInfo2KHR", "CopyImageInfo2KHR", Alias, 219),
    ("VkBlitImageInfo2KHR", "BlitImageInfo2KHR", Alias, 220),
    ("VkCopyBufferToImageInfo2KHR", "CopyBufferToImageInfo2KHR", Alias, 221),
    ("VkCopyImageToBufferInfo2KHR", "CopyImageToBufferInfo2KHR", Alias, 222),
    ("VkResolveImageInfo2KHR", "ResolveImageInfo2KHR", Alias, 223),
    ("VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR", "PhysicalDeviceShaderTerminateInvocationFeaturesKHR", Alias, 224),
    ("VkMemoryBarrier2KHR", "MemoryBarrier2KHR", Alias, 225),
    ("VkImageMemoryBarrier2KHR", "ImageMemoryBarrier2KHR", Alias, 226),
    ("VkBufferMemoryBarrier2KHR", "BufferMemoryBarrier2KHR", Alias, 227),
    ("VkDependencyInfoKHR", "DependencyInfoKHR", Alias, 228),
    ("VkSemaphoreSubmitInfoKHR", "SemaphoreSubmitInfoKHR", Alias, 229),
    ("VkCommandBufferSubmitInfoKHR", "CommandBufferSubmitInfoKHR", Alias, 230),
    ("VkSubmitInfo2KHR", "SubmitInfo2KHR", Alias, 231),
    ("VkPhysicalDeviceSynchronization2FeaturesKHR", "PhysicalDeviceSynchronization2FeaturesKHR", Alias, 232),
    ("VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR", "PhysicalDeviceShaderIntegerDotProductFeaturesKHR", Alias, 233),
    ("VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR", "PhysicalDeviceShaderIntegerDotProductPropertiesKHR", Alias, 234),
    ("VkFormatProperties3KHR", "FormatProperties3KHR", Alias, 235),
    ("VkPipelineRenderingCreateInfoKHR", "PipelineRenderingCreateInfoKHR", Alias, 236),
    ("VkRenderingInfoKHR", "RenderingInfoKHR", Alias, 237),
    ("VkRenderingAttachmentInfoKHR", "RenderingAttachmentInfoKHR", Alias, 238),
    ("VkPhysicalDeviceDynamicRenderingFeaturesKHR", "PhysicalDeviceDynamicRenderingFeaturesKHR", Alias, 239),
    ("VkCommandBufferInheritanceRenderingInfoKHR", "CommandBufferInheritanceRenderingInfoKHR", Alias, 240),
    ("VkAttachmentSampleCountInfoNV", "AttachmentSampleCountInfoNV", Alias, 241),
    ("Display", "Display", Opaque, 0),
    ("VisualID", "VisualID", Opaque, 1),
    ("Window", "Window", Opaque, 2),
    ("RROutput", "RROutput", Opaque, 3),
    ("wl_display", "wl_display", Opaque, 4),
    ("wl_surface", "wl_surface", Opaque, 5),
    ("HINSTANCE", "HINSTANCE", Opaque, 6),
    ("HWND", "HWND", Opaque, 7),
    ("HMONITOR", "HMONITOR", Opaque, 8),
    ("HANDLE", "HANDLE", Opaque, 9),
    ("SECURITY_ATTRIBUTES", "SECURITY_ATTRIBUTES", Opaque, 10),
    ("DWORD", "DWORD", Opaque, 11),
    ("LPCWSTR", "LPCWSTR", Opaque, 12),
    ("xcb_connection_t", "xcb_connection_t", Opaque, 13),
    ("xcb_visualid_t", "xcb_visualid_t", Opaque, 14),
    ("xcb_window_t", "xcb_window_t", Opaque, 15),
    ("IDirectFB", "IDirectFB", Opaque, 16),
    ("IDirectFBSurface", "IDirectFBSurface", Opaque, 17),
    ("zx_handle_t", "zx_handle_t", Opaque, 18),
    ("GgpStreamDescriptor", "GgpStreamDescriptor", Opaque, 19),
    ("GgpFrameToken", "GgpFrameToken", Opaque, 20),
    ("_screen_context", "_screen_context", Opaque, 21),
    ("_screen_window", "_screen_window", Opaque, 22),
    ("VK_LUID_SIZE_KHR", "LUID_SIZE_KHR", ConstantAlias, 0),
    ("VK_QUEUE_FAMILY_EXTERNAL_KHR", "QUEUE_FAMILY_EXTERNAL_KHR", ConstantAlias, 1),
    ("VK_MAX_DEVICE_GROUP_SIZE_KHR", "MAX_DEVICE_GROUP_SIZE_KHR", ConstantAlias, 2),
    ("VK_MAX_DRIVER_NAME_SIZE_KHR", "MAX_DRIVER_NAME_SIZE_KHR", ConstantAlias, 3),
    ("VK_MAX_DRIVER_INFO_SIZE_KHR", "MAX_DRIVER_INFO_SIZE_KHR", ConstantAlias, 4),
    ("VK_SHADER_UNUSED_NV", "SHADER_UNUSED_NV", ConstantAlias, 5),
    ("VK_MAX_GLOBAL_PRIORITY_SIZE_EXT", "MAX_GLOBAL_PRIORITY_SIZE_EXT", ConstantAlias, 6),
    ("VK_MAX_PHYSICAL_DEVICE_NAME_SIZE", "MAX_PHYSICAL_DEVICE_NAME_SIZE", Constant, 0),
    ("VK_UUID_SIZE", "UUID_SIZE", Constant, 1),
    ("VK_LUID_SIZE", "LUID_SIZE", Constant, 2),
    ("VK_MAX_EXTENSION_NAME_SIZE", "MAX_EXTENSION_NAME_SIZE", Constant, 3),
    ("VK_MAX_DESCRIPTION_SIZE", "MAX_DESCRIPTION_SIZE", Constant, 4),
    ("VK_MAX_MEMORY_TYPES", "MAX_MEMORY_TYPES", Constant, 5),
    ("VK_MAX_MEMORY_HEAPS", "MAX_MEMORY_HEAPS", Constant, 6),
    ("VK_LOD_CLAMP_NONE", "LOD_CLAMP_NONE", Constant, 7),
    ("VK_REMAINING_MIP_LEVELS", "REMAINING_MIP_LEVELS", Constant, 8),
    ("VK_REMAINING_ARRAY_LAYERS", "REMAINING_ARRAY_LAYERS", Constant, 9),
    ("VK_WHOLE_SIZE", "WHOLE_SIZE", Constant, 10),
    ("VK_ATTACHMENT_UNUSED", "ATTACHMENT_UNUSED", Constant, 11),
    ("VK_TRUE", "TRUE", Constant, 12),
    ("VK_FALSE", "FALSE", Constant, 13),
    ("VK_QUEUE_FAMILY_IGNORED", "QUEUE_FAMILY_IGNORED", Constant, 14),
    ("VK_QUEUE_FAMILY_EXTERNAL", "QUEUE_FAMILY_EXTERNAL", Constant, 15),
    ("VK_QUEUE_FAMILY_FOREIGN_EXT", "QUEUE_FAMILY_FOREIGN_EXT", Constant, 16),
    ("VK_SUBPASS_EXTERNAL", "SUBPASS_EXTERNAL", Constant, 17),
    ("VK_MAX_DEVICE_GROUP_SIZE", "MAX_DEVICE_GROUP_SIZE", Constant, 18),
    ("VK_MAX_DRIVER_NAME_SIZE", "MAX_DRIVER_NAME_SIZE", Constant, 19),
    ("VK_MAX_DRIVER_INFO_SIZE", "MAX_DRIVER_INFO_SIZE", Constant, 20),
    ("VK_SHADER_UNUSED_KHR", "SHADER_UNUSED_KHR", Constant, 21),
    ("VK_MAX_GLOBAL_PRIORITY_SIZE_KHR", "MAX_GLOBAL_PRIORITY_SIZE_KHR", Constant, 22),
    ("VkImageLayout", "ImageLayout", Enum, 0),
    ("VkAttachmentLoadOp", "AttachmentLoadOp", Enum, 1),
    ("VkAttachmentStoreOp", "AttachmentStoreOp", Enum, 2),
    ("VkImageType", "ImageType", Enum, 3),
    ("VkImageTiling", "ImageTiling", Enum, 4),
    ("VkImageViewType", "ImageViewType", Enum, 5),
    ("VkCommandBufferLevel", "CommandBufferLevel", Enum, 6),
    ("VkComponentSwizzle", "ComponentSwizzle", Enum, 7),
    ("VkDescriptorType", "DescriptorType", Enum, 8),
    ("VkQueryType", "QueryType", Enum, 9),
    ("VkBorderColor", "BorderColor", Enum, 10),
    ("VkPipelineBindPoint", "PipelineBindPoint", Enum, 11),
    ("VkPipelineCacheHeaderVersion", "PipelineCacheHeaderVersion", Enum, 12),
    ("VkPipelineCacheCreateFlagBits", "PipelineCacheCreateFlagBits", Bitflag, 0),
    ("VkPrimitiveTopology", "PrimitiveTopology", Enum, 13),
    ("VkSharingMode", "SharingMode", Enum, 14),
    ("VkIndexType", "IndexType", Enum, 15),
    ("VkFilter", "Filter", Enum, 16),
    ("VkSamplerMipmapMode", "SamplerMipmapMode", Enum, 17),
    ("VkSamplerAddressMode", "SamplerAddressMode", Enum, 18),
    ("VkCompareOp", "CompareOp", Enum, 19),
    ("VkPolygonMode", "PolygonMode", Enum, 20),
    ("VkFrontFace", "FrontFace", Enum, 21),
    ("VkBlendFactor", "BlendFactor", Enum, 22),
    ("VkBlendOp", "BlendOp", Enum, 23),
    ("VkStencilOp", "StencilOp", Enum, 24),
    ("VkLogicOp", "LogicOp", Enum, 25),
    ("VkInternalAllocationType", "InternalAllocationType", Enum, 26),
    ("VkSystemAllocationScope", "SystemAllocationScope", Enum, 27),
    ("VkPhysicalDeviceType", "PhysicalDeviceType", Enum, 28),
    ("VkVertexInputRate", "VertexInputRate", Enum, 29),
    ("VkFormat", "Format", Enum, 30),
    ("VkStructureType", "StructureType", Enum, 31),
    ("VkSubpassContents", "SubpassContents", Enum, 32),
    ("VkResult", "VulkanResultCodes", Enum, 33),
    ("VkDynamicState", "DynamicState", Enum, 34),
    ("VkDescriptorUpdateTemplateType", "DescriptorUpdateTemplateType", Enum, 35),
    ("VkObjectType", "ObjectType", Enum, 36),
    ("VkQueueFlagBits", "QueueFlagBits", Bitflag, 1),
    ("VkCullModeFlagBits", "CullModeFlagBits", Bitflag, 2),
    ("VkRenderPassCreateFlagBits", "RenderPassCreateFlagBits", Bitflag, 3),
    ("VkDeviceQueueCreateFlagBits", "DeviceQueueCreateFlagBits", Bitflag, 4),
    ("VkMemoryPropertyFlagBits", "MemoryPropertyFlagBits", Bitflag, 5),
    ("VkMemoryHeapFlagBits", "MemoryHeapFlagBits", Bitflag, 6),
    ("VkAccessFlagBits", "AccessFlagBits", Bitflag, 7),
    ("VkBufferUsageFlagBits", "BufferUsageFlagBits", Bitflag, 8),
    ("VkBufferCreateFlagBits", "BufferCreateFlagBits", Bitflag, 9),
    ("VkShaderStageFlagBits", "ShaderStageFlagBits", Bitflag, 10),
    ("VkImageUsageFlagBits", "ImageUsageFlagBits", Bitflag, 11),
    ("VkImageCreateFlagBits", "ImageCreateFlagBits", Bitflag, 12),
    ("VkImageViewCreateFlagBits", "ImageViewCreateFlagBits", Bitflag, 13),
    ("VkSamplerCreateFlagBits", "SamplerCreateFlagBits", Bitflag, 14),
    ("VkPipelineCreateFlagBits", "PipelineCreateFlagBits", Bitflag, 15),
    ("VkPipelineShaderStageCreateFlagBits", "PipelineShaderStageCreateFlagBits", Bitflag, 16),
    ("VkColorComponentFlagBits", "ColorComponentFlagBits", Bitflag, 17),
    ("VkFenceCreateFlagBits", "FenceCreateFlagBits", Bitflag, 18),
    ("VkSemaphoreCreateFlagBits", "SemaphoreCreateFlagBits", Bitflag, 19),
    ("VkFormatFeatureFlagBits", "FormatFeatureFlagBits", Bitflag, 20),
    ("VkQueryControlFlagBits", "QueryControlFlagBits", Bitflag, 21),
    ("VkQueryResultFlagBits", "QueryResultFlagBits", Bitflag, 22),
    ("VkCommandBufferUsageFlagBits", "CommandBufferUsageFlagBits", Bitflag, 23),
    ("VkQueryPipelineStatisticFlagBits", "QueryPipelineStatisticFlagBits", Bitflag, 24),
    ("VkImageAspectFlagBits", "ImageAspectFlagBits", Bitflag, 25),
    ("VkSparseImageFormatFlagBits", "SparseImageFormatFlagBits", Bitflag, 26),
    ("VkSparseMemoryBindFlagBits", "SparseMemoryBindFlagBits", Bitflag, 27),
    ("VkPipelineStageFlagBits", "PipelineStageFlagBits", Bitflag, 28),
    ("VkCommandPoolCreateFlagBits", "CommandPoolCreateFlagBits", Bitflag, 29),
    ("VkCommandPoolResetFlagBits", "CommandPoolResetFlagBits", Bitflag, 30),
    ("VkCommandBufferResetFlagBits", "CommandBufferResetFlagBits", Bitflag, 31),
    ("VkSampleCountFlagBits", "SampleCountFlagBits", Bitflag, 32),
    ("VkAttachmentDescriptionFlagBits", "AttachmentDescriptionFlagBits", Bitflag, 33),
    ("VkStencilFaceFlagBits", "StencilFaceFlagBits", Bitflag, 34),
    ("VkDescriptorPoolCreateFlagBits", "DescriptorPoolCreateFlagBits", Bitflag, 35),
    ("VkDependencyFlagBits", "DependencyFlagBits", Bitflag, 36),
    ("VkSemaphoreType", "SemaphoreType", Enum, 37),
    ("VkSemaphoreWaitFlagBits", "SemaphoreWaitFlagBits", Bitflag, 37),
    ("VkPresentModeKHR", "PresentModeKHR", Enum, 38),
    ("VkColorSpaceKHR", "ColorSpaceKHR", Enum, 39),
    ("VkDisplayPlaneAlphaFlagBitsKHR", "DisplayPlaneAlphaFlagBitsKHR", Bitflag, 38),
    ("VkCompositeAlphaFlagBitsKHR", "CompositeAlphaFlagBitsKHR", Bitflag, 39),
    ("VkSurfaceTransformFlagBitsKHR", "SurfaceTransformFlagBitsKHR", Bitflag, 40),
    ("VkSwapchainImageUsageFlagBitsANDROID", "SwapchainImageUsageFlagBitsANDROID", Bitflag, 41),
    ("VkTimeDomainEXT", "TimeDomainEXT", Enum, 40),
    ("VkDebugReportFlagBitsEXT", "DebugReportFlagBitsEXT", Bitflag, 42),
    ("VkDebugReportObjectTypeEXT", "DebugReportObjectTypeEXT", Enum, 41),
    ("VkDeviceMemoryReportEventTypeEXT", "DeviceMemoryReportEventTypeEXT", Enum, 42),
    ("VkRasterizationOrderAMD", "RasterizationOrderAMD", Enum, 43),
    ("VkExternalMemoryHandleTypeFlagBitsNV", "ExternalMemoryHandleTypeFlagBitsNV", Bitflag, 43),
    ("VkExternalMemoryFeatureFlagBitsNV", "ExternalMemoryFeatureFlagBitsNV", Bitflag, 44),
    ("VkValidationCheckEXT", "ValidationCheckEXT", Enum, 44),
    ("VkValidationFeatureEnableEXT", "ValidationFeatureEnableEXT", Enum, 45),
    ("VkValidationFeatureDisableEXT", "ValidationFeatureDisableEXT", Enum, 46),
    ("VkSubgroupFeatureFlagBits", "SubgroupFeatureFlagBits", Bitflag, 45),
    ("VkIndirectCommandsLayoutUsageFlagBitsNV", "IndirectCommandsLayoutUsageFlagBitsNV", Bitflag, 46),
    ("VkIndirectStateFlagBitsNV", "IndirectStateFlagBitsNV", Bitflag, 47),
    ("VkIndirectCommandsTokenTypeNV", "IndirectCommandsTokenTypeNV", Enum, 47),
    ("VkPrivateDataSlotCreateFlagBits", "PrivateDataSlotCreateFlagBits", Bitflag, 48),
    ("VkDescriptorSetLayoutCreateFlagBits", "DescriptorSetLayoutCreateFlagBits", Bitflag, 49),
    ("VkExternalMemoryHandleTypeFlagBits", "ExternalMemoryHandleTypeFlagBits", Bitflag, 50),
    ("VkExternalMemoryFeatureFlagBits", "ExternalMemoryFeatureFlagBits", Bitflag, 51),
    ("VkExternalSemaphoreHandleTypeFlagBits", "ExternalSemaphoreHandleTypeFlagBits", Bitflag, 52),
    ("VkExternalSemaphoreFeatureFlagBits", "ExternalSemaphoreFeatureFlagBits", Bitflag, 53),
    ("VkSemaphoreImportFlagBits", "SemaphoreImportFlagBits", Bitflag, 54),
    ("VkExternalFenceHandleTypeFlagBits", "ExternalFenceHandleTypeFlagBits", Bitflag, 55),
    ("VkExternalFenceFeatureFlagBits", "ExternalFenceFeatureFlagBits", Bitflag, 56),
    ("VkFenceImportFlagBits", "FenceImportFlagBits", Bitflag, 57),
    ("VkSurfaceCounterFlagBitsEXT", "SurfaceCounterFlagBitsEXT", Bitflag, 58),
    ("VkDisplayPowerStateEXT", "DisplayPowerStateEXT", Enum, 48),
    ("VkDeviceEventTypeEXT", "DeviceEventTypeEXT", Enum, 49),
    ("VkDisplayEventTypeEXT", "DisplayEventTypeEXT", Enum, 50),
    ("VkPeerMemoryFeatureFlagBits", "PeerMemoryFeatureFlagBits", Bitflag, 59),
    ("VkMemoryAllocateFlagBits", "MemoryAllocateFlagBits", Bitflag, 60),
    ("VkDeviceGroupPresentModeFlagBitsKHR", "DeviceGroupPresentModeFlagBitsKHR", Bitflag, 61),
    ("VkSwapchainCreateFlagBitsKHR", "SwapchainCreateFlagBitsKHR", Bitflag, 62),
    ("VkViewportCoordinateSwizzleNV", "ViewportCoordinateSwizzleNV", Enum, 51),
    ("VkDiscardRectangleModeEXT", "DiscardRectangleModeEXT", Enum, 52),
    ("VkSubpassDescriptionFlagBits", "SubpassDescriptionFlagBits", Bitflag, 63),
    ("VkPointClippingBehavior", "PointClippingBehavior", Enum, 53),
    ("VkSamplerReductionMode", "SamplerReductionMode", Enum, 54),
    ("VkTessellationDomainOrigin", "TessellationDomainOrigin", Enum, 55),
    ("VkSamplerYcbcrModelConversion", "SamplerYcbcrModelConversion", Enum, 56),
    ("VkSamplerYcbcrRange", "SamplerYcbcrRange", Enum, 57),
    ("VkChromaLocation", "ChromaLocation", Enum, 58),
    ("VkBlendOverlapEXT", "BlendOverlapEXT", Enum, 59),
    ("VkCoverageModulationModeNV", "CoverageModulationModeNV", Enum, 60),
    ("VkCoverageReductionModeNV", "CoverageReductionModeNV", Enum, 61),
    ("VkValidationCacheHeaderVersionEXT", "ValidationCacheHeaderVersionEXT", Enum, 62),
    ("VkShaderInfoTypeAMD", "ShaderInfoTypeAMD", Enum, 63),
    ("VkQueueGlobalPriorityKHR", "QueueGlobalPriorityKHR", Enum, 64),
    ("VkDebugUtilsMessageSeverityFlagBitsEXT", "DebugUtilsMessageSeverityFlagBitsEXT", Bitflag, 64),
    ("VkDebugUtilsMessageTypeFlagBitsEXT", "DebugUtilsMessageTypeFlagBitsEXT", Bitflag, 65),
    ("VkConservativeRasterizationModeEXT", "ConservativeRasterizationModeEXT", Enum, 65),
    ("VkDescriptorBindingFlagBits", "DescriptorBindingFlagBits", Bitflag, 66),
    ("VkVendorId", "VendorId", Enum, 66),
    ("VkDriverId", "DriverId", Enum, 67),
    ("VkConditionalRenderingFlagBitsEXT", "ConditionalRenderingFlagBitsEXT", Bitflag, 67),
    ("VkResolveModeFlagBits", "ResolveModeFlagBits", Bitflag, 68),
    ("VkShadingRatePaletteEntryNV", "ShadingRatePaletteEntryNV", Enum, 68),
    ("VkCoarseSampleOrderTypeNV", "CoarseSampleOrderTypeNV", Enum, 69),
    ("VkGeometryInstanceFlagBitsKHR", "GeometryInstanceFlagBitsKHR", Bitflag, 69),
    ("VkGeometryFlagBitsKHR", "GeometryFlagBitsKHR", Bitflag, 70),
    ("VkBuildAccelerationStructureFlagBitsKHR", "BuildAccelerationStructureFlagBitsKHR", Bitflag, 71),
    ("VkAccelerationStructureCreateFlagBitsKHR", "AccelerationStructureCreateFlagBitsKHR", Bitflag, 72),
    ("VkCopyAccelerationStructureModeKHR", "CopyAccelerationStructureModeKHR", Enum, 70),
    ("VkBuildAccelerationStructureModeKHR", "BuildAccelerationStructureModeKHR", Enum, 71),
    ("VkAccelerationStructureTypeKHR", "AccelerationStructureTypeKHR", Enum, 72),
    ("VkGeometryTypeKHR", "GeometryTypeKHR", Enum, 73),
    ("VkAccelerationStructureMemoryRequirementsTypeNV", "AccelerationStructureMemoryRequirementsTypeNV", Enum, 74),
    ("VkAccelerationStructureBuildTypeKHR", "AccelerationStructureBuildTypeKHR", Enum, 75),
    ("VkRayTracingShaderGroupTypeKHR", "RayTracingShaderGroupTypeKHR", Enum, 76),
    ("VkAccelerationStructureCompatibilityKHR", "AccelerationStructureCompatibilityKHR", Enum, 77),
    ("VkShaderGroupShaderKHR", "ShaderGroupShaderKHR", Enum, 78),
    ("VkMemoryOverallocationBehaviorAMD", "MemoryOverallocationBehaviorAMD", Enum, 79),
    ("VkFramebufferCreateFlagBits", "FramebufferCreateFlagBits", Bitflag, 73),
    ("VkScopeNV", "ScopeNV", Enum, 80),
    ("VkComponentTypeNV", "ComponentTypeNV", Enum, 81),
    ("VkDeviceDiagnosticsConfigFlagBitsNV", "DeviceDiagnosticsConfigFlagBitsNV", Bitflag, 74),
    ("VkPipelineCreationFeedbackFlagBits", "PipelineCreationFeedbackFlagBits", Bitflag, 75),
    ("VkFullScreenExclusiveEXT", "FullScreenExclusiveEXT", Enum, 82),
    ("VkPerformanceCounterScopeKHR", "PerformanceCounterScopeKHR", Enum, 83),
    ("VkPerformanceCounterUnitKHR", "PerformanceCounterUnitKHR", Enum, 84),
    ("VkPerformanceCounterStorageKHR", "PerformanceCounterStorageKHR", Enum, 85),
    ("VkPerformanceCounterDescriptionFlagBitsKHR", "PerformanceCounterDescriptionFlagBitsKHR", Bitflag, 76),
    ("VkAcquireProfilingLockFlagBitsKHR", "AcquireProfilingLockFlagBitsKHR", Bitflag, 77),
    ("VkShaderCorePropertiesFlagBitsAMD", "ShaderCorePropertiesFlagBitsAMD", Bitflag, 78),
    ("VkPerformanceConfigurationTypeINTEL", "PerformanceConfigurationTypeINTEL", Enum, 86),
    ("VkQueryPoolSamplingModeINTEL", "QueryPoolSamplingModeINTEL", Enum, 87),
    ("VkPerformanceOverrideTypeINTEL", "PerformanceOverrideTypeINTEL", Enum, 88),
    ("VkPerformanceParameterTypeINTEL", "PerformanceParameterTypeINTEL", Enum, 89),
    ("VkPerformanceValueTypeINTEL", "PerformanceValueTypeINTEL", Enum, 90),
    ("VkShaderFloatControlsIndependence", "ShaderFloatControlsIndependence", Enum, 91),
    ("VkPipelineExecutableStatisticFormatKHR", "PipelineExecutableStatisticFormatKHR", Enum, 92),
    ("VkLineRasterizationModeEXT", "LineRasterizationModeEXT", Enum, 93),
    ("VkShaderModuleCreateFlagBits", "ShaderModuleCreateFlagBits", Bitflag, 79),
    ("VkPipelineCompilerControlFlagBitsAMD", "PipelineCompilerControlFlagBitsAMD", Bitflag, 80),
    ("VkToolPurposeFlagBits", "ToolPurposeFlagBits", Bitflag, 81),
    ("VkFragmentShadingRateCombinerOpKHR", "FragmentShadingRateCombinerOpKHR", Enum, 94),
    ("VkFragmentShadingRateNV", "FragmentShadingRateNV", Enum, 95),
    ("VkFragmentShadingRateTypeNV", "FragmentShadingRateTypeNV", Enum, 96),
    ("VkAccessFlagBits2", "AccessFlagBits2", Bitflag, 82),
    ("VkPipelineStageFlagBits2", "PipelineStageFlagBits2", Bitflag, 83),
    ("VkSubmitFlagBits", "SubmitFlagBits", Bitflag, 84),
    ("VkEventCreateFlagBits", "EventCreateFlagBits", Bitflag, 85),
    ("VkPipelineLayoutCreateFlagBits", "PipelineLayoutCreateFlagBits", Bitflag, 86),
    ("VkProvokingVertexModeEXT", "ProvokingVertexModeEXT", Enum, 97),
    ("VkAccelerationStructureMotionInstanceTypeNV", "AccelerationStructureMotionInstanceTypeNV", Enum, 98),
    ("VkPipelineColorBlendStateCreateFlagBits", "PipelineColorBlendStateCreateFlagBits", Bitflag, 87),
    ("VkPipelineDepthStencilStateCreateFlagBits", "PipelineDepthStencilStateCreateFlagBits", Bitflag, 88),
    ("VkVideoCodecOperationFlagBitsKHR", "VideoCodecOperationFlagBitsKHR", Bitflag, 89),
    ("VkVideoChromaSubsamplingFlagBitsKHR", "VideoChromaSubsamplingFlagBitsKHR", Bitflag, 90),
    ("VkVideoComponentBitDepthFlagBitsKHR", "VideoComponentBitDepthFlagBitsKHR", Bitflag, 91),
    ("VkVideoCapabilityFlagBitsKHR", "VideoCapabilityFlagBitsKHR", Bitflag, 92),
    ("VkVideoSessionCreateFlagBitsKHR", "VideoSessionCreateFlagBitsKHR", Bitflag, 93),
    ("VkVideoCodingQualityPresetFlagBitsKHR", "VideoCodingQualityPresetFlagBitsKHR", Bitflag, 94),
    ("VkVideoDecodeH264PictureLayoutFlagBitsEXT", "VideoDecodeH264PictureLayoutFlagBitsEXT", Bitflag, 95),
    ("VkVideoCodingControlFlagBitsKHR", "VideoCodingControlFlagBitsKHR", Bitflag, 96),
    ("VkQueryResultStatusKHR", "QueryResultStatusKHR", Enum, 99),
    ("VkVideoDecodeCapabilityFlagBitsKHR", "VideoDecodeCapabilityFlagBitsKHR", Bitflag, 97),
    ("VkVideoDecodeFlagBitsKHR", "VideoDecodeFlagBitsKHR", Bitflag, 98),
    ("VkVideoEncodeFlagBitsKHR", "VideoEncodeFlagBitsKHR", Bitflag, 99),
    ("VkVideoEncodeCapabilityFlagBitsKHR", "VideoEncodeCapabilityFlagBitsKHR", Bitflag, 100),
    ("VkVideoEncodeRateControlFlagBitsKHR", "VideoEncodeRateControlFlagBitsKHR", Bitflag, 101),
    ("VkVideoEncodeRateControlModeFlagBitsKHR", "VideoEncodeRateControlModeFlagBitsKHR", Bitflag, 102),
    ("VkVideoEncodeH264CapabilityFlagBitsEXT", "VideoEncodeH264CapabilityFlagBitsEXT", Bitflag, 103),
    ("VkVideoEncodeH264InputModeFlagBitsEXT", "VideoEncodeH264InputModeFlagBitsEXT", Bitflag, 104),
    ("VkVideoEncodeH264OutputModeFlagBitsEXT", "VideoEncodeH264OutputModeFlagBitsEXT", Bitflag, 105),
    ("VkVideoEncodeH264RateControlStructureFlagBitsEXT", "VideoEncodeH264RateControlStructureFlagBitsEXT", Bitflag, 106),
    ("VkImageFormatConstraintsFlagBitsFUCHSIA", "ImageFormatConstraintsFlagBitsFUCHSIA", Bitflag, 107),
    ("VkImageConstraintsInfoFlagBitsFUCHSIA", "ImageConstraintsInfoFlagBitsFUCHSIA", Bitflag, 108),
    ("VkFormatFeatureFlagBits2", "FormatFeatureFlagBits2", Bitflag, 109),
    ("VkRenderingFlagBits", "RenderingFlagBits", Bitflag, 110),
    ("VkVideoEncodeH265CapabilityFlagBitsEXT", "VideoEncodeH265CapabilityFlagBitsEXT", Bitflag, 111),
    ("VkVideoEncodeH265InputModeFlagBitsEXT", "VideoEncodeH265InputModeFlagBitsEXT", Bitflag, 112),
    ("VkVideoEncodeH265OutputModeFlagBitsEXT", "VideoEncodeH265OutputModeFlagBitsEXT", Bitflag, 113),
    ("VkVideoEncodeH265RateControlStructureFlagBitsEXT", "VideoEncodeH265RateControlStructureFlagBitsEXT", Bitflag, 114),
    ("VkVideoEncodeH265CtbSizeFlagBitsEXT", "VideoEncodeH265CtbSizeFlagBitsEXT", Bitflag, 115),
    ("VkVideoEncodeH265TransformBlockSizeFlagBitsEXT", "VideoEncodeH265TransformBlockSizeFlagBitsEXT", Bitflag, 116),
    ("VkInstanceCreateFlagBits", "InstanceCreateFlagBits", Bitflag, 117),
    ("vkCmdBindPipeline", "cmd_bind_pipeline", Command, 0),
    ("vkCmdSetViewport", "cmd_set_viewport", Command, 1),
    ("vkCmdSetScissor", "cmd_set_scissor", Command, 2),
    ("vkCmdSetLineWidth", "cmd_set_line_width", Command, 3),
    ("vkCmdSetDepthBias", "cmd_set_depth_bias", Command, 4),
    ("vkCmdSetBlendConstants", "cmd_set_blend_constants", Command, 5),
    ("vkCmdSetDepthBounds", "cmd_set_depth_bounds", Command, 6),
    ("vkCmdSetStencilCompareMask", "cmd_set_stencil_compare_mask", Command, 7),
    ("vkCmdSetStencilWriteMask", "cmd_set_stencil_write_mask", Command, 8),
    ("vkCmdSetStencilReference", "cmd_set_stencil_reference", Command, 9),
    ("vkCmdBindDescriptorSets", "cmd_bind_descriptor_sets", Command, 10),
    ("vkCmdBindIndexBuffer", "cmd_bind_index_buffer", Command, 11),
    ("vkCmdBindVertexBuffers", "cmd_bind_vertex_buffers", Command, 12),
    ("vkCmdDraw", "cmd_draw", Command, 13),
    ("vkCmdDrawIndexed", "cmd_draw_indexed", Command, 14),
    ("vkCmdDrawMultiEXT", "cmd_draw_multi_ext", Command, 15),
    ("vkCmdDrawMultiIndexedEXT", "cmd_draw_multi_indexed_ext", Command, 16),
    ("vkCmdDrawIndirect", "cmd_draw_indirect", Command, 17),
    ("vkCmdDrawIndexedIndirect", "cmd_draw_indexed_indirect", Command, 18),
    ("vkCmdDispatch", "cmd_dispatch", Command, 19),
    ("vkCmdDispatchIndirect", "cmd_dispatch_indirect", Command, 20),
    ("vkCmdSubpassShadingHUAWEI", "cmd_subpass_shading_huawei", Command, 21),
    ("vkCmdCopyBuffer", "cmd_copy_buffer", Command, 22),
    ("vkCmdCopyImage", "cmd_copy_image", Command, 23),
    ("vkCmdBlitImage", "cmd_blit_image", Command, 24),
    ("vkCmdCopyBufferToImage", "cmd_copy_buffer_to_image", Command, 25),
    ("vkCmdCopyImageToBuffer", "cmd_copy_image_to_buffer", Command, 26),
    ("vkCmdUpdateBuffer", "cmd_update_buffer", Command, 27),
    ("vkCmdFillBuffer", "cmd_fill_buffer", Command, 28),
    ("vkCmdClearColorImage", "cmd_clear_color_image", Command, 29),
    ("vkCmdClearDepthStencilImage", "cmd_clear_depth_stencil_image", Command, 30),
    ("vkCmdClearAttachments", "cmd_clear_attachments", Command, 31),
    ("vkCmdResolveImage", "cmd_resolve_image", Command, 32),
    ("vkCmdSetEvent", "cmd_set_event", Command, 33),
    ("vkCmdResetEvent", "cmd_reset_event", Command, 34),
    ("vkCmdWaitEvents", "cmd_wait_events", Command, 35),
    ("vkCmdPipelineBarrier", "cmd_pipeline_barrier", Command, 36),
    ("vkCmdBeginQuery", "cmd_begin_query", Command, 37),
    ("vkCmdEndQuery", "cmd_end_query", Command, 38),
    ("vkCmdBeginConditionalRenderingEXT", "cmd_begin_conditional_rendering_ext", Command, 39),
    ("vkCmdEndConditionalRenderingEXT", "cmd_end_conditional_rendering_ext", Command, 40),
    ("vkCmdResetQueryPool", "cmd_reset_query_pool", Command, 41),
    ("vkCmdWriteTimestamp", "cmd_write_timestamp", Command, 42),
    ("vkCmdCopyQueryPoolResults", "cmd_copy_query_pool_results", Command, 43),
    ("vkCmdPushConstants", "cmd_push_constants", Command, 44),
    ("vkCmdBeginRenderPass", "cmd_begin_render_pass", Command, 45),
    ("vkCmdNextSubpass", "cmd_next_subpass", Command, 46),
    ("vkCmdEndRenderPass", "cmd_end_render_pass", Command, 47),
    ("vkCmdExecuteCommands", "cmd_execute_commands", Command, 48),
    ("vkCmdDebugMarkerBeginEXT", "cmd_debug_marker_begin_ext", Command, 49),
    ("vkCmdDebugMarkerEndEXT", "cmd_debug_marker_end_ext", Command, 50),
    ("vkCmdDebugMarkerInsertEXT", "cmd_debug_marker_insert_ext", Command, 51),
    ("vkCmdExecuteGeneratedCommandsNV", "cmd_execute_generated_commands_nv", Command, 52),
    ("vkCmdPreprocessGeneratedCommandsNV", "cmd_preprocess_generated_commands_nv", Command, 53),
    ("vkCmdBindPipelineShaderGroupNV", "cmd_bind_pipeline_shader_group_nv", Command, 54),
    ("vkCmdPushDescriptorSetKHR", "cmd_push_descriptor_set_khr", Command, 55),
    ("vkCmdSetDeviceMask", "cmd_set_device_mask", Command, 56),
    ("vkCmdDispatchBase", "cmd_dispatch_base", Command, 57),
    ("vkCmdPushDescriptorSetWithTemplateKHR", "cmd_push_descriptor_set_with_template_khr", Command, 58),
    ("vkCmdSetViewportWScalingNV", "cmd_set_viewport_w_scaling_nv", Command, 59),
    ("vkCmdSetDiscardRectangleEXT", "cmd_set_discard_rectangle_ext", Command, 60),
    ("vkCmdSetSampleLocationsEXT", "cmd_set_sample_locations_ext", Command, 61),
    ("vkCmdBeginDebugUtilsLabelEXT", "cmd_begin_debug_utils_label_ext", Command, 62),
    ("vkCmdEndDebugUtilsLabelEXT", "cmd_end_debug_utils_label_ext", Command, 63),
    ("vkCmdInsertDebugUtilsLabelEXT", "cmd_insert_debug_utils_label_ext", Command, 64),
    ("vkCmdWriteBufferMarkerAMD", "cmd_write_buffer_marker_amd", Command, 65),
    ("vkCmdBeginRenderPass2", "cmd_begin_render_pass2", Command, 66),
    ("vkCmdNextSubpass2", "cmd_next_subpass2", Command, 67),
    ("vkCmdEndRenderPass2", "cmd_end_render_pass2", Command, 68),
    ("vkCmdDrawIndirectCount", "cmd_draw_indirect_count", Command, 69),
    ("vkCmdDrawIndexedIndirectCount", "cmd_draw_indexed_indirect_count", Command, 70),
    ("vkCmdSetCheckpointNV", "cmd_set_checkpoint_nv", Command, 71),
    ("vkCmdBindTransformFeedbackBuffersEXT", "cmd_bind_transform_feedback_buffers_ext", Command, 72),
    ("vkCmdBeginTransformFeedbackEXT", "cmd_begin_transform_feedback_ext", Command, 73),
    ("vkCmdEndTransformFeedbackEXT", "cmd_end_transform_feedback_ext", Command, 74),
    ("vkCmdBeginQueryIndexedEXT", "cmd_begin_query_indexed_ext", Command, 75),
    ("vkCmdEndQueryIndexedEXT", "cmd_end_query_indexed_ext", Command, 76),
    ("vkCmdDrawIndirectByteCountEXT", "cmd_draw_indirect_byte_count_ext", Command, 77),
    ("vkCmdSetExclusiveScissorNV", "cmd_set_exclusive_scissor_nv", Command, 78),
    ("vkCmdBindShadingRateImageNV", "cmd_bind_shading_rate_image_nv", Command, 79),
    ("vkCmdSetViewportShadingRatePaletteNV", "cmd_set_viewport_shading_rate_palette_nv", Command, 80),
    ("vkCmdSetCoarseSampleOrderNV", "cmd_set_coarse_sample_order_nv", Command, 81),
    ("vkCmdDrawMeshTasksNV", "cmd_draw_mesh_tasks_nv", Command, 82),
    ("vkCmdDrawMeshTasksIndirectNV", "cmd_draw_mesh_tasks_indirect_nv", Command, 83),
    ("vkCmdDrawMeshTasksIndirectCountNV", "cmd_draw_mesh_tasks_indirect_count_nv", Command, 84),
    ("vkCmdBindInvocationMaskHUAWEI", "cmd_bind_invocation_mask_huawei", Command, 85),
    ("vkCmdCopyAccelerationStructureNV", "cmd_copy_acceleration_structure_nv", Command, 86),
    ("vkCmdCopyAccelerationStructureKHR", "cmd_copy_acceleration_structure_khr", Command, 87),
    ("vkCmdCopyAccelerationStructureToMemoryKHR", "cmd_copy_acceleration_structure_to_memory_khr", Command, 88),
    ("vkCmdCopyMemoryToAccelerationStructureKHR", "cmd_copy_memory_to_acceleration_structure_khr", Command, 89),
    ("vkCmdWriteAccelerationStructuresPropertiesKHR", "cmd_write_acceleration_structures_properties_khr", Command, 90),
    ("vkCmdWriteAccelerationStructuresPropertiesNV", "cmd_write_acceleration_structures_properties_nv", Command, 91),
    ("vkCmdBuildAccelerationStructureNV", "cmd_build_acceleration_structure_nv", Command, 92),
    ("vkCmdTraceRaysKHR", "cmd_trace_rays_khr", Command, 93),
    ("vkCmdTraceRaysNV", "cmd_trace_rays_nv", Command, 94),
    ("vkCmdTraceRaysIndirectKHR", "cmd_trace_rays_indirect_khr", Command, 95),
    ("vkCmdSetRayTracingPipelineStackSizeKHR", "cmd_set_ray_tracing_pipeline_stack_size_khr", Command, 96),
    ("vkCmdSetPerformanceMarkerINTEL", "cmd_set_performance_marker_intel", Command, 97),
    ("vkCmdSetPerformanceStreamMarkerINTEL", "cmd_set_performance_stream_marker_intel", Command, 98),
    ("vkCmdSetPerformanceOverrideINTEL", "cmd_set_performance_override_intel", Command, 99),
    ("vkCmdSetLineStippleEXT", "cmd_set_line_stipple_ext", Command, 100),
    ("vkCmdBuildAccelerationStructuresKHR", "cmd_build_acceleration_structures_khr", Command, 101),
    ("vkCmdBuildAccelerationStructuresIndirectKHR", "cmd_build_acceleration_structures_indirect_khr", Command, 102),
    ("vkCmdSetCullMode", "cmd_set_cull_mode", Command, 103),
    ("vkCmdSetFrontFace", "cmd_set_front_face", Command, 104),
    ("vkCmdSetPrimitiveTopology", "cmd_set_primitive_topology", Command, 105),
    ("vkCmdSetViewportWithCount", "cmd_set_viewport_with_count", Command, 106),
    ("vkCmdSetScissorWithCount", "cmd_set_scissor_with_count", Command, 107),
    ("vkCmdBindVertexBuffers2", "cmd_bind_vertex_buffers2", Command, 108),
    ("vkCmdSetDepthTestEnable", "cmd_set_depth_test_enable", Command, 109),
    ("vkCmdSetDepthWriteEnable", "cmd_set_depth_write_enable", Command, 110),
    ("vkCmdSetDepthCompareOp", "cmd_set_depth_compare_op", Command, 111),
    ("vkCmdSetDepthBoundsTestEnable", "cmd_set_depth_bounds_test_enable", Command, 112),
    ("vkCmdSetStencilTestEnable", "cmd_set_stencil_test_enable", Command, 113),
    ("vkCmdSetStencilOp", "cmd_set_stencil_op", Command, 114),
    ("vkCmdSetPatchControlPointsEXT", "cmd_set_patch_control_points_ext", Command, 115),
    ("vkCmdSetRasterizerDiscardEnable", "cmd_set_rasterizer_discard_enable", Command, 116),
    ("vkCmdSetDepthBiasEnable", "cmd_set_depth_bias_enable", Command, 117),
    ("vkCmdSetLogicOpEXT", "cmd_set_logic_op_ext", Command, 118),
    ("vkCmdSetPrimitiveRestartEnable", "cmd_set_primitive_restart_enable", Command, 119),
    ("vkCmdCopyBuffer2", "cmd_copy_buffer2", Command, 120),
    ("vkCmdCopyImage2", "cmd_copy_image2", Command, 121),
    ("vkCmdBlitImage2", "cmd_blit_image2", Command, 122),
    ("vkCmdCopyBufferToImage2", "cmd_copy_buffer_to_image2", Command, 123),
    ("vkCmdCopyImageToBuffer2", "cmd_copy_image_to_buffer2", Command, 124),
    ("vkCmdResolveImage2", "cmd_resolve_image2", Command, 125),
    ("vkCmdSetFragmentShadingRateKHR", "cmd_set_fragment_shading_rate_khr", Command, 126),
    ("vkCmdSetFragmentShadingRateEnumNV", "cmd_set_fragment_shading_rate_enum_nv", Command, 127),
    ("vkCmdSetVertexInputEXT", "cmd_set_vertex_input_ext", Command, 128),
    ("vkCmdSetColorWriteEnableEXT", "cmd_set_color_write_enable_ext", Command, 129),
    ("vkCmdSetEvent2", "cmd_set_event2", Command, 130),
    ("vkCmdResetEvent2", "cmd_reset_event2", Command, 131),
    ("vkCmdWaitEvents2", "cmd_wait_events2", Command, 132),
    ("vkCmdPipelineBarrier2", "cmd_pipeline_barrier2", Command, 133),
    ("vkCmdWriteTimestamp2", "cmd_write_timestamp2", Command, 134),
    ("vkCmdWriteBufferMarker2AMD", "cmd_write_buffer_marker2_amd", Command, 135),
    ("vkCmdDecodeVideoKHR", "cmd_decode_video_khr", Command, 136),
    ("vkCmdBeginVideoCodingKHR", "cmd_begin_video_coding_khr", Command, 137),
    ("vkCmdControlVideoCodingKHR", "cmd_control_video_coding_khr", Command, 138),
    ("vkCmdEndVideoCodingKHR", "cmd_end_video_coding_khr", Command, 139),
    ("vkCmdEncodeVideoKHR", "cmd_encode_video_khr", Command, 140),
    ("vkCmdCuLaunchKernelNVX", "cmd_cu_launch_kernel_nvx", Command, 141),
    ("vkCmdBeginRendering", "cmd_begin_rendering", Command, 142),
    ("vkCmdEndRendering", "cmd_end_rendering", Command, 143),
    ("vkCreateInstance", "create_instance", Function, 0),
    ("vkDestroyInstance", "destroy_instance", Function, 1),
    ("vkEnumeratePhysicalDevices", "enumerate_physical_devices", Function, 2),
    ("vkGetDeviceProcAddr", "get_device_proc_addr", Function, 3),
    ("vkGetInstanceProcAddr", "get_instance_proc_addr", Function, 4),
    ("vkGetPhysicalDeviceProperties", "get_physical_device_properties", Function, 5),
    ("vkGetPhysicalDeviceQueueFamilyProperties", "get_physical_device_queue_family_properties", Function, 6),
    ("vkGetPhysicalDeviceMemoryProperties", "get_physical_device_memory_properties", Function, 7),
    ("vkGetPhysicalDeviceFeatures", "get_physical_device_features", Function, 8),
    ("vkGetPhysicalDeviceFormatProperties", "get_physical_device_format_properties", Function, 9),
    ("vkGetPhysicalDeviceImageFormatProperties", "get_physical_device_image_format_properties", Function, 10),
    ("vkCreateDevice", "create_device", Function, 11),
    ("vkDestroyDevice", "destroy_device", Function, 12),
    ("vkEnumerateInstanceVersion", "enumerate_instance_version", Function, 13),
    ("vkEnumerateInstanceLayerProperties", "enumerate_instance_layer_properties", Function, 14),
    ("vkEnumerateInstanceExtensionProperties", "enumerate_instance_extension_properties", Function, 15),
    ("vkEnumerateDeviceLayerProperties", "enumerate_device_layer_properties", Function, 16),
    ("vkEnumerateDeviceExtensionProperties", "enumerate_device_extension_properties", Function, 17),
    ("vkGetDeviceQueue", "get_device_queue", Function, 18),
    ("vkQueueSubmit", "queue_submit", Function, 19),
    ("vkQueueWaitIdle", "queue_wait_idle", Function, 20),
    ("vkDeviceWaitIdle", "device_wait_idle", Function, 21),
    ("vkAllocateMemory", "allocate_memory", Function, 22),
    ("vkFreeMemory", "free_memory", Function, 23),
    ("vkMapMemory", "map_memory", Function, 24),
    ("vkUnmapMemory", "unmap_memory", Function, 25),
    ("vkFlushMappedMemoryRanges", "flush_mapped_memory_ranges", Function, 26),
    ("vkInvalidateMappedMemoryRanges", "invalidate_mapped_memory_ranges", Function, 27),
    ("vkGetDeviceMemoryCommitment", "get_device_memory_commitment", Function, 28),
    ("vkGetBufferMemoryRequirements", "get_buffer_memory_requirements", Function, 29),
    ("vkBindBufferMemory", "bind_buffer_memory", Function, 30),
    ("vkGetImageMemoryRequirements", "get_image_memory_requirements", Function, 31),
    ("vkBindImageMemory", "bind_image_memory", Function, 32),
    ("vkGetImageSparseMemoryRequirements", "get_image_sparse_memory_requirements", Function, 33),
    ("vkGetPhysicalDeviceSparseImageFormatProperties", "get_physical_device_sparse_image_format_properties", Function, 34),
    ("vkQueueBindSparse", "queue_bind_sparse", Function, 35),
    ("vkCreateFence", "create_fence", Function, 36),
    ("vkDestroyFence", "destroy_fence", Function, 37),
    ("vkResetFences", "reset_fences", Function, 38),
    ("vkGetFenceStatus", "get_fence_status", Function, 39),
    ("vkWaitForFences", "wait_for_fences", Function, 40),
    ("vkCreateSemaphore", "create_semaphore", Function, 41),
    ("vkDestroySemaphore", "destroy_semaphore", Function, 42),
    ("vkCreateEvent", "create_event", Function, 43),
    ("vkDestroyEvent", "destroy_event", Function, 44),
    ("vkGetEventStatus", "get_event_status", Function, 45),
    ("vkSetEvent", "set_event", Function, 46),
    ("vkResetEvent", "reset_event", Function, 47),
    ("vkCreateQueryPool", "create_query_pool", Function, 48),
    ("vkDestroyQueryPool", "destroy_query_pool", Function, 49),
    ("vkGetQueryPoolResults", "get_query_pool_results", Function, 50),
    ("vkResetQueryPool", "reset_query_pool", Function, 51),
    ("vkCreateBuffer", "create_buffer", Function, 52),
    ("vkDestroyBuffer", "destroy_buffer", Function, 53),
    ("vkCreateBufferView", "create_buffer_view", Function, 54),
    ("vkDestroyBufferView", "destroy_buffer_view", Function, 55),
    ("vkCreateImage", "create_image", Function, 56),
    ("vkDestroyImage", "destroy_image", Function, 57),
    ("vkGetImageSubresourceLayout", "get_image_subresource_layout", Function, 58),
    ("vkCreateImageView", "create_image_view", Function, 59),
    ("vkDestroyImageView", "destroy_image_view", Function, 60),
    ("vkCreateShaderModule", "create_shader_module", Function, 61),
    ("vkDestroyShaderModule", "destroy_shader_module", Function, 62),
    ("vkCreatePipelineCache", "create_pipeline_cache", Function, 63),
    ("vkDestroyPipelineCache", "destroy_pipeline_cache", Function, 64),
    ("vkGetPipelineCacheData", "get_pipeline_cache_data", Function, 65),
    ("vkMergePipelineCaches", "merge_pipeline_caches", Function, 66),
    ("vkCreateGraphicsPipelines", "create_graphics_pipelines", Function, 67),
    ("vkCreateComputePipelines", "create_compute_pipelines", Function, 68),
    ("vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI", "get_device_subpass_shading_max_workgroup_size_huawei", Function, 69),
    ("vkDestroyPipeline", "destroy_pipeline", Function, 70),
    ("vkCreatePipelineLayout", "create_pipeline_layout", Function, 71),
    ("vkDestroyPipelineLayout", "destroy_pipeline_layout", Function, 72),
    ("vkCreateSampler", "create_sampler", Function, 73),
    ("vkDestroySampler", "destroy_sampler", Function, 74),
    ("vkCreateDescriptorSetLayout", "create_descriptor_set_layout", Function, 75),
    ("vkDestroyDescriptorSetLayout", "destroy_descriptor_set_layout", Function, 76),
    ("vkCreateDescriptorPool", "create_descriptor_pool", Function, 77),
    ("vkDestroyDescriptorPool", "destroy_descriptor_pool", Function, 78),
    ("vkResetDescriptorPool", "reset_descriptor_pool", Function, 79),
    ("vkAllocateDescriptorSets", "allocate_descriptor_sets", Function, 80),
    ("vkFreeDescriptorSets", "free_descriptor_sets", Function, 81),
    ("vkUpdateDescriptorSets", "update_descriptor_sets", Function, 82),
    ("vkCreateFramebuffer", "create_framebuffer", Function, 83),
    ("vkDestroyFramebuffer", "destroy_framebuffer", Function, 84),
    ("vkCreateRenderPass", "create_render_pass", Function, 85),
    ("vkDestroyRenderPass", "destroy_render_pass", Function, 86),
    ("vkGetRenderAreaGranularity", "get_render_area_granularity", Function, 87),
    ("vkCreateCommandPool", "create_command_pool", Function, 88),
    ("vkDestroyCommandPool", "destroy_command_pool", Function, 89),
    ("vkResetCommandPool", "reset_command_pool", Function, 90),
    ("vkAllocateCommandBuffers", "allocate_command_buffers", Function, 91),
    ("vkFreeCommandBuffers", "free_command_buffers", Function, 92),
    ("vkBeginCommandBuffer", "begin_command_buffer", Function, 93),
    ("vkEndCommandBuffer", "end_command_buffer", Function, 94),
    ("vkResetCommandBuffer", "reset_command_buffer", Function, 95),
    ("vkCreateAndroidSurfaceKHR", "create_android_surface_khr", Function, 96),
    ("vkGetPhysicalDeviceDisplayPropertiesKHR", "get_physical_device_display_properties_khr", Function, 97),
    ("vkGetPhysicalDeviceDisplayPlanePropertiesKHR", "get_physical_device_display_plane_properties_khr", Function, 98),
    ("vkGetDisplayPlaneSupportedDisplaysKHR", "get_display_plane_supported_displays_khr", Function, 99),
    ("vkGetDisplayModePropertiesKHR", "get_display_mode_properties_khr", Function, 100),
    ("vkCreateDisplayModeKHR", "create_display_mode_khr", Function, 101),
    ("vkGetDisplayPlaneCapabilitiesKHR", "get_display_plane_capabilities_khr", Function, 102),
    ("vkCreateDisplayPlaneSurfaceKHR", "create_display_plane_surface_khr", Function, 103),
    ("vkCreateSharedSwapchainsKHR", "create_shared_swapchains_khr", Function, 104),
    ("vkDestroySurfaceKHR", "destroy_surface_khr", Function, 105),
    ("vkGetPhysicalDeviceSurfaceSupportKHR", "get_physical_device_surface_support_khr", Function, 106),
    ("vkGetPhysicalDeviceSurfaceCapabilitiesKHR", "get_physical_device_surface_capabilities_khr", Function, 107),
    ("vkGetPhysicalDeviceSurfaceFormatsKHR", "get_physical_device_surface_formats_khr", Function, 108),
    ("vkGetPhysicalDeviceSurfacePresentModesKHR", "get_physical_device_surface_present_modes_khr", Function, 109),
    ("vkCreateSwapchainKHR", "create_swapchain_khr", Function, 110),
    ("vkDestroySwapchainKHR", "destroy_swapchain_khr", Function, 111),
    ("vkGetSwapchainImagesKHR", "get_swapchain_images_khr", Function, 112),
    ("vkAcquireNextImageKHR", "acquire_next_image_khr", Function, 113),
    ("vkQueuePresentKHR", "queue_present_khr", Function, 114),
    ("vkCreateViSurfaceNN", "create_vi_surface_nn", Function, 115),
    ("vkCreateWaylandSurfaceKHR", "create_wayland_surface_khr", Function, 116),
    ("vkGetPhysicalDeviceWaylandPresentationSupportKHR", "get_physical_device_wayland_presentation_support_khr", Function, 117),
    ("vkCreateWin32SurfaceKHR", "create_win32_surface_khr", Function, 118),
    ("vkGetPhysicalDeviceWin32PresentationSupportKHR", "get_physical_device_win32_presentation_support_khr", Function, 119),
    ("vkCreateXlibSurfaceKHR", "create_xlib_surface_khr", Function, 120),
    ("vkGetPhysicalDeviceXlibPresentationSupportKHR", "get_physical_device_xlib_presentation_support_khr", Function, 121),
    ("vkCreateXcbSurfaceKHR", "create_xcb_surface_khr", Function, 122),
    ("vkGetPhysicalDeviceXcbPresentationSupportKHR", "get_physical_device_xcb_presentation_support_khr", Function, 123),
    ("vkCreateDirectFBSurfaceEXT", "create_direct_fb_surface_ext", Function, 124),
    ("vkGetPhysicalDeviceDirectFBPresentationSupportEXT", "get_physical_device_direct_fb_presentation_support_ext", Function, 125),
    ("vkCreateImagePipeSurfaceFUCHSIA", "create_image_pipe_surface_fuchsia", Function, 126),
    ("vkCreateStreamDescriptorSurfaceGGP", "create_stream_descriptor_surface_ggp", Function, 127),
    ("vkCreateScreenSurfaceQNX", "create_screen_surface_qnx", Function, 128),
    ("vkGetPhysicalDeviceScreenPresentationSupportQNX", "get_physical_device_screen_presentation_support_qnx", Function, 129),
    ("vkCreateDebugReportCallbackEXT", "create_debug_report_callback_ext", Function, 130),
    ("vkDestroyDebugReportCallbackEXT", "destroy_debug_report_callback_ext", Function, 131),
    ("vkDebugReportMessageEXT", "debug_report_message_ext", Function, 132),
    ("vkDebugMarkerSetObjectNameEXT", "debug_marker_set_object_name_ext", Function, 133),
    ("vkDebugMarkerSetObjectTagEXT", "debug_marker_set_object_tag_ext", Function, 134),
    ("vkGetPhysicalDeviceExternalImageFormatPropertiesNV", "get_physical_device_external_image_format_properties_nv", Function, 135),
    ("vkGetMemoryWin32HandleNV", "get_memory_win32_handle_nv", Function, 136),
    ("vkGetGeneratedCommandsMemoryRequirementsNV", "get_generated_commands_memory_requirements_nv", Function, 137),
    ("vkCreateIndirectCommandsLayoutNV", "create_indirect_commands_layout_nv", Function, 138),
    ("vkDestroyIndirectCommandsLayoutNV", "destroy_indirect_commands_layout_nv", Function, 139),
    ("vkGetPhysicalDeviceFeatures2", "get_physical_device_features2", Function, 140),
    ("vkGetPhysicalDeviceProperties2", "get_physical_device_properties2", Function, 141),
    ("vkGetPhysicalDeviceFormatProperties2", "get_physical_device_format_properties2", Function, 142),
    ("vkGetPhysicalDeviceImageFormatProperties2", "get_physical_device_image_format_properties2", Function, 143),
    ("vkGetPhysicalDeviceQueueFamilyProperties2", "get_physical_device_queue_family_properties2", Function, 144),
    ("vkGetPhysicalDeviceMemoryProperties2", "get_physical_device_memory_properties2", Function, 145),
    ("vkGetPhysicalDeviceSparseImageFormatProperties2", "get_physical_device_sparse_image_format_properties2", Function, 146),
    ("vkTrimCommandPool", "trim_command_pool", Function, 147),
    ("vkGetPhysicalDeviceExternalBufferProperties", "get_physical_device_external_buffer_properties", Function, 148),
    ("vkGetMemoryWin32HandleKHR", "get_memory_win32_handle_khr", Function, 149),
    ("vkGetMemoryWin32HandlePropertiesKHR", "get_memory_win32_handle_properties_khr", Function, 150),
    ("vkGetMemoryFdKHR", "get_memory_fd_khr", Function, 151),
    ("vkGetMemoryFdPropertiesKHR", "get_memory_fd_properties_khr", Function, 152),
    ("vkGetMemoryZirconHandleFUCHSIA", "get_memory_zircon_handle_fuchsia", Function, 153),
    ("vkGetMemoryZirconHandlePropertiesFUCHSIA", "get_memory_zircon_handle_properties_fuchsia", Function, 154),
    ("vkGetMemoryRemoteAddressNV", "get_memory_remote_address_nv", Function, 155),
    ("vkGetPhysicalDeviceExternalSemaphoreProperties", "get_physical_device_external_semaphore_properties", Function, 156),
    ("vkGetSemaphoreWin32HandleKHR", "get_semaphore_win32_handle_khr", Function, 157),
    ("vkImportSemaphoreWin32HandleKHR", "import_semaphore_win32_handle_khr", Function, 158),
    ("vkGetSemaphoreFdKHR", "get_semaphore_fd_khr", Function, 159),
    ("vkImportSemaphoreFdKHR", "import_semaphore_fd_khr", Function, 160),
    ("vkGetSemaphoreZirconHandleFUCHSIA", "get_semaphore_zircon_handle_fuchsia", Function, 161),
    ("vkImportSemaphoreZirconHandleFUCHSIA", "import_semaphore_zircon_handle_fuchsia", Function, 162),
    ("vkGetPhysicalDeviceExternalFenceProperties", "get_physical_device_external_fence_properties", Function, 163),
    ("vkGetFenceWin32HandleKHR", "get_fence_win32_handle_khr", Function, 164),
    ("vkImportFenceWin32HandleKHR", "import_fence_win32_handle_khr", Function, 165),
    ("vkGetFenceFdKHR", "get_fence_fd_khr", Function, 166),
    ("vkImportFenceFdKHR", "import_fence_fd_khr", Function, 167),
    ("vkReleaseDisplayEXT", "release_display_ext", Function, 168),
    ("vkAcquireXlibDisplayEXT", "acquire_xlib_display_ext", Function, 169),
    ("vkGetRandROutputDisplayEXT", "get_rand_r_output_display_ext", Function, 170),
    ("vkAcquireWinrtDisplayNV", "acquire_winrt_display_nv", Function, 171),
    ("vkGetWinrtDisplayNV", "get_winrt_display_nv", Function, 172),
    ("vkDisplayPowerControlEXT", "display_power_control_ext", Function, 173),
    ("vkRegisterDeviceEventEXT", "register_device_event_ext", Function, 174),
    ("vkRegisterDisplayEventEXT", "register_display_event_ext", Function, 175),
    ("vkGetSwapchainCounterEXT", "get_swapchain_counter_ext", Function, 176),
    ("vkGetPhysicalDeviceSurfaceCapabilities2EXT", "get_physical_device_surface_capabilities2_ext", Function, 177),
    ("vkEnumeratePhysicalDeviceGroups", "enumerate_physical_device_groups", Function, 178),
    ("vkGetDeviceGroupPeerMemoryFeatures", "get_device_group_peer_memory_features", Function, 179),
    ("vkBindBufferMemory2", "bind_buffer_memory2", Function, 180),
    ("vkBindImageMemory2", "bind_image_memory2", Function, 181),
    ("vkGetDeviceGroupPresentCapabilitiesKHR", "get_device_group_present_capabilities_khr", Function, 182),
    ("vkGetDeviceGroupSurfacePresentModesKHR", "get_device_group_surface_present_modes_khr", Function, 183),
    ("vkAcquireNextImage2KHR", "acquire_next_image2_khr", Function, 184),
    ("vkGetPhysicalDevicePresentRectanglesKHR", "get_physical_device_present_rectangles_khr", Function, 185),
    ("vkCreateDescriptorUpdateTemplate", "create_descriptor_update_template", Function, 186),
    ("vkDestroyDescriptorUpdateTemplate", "destroy_descriptor_update_template", Function, 187),
    ("vkUpdateDescriptorSetWithTemplate", "update_descriptor_set_with_template", Function, 188),
    ("vkSetHdrMetadataEXT", "set_hdr_metadata_ext", Function, 189),
    ("vkGetSwapchainStatusKHR", "get_swapchain_status_khr", Function, 190),
    ("vkGetRefreshCycleDurationGOOGLE", "get_refresh_cycle_duration_google", Function, 191),
    ("vkGetPastPresentationTimingGOOGLE", "get_past_presentation_timing_google", Function, 192),
    ("vkCreateIOSSurfaceMVK", "create_ios_surface_mvk", Function, 193),
    ("vkCreateMacOSSurfaceMVK", "create_mac_os_surface_mvk", Function, 194),
    ("vkCreateMetalSurfaceEXT", "create_metal_surface_ext", Function, 195),
    ("vkGetPhysicalDeviceMultisamplePropertiesEXT", "get_physical_device_multisample_properties_ext", Function, 196),
    ("vkGetPhysicalDeviceSurfaceCapabilities2KHR", "get_physical_device_surface_capabilities2_khr", Function, 197),
    ("vkGetPhysicalDeviceSurfaceFormats2KHR", "get_physical_device_surface_formats2_khr", Function, 198),
    ("vkGetPhysicalDeviceDisplayProperties2KHR", "get_physical_device_display_properties2_khr", Function, 199),
    ("vkGetPhysicalDeviceDisplayPlaneProperties2KHR", "get_physical_device_display_plane_properties2_khr", Function, 200),
    ("vkGetDisplayModeProperties2KHR", "get_display_mode_properties2_khr", Function, 201),
    ("vkGetDisplayPlaneCapabilities2KHR", "get_display_plane_capabilities2_khr", Function, 202),
    ("vkGetBufferMemoryRequirements2", "get_buffer_memory_requirements2", Function, 203),
    ("vkGetImageMemoryRequirements2", "get_image_memory_requirements2", Function, 204),
    ("vkGetImageSparseMemoryRequirements2", "get_image_sparse_memory_requirements2", Function, 205),
    ("vkGetDeviceBufferMemoryRequirements", "get_device_buffer_memory_requirements", Function, 206),
    ("vkGetDeviceImageMemoryRequirements", "get_device_image_memory_requirements", Function, 207),
    ("vkGetDeviceImageSparseMemoryRequirements", "get_device_image_sparse_memory_requirements", Function, 208),
    ("vkCreateSamplerYcbcrConversion", "create_sampler_ycbcr_conversion", Function, 209),
    ("vkDestroySamplerYcbcrConversion", "destroy_sampler_ycbcr_conversion", Function, 210),
    ("vkGetDeviceQueue2", "get_device_queue2", Function, 211),
    ("vkCreateValidationCacheEXT", "create_validation_cache_ext", Function, 212),
    ("vkDestroyValidationCacheEXT", "destroy_validation_cache_ext", Function, 213),
    ("vkGetValidationCacheDataEXT", "get_validation_cache_data_ext", Function, 214),
    ("vkMergeValidationCachesEXT", "merge_validation_caches_ext", Function, 215),
    ("vkGetDescriptorSetLayoutSupport", "get_descriptor_set_layout_support", Function, 216),
    ("vkGetSwapchainGrallocUsageANDROID", "get_swapchain_gralloc_usage_android", Function, 217),
    ("vkGetSwapchainGrallocUsage2ANDROID", "get_swapchain_gralloc_usage2_android", Function, 218),
    ("vkAcquireImageANDROID", "acquire_image_android", Function, 219),
    ("vkQueueSignalReleaseImageANDROID", "queue_signal_release_image_android", Function, 220),
    ("vkGetShaderInfoAMD", "get_shader_info_amd", Function, 221),
    ("vkSetLocalDimmingAMD", "set_local_dimming_amd", Function, 222),
    ("vkGetPhysicalDeviceCalibrateableTimeDomainsEXT", "get_physical_device_calibrateable_time_domains_ext", Function, 223),
    ("vkGetCalibratedTimestampsEXT", "get_calibrated_timestamps_ext", Function, 224),
    ("vkSetDebugUtilsObjectNameEXT", "set_debug_utils_object_name_ext", Function, 225),
    ("vkSetDebugUtilsObjectTagEXT", "set_debug_utils_object_tag_ext", Function, 226),
    ("vkQueueBeginDebugUtilsLabelEXT", "queue_begin_debug_utils_label_ext", Function, 227),
    ("vkQueueEndDebugUtilsLabelEXT", "queue_end_debug_utils_label_ext", Function, 228),
    ("vkQueueInsertDebugUtilsLabelEXT", "queue_insert_debug_utils_label_ext", Function, 229),
    ("vkCreateDebugUtilsMessengerEXT", "create_debug_utils_messenger_ext", Function, 230),
    ("vkDestroyDebugUtilsMessengerEXT", "destroy_debug_utils_messenger_ext", Function, 231),
    ("vkSubmitDebugUtilsMessageEXT", "submit_debug_utils_message_ext", Function, 232),
    ("vkGetMemoryHostPointerPropertiesEXT", "get_memory_host_pointer_properties_ext", Function, 233),
    ("vkCreateRenderPass2", "create_render_pass2", Function, 234),
    ("vkGetSemaphoreCounterValue", "get_semaphore_counter_value", Function, 235),
    ("vkWaitSemaphores", "wait_semaphores", Function, 236),
    ("vkSignalSemaphore", "signal_semaphore", Function, 237),
    ("vkGetAndroidHardwareBufferPropertiesANDROID", "get_android_hardware_buffer_properties_android", Function, 238),
    ("vkGetMemoryAndroidHardwareBufferANDROID", "get_memory_android_hardware_buffer_android", Function, 239),
    ("vkGetQueueCheckpointDataNV", "get_queue_checkpoint_data_nv", Function, 240),
    ("vkCompileDeferredNV", "compile_deferred_nv", Function, 241),
    ("vkCreateAccelerationStructureNV", "create_acceleration_structure_nv", Function, 242),
    ("vkDestroyAccelerationStructureKHR", "destroy_acceleration_structure_khr", Function, 243),
    ("vkDestroyAccelerationStructureNV", "destroy_acceleration_structure_nv", Function, 244),
    ("vkGetAccelerationStructureMemoryRequirementsNV", "get_acceleration_structure_memory_requirements_nv", Function, 245),
    ("vkBindAccelerationStructureMemoryNV", "bind_acceleration_structure_memory_nv", Function, 246),
    ("vkCopyAccelerationStructureKHR", "copy_acceleration_structure_khr", Function, 247),
    ("vkCopyAccelerationStructureToMemoryKHR", "copy_acceleration_structure_to_memory_khr", Function, 248),
    ("vkCopyMemoryToAccelerationStructureKHR", "copy_memory_to_acceleration_structure_khr", Function, 249),
    ("vkWriteAccelerationStructuresPropertiesKHR", "write_acceleration_structures_properties_khr", Function, 250),
    ("vkGetRayTracingShaderGroupHandlesKHR", "get_ray_tracing_shader_group_handles_khr", Function, 251),
    ("vkGetRayTracingCaptureReplayShaderGroupHandlesKHR", "get_ray_tracing_capture_replay_shader_group_handles_khr", Function, 252),
    ("vkGetAccelerationStructureHandleNV", "get_acceleration_structure_handle_nv", Function, 253),
    ("vkCreateRayTracingPipelinesNV", "create_ray_tracing_pipelines_nv", Function, 254),
    ("vkCreateRayTracingPipelinesKHR", "create_ray_tracing_pipelines_khr", Function, 255),
    ("vkGetPhysicalDeviceCooperativeMatrixPropertiesNV", "get_physical_device_cooperative_matrix_properties_nv", Function, 256),
    ("vkGetDeviceAccelerationStructureCompatibilityKHR", "get_device_acceleration_structure_compatibility_khr", Function, 257),
    ("vkGetRayTracingShaderGroupStackSizeKHR", "get_ray_tracing_shader_group_stack_size_khr", Function, 258),
    ("vkGetImageViewHandleNVX", "get_image_view_handle_nvx", Function, 259),
    ("vkGetImageViewAddressNVX", "get_image_view_address_nvx", Function, 260),
    ("vkGetPhysicalDeviceSurfacePresentModes2EXT", "get_physical_device_surface_present_modes2_ext", Function, 261),
    ("vkGetDeviceGroupSurfacePresentModes2EXT", "get_device_group_surface_present_modes2_ext", Function, 262),
    ("vkAcquireFullScreenExclusiveModeEXT", "acquire_full_screen_exclusive_mode_ext", Function, 263),
    ("vkReleaseFullScreenExclusiveModeEXT", "release_full_screen_exclusive_mode_ext", Function, 264),
    ("vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR", "enumerate_physical_device_queue_family_performance_query_counters_khr", Function, 265),
    ("vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR", "get_physical_device_queue_family_performance_query_passes_khr", Function, 266),
    ("vkAcquireProfilingLockKHR", "acquire_profiling_lock_khr", Function, 267),
    ("vkReleaseProfilingLockKHR", "release_profiling_lock_khr", Function, 268),
    ("vkGetImageDrmFormatModifierPropertiesEXT", "get_image_drm_format_modifier_properties_ext", Function, 269),
    ("vkGetBufferOpaqueCaptureAddress", "get_buffer_opaque_capture_address", Function, 270),
    ("vkGetBufferDeviceAddress", "get_buffer_device_address", Function, 271),
    ("vkCreateHeadlessSurfaceEXT", "create_headless_surface_ext", Function, 272),
    ("vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV", "get_physical_device_supported_framebuffer_mixed_samples_combinations_nv", Function, 273),
    ("vkInitializePerformanceApiINTEL", "initialize_performance_api_intel", Function, 274),
    ("vkUninitializePerformanceApiINTEL", "uninitialize_performance_api_intel", Function, 275),
    ("vkAcquirePerformanceConfigurationINTEL", "acquire_performance_configuration_intel", Function, 276),
    ("vkReleasePerformanceConfigurationINTEL", "release_performance_configuration_intel", Function, 277),
    ("vkQueueSetPerformanceConfigurationINTEL", "queue_set_performance_configuration_intel", Function, 278),
    ("vkGetPerformanceParameterINTEL", "get_performance_parameter_intel", Function, 279),
    ("vkGetDeviceMemoryOpaqueCaptureAddress", "get_device_memory_opaque_capture_address", Function, 280),
    ("vkGetPipelineExecutablePropertiesKHR", "get_pipeline_executable_properties_khr", Function, 281),
    ("vkGetPipelineExecutableStatisticsKHR", "get_pipeline_executable_statistics_khr", Function, 282),
    ("vkGetPipelineExecutableInternalRepresentationsKHR", "get_pipeline_executable_internal_representations_khr", Function, 283),
    ("vkGetPhysicalDeviceToolProperties", "get_physical_device_tool_properties", Function, 284),
    ("vkCreateAccelerationStructureKHR", "create_acceleration_structure_khr", Function, 285),
    ("vkBuildAccelerationStructuresKHR", "build_acceleration_structures_khr", Function, 286),
    ("vkGetAccelerationStructureDeviceAddressKHR", "get_acceleration_structure_device_address_khr", Function, 287),
    ("vkCreateDeferredOperationKHR", "create_deferred_operation_khr", Function, 288),
    ("vkDestroyDeferredOperationKHR", "destroy_deferred_operation_khr", Function, 289),
    ("vkGetDeferredOperationMaxConcurrencyKHR", "get_deferred_operation_max_concurrency_khr", Function, 290),
    ("vkGetDeferredOperationResultKHR", "get_deferred_operation_result_khr", Function, 291),
    ("vkDeferredOperationJoinKHR", "deferred_operation_join_khr", Function, 292),
    ("vkCreatePrivateDataSlot", "create_private_data_slot", Function, 293),
    ("vkDestroyPrivateDataSlot", "destroy_private_data_slot", Function, 294),
    ("vkSetPrivateData", "set_private_data", Function, 295),
    ("vkGetPrivateData", "get_private_data", Function, 296),
    ("vkGetPhysicalDeviceFragmentShadingRatesKHR", "get_physical_device_fragment_shading_rates_khr", Function, 297),
    ("vkGetAccelerationStructureBuildSizesKHR", "get_acceleration_structure_build_sizes_khr", Function, 298),
    ("vkQueueSubmit2", "queue_submit2", Function, 299),
    ("vkGetQueueCheckpointData2NV", "get_queue_checkpoint_data2_nv", Function, 300),
    ("vkGetPhysicalDeviceVideoCapabilitiesKHR", "get_physical_device_video_capabilities_khr", Function, 301),
    ("vkGetPhysicalDeviceVideoFormatPropertiesKHR", "get_physical_device_video_format_properties_khr", Function, 302),
    ("vkCreateVideoSessionKHR", "create_video_session_khr", Function, 303),
    ("vkDestroyVideoSessionKHR", "destroy_video_session_khr", Function, 304),
    ("vkCreateVideoSessionParametersKHR", "create_video_session_parameters_khr", Function, 305),
    ("vkUpdateVideoSessionParametersKHR", "update_video_session_parameters_khr", Function, 306),
    ("vkDestroyVideoSessionParametersKHR", "destroy_video_session_parameters_khr", Function, 307),
    ("vkGetVideoSessionMemoryRequirementsKHR", "get_video_session_memory_requirements_khr", Function, 308),
    ("vkBindVideoSessionMemoryKHR", "bind_video_session_memory_khr", Function, 309),
    ("vkCreateCuModuleNVX", "create_cu_module_nvx", Function, 310),
    ("vkCreateCuFunctionNVX", "create_cu_function_nvx", Function, 311),
    ("vkDestroyCuModuleNVX", "destroy_cu_module_nvx", Function, 312),
    ("vkDestroyCuFunctionNVX", "destroy_cu_function_nvx", Function, 313),
    ("vkSetDeviceMemoryPriorityEXT", "set_device_memory_priority_ext", Function, 314),
    ("vkAcquireDrmDisplayEXT", "acquire_drm_display_ext", Function, 315),
    ("vkGetDrmDisplayEXT", "get_drm_display_ext", Function, 316),
    ("vkWaitForPresentKHR", "wait_for_present_khr", Function, 317),
    ("vkCreateBufferCollectionFUCHSIA", "create_buffer_collection_fuchsia", Function, 318),
    ("vkSetBufferCollectionBufferConstraintsFUCHSIA", "set_buffer_collection_buffer_constraints_fuchsia", Function, 319),
    ("vkSetBufferCollectionImageConstraintsFUCHSIA", "set_buffer_collection_image_constraints_fuchsia", Function, 320),
    ("vkDestroyBufferCollectionFUCHSIA", "destroy_buffer_collection_fuchsia", Function, 321),
    ("vkGetBufferCollectionPropertiesFUCHSIA", "get_buffer_collection_properties_fuchsia", Function, 322),
    ("vkGetDescriptorSetLayoutHostMappingInfoVALVE", "get_descriptor_set_layout_host_mapping_info_valve", Function, 323),
    ("vkGetDescriptorSetHostMappingVALVE", "get_descriptor_set_host_mapping_valve", Function, 324),
    ("vkResetQueryPoolEXT", "reset_query_pool_ext", CommandAlias, 0),
    ("vkGetPhysicalDeviceFeatures2KHR", "get_physical_device_features2_khr", CommandAlias, 1),
    ("vkGetPhysicalDeviceProperties2KHR", "get_physical_device_properties2_khr", CommandAlias, 2),
    ("vkGetPhysicalDeviceFormatProperties2KHR", "get_physical_device_format_properties2_khr", CommandAlias, 3),
    ("vkGetPhysicalDeviceImageFormatProperties2KHR", "get_physical_device_image_format_properties2_khr", CommandAlias, 4),
    ("vkGetPhysicalDeviceQueueFamilyProperties2KHR", "get_physical_device_queue_family_properties2_khr", CommandAlias, 5),
    ("vkGetPhysicalDeviceMemoryProperties2KHR", "get_physical_device_memory_properties2_khr", CommandAlias, 6),
    ("vkGetPhysicalDeviceSparseImageFormatProperties2KHR", "get_physical_device_sparse_image_format_properties2_khr", CommandAlias, 7),
    ("vkTrimCommandPoolKHR", "trim_command_pool_khr", CommandAlias, 8),
    ("vkGetPhysicalDeviceExternalBufferPropertiesKHR", "get_physical_device_external_buffer_properties_khr", CommandAlias, 9),
    ("vkGetPhysicalDeviceExternalSemaphorePropertiesKHR", "get_physical_device_external_semaphore_properties_khr", CommandAlias, 10),
    ("vkGetPhysicalDeviceExternalFencePropertiesKHR", "get_physical_device_external_fence_properties_khr", CommandAlias, 11),
    ("vkEnumeratePhysicalDeviceGroupsKHR", "enumerate_physical_device_groups_khr", CommandAlias, 12),
    ("vkGetDeviceGroupPeerMemoryFeaturesKHR", "get_device_group_peer_memory_features_khr", CommandAlias, 13),
    ("vkBindBufferMemory2KHR", "bind_buffer_memory2_khr", CommandAlias, 14),
    ("vkBindImageMemory2KHR", "bind_image_memory2_khr", CommandAlias, 15),
    ("vkCmdSetDeviceMaskKHR", "cmd_set_device_mask_khr", CommandAlias, 16),
    ("vkCmdDispatchBaseKHR", "cmd_dispatch_base_khr", CommandAlias, 17),
    ("vkCreateDescriptorUpdateTemplateKHR", "create_descriptor_update_template_khr", CommandAlias, 18),
    ("vkDestroyDescriptorUpdateTemplateKHR", "destroy_descriptor_update_template_khr", CommandAlias, 19),
    ("vkUpdateDescriptorSetWithTemplateKHR", "update_descriptor_set_with_template_khr", CommandAlias, 20),
    ("vkGetBufferMemoryRequirements2KHR", "get_buffer_memory_requirements2_khr", CommandAlias, 21),
    ("vkGetImageMemoryRequirements2KHR", "get_image_memory_requirements2_khr", CommandAlias, 22),
    ("vkGetImageSparseMemoryRequirements2KHR", "get_image_sparse_memory_requirements2_khr", CommandAlias, 23),
    ("vkGetDeviceBufferMemoryRequirementsKHR", "get_device_buffer_memory_requirements_khr", CommandAlias, 24),
    ("vkGetDeviceImageMemoryRequirementsKHR", "get_device_image_memory_requirements_khr", CommandAlias, 25),
    ("vkGetDeviceImageSparseMemoryRequirementsKHR", "get_device_image_sparse_memory_requirements_khr", CommandAlias, 26),
    ("vkCreateSamplerYcbcrConversionKHR", "create_sampler_ycbcr_conversion_khr", CommandAlias, 27),
    ("vkDestroySamplerYcbcrConversionKHR", "destroy_sampler_ycbcr_conversion_khr", CommandAlias, 28),
    ("vkGetDescriptorSetLayoutSupportKHR", "get_descriptor_set_layout_support_khr", CommandAlias, 29),
    ("vkCreateRenderPass2KHR", "create_render_pass2_khr", CommandAlias, 30),
    ("vkCmdBeginRenderPass2KHR", "cmd_begin_render_pass2_khr", CommandAlias, 31),
    ("vkCmdNextSubpass2KHR", "cmd_next_subpass2_khr", CommandAlias, 32),
    ("vkCmdEndRenderPass2KHR", "cmd_end_render_pass2_khr", CommandAlias, 33),
    ("vkGetSemaphoreCounterValueKHR", "get_semaphore_counter_value_khr", CommandAlias, 34),
    ("vkWaitSemaphoresKHR", "wait_semaphores_khr", CommandAlias, 35),
    ("vkSignalSemaphoreKHR", "signal_semaphore_khr", CommandAlias, 36),
    ("vkCmdDrawIndirectCountKHR", "cmd_draw_indirect_count_khr", CommandAlias, 37),
    ("vkCmdDrawIndirectCountAMD", "cmd_draw_indirect_count_amd", CommandAlias, 38),
    ("vkCmdDrawIndexedIndirectCountKHR", "cmd_draw_indexed_indirect_count_khr", CommandAlias, 39),
    ("vkCmdDrawIndexedIndirectCountAMD", "cmd_draw_indexed_indirect_count_amd", CommandAlias, 40),
    ("vkGetRayTracingShaderGroupHandlesNV", "get_ray_tracing_shader_group_handles_nv", CommandAlias, 41),
    ("vkGetBufferOpaqueCaptureAddressKHR", "get_buffer_opaque_capture_address_khr", CommandAlias, 42),
    ("vkGetBufferDeviceAddressKHR", "get_buffer_device_address_khr", CommandAlias, 43),
    ("vkGetBufferDeviceAddressEXT", "get_buffer_device_address_ext", CommandAlias, 44),
    ("vkGetDeviceMemoryOpaqueCaptureAddressKHR", "get_device_memory_opaque_capture_address_khr", CommandAlias, 45),
    ("vkGetPhysicalDeviceToolPropertiesEXT", "get_physical_device_tool_properties_ext", CommandAlias, 46),
    ("vkCmdSetCullModeEXT", "cmd_set_cull_mode_ext", CommandAlias, 47),
    ("vkCmdSetFrontFaceEXT", "cmd_set_front_face_ext", CommandAlias, 48),
    ("vkCmdSetPrimitiveTopologyEXT", "cmd_set_primitive_topology_ext", CommandAlias, 49),
    ("vkCmdSetViewportWithCountEXT", "cmd_set_viewport_with_count_ext", CommandAlias, 50),
    ("vkCmdSetScissorWithCountEXT", "cmd_set_scissor_with_count_ext", CommandAlias, 51),
    ("vkCmdBindVertexBuffers2EXT", "cmd_bind_vertex_buffers2_ext", CommandAlias, 52),
    ("vkCmdSetDepthTestEnableEXT", "cmd_set_depth_test_enable_ext", CommandAlias, 53),
    ("vkCmdSetDepthWriteEnableEXT", "cmd_set_depth_write_enable_ext", CommandAlias, 54),
    ("vkCmdSetDepthCompareOpEXT", "cmd_set_depth_compare_op_ext", CommandAlias, 55),
    ("vkCmdSetDepthBoundsTestEnableEXT", "cmd_set_depth_bounds_test_enable_ext", CommandAlias, 56),
    ("vkCmdSetStencilTestEnableEXT", "cmd_set_stencil_test_enable_ext", CommandAlias, 57),
    ("vkCmdSetStencilOpEXT", "cmd_set_stencil_op_ext", CommandAlias, 58),
    ("vkCmdSetRasterizerDiscardEnableEXT", "cmd_set_rasterizer_discard_enable_ext", CommandAlias, 59),
    ("vkCmdSetDepthBiasEnableEXT", "cmd_set_depth_bias_enable_ext", CommandAlias, 60),
    ("vkCmdSetPrimitiveRestartEnableEXT", "cmd_set_primitive_restart_enable_ext", CommandAlias, 61),
    ("vkCreatePrivateDataSlotEXT", "create_private_data_slot_ext", CommandAlias, 62),
    ("vkDestroyPrivateDataSlotEXT", "destroy_private_data_slot_ext", CommandAlias, 63),
    ("vkSetPrivateDataEXT", "set_private_data_ext", CommandAlias, 64),
    ("vkGetPrivateDataEXT", "get_private_data_ext", CommandAlias, 65),
    ("vkCmdCopyBuffer2KHR", "cmd_copy_buffer2_khr", CommandAlias, 66),
    ("vkCmdCopyImage2KHR", "cmd_copy_image2_khr", CommandAlias, 67),
    ("vkCmdBlitImage2KHR", "cmd_blit_image2_khr", CommandAlias, 68),
    ("vkCmdCopyBufferToImage2KHR", "cmd_copy_buffer_to_image2_khr", CommandAlias, 69),
    ("vkCmdCopyImageToBuffer2KHR", "cmd_copy_image_to_buffer2_khr", CommandAlias, 70),
    ("vkCmdResolveImage2KHR", "cmd_resolve_image2_khr", CommandAlias, 71),
    ("vkCmdSetEvent2KHR", "cmd_set_event2_khr", CommandAlias, 72),
    ("vkCmdResetEvent2KHR", "cmd_reset_event2_khr", CommandAlias, 73),
    ("vkCmdWaitEvents2KHR", "cmd_wait_events2_khr", CommandAlias, 74),
    ("vkCmdPipelineBarrier2KHR", "cmd_pipeline_barrier2_khr", CommandAlias, 75),
    ("vkQueueSubmit2KHR", "queue_submit2_khr", CommandAlias, 76),
    ("vkCmdWriteTimestamp2KHR", "cmd_write_timestamp2_khr", CommandAlias, 77),
    ("vkCmdBeginRenderingKHR", "cmd_begin_rendering_khr", CommandAlias, 78),
    ("vkCmdEndRenderingKHR", "cmd_end_rendering_khr", CommandAlias, 79),
    ("VK_ANDROID_NATIVE_BUFFER_NAME", "ANDROID_NATIVE_BUFFER_NAME", ConstantAlias, 7),
    ("VK_KHR_MAINTENANCE1_SPEC_VERSION", "KHR_MAINTENANCE1_SPEC_VERSION", ConstantAlias, 8),
    ("VK_KHR_MAINTENANCE1_EXTENSION_NAME", "KHR_MAINTENANCE1_EXTENSION_NAME", ConstantAlias, 9),
    ("VK_NV_VIEWPORT_ARRAY2_SPEC_VERSION", "NV_VIEWPORT_ARRAY2_SPEC_VERSION", ConstantAlias, 10),
    ("VK_NV_VIEWPORT_ARRAY2_EXTENSION_NAME", "NV_VIEWPORT_ARRAY2_EXTENSION_NAME", ConstantAlias, 11),
    ("VK_KHR_MAINTENANCE2_SPEC_VERSION", "KHR_MAINTENANCE2_SPEC_VERSION", ConstantAlias, 12),
    ("VK_KHR_MAINTENANCE2_EXTENSION_NAME", "KHR_MAINTENANCE2_EXTENSION_NAME", ConstantAlias, 13),
    ("VK_KHR_MAINTENANCE3_SPEC_VERSION", "KHR_MAINTENANCE3_SPEC_VERSION", ConstantAlias, 14),
    ("VK_KHR_MAINTENANCE3_EXTENSION_NAME", "KHR_MAINTENANCE3_EXTENSION_NAME", ConstantAlias, 15),
    ("VK_GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION", "GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION", ConstantAlias, 16),
    ("VK_GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME", "GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME", ConstantAlias, 17),
    ("VK_KHR_SURFACE_SPEC_VERSION", "KHR_SURFACE_SPEC_VERSION", Constant, 23),
    ("VK_KHR_SURFACE_EXTENSION_NAME", "KHR_SURFACE_EXTENSION_NAME", Constant, 24),
    ("VK_KHR_SWAPCHAIN_SPEC_VERSION", "KHR_SWAPCHAIN_SPEC_VERSION", Constant, 25),
    ("VK_KHR_SWAPCHAIN_EXTENSION_NAME", "KHR_SWAPCHAIN_EXTENSION_NAME", Constant, 26),
    ("VK_KHR_DISPLAY_SPEC_VERSION", "KHR_DISPLAY_SPEC_VERSION", Constant, 27),
    ("VK_KHR_DISPLAY_EXTENSION_NAME", "KHR_DISPLAY_EXTENSION_NAME", Constant, 28),
    ("VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION", "KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION", Constant, 29),
    ("VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME", "KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME", Constant, 30),
    ("VK_KHR_XLIB_SURFACE_SPEC_VERSION", "KHR_XLIB_SURFACE_SPEC_VERSION", Constant, 31),
    ("VK_KHR_XLIB_SURFACE_EXTENSION_NAME", "KHR_XLIB_SURFACE_EXTENSION_NAME", Constant, 32),
    ("VK_KHR_XCB_SURFACE_SPEC_VERSION", "KHR_XCB_SURFACE_SPEC_VERSION", Constant, 33),
    ("VK_KHR_XCB_SURFACE_EXTENSION_NAME", "KHR_XCB_SURFACE_EXTENSION_NAME", Constant, 34),
    ("VK_KHR_WAYLAND_SURFACE_SPEC_VERSION", "KHR_WAYLAND_SURFACE_SPEC_VERSION", Constant, 35),
    ("VK_KHR_WAYLAND_SURFACE_EXTENSION_NAME", "KHR_WAYLAND_SURFACE_EXTENSION_NAME", Constant, 36),
    ("VK_KHR_MIR_SURFACE_SPEC_VERSION", "KHR_MIR_SURFACE_SPEC_VERSION", Constant, 37),
    ("VK_KHR_MIR_SURFACE_EXTENSION_NAME", "KHR_MIR_SURFACE_EXTENSION_NAME", Constant, 38),
    ("VK_KHR_ANDROID_SURFACE_SPEC_VERSION", "KHR_ANDROID_SURFACE_SPEC_VERSION", Constant, 39),
    ("VK_KHR_ANDROID_SURFACE_EXTENSION_NAME", "KHR_ANDROID_SURFACE_EXTENSION_NAME", Constant, 40),
    ("VK_KHR_WIN32_SURFACE_SPEC_VERSION", "KHR_WIN32_SURFACE_SPEC_VERSION", Constant, 41),
    ("VK_KHR_WIN32_SURFACE_EXTENSION_NAME", "KHR_WIN32_SURFACE_EXTENSION_NAME", Constant, 42),
    ("VK_ANDROID_NATIVE_BUFFER_SPEC_VERSION", "ANDROID_NATIVE_BUFFER_SPEC_VERSION", Constant, 43),
    ("VK_ANDROID_NATIVE_BUFFER_NUMBER", "ANDROID_NATIVE_BUFFER_NUMBER", Constant, 44),
    ("VK_ANDROID_NATIVE_BUFFER_EXTENSION_NAME", "ANDROID_NATIVE_BUFFER_EXTENSION_NAME", Constant, 45),
    ("VK_EXT_DEBUG_REPORT_SPEC_VERSION", "EXT_DEBUG_REPORT_SPEC_VERSION", Constant, 46),
    ("VK_EXT_DEBUG_REPORT_EXTENSION_NAME", "EXT_DEBUG_REPORT_EXTENSION_NAME", Constant, 47),
    ("VK_NV_GLSL_SHADER_SPEC_VERSION", "NV_GLSL_SHADER_SPEC_VERSION", Constant, 48),
    ("VK_NV_GLSL_SHADER_EXTENSION_NAME", "NV_GLSL_SHADER_EXTENSION_NAME", Constant, 49),
    ("VK_EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION", "EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION", Constant, 50),
    ("VK_EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME", "EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME", Constant, 51),
    ("VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION", "KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION", Constant, 52),
    ("VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME", "KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME", Constant, 53),
    ("VK_IMG_FILTER_CUBIC_SPEC_VERSION", "IMG_FILTER_CUBIC_SPEC_VERSION", Constant, 54),
    ("VK_IMG_FILTER_CUBIC_EXTENSION_NAME", "IMG_FILTER_CUBIC_EXTENSION_NAME", Constant, 55),
    ("VK_AMD_EXTENSION_17_SPEC_VERSION", "AMD_EXTENSION_17_SPEC_VERSION", Constant, 56),
    ("VK_AMD_EXTENSION_17_EXTENSION_NAME", "AMD_EXTENSION_17_EXTENSION_NAME", Constant, 57),
    ("VK_AMD_EXTENSION_18_SPEC_VERSION", "AMD_EXTENSION_18_SPEC_VERSION", Constant, 58),
    ("VK_AMD_EXTENSION_18_EXTENSION_NAME", "AMD_EXTENSION_18_EXTENSION_NAME", Constant, 59),
    ("VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION", "AMD_RASTERIZATION_ORDER_SPEC_VERSION", Constant, 60),
    ("VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME", "AMD_RASTERIZATION_ORDER_EXTENSION_NAME", Constant, 61),
    ("VK_AMD_EXTENSION_20_SPEC_VERSION", "AMD_EXTENSION_20_SPEC_VERSION", Constant, 62),
    ("VK_AMD_EXTENSION_20_EXTENSION_NAME", "AMD_EXTENSION_20_EXTENSION_NAME", Constant, 63),
    ("VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION", "AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION", Constant, 64),
    ("VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME", "AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME", Constant, 65),
    ("VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION", "AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION", Constant, 66),
    ("VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME", "AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME", Constant, 67),
    ("VK_EXT_DEBUG_MARKER_SPEC_VERSION", "EXT_DEBUG_MARKER_SPEC_VERSION", Constant, 68),
    ("VK_EXT_DEBUG_MARKER_EXTENSION_NAME", "EXT_DEBUG_MARKER_EXTENSION_NAME", Constant, 69),
    ("VK_KHR_VIDEO_QUEUE_SPEC_VERSION", "KHR_VIDEO_QUEUE_SPEC_VERSION", Constant, 70),
    ("VK_KHR_VIDEO_QUEUE_EXTENSION_NAME", "KHR_VIDEO_QUEUE_EXTENSION_NAME", Constant, 71),
    ("VK_KHR_VIDEO_DECODE_QUEUE_SPEC_VERSION", "KHR_VIDEO_DECODE_QUEUE_SPEC_VERSION", Constant, 72),
    ("VK_KHR_VIDEO_DECODE_QUEUE_EXTENSION_NAME", "KHR_VIDEO_DECODE_QUEUE_EXTENSION_NAME", Constant, 73),
    ("VK_AMD_GCN_SHADER_SPEC_VERSION", "AMD_GCN_SHADER_SPEC_VERSION", Constant, 74),
    ("VK_AMD_GCN_SHADER_EXTENSION_NAME", "AMD_GCN_SHADER_EXTENSION_NAME", Constant, 75),
    ("VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION", "NV_DEDICATED_ALLOCATION_SPEC_VERSION", Constant, 76),
    ("VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME", "NV_DEDICATED_ALLOCATION_EXTENSION_NAME", Constant, 77),
    ("VK_EXT_EXTENSION_28_SPEC_VERSION", "EXT_EXTENSION_28_SPEC_VERSION", Constant, 78),
    ("VK_EXT_EXTENSION_28_EXTENSION_NAME", "EXT_EXTENSION_28_EXTENSION_NAME", Constant, 79),
    ("VK_EXT_TRANSFORM_FEEDBACK_SPEC_VERSION", "EXT_TRANSFORM_FEEDBACK_SPEC_VERSION", Constant, 80),
    ("VK_EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME", "EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME", Constant, 81),
    ("VK_NVX_BINARY_IMPORT_SPEC_VERSION", "NVX_BINARY_IMPORT_SPEC_VERSION", Constant, 82),
    ("VK_NVX_BINARY_IMPORT_EXTENSION_NAME", "NVX_BINARY_IMPORT_EXTENSION_NAME", Constant, 83),
    ("VK_NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION", "NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION", Constant, 84),
    ("VK_NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME", "NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME", Constant, 85),
    ("VK_AMD_EXTENSION_32_SPEC_VERSION", "AMD_EXTENSION_32_SPEC_VERSION", Constant, 86),
    ("VK_AMD_EXTENSION_32_EXTENSION_NAME", "AMD_EXTENSION_32_EXTENSION_NAME", Constant, 87),
    ("VK_AMD_EXTENSION_33_SPEC_VERSION", "AMD_EXTENSION_33_SPEC_VERSION", Constant, 88),
    ("VK_AMD_EXTENSION_33_EXTENSION_NAME", "AMD_EXTENSION_33_EXTENSION_NAME", Constant, 89),
    ("VK_AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION", "AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION", Constant, 90),
    ("VK_AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME", "AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME", Constant, 91),
    ("VK_AMD_EXTENSION_35_SPEC_VERSION", "AMD_EXTENSION_35_SPEC_VERSION", Constant, 92),
    ("VK_AMD_EXTENSION_35_EXTENSION_NAME", "AMD_EXTENSION_35_EXTENSION_NAME", Constant, 93),
    ("VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION", "AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION", Constant, 94),
    ("VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME", "AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME", Constant, 95),
    ("VK_AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION", "AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION", Constant, 96),
    ("VK_AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME", "AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME", Constant, 97),
    ("VK_AMD_SHADER_BALLOT_SPEC_VERSION", "AMD_SHADER_BALLOT_SPEC_VERSION", Constant, 98),
    ("VK_AMD_SHADER_BALLOT_EXTENSION_NAME", "AMD_SHADER_BALLOT_EXTENSION_NAME", Constant, 99),
    ("VK_EXT_VIDEO_ENCODE_H264_SPEC_VERSION", "EXT_VIDEO_ENCODE_H264_SPEC_VERSION", Constant, 100),
    ("VK_EXT_VIDEO_ENCODE_H264_EXTENSION_NAME", "EXT_VIDEO_ENCODE_H264_EXTENSION_NAME", Constant, 101),
    ("VK_EXT_VIDEO_ENCODE_H265_SPEC_VERSION", "EXT_VIDEO_ENCODE_H265_SPEC_VERSION", Constant, 102),
    ("VK_EXT_VIDEO_ENCODE_H265_EXTENSION_NAME", "EXT_VIDEO_ENCODE_H265_EXTENSION_NAME", Constant, 103),
    ("VK_EXT_VIDEO_DECODE_H264_SPEC_VERSION", "EXT_VIDEO_DECODE_H264_SPEC_VERSION", Constant, 104),
    ("VK_EXT_VIDEO_DECODE_H264_EXTENSION_NAME", "EXT_VIDEO_DECODE_H264_EXTENSION_NAME", Constant, 105),
    ("VK_AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION", "AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION", Constant, 106),
    ("VK_AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME", "AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME", Constant, 107),
    ("VK_AMD_SHADER_INFO_SPEC_VERSION", "AMD_SHADER_INFO_SPEC_VERSION", Constant, 108),
    ("VK_AMD_SHADER_INFO_EXTENSION_NAME", "AMD_SHADER_INFO_EXTENSION_NAME", Constant, 109),
    ("VK_AMD_EXTENSION_44_SPEC_VERSION", "AMD_EXTENSION_44_SPEC_VERSION", Constant, 110),
    ("VK_AMD_EXTENSION_44_EXTENSION_NAME", "AMD_EXTENSION_44_EXTENSION_NAME", Constant, 111),
    ("VK_KHR_DYNAMIC_RENDERING_SPEC_VERSION", "KHR_DYNAMIC_RENDERING_SPEC_VERSION", Constant, 112),
    ("VK_KHR_DYNAMIC_RENDERING_EXTENSION_NAME", "KHR_DYNAMIC_RENDERING_EXTENSION_NAME", Constant, 113),
    ("VK_AMD_EXTENSION_46_SPEC_VERSION", "AMD_EXTENSION_46_SPEC_VERSION", Constant, 114),
    ("VK_AMD_EXTENSION_46_EXTENSION_NAME", "AMD_EXTENSION_46_EXTENSION_NAME", Constant, 115),
    ("VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION", "AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION", Constant, 116),
    ("VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME", "AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME", Constant, 117),
    ("VK_NVX_EXTENSION_48_SPEC_VERSION", "NVX_EXTENSION_48_SPEC_VERSION", Constant, 118),
    ("VK_NVX_EXTENSION_48_EXTENSION_NAME", "NVX_EXTENSION_48_EXTENSION_NAME", Constant, 119),
    ("VK_GOOGLE_EXTENSION_49_SPEC_VERSION", "GOOGLE_EXTENSION_49_SPEC_VERSION", Constant, 120),
    ("VK_GOOGLE_EXTENSION_49_EXTENSION_NAME", "GOOGLE_EXTENSION_49_EXTENSION_NAME", Constant, 121),
    ("VK_GGP_STREAM_DESCRIPTOR_SURFACE_SPEC_VERSION", "GGP_STREAM_DESCRIPTOR_SURFACE_SPEC_VERSION", Constant, 122),
    ("VK_GGP_STREAM_DESCRIPTOR_SURFACE_EXTENSION_NAME", "GGP_STREAM_DESCRIPTOR_SURFACE_EXTENSION_NAME", Constant, 123),
    ("VK_NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION", "NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION", Constant, 124),
    ("VK_NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME", "NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME", Constant, 125),
    ("VK_NV_EXTENSION_52_SPEC_VERSION", "NV_EXTENSION_52_SPEC_VERSION", Constant, 126),
    ("VK_NV_EXTENSION_52_EXTENSION_NAME", "NV_EXTENSION_52_EXTENSION_NAME", Constant, 127),
    ("VK_NV_EXTENSION_53_SPEC_VERSION", "NV_EXTENSION_53_SPEC_VERSION", Constant, 128),
    ("VK_NV_EXTENSION_53_EXTENSION_NAME", "NV_EXTENSION_53_EXTENSION_NAME", Constant, 129),
    ("VK_KHR_MULTIVIEW_SPEC_VERSION", "KHR_MULTIVIEW_SPEC_VERSION", Constant, 130),
    ("VK_KHR_MULTIVIEW_EXTENSION_NAME", "KHR_MULTIVIEW_EXTENSION_NAME", Constant, 131),
    ("VK_IMG_FORMAT_PVRTC_SPEC_VERSION", "IMG_FORMAT_PVRTC_SPEC_VERSION", Constant, 132),
    ("VK_IMG_FORMAT_PVRTC_EXTENSION_NAME", "IMG_FORMAT_PVRTC_EXTENSION_NAME", Constant, 133),
    ("VK_NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION", "NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION", Constant, 134),
    ("VK_NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME", "NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME", Constant, 135),
    ("VK_NV_EXTERNAL_MEMORY_SPEC_VERSION", "NV_EXTERNAL_MEMORY_SPEC_VERSION", Constant, 136),
    ("VK_NV_EXTERNAL_MEMORY_EXTENSION_NAME", "NV_EXTERNAL_MEMORY_EXTENSION_NAME", Constant, 137),
    ("VK_NV_EXTERNAL_MEMORY_WIN32_SPEC_VERSION", "NV_EXTERNAL_MEMORY_WIN32_SPEC_VERSION", Constant, 138),
    ("VK_NV_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME", "NV_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME", Constant, 139),
    ("VK_NV_WIN32_KEYED_MUTEX_SPEC_VERSION", "NV_WIN32_KEYED_MUTEX_SPEC_VERSION", Constant, 140),
    ("VK_NV_WIN32_KEYED_MUTEX_EXTENSION_NAME", "NV_WIN32_KEYED_MUTEX_EXTENSION_NAME", Constant, 141),
    ("VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION", "KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION", Constant, 142),
    ("VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME", "KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME", Constant, 143),
    ("VK_KHR_DEVICE_GROUP_SPEC_VERSION", "KHR_DEVICE_GROUP_SPEC_VERSION", Constant, 144),
    ("VK_KHR_DEVICE_GROUP_EXTENSION_NAME", "KHR_DEVICE_GROUP_EXTENSION_NAME", Constant, 145),
    ("VK_EXT_VALIDATION_FLAGS_SPEC_VERSION", "EXT_VALIDATION_FLAGS_SPEC_VERSION", Constant, 146),
    ("VK_EXT_VALIDATION_FLAGS_EXTENSION_NAME", "EXT_VALIDATION_FLAGS_EXTENSION_NAME", Constant, 147),
    ("VK_NN_VI_SURFACE_SPEC_VERSION", "NN_VI_SURFACE_SPEC_VERSION", Constant, 148),
    ("VK_NN_VI_SURFACE_EXTENSION_NAME", "NN_VI_SURFACE_EXTENSION_NAME", Constant, 149),
    ("VK_KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION", "KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION", Constant, 150),
    ("VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME", "KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME", Constant, 151),
    ("VK_EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION", "EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION", Constant, 152),
    ("VK_EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME", "EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME", Constant, 153),
    ("VK_EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION", "EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION", Constant, 154),
    ("VK_EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME", "EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME", Constant, 155),
    ("VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION", "EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION", Constant, 156),
    ("VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME", "EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME", Constant, 157),
    ("VK_EXT_ASTC_DECODE_MODE_SPEC_VERSION", "EXT_ASTC_DECODE_MODE_SPEC_VERSION", Constant, 158),
    ("VK_EXT_ASTC_DECODE_MODE_EXTENSION_NAME", "EXT_ASTC_DECODE_MODE_EXTENSION_NAME", Constant, 159),
    ("VK_IMG_EXTENSION_69_SPEC_VERSION", "IMG_EXTENSION_69_SPEC_VERSION", Constant, 160),
    ("VK_IMG_EXTENSION_69_EXTENSION_NAME", "IMG_EXTENSION_69_EXTENSION_NAME", Constant, 161),
    ("VK_KHR_MAINTENANCE_1_SPEC_VERSION", "KHR_MAINTENANCE_1_SPEC_VERSION", Constant, 162),
    ("VK_KHR_MAINTENANCE_1_EXTENSION_NAME", "KHR_MAINTENANCE_1_EXTENSION_NAME", Constant, 163),
    ("VK_KHR_DEVICE_GROUP_CREATION_SPEC_VERSION", "KHR_DEVICE_GROUP_CREATION_SPEC_VERSION", Constant, 164),
    ("VK_KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME", "KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME", Constant, 165),
    ("VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION", "KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION", Constant, 166),
    ("VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME", "KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME", Constant, 167),
    ("VK_KHR_EXTERNAL_MEMORY_SPEC_VERSION", "KHR_EXTERNAL_MEMORY_SPEC_VERSION", Constant, 168),
    ("VK_KHR_EXTERNAL_MEMORY_EXTENSION_NAME", "KHR_EXTERNAL_MEMORY_EXTENSION_NAME", Constant, 169),
    ("VK_KHR_EXTERNAL_MEMORY_WIN32_SPEC_VERSION", "KHR_EXTERNAL_MEMORY_WIN32_SPEC_VERSION", Constant, 170),
    ("VK_KHR_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME", "KHR_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME", Constant, 171),
    ("VK_KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION", "KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION", Constant, 172),
    ("VK_KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME", "KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME", Constant, 173),
    ("VK_KHR_WIN32_KEYED_MUTEX_SPEC_VERSION", "KHR_WIN32_KEYED_MUTEX_SPEC_VERSION", Constant, 174),
    ("VK_KHR_WIN32_KEYED_MUTEX_EXTENSION_NAME", "KHR_WIN32_KEYED_MUTEX_EXTENSION_NAME", Constant, 175),
    ("VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION", "KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION", Constant, 176),
    ("VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME", "KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME", Constant, 177),
    ("VK_KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION", "KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION", Constant, 178),
    ("VK_KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME", "KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME", Constant, 179),
    ("VK_KHR_EXTERNAL_SEMAPHORE_WIN32_SPEC_VERSION", "KHR_EXTERNAL_SEMAPHORE_WIN32_SPEC_VERSION", Constant, 180),
    ("VK_KHR_EXTERNAL_SEMAPHORE_WIN32_EXTENSION_NAME", "KHR_EXTERNAL_SEMAPHORE_WIN32_EXTENSION_NAME", Constant, 181),
    ("VK_KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION", "KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION", Constant, 182),
    ("VK_KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME", "KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME", Constant, 183),
    ("VK_KHR_PUSH_DESCRIPTOR_SPEC_VERSION", "KHR_PUSH_DESCRIPTOR_SPEC_VERSION", Constant, 184),
    ("VK_KHR_PUSH_DESCRIPTOR_EXTENSION_NAME", "KHR_PUSH_DESCRIPTOR_EXTENSION_NAME", Constant, 185),
    ("VK_EXT_CONDITIONAL_RENDERING_SPEC_VERSION", "EXT_CONDITIONAL_RENDERING_SPEC_VERSION", Constant, 186),
    ("VK_EXT_CONDITIONAL_RENDERING_EXTENSION_NAME", "EXT_CONDITIONAL_RENDERING_EXTENSION_NAME", Constant, 187),
    ("VK_KHR_SHADER_FLOAT16_INT8_SPEC_VERSION", "KHR_SHADER_FLOAT16_INT8_SPEC_VERSION", Constant, 188),
    ("VK_KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME", "KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME", Constant, 189),
    ("VK_KHR_16BIT_STORAGE_SPEC_VERSION", "KHR_16BIT_STORAGE_SPEC_VERSION", Constant, 190),
    ("VK_KHR_16BIT_STORAGE_EXTENSION_NAME", "KHR_16BIT_STORAGE_EXTENSION_NAME", Constant, 191),
    ("VK_KHR_INCREMENTAL_PRESENT_SPEC_VERSION", "KHR_INCREMENTAL_PRESENT_SPEC_VERSION", Constant, 192),
    ("VK_KHR_INCREMENTAL_PRESENT_EXTENSION_NAME", "KHR_INCREMENTAL_PRESENT_EXTENSION_NAME", Constant, 193),
    ("VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION", "KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION", Constant, 194),
    ("VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME", "KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME", Constant, 195),
    ("VK_NVX_DEVICE_GENERATED_COMMANDS_SPEC_VERSION", "NVX_DEVICE_GENERATED_COMMANDS_SPEC_VERSION", Constant, 196),
    ("VK_NVX_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME", "NVX_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME", Constant, 197),
    ("VK_NV_CLIP_SPACE_W_SCALING_SPEC_VERSION", "NV_CLIP_SPACE_W_SCALING_SPEC_VERSION", Constant, 198),
    ("VK_NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME", "NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME", Constant, 199),
    ("VK_EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION", "EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION", Constant, 200),
    ("VK_EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME", "EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME", Constant, 201),
    ("VK_EXT_ACQUIRE_XLIB_DISPLAY_SPEC_VERSION", "EXT_ACQUIRE_XLIB_DISPLAY_SPEC_VERSION", Constant, 202),
    ("VK_EXT_ACQUIRE_XLIB_DISPLAY_EXTENSION_NAME", "EXT_ACQUIRE_XLIB_DISPLAY_EXTENSION_NAME", Constant, 203),
    ("VK_EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION", "EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION", Constant, 204),
    ("VK_EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME", "EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME", Constant, 205),
    ("VK_EXT_DISPLAY_CONTROL_SPEC_VERSION", "EXT_DISPLAY_CONTROL_SPEC_VERSION", Constant, 206),
    ("VK_EXT_DISPLAY_CONTROL_EXTENSION_NAME", "EXT_DISPLAY_CONTROL_EXTENSION_NAME", Constant, 207),
    ("VK_GOOGLE_DISPLAY_TIMING_SPEC_VERSION", "GOOGLE_DISPLAY_TIMING_SPEC_VERSION", Constant, 208),
    ("VK_GOOGLE_DISPLAY_TIMING_EXTENSION_NAME", "GOOGLE_DISPLAY_TIMING_EXTENSION_NAME", Constant, 209),
    ("VK_RESERVED_DO_NOT_USE_94_SPEC_VERSION", "RESERVED_DO_NOT_USE_94_SPEC_VERSION", Constant, 210),
    ("VK_RESERVED_DO_NOT_USE_94_EXTENSION_NAME", "RESERVED_DO_NOT_USE_94_EXTENSION_NAME", Constant, 211),
    ("VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION", "NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION", Constant, 212),
    ("VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME", "NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME", Constant, 213),
    ("VK_NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION", "NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION", Constant, 214),
    ("VK_NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME", "NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME", Constant, 215),
    ("VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION", "NV_VIEWPORT_ARRAY_2_SPEC_VERSION", Constant, 216),
    ("VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME", "NV_VIEWPORT_ARRAY_2_EXTENSION_NAME", Constant, 217),
    ("VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION", "NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION", Constant, 218),
    ("VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME", "NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME", Constant, 219),
    ("VK_NV_VIEWPORT_SWIZZLE_SPEC_VERSION", "NV_VIEWPORT_SWIZZLE_SPEC_VERSION", Constant, 220),
    ("VK_NV_VIEWPORT_SWIZZLE_EXTENSION_NAME", "NV_VIEWPORT_SWIZZLE_EXTENSION_NAME", Constant, 221),
    ("VK_EXT_DISCARD_RECTANGLES_SPEC_VERSION", "EXT_DISCARD_RECTANGLES_SPEC_VERSION", Constant, 222),
    ("VK_EXT_DISCARD_RECTANGLES_EXTENSION_NAME", "EXT_DISCARD_RECTANGLES_EXTENSION_NAME", Constant, 223),
    ("VK_NV_EXTENSION_101_SPEC_VERSION", "NV_EXTENSION_101_SPEC_VERSION", Constant, 224),
    ("VK_NV_EXTENSION_101_EXTENSION_NAME", "NV_EXTENSION_101_EXTENSION_NAME", Constant, 225),
    ("VK_EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION", "EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION", Constant, 226),
    ("VK_EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME", "EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME", Constant, 227),
    ("VK_EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION", "EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION", Constant, 228),
    ("VK_EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME", "EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME", Constant, 229),
    ("VK_NV_EXTENSION_104_SPEC_VERSION", "NV_EXTENSION_104_SPEC_VERSION", Constant, 230),
    ("VK_NV_EXTENSION_104_EXTENSION_NAME", "NV_EXTENSION_104_EXTENSION_NAME", Constant, 231),
    ("VK_EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION", "EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION", Constant, 232),
    ("VK_EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME", "EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME", Constant, 233),
    ("VK_EXT_HDR_METADATA_SPEC_VERSION", "EXT_HDR_METADATA_SPEC_VERSION", Constant, 234),
    ("VK_EXT_HDR_METADATA_EXTENSION_NAME", "EXT_HDR_METADATA_EXTENSION_NAME", Constant, 235),
    ("VK_IMG_EXTENSION_107_SPEC_VERSION", "IMG_EXTENSION_107_SPEC_VERSION", Constant, 236),
    ("VK_IMG_EXTENSION_107_EXTENSION_NAME", "IMG_EXTENSION_107_EXTENSION_NAME", Constant, 237),
    ("VK_IMG_EXTENSION_108_SPEC_VERSION", "IMG_EXTENSION_108_SPEC_VERSION", Constant, 238),
    ("VK_IMG_EXTENSION_108_EXTENSION_NAME", "IMG_EXTENSION_108_EXTENSION_NAME", Constant, 239),
    ("VK_KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION", "KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION", Constant, 240),
    ("VK_KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME", "KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME", Constant, 241),
    ("VK_KHR_CREATE_RENDERPASS_2_SPEC_VERSION", "KHR_CREATE_RENDERPASS_2_SPEC_VERSION", Constant, 242),
    ("VK_KHR_CREATE_RENDERPASS_2_EXTENSION_NAME", "KHR_CREATE_RENDERPASS_2_EXTENSION_NAME", Constant, 243),
    ("VK_IMG_EXTENSION_111_SPEC_VERSION", "IMG_EXTENSION_111_SPEC_VERSION", Constant, 244),
    ("VK_IMG_EXTENSION_111_EXTENSION_NAME", "IMG_EXTENSION_111_EXTENSION_NAME", Constant, 245),
    ("VK_KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION", "KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION", Constant, 246),
    ("VK_KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME", "KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME", Constant, 247),
    ("VK_KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION", "KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION", Constant, 248),
    ("VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME", "KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME", Constant, 249),
    ("VK_KHR_EXTERNAL_FENCE_SPEC_VERSION", "KHR_EXTERNAL_FENCE_SPEC_VERSION", Constant, 250),
    ("VK_KHR_EXTERNAL_FENCE_EXTENSION_NAME", "KHR_EXTERNAL_FENCE_EXTENSION_NAME", Constant, 251),
    ("VK_KHR_EXTERNAL_FENCE_WIN32_SPEC_VERSION", "KHR_EXTERNAL_FENCE_WIN32_SPEC_VERSION", Constant, 252),
    ("VK_KHR_EXTERNAL_FENCE_WIN32_EXTENSION_NAME", "KHR_EXTERNAL_FENCE_WIN32_EXTENSION_NAME", Constant, 253),
    ("VK_KHR_EXTERNAL_FENCE_FD_SPEC_VERSION", "KHR_EXTERNAL_FENCE_FD_SPEC_VERSION", Constant, 254),
    ("VK_KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME", "KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME", Constant, 255),
    ("VK_KHR_PERFORMANCE_QUERY_SPEC_VERSION", "KHR_PERFORMANCE_QUERY_SPEC_VERSION", Constant, 256),
    ("VK_KHR_PERFORMANCE_QUERY_EXTENSION_NAME", "KHR_PERFORMANCE_QUERY_EXTENSION_NAME", Constant, 257),
    ("VK_KHR_MAINTENANCE_2_SPEC_VERSION", "KHR_MAINTENANCE_2_SPEC_VERSION", Constant, 258),
    ("VK_KHR_MAINTENANCE_2_EXTENSION_NAME", "KHR_MAINTENANCE_2_EXTENSION_NAME", Constant, 259),
    ("VK_KHR_EXTENSION_119_SPEC_VERSION", "KHR_EXTENSION_119_SPEC_VERSION", Constant, 260),
    ("VK_KHR_EXTENSION_119_EXTENSION_NAME", "KHR_EXTENSION_119_EXTENSION_NAME", Constant, 261),
    ("VK_KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION", "KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION", Constant, 262),
    ("VK_KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME", "KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME", Constant, 263),
    ("VK_KHR_VARIABLE_POINTERS_SPEC_VERSION", "KHR_VARIABLE_POINTERS_SPEC_VERSION", Constant, 264),
    ("VK_KHR_VARIABLE_POINTERS_EXTENSION_NAME", "KHR_VARIABLE_POINTERS_EXTENSION_NAME", Constant, 265),
    ("VK_KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION", "KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION", Constant, 266),
    ("VK_KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME", "KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME", Constant, 267),
    ("VK_MVK_IOS_SURFACE_SPEC_VERSION", "MVK_IOS_SURFACE_SPEC_VERSION", Constant, 268),
    ("VK_MVK_IOS_SURFACE_EXTENSION_NAME", "MVK_IOS_SURFACE_EXTENSION_NAME", Constant, 269),
    ("VK_MVK_MACOS_SURFACE_SPEC_VERSION", "MVK_MACOS_SURFACE_SPEC_VERSION", Constant, 270),
    ("VK_MVK_MACOS_SURFACE_EXTENSION_NAME", "MVK_MACOS_SURFACE_EXTENSION_NAME", Constant, 271),
    ("VK_MVK_MOLTENVK_SPEC_VERSION", "MVK_MOLTENVK_SPEC_VERSION", Constant, 272),
    ("VK_MVK_MOLTENVK_EXTENSION_NAME", "MVK_MOLTENVK_EXTENSION_NAME", Constant, 273),
    ("VK_EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION", "EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION", Constant, 274),
    ("VK_EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME", "EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME", Constant, 275),
    ("VK_EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION", "EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION", Constant, 276),
    ("VK_EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME", "EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME", Constant, 277),
    ("VK_KHR_DEDICATED_ALLOCATION_SPEC_VERSION", "KHR_DEDICATED_ALLOCATION_SPEC_VERSION", Constant, 278),
    ("VK_KHR_DEDICATED_ALLOCATION_EXTENSION_NAME", "KHR_DEDICATED_ALLOCATION_EXTENSION_NAME", Constant, 279),
    ("VK_EXT_DEBUG_UTILS_SPEC_VERSION", "EXT_DEBUG_UTILS_SPEC_VERSION", Constant, 280),
    ("VK_EXT_DEBUG_UTILS_EXTENSION_NAME", "EXT_DEBUG_UTILS_EXTENSION_NAME", Constant, 281),
    ("VK_ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_SPEC_VERSION", "ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_SPEC_VERSION", Constant, 282),
    ("VK_ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_EXTENSION_NAME", "ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_EXTENSION_NAME", Constant, 283),
    ("VK_EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION", "EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION", Constant, 284),
    ("VK_EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME", "EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME", Constant, 285),
    ("VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION", "KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION", Constant, 286),
    ("VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME", "KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME", Constant, 287),
    ("VK_AMD_GPU_SHADER_INT16_SPEC_VERSION", "AMD_GPU_SHADER_INT16_SPEC_VERSION", Constant, 288),
    ("VK_AMD_GPU_SHADER_INT16_EXTENSION_NAME", "AMD_GPU_SHADER_INT16_EXTENSION_NAME", Constant, 289),
    ("VK_AMD_EXTENSION_134_SPEC_VERSION", "AMD_EXTENSION_134_SPEC_VERSION", Constant, 290),
    ("VK_AMD_EXTENSION_134_EXTENSION_NAME", "AMD_EXTENSION_134_EXTENSION_NAME", Constant, 291),
    ("VK_AMD_EXTENSION_135_SPEC_VERSION", "AMD_EXTENSION_135_SPEC_VERSION", Constant, 292),
    ("VK_AMD_EXTENSION_135_EXTENSION_NAME", "AMD_EXTENSION_135_EXTENSION_NAME", Constant, 293),
    ("VK_AMD_EXTENSION_136_SPEC_VERSION", "AMD_EXTENSION_136_SPEC_VERSION", Constant, 294),
    ("VK_AMD_EXTENSION_136_EXTENSION_NAME", "AMD_EXTENSION_136_EXTENSION_NAME", Constant, 295),
    ("VK_AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION", "AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION", Constant, 296),
    ("VK_AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME", "AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME", Constant, 297),
    ("VK_AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION", "AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION", Constant, 298),
    ("VK_AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME", "AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME", Constant, 299),
    ("VK_EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION", "EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION", Constant, 300),
    ("VK_EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME", "EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME", Constant, 301),
    ("VK_AMD_EXTENSION_140_SPEC_VERSION", "AMD_EXTENSION_140_SPEC_VERSION", Constant, 302),
    ("VK_AMD_EXTENSION_140_EXTENSION_NAME", "AMD_EXTENSION_140_EXTENSION_NAME", Constant, 303),
    ("VK_EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION", "EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION", Constant, 304),
    ("VK_EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME", "EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME", Constant, 305),
    ("VK_AMD_EXTENSION_142_SPEC_VERSION", "AMD_EXTENSION_142_SPEC_VERSION", Constant, 306),
    ("VK_AMD_EXTENSION_142_EXTENSION_NAME", "AMD_EXTENSION_142_EXTENSION_NAME", Constant, 307),
    ("VK_AMD_EXTENSION_143_SPEC_VERSION", "AMD_EXTENSION_143_SPEC_VERSION", Constant, 308),
    ("VK_AMD_EXTENSION_143_EXTENSION_NAME", "AMD_EXTENSION_143_EXTENSION_NAME", Constant, 309),
    ("VK_EXT_SAMPLE_LOCATIONS_SPEC_VERSION", "EXT_SAMPLE_LOCATIONS_SPEC_VERSION", Constant, 310),
    ("VK_EXT_SAMPLE_LOCATIONS_EXTENSION_NAME", "EXT_SAMPLE_LOCATIONS_EXTENSION_NAME", Constant, 311),
    ("VK_KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION", "KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION", Constant, 312),
    ("VK_KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME", "KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME", Constant, 313),
    ("VK_RESERVED_DO_NOT_USE_146_SPEC_VERSION", "RESERVED_DO_NOT_USE_146_SPEC_VERSION", Constant, 314),
    ("VK_RESERVED_DO_NOT_USE_146_EXTENSION_NAME", "RESERVED_DO_NOT_USE_146_EXTENSION_NAME", Constant, 315),
    ("VK_KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION", "KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION", Constant, 316),
    ("VK_KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME", "KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME", Constant, 317),
    ("VK_KHR_IMAGE_FORMAT_LIST_SPEC_VERSION", "KHR_IMAGE_FORMAT_LIST_SPEC_VERSION", Constant, 318),
    ("VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME", "KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME", Constant, 319),
    ("VK_EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION", "EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION", Constant, 320),
    ("VK_EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME", "EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME", Constant, 321),
    ("VK_NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION", "NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION", Constant, 322),
    ("VK_NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME", "NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME", Constant, 323),
    ("VK_KHR_ACCELERATION_STRUCTURE_SPEC_VERSION", "KHR_ACCELERATION_STRUCTURE_SPEC_VERSION", Constant, 324),
    ("VK_KHR_ACCELERATION_STRUCTURE_EXTENSION_NAME", "KHR_ACCELERATION_STRUCTURE_EXTENSION_NAME", Constant, 325),
    ("VK_KHR_RAY_TRACING_PIPELINE_SPEC_VERSION", "KHR_RAY_TRACING_PIPELINE_SPEC_VERSION", Constant, 326),
    ("VK_KHR_RAY_TRACING_PIPELINE_EXTENSION_NAME", "KHR_RAY_TRACING_PIPELINE_EXTENSION_NAME", Constant, 327),
    ("VK_KHR_RAY_QUERY_SPEC_VERSION", "KHR_RAY_QUERY_SPEC_VERSION", Constant, 328),
    ("VK_KHR_RAY_QUERY_EXTENSION_NAME", "KHR_RAY_QUERY_EXTENSION_NAME", Constant, 329),
    ("VK_NV_EXTENSION_152_SPEC_VERSION", "NV_EXTENSION_152_SPEC_VERSION", Constant, 330),
    ("VK_NV_EXTENSION_152_EXTENSION_NAME", "NV_EXTENSION_152_EXTENSION_NAME", Constant, 331),
    ("VK_NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION", "NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION", Constant, 332),
    ("VK_NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME", "NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME", Constant, 333),
    ("VK_NV_FILL_RECTANGLE_SPEC_VERSION", "NV_FILL_RECTANGLE_SPEC_VERSION", Constant, 334),
    ("VK_NV_FILL_RECTANGLE_EXTENSION_NAME", "NV_FILL_RECTANGLE_EXTENSION_NAME", Constant, 335),
    ("VK_NV_SHADER_SM_BUILTINS_SPEC_VERSION", "NV_SHADER_SM_BUILTINS_SPEC_VERSION", Constant, 336),
    ("VK_NV_SHADER_SM_BUILTINS_EXTENSION_NAME", "NV_SHADER_SM_BUILTINS_EXTENSION_NAME", Constant, 337),
    ("VK_EXT_POST_DEPTH_COVERAGE_SPEC_VERSION", "EXT_POST_DEPTH_COVERAGE_SPEC_VERSION", Constant, 338),
    ("VK_EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME", "EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME", Constant, 339),
    ("VK_KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION", "KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION", Constant, 340),
    ("VK_KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME", "KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME", Constant, 341),
    ("VK_KHR_BIND_MEMORY_2_SPEC_VERSION", "KHR_BIND_MEMORY_2_SPEC_VERSION", Constant, 342),
    ("VK_KHR_BIND_MEMORY_2_EXTENSION_NAME", "KHR_BIND_MEMORY_2_EXTENSION_NAME", Constant, 343),
    ("VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION", "EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION", Constant, 344),
    ("VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME", "EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME", Constant, 345),
    ("VK_EXT_EXTENSION_160_SPEC_VERSION", "EXT_EXTENSION_160_SPEC_VERSION", Constant, 346),
    ("VK_EXT_EXTENSION_160_EXTENSION_NAME", "EXT_EXTENSION_160_EXTENSION_NAME", Constant, 347),
    ("VK_EXT_VALIDATION_CACHE_SPEC_VERSION", "EXT_VALIDATION_CACHE_SPEC_VERSION", Constant, 348),
    ("VK_EXT_VALIDATION_CACHE_EXTENSION_NAME", "EXT_VALIDATION_CACHE_EXTENSION_NAME", Constant, 349),
    ("VK_EXT_DESCRIPTOR_INDEXING_SPEC_VERSION", "EXT_DESCRIPTOR_INDEXING_SPEC_VERSION", Constant, 350),
    ("VK_EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME", "EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME", Constant, 351),
    ("VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION", "EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION", Constant, 352),
    ("VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME", "EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME", Constant, 353),
    ("VK_KHR_PORTABILITY_SUBSET_SPEC_VERSION", "KHR_PORTABILITY_SUBSET_SPEC_VERSION", Constant, 354),
    ("VK_KHR_PORTABILITY_SUBSET_EXTENSION_NAME", "KHR_PORTABILITY_SUBSET_EXTENSION_NAME", Constant, 355),
    ("VK_NV_SHADING_RATE_IMAGE_SPEC_VERSION", "NV_SHADING_RATE_IMAGE_SPEC_VERSION", Constant, 356),
    ("VK_NV_SHADING_RATE_IMAGE_EXTENSION_NAME", "NV_SHADING_RATE_IMAGE_EXTENSION_NAME", Constant, 357),
    ("VK_NV_RAY_TRACING_SPEC_VERSION", "NV_RAY_TRACING_SPEC_VERSION", Constant, 358),
    ("VK_NV_RAY_TRACING_EXTENSION_NAME", "NV_RAY_TRACING_EXTENSION_NAME", Constant, 359),
    ("VK_NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION", "NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION", Constant, 360),
    ("VK_NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME", "NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME", Constant, 361),
    ("VK_NV_EXTENSION_168_SPEC_VERSION", "NV_EXTENSION_168_SPEC_VERSION", Constant, 362),
    ("VK_NV_EXTENSION_168_EXTENSION_NAME", "NV_EXTENSION_168_EXTENSION_NAME", Constant, 363),
    ("VK_KHR_MAINTENANCE_3_SPEC_VERSION", "KHR_MAINTENANCE_3_SPEC_VERSION", Constant, 364),
    ("VK_KHR_MAINTENANCE_3_EXTENSION_NAME", "KHR_MAINTENANCE_3_EXTENSION_NAME", Constant, 365),
    ("VK_KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION", "KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION", Constant, 366),
    ("VK_KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME", "KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME", Constant, 367),
    ("VK_EXT_FILTER_CUBIC_SPEC_VERSION", "EXT_FILTER_CUBIC_SPEC_VERSION", Constant, 368),
    ("VK_EXT_FILTER_CUBIC_EXTENSION_NAME", "EXT_FILTER_CUBIC_EXTENSION_NAME", Constant, 369),
    ("VK_QCOM_RENDER_PASS_SHADER_RESOLVE_SPEC_VERSION", "QCOM_RENDER_PASS_SHADER_RESOLVE_SPEC_VERSION", Constant, 370),
    ("VK_QCOM_RENDER_PASS_SHADER_RESOLVE_EXTENSION_NAME", "QCOM_RENDER_PASS_SHADER_RESOLVE_EXTENSION_NAME", Constant, 371),
    ("VK_QCOM_EXTENSION_173_SPEC_VERSION", "QCOM_EXTENSION_173_SPEC_VERSION", Constant, 372),
    ("VK_QCOM_EXTENSION_173_EXTENSION_NAME", "QCOM_EXTENSION_173_EXTENSION_NAME", Constant, 373),
    ("VK_QCOM_EXTENSION_174_SPEC_VERSION", "QCOM_EXTENSION_174_SPEC_VERSION", Constant, 374),
    ("VK_QCOM_EXTENSION_174_EXTENSION_NAME", "QCOM_EXTENSION_174_EXTENSION_NAME", Constant, 375),
    ("VK_EXT_GLOBAL_PRIORITY_SPEC_VERSION", "EXT_GLOBAL_PRIORITY_SPEC_VERSION", Constant, 376),
    ("VK_EXT_GLOBAL_PRIORITY_EXTENSION_NAME", "EXT_GLOBAL_PRIORITY_EXTENSION_NAME", Constant, 377),
    ("VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION", "KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION", Constant, 378),
    ("VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME", "KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME", Constant, 379),
    ("VK_EXT_EXTENSION_177_SPEC_VERSION", "EXT_EXTENSION_177_SPEC_VERSION", Constant, 380),
    ("VK_EXT_EXTENSION_177_EXTENSION_NAME", "EXT_EXTENSION_177_EXTENSION_NAME", Constant, 381),
    ("VK_KHR_8BIT_STORAGE_SPEC_VERSION", "KHR_8BIT_STORAGE_SPEC_VERSION", Constant, 382),
    ("VK_KHR_8BIT_STORAGE_EXTENSION_NAME", "KHR_8BIT_STORAGE_EXTENSION_NAME", Constant, 383),
    ("VK_EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION", "EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION", Constant, 384),
    ("VK_EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME", "EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME", Constant, 385),
    ("VK_AMD_BUFFER_MARKER_SPEC_VERSION", "AMD_BUFFER_MARKER_SPEC_VERSION", Constant, 386),
    ("VK_AMD_BUFFER_MARKER_EXTENSION_NAME", "AMD_BUFFER_MARKER_EXTENSION_NAME", Constant, 387),
    ("VK_KHR_SHADER_ATOMIC_INT64_SPEC_VERSION", "KHR_SHADER_ATOMIC_INT64_SPEC_VERSION", Constant, 388),
    ("VK_KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME", "KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME", Constant, 389),
    ("VK_KHR_SHADER_CLOCK_SPEC_VERSION", "KHR_SHADER_CLOCK_SPEC_VERSION", Constant, 390),
    ("VK_KHR_SHADER_CLOCK_EXTENSION_NAME", "KHR_SHADER_CLOCK_EXTENSION_NAME", Constant, 391),
    ("VK_AMD_EXTENSION_183_SPEC_VERSION", "AMD_EXTENSION_183_SPEC_VERSION", Constant, 392),
    ("VK_AMD_EXTENSION_183_EXTENSION_NAME", "AMD_EXTENSION_183_EXTENSION_NAME", Constant, 393),
    ("VK_AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION", "AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION", Constant, 394),
    ("VK_AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME", "AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME", Constant, 395),
    ("VK_EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION", "EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION", Constant, 396),
    ("VK_EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME", "EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME", Constant, 397),
    ("VK_AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION", "AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION", Constant, 398),
    ("VK_AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME", "AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME", Constant, 399),
    ("VK_AMD_EXTENSION_187_SPEC_VERSION", "AMD_EXTENSION_187_SPEC_VERSION", Constant, 400),
    ("VK_AMD_EXTENSION_187_EXTENSION_NAME", "AMD_EXTENSION_187_EXTENSION_NAME", Constant, 401),
    ("VK_EXT_VIDEO_DECODE_H265_SPEC_VERSION", "EXT_VIDEO_DECODE_H265_SPEC_VERSION", Constant, 402),
    ("VK_EXT_VIDEO_DECODE_H265_EXTENSION_NAME", "EXT_VIDEO_DECODE_H265_EXTENSION_NAME", Constant, 403),
    ("VK_KHR_GLOBAL_PRIORITY_SPEC_VERSION", "KHR_GLOBAL_PRIORITY_SPEC_VERSION", Constant, 404),
    ("VK_KHR_GLOBAL_PRIORITY_EXTENSION_NAME", "KHR_GLOBAL_PRIORITY_EXTENSION_NAME", Constant, 405),
    ("VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION", "AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION", Constant, 406),
    ("VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME", "AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME", Constant, 407),
    ("VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION", "EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION", Constant, 408),
    ("VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME", "EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME", Constant, 409),
    ("VK_GGP_FRAME_TOKEN_SPEC_VERSION", "GGP_FRAME_TOKEN_SPEC_VERSION", Constant, 410),
    ("VK_GGP_FRAME_TOKEN_EXTENSION_NAME", "GGP_FRAME_TOKEN_EXTENSION_NAME", Constant, 411),
    ("VK_EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION", "EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION", Constant, 412),
    ("VK_EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME", "EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME", Constant, 413),
    ("VK_GOOGLE_EXTENSION_194_SPEC_VERSION", "GOOGLE_EXTENSION_194_SPEC_VERSION", Constant, 414),
    ("VK_GOOGLE_EXTENSION_194_EXTENSION_NAME", "GOOGLE_EXTENSION_194_EXTENSION_NAME", Constant, 415),
    ("VK_GOOGLE_EXTENSION_195_SPEC_VERSION", "GOOGLE_EXTENSION_195_SPEC_VERSION", Constant, 416),
    ("VK_GOOGLE_EXTENSION_195_EXTENSION_NAME", "GOOGLE_EXTENSION_195_EXTENSION_NAME", Constant, 417),
    ("VK_GOOGLE_EXTENSION_196_SPEC_VERSION", "GOOGLE_EXTENSION_196_SPEC_VERSION", Constant, 418),
    ("VK_GOOGLE_EXTENSION_196_EXTENSION_NAME", "GOOGLE_EXTENSION_196_EXTENSION_NAME", Constant, 419),
    ("VK_KHR_DRIVER_PROPERTIES_SPEC_VERSION", "KHR_DRIVER_PROPERTIES_SPEC_VERSION", Constant, 420),
    ("VK_KHR_DRIVER_PROPERTIES_EXTENSION_NAME", "KHR_DRIVER_PROPERTIES_EXTENSION_NAME", Constant, 421),
    ("VK_KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION", "KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION", Constant, 422),
    ("VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME", "KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME", Constant, 423),
    ("VK_NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION", "NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION", Constant, 424),
    ("VK_NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME", "NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME", Constant, 425),
    ("VK_KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION", "KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION", Constant, 426),
    ("VK_KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME", "KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME", Constant, 427),
    ("VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION", "KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION", Constant, 428),
    ("VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME", "KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME", Constant, 429),
    ("VK_NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION", "NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION", Constant, 430),
    ("VK_NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME", "NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME", Constant, 431),
    ("VK_NV_MESH_SHADER_SPEC_VERSION", "NV_MESH_SHADER_SPEC_VERSION", Constant, 432),
    ("VK_NV_MESH_SHADER_EXTENSION_NAME", "NV_MESH_SHADER_EXTENSION_NAME", Constant, 433),
    ("VK_NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION", "NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION", Constant, 434),
    ("VK_NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME", "NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME", Constant, 435),
    ("VK_NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION", "NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION", Constant, 436),
    ("VK_NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME", "NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME", Constant, 437),
    ("VK_NV_SCISSOR_EXCLUSIVE_SPEC_VERSION", "NV_SCISSOR_EXCLUSIVE_SPEC_VERSION", Constant, 438),
    ("VK_NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME", "NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME", Constant, 439),
    ("VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION", "NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION", Constant, 440),
    ("VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME", "NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME", Constant, 441),
    ("VK_KHR_TIMELINE_SEMAPHORE_SPEC_VERSION", "KHR_TIMELINE_SEMAPHORE_SPEC_VERSION", Constant, 442),
    ("VK_KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME", "KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME", Constant, 443),
    ("VK_KHR_EXTENSION_209_SPEC_VERSION", "KHR_EXTENSION_209_SPEC_VERSION", Constant, 444),
    ("VK_KHR_EXTENSION_209_EXTENSION_NAME", "KHR_EXTENSION_209_EXTENSION_NAME", Constant, 445),
    ("VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION", "INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION", Constant, 446),
    ("VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME", "INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME", Constant, 447),
    ("VK_INTEL_PERFORMANCE_QUERY_SPEC_VERSION", "INTEL_PERFORMANCE_QUERY_SPEC_VERSION", Constant, 448),
    ("VK_INTEL_PERFORMANCE_QUERY_EXTENSION_NAME", "INTEL_PERFORMANCE_QUERY_EXTENSION_NAME", Constant, 449),
    ("VK_KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION", "KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION", Constant, 450),
    ("VK_KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME", "KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME", Constant, 451),
    ("VK_EXT_PCI_BUS_INFO_SPEC_VERSION", "EXT_PCI_BUS_INFO_SPEC_VERSION", Constant, 452),
    ("VK_EXT_PCI_BUS_INFO_EXTENSION_NAME", "EXT_PCI_BUS_INFO_EXTENSION_NAME", Constant, 453),
    ("VK_AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION", "AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION", Constant, 454),
    ("VK_AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME", "AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME", Constant, 455),
    ("VK_FUCHSIA_IMAGEPIPE_SURFACE_SPEC_VERSION", "FUCHSIA_IMAGEPIPE_SURFACE_SPEC_VERSION", Constant, 456),
    ("VK_FUCHSIA_IMAGEPIPE_SURFACE_EXTENSION_NAME", "FUCHSIA_IMAGEPIPE_SURFACE_EXTENSION_NAME", Constant, 457),
    ("VK_KHR_SHADER_TERMINATE_INVOCATION_SPEC_VERSION", "KHR_SHADER_TERMINATE_INVOCATION_SPEC_VERSION", Constant, 458),
    ("VK_KHR_SHADER_TERMINATE_INVOCATION_EXTENSION_NAME", "KHR_SHADER_TERMINATE_INVOCATION_EXTENSION_NAME", Constant, 459),
    ("VK_GOOGLE_EXTENSION_217_SPEC_VERSION", "GOOGLE_EXTENSION_217_SPEC_VERSION", Constant, 460),
    ("VK_GOOGLE_EXTENSION_217_EXTENSION_NAME", "GOOGLE_EXTENSION_217_EXTENSION_NAME", Constant, 461),
    ("VK_EXT_METAL_SURFACE_SPEC_VERSION", "EXT_METAL_SURFACE_SPEC_VERSION", Constant, 462),
    ("VK_EXT_METAL_SURFACE_EXTENSION_NAME", "EXT_METAL_SURFACE_EXTENSION_NAME", Constant, 463),
    ("VK_EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION", "EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION", Constant, 464),
    ("VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME", "EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME", Constant, 465),
    ("VK_EXT_EXTENSION_220_SPEC_VERSION", "EXT_EXTENSION_220_SPEC_VERSION", Constant, 466),
    ("VK_EXT_EXTENSION_220_EXTENSION_NAME", "EXT_EXTENSION_220_EXTENSION_NAME", Constant, 467),
    ("VK_KHR_EXTENSION_221_SPEC_VERSION", "KHR_EXTENSION_221_SPEC_VERSION", Constant, 468),
    ("VK_KHR_EXTENSION_221_EXTENSION_NAME", "KHR_EXTENSION_221_EXTENSION_NAME", Constant, 469),
    ("VK_EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION", "EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION", Constant, 470),
    ("VK_EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME", "EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME", Constant, 471),
    ("VK_EXT_EXTENSION_223_SPEC_VERSION", "EXT_EXTENSION_223_SPEC_VERSION", Constant, 472),
    ("VK_EXT_EXTENSION_223_EXTENSION_NAME", "EXT_EXTENSION_223_EXTENSION_NAME", Constant, 473),
    ("VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION", "GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION", Constant, 474),
    ("VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME", "GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME", Constant, 475),
    ("VK_GOOGLE_DECORATE_STRING_SPEC_VERSION", "GOOGLE_DECORATE_STRING_SPEC_VERSION", Constant, 476),
    ("VK_GOOGLE_DECORATE_STRING_EXTENSION_NAME", "GOOGLE_DECORATE_STRING_EXTENSION_NAME", Constant, 477),
    ("VK_EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION", "EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION", Constant, 478),
    ("VK_EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME", "EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME", Constant, 479),
    ("VK_KHR_FRAGMENT_SHADING_RATE_SPEC_VERSION", "KHR_FRAGMENT_SHADING_RATE_SPEC_VERSION", Constant, 480),
    ("VK_KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME", "KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME", Constant, 481),
    ("VK_AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION", "AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION", Constant, 482),
    ("VK_AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME", "AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME", Constant, 483),
    ("VK_AMD_EXTENSION_229_SPEC_VERSION", "AMD_EXTENSION_229_SPEC_VERSION", Constant, 484),
    ("VK_AMD_EXTENSION_229_EXTENSION_NAME", "AMD_EXTENSION_229_EXTENSION_NAME", Constant, 485),
    ("VK_AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION", "AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION", Constant, 486),
    ("VK_AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME", "AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME", Constant, 487),
    ("VK_AMD_EXTENSION_231_SPEC_VERSION", "AMD_EXTENSION_231_SPEC_VERSION", Constant, 488),
    ("VK_AMD_EXTENSION_231_EXTENSION_NAME", "AMD_EXTENSION_231_EXTENSION_NAME", Constant, 489),
    ("VK_AMD_EXTENSION_232_SPEC_VERSION", "AMD_EXTENSION_232_SPEC_VERSION", Constant, 490),
    ("VK_AMD_EXTENSION_232_EXTENSION_NAME", "AMD_EXTENSION_232_EXTENSION_NAME", Constant, 491),
    ("VK_AMD_EXTENSION_233_SPEC_VERSION", "AMD_EXTENSION_233_SPEC_VERSION", Constant, 492),
    ("VK_AMD_EXTENSION_233_EXTENSION_NAME", "AMD_EXTENSION_233_EXTENSION_NAME", Constant, 493),
    ("VK_AMD_EXTENSION_234_SPEC_VERSION", "AMD_EXTENSION_234_SPEC_VERSION", Constant, 494),
    ("VK_AMD_EXTENSION_234_EXTENSION_NAME", "AMD_EXTENSION_234_EXTENSION_NAME", Constant, 495),
    ("VK_EXT_SHADER_IMAGE_ATOMIC_INT64_SPEC_VERSION", "EXT_SHADER_IMAGE_ATOMIC_INT64_SPEC_VERSION", Constant, 496),
    ("VK_EXT_SHADER_IMAGE_ATOMIC_INT64_EXTENSION_NAME", "EXT_SHADER_IMAGE_ATOMIC_INT64_EXTENSION_NAME", Constant, 497),
    ("VK_AMD_EXTENSION_236_SPEC_VERSION", "AMD_EXTENSION_236_SPEC_VERSION", Constant, 498),
    ("VK_AMD_EXTENSION_236_EXTENSION_NAME", "AMD_EXTENSION_236_EXTENSION_NAME", Constant, 499),
    ("VK_KHR_SPIRV_1_4_SPEC_VERSION", "KHR_SPIRV_1_4_SPEC_VERSION", Constant, 500),
    ("VK_KHR_SPIRV_1_4_EXTENSION_NAME", "KHR_SPIRV_1_4_EXTENSION_NAME", Constant, 501),
    ("VK_EXT_MEMORY_BUDGET_SPEC_VERSION", "EXT_MEMORY_BUDGET_SPEC_VERSION", Constant, 502),
    ("VK_EXT_MEMORY_BUDGET_EXTENSION_NAME", "EXT_MEMORY_BUDGET_EXTENSION_NAME", Constant, 503),
    ("VK_EXT_MEMORY_PRIORITY_SPEC_VERSION", "EXT_MEMORY_PRIORITY_SPEC_VERSION", Constant, 504),
    ("VK_EXT_MEMORY_PRIORITY_EXTENSION_NAME", "EXT_MEMORY_PRIORITY_EXTENSION_NAME", Constant, 505),
    ("VK_KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION", "KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION", Constant, 506),
    ("VK_KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME", "KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME", Constant, 507),
    ("VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION", "NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION", Constant, 508),
    ("VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME", "NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME", Constant, 509),
    ("VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_SPEC_VERSION", "KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_SPEC_VERSION", Constant, 510),
    ("VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_EXTENSION_NAME", "KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_EXTENSION_NAME", Constant, 511),
    ("VK_INTEL_EXTENSION_243_SPEC_VERSION", "INTEL_EXTENSION_243_SPEC_VERSION", Constant, 512),
    ("VK_INTEL_EXTENSION_243_EXTENSION_NAME", "INTEL_EXTENSION_243_EXTENSION_NAME", Constant, 513),
    ("VK_MESA_EXTENSION_244_SPEC_VERSION", "MESA_EXTENSION_244_SPEC_VERSION", Constant, 514),
    ("VK_MESA_EXTENSION_244_EXTENSION_NAME", "MESA_EXTENSION_244_EXTENSION_NAME", Constant, 515),
    ("VK_EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION", "EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION", Constant, 516),
    ("VK_EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME", "EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME", Constant, 517),
    ("VK_EXT_TOOLING_INFO_SPEC_VERSION", "EXT_TOOLING_INFO_SPEC_VERSION", Constant, 518),
    ("VK_EXT_TOOLING_INFO_EXTENSION_NAME", "EXT_TOOLING_INFO_EXTENSION_NAME", Constant, 519),
    ("VK_EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION", "EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION", Constant, 520),
    ("VK_EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME", "EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME", Constant, 521),
    ("VK_EXT_VALIDATION_FEATURES_SPEC_VERSION", "EXT_VALIDATION_FEATURES_SPEC_VERSION", Constant, 522),
    ("VK_EXT_VALIDATION_FEATURES_EXTENSION_NAME", "EXT_VALIDATION_FEATURES_EXTENSION_NAME", Constant, 523),
    ("VK_KHR_PRESENT_WAIT_SPEC_VERSION", "KHR_PRESENT_WAIT_SPEC_VERSION", Constant, 524),
    ("VK_KHR_PRESENT_WAIT_EXTENSION_NAME", "KHR_PRESENT_WAIT_EXTENSION_NAME", Constant, 525),
    ("VK_NV_COOPERATIVE_MATRIX_SPEC_VERSION", "NV_COOPERATIVE_MATRIX_SPEC_VERSION", Constant, 526),
    ("VK_NV_COOPERATIVE_MATRIX_EXTENSION_NAME", "NV_COOPERATIVE_MATRIX_EXTENSION_NAME", Constant, 527),
    ("VK_NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION", "NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION", Constant, 528),
    ("VK_NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME", "NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME", Constant, 529),
    ("VK_EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION", "EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION", Constant, 530),
    ("VK_EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME", "EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME", Constant, 531),
    ("VK_EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION", "EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION", Constant, 532),
    ("VK_EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME", "EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME", Constant, 533),
    ("VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION", "KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION", Constant, 534),
    ("VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME", "KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME", Constant, 535),
    ("VK_EXT_PROVOKING_VERTEX_SPEC_VERSION", "EXT_PROVOKING_VERTEX_SPEC_VERSION", Constant, 536),
    ("VK_EXT_PROVOKING_VERTEX_EXTENSION_NAME", "EXT_PROVOKING_VERTEX_EXTENSION_NAME", Constant, 537),
    ("VK_EXT_FULL_SCREEN_EXCLUSIVE_SPEC_VERSION", "EXT_FULL_SCREEN_EXCLUSIVE_SPEC_VERSION", Constant, 538),
    ("VK_EXT_FULL_SCREEN_EXCLUSIVE_EXTENSION_NAME", "EXT_FULL_SCREEN_EXCLUSIVE_EXTENSION_NAME", Constant, 539),
    ("VK_EXT_HEADLESS_SURFACE_SPEC_VERSION", "EXT_HEADLESS_SURFACE_SPEC_VERSION", Constant, 540),
    ("VK_EXT_HEADLESS_SURFACE_EXTENSION_NAME", "EXT_HEADLESS_SURFACE_EXTENSION_NAME", Constant, 541),
    ("VK_KHR_BUFFER_DEVICE_ADDRESS_SPEC_VERSION", "KHR_BUFFER_DEVICE_ADDRESS_SPEC_VERSION", Constant, 542),
    ("VK_KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME", "KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME", Constant, 543),
    ("VK_EXT_EXTENSION_259_SPEC_VERSION", "EXT_EXTENSION_259_SPEC_VERSION", Constant, 544),
    ("VK_EXT_EXTENSION_259_EXTENSION_NAME", "EXT_EXTENSION_259_EXTENSION_NAME", Constant, 545),
    ("VK_EXT_LINE_RASTERIZATION_SPEC_VERSION", "EXT_LINE_RASTERIZATION_SPEC_VERSION", Constant, 546),
    ("VK_EXT_LINE_RASTERIZATION_EXTENSION_NAME", "EXT_LINE_RASTERIZATION_EXTENSION_NAME", Constant, 547),
    ("VK_EXT_SHADER_ATOMIC_FLOAT_SPEC_VERSION", "EXT_SHADER_ATOMIC_FLOAT_SPEC_VERSION", Constant, 548),
    ("VK_EXT_SHADER_ATOMIC_FLOAT_EXTENSION_NAME", "EXT_SHADER_ATOMIC_FLOAT_EXTENSION_NAME", Constant, 549),
    ("VK_EXT_HOST_QUERY_RESET_SPEC_VERSION", "EXT_HOST_QUERY_RESET_SPEC_VERSION", Constant, 550),
    ("VK_EXT_HOST_QUERY_RESET_EXTENSION_NAME", "EXT_HOST_QUERY_RESET_EXTENSION_NAME", Constant, 551),
    ("VK_GGP_EXTENSION_263_SPEC_VERSION", "GGP_EXTENSION_263_SPEC_VERSION", Constant, 552),
    ("VK_GGP_EXTENSION_263_EXTENSION_NAME", "GGP_EXTENSION_263_EXTENSION_NAME", Constant, 553),
    ("VK_BRCM_EXTENSION_264_SPEC_VERSION", "BRCM_EXTENSION_264_SPEC_VERSION", Constant, 554),
    ("VK_BRCM_EXTENSION_264_EXTENSION_NAME", "BRCM_EXTENSION_264_EXTENSION_NAME", Constant, 555),
    ("VK_BRCM_EXTENSION_265_SPEC_VERSION", "BRCM_EXTENSION_265_SPEC_VERSION", Constant, 556),
    ("VK_BRCM_EXTENSION_265_EXTENSION_NAME", "BRCM_EXTENSION_265_EXTENSION_NAME", Constant, 557),
    ("VK_EXT_INDEX_TYPE_UINT8_SPEC_VERSION", "EXT_INDEX_TYPE_UINT8_SPEC_VERSION", Constant, 558),
    ("VK_EXT_INDEX_TYPE_UINT8_EXTENSION_NAME", "EXT_INDEX_TYPE_UINT8_EXTENSION_NAME", Constant, 559),
    ("VK_EXT_EXTENSION_267_SPEC_VERSION", "EXT_EXTENSION_267_SPEC_VERSION", Constant, 560),
    ("VK_EXT_EXTENSION_267_EXTENSION_NAME", "EXT_EXTENSION_267_EXTENSION_NAME", Constant, 561),
    ("VK_EXT_EXTENDED_DYNAMIC_STATE_SPEC_VERSION", "EXT_EXTENDED_DYNAMIC_STATE_SPEC_VERSION", Constant, 562),
    ("VK_EXT_EXTENDED_DYNAMIC_STATE_EXTENSION_NAME", "EXT_EXTENDED_DYNAMIC_STATE_EXTENSION_NAME", Constant, 563),
    ("VK_KHR_DEFERRED_HOST_OPERATIONS_SPEC_VERSION", "KHR_DEFERRED_HOST_OPERATIONS_SPEC_VERSION", Constant, 564),
    ("VK_KHR_DEFERRED_HOST_OPERATIONS_EXTENSION_NAME", "KHR_DEFERRED_HOST_OPERATIONS_EXTENSION_NAME", Constant, 565),
    ("VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION", "KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION", Constant, 566),
    ("VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME", "KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME", Constant, 567),
    ("VK_INTEL_EXTENSION_271_SPEC_VERSION", "INTEL_EXTENSION_271_SPEC_VERSION", Constant, 568),
    ("VK_INTEL_EXTENSION_271_EXTENSION_NAME", "INTEL_EXTENSION_271_EXTENSION_NAME", Constant, 569),
    ("VK_INTEL_EXTENSION_272_SPEC_VERSION", "INTEL_EXTENSION_272_SPEC_VERSION", Constant, 570),
    ("VK_INTEL_EXTENSION_272_EXTENSION_NAME", "INTEL_EXTENSION_272_EXTENSION_NAME", Constant, 571),
    ("VK_INTEL_EXTENSION_273_SPEC_VERSION", "INTEL_EXTENSION_273_SPEC_VERSION", Constant, 572),
    ("VK_INTEL_EXTENSION_273_EXTENSION_NAME", "INTEL_EXTENSION_273_EXTENSION_NAME", Constant, 573),
    ("VK_EXT_SHADER_ATOMIC_FLOAT_2_SPEC_VERSION", "EXT_SHADER_ATOMIC_FLOAT_2_SPEC_VERSION", Constant, 574),
    ("VK_EXT_SHADER_ATOMIC_FLOAT_2_EXTENSION_NAME", "EXT_SHADER_ATOMIC_FLOAT_2_EXTENSION_NAME", Constant, 575),
    ("VK_KHR_EXTENSION_275_SPEC_VERSION", "KHR_EXTENSION_275_SPEC_VERSION", Constant, 576),
    ("VK_KHR_EXTENSION_275_EXTENSION_NAME", "KHR_EXTENSION_275_EXTENSION_NAME", Constant, 577),
    ("VK_KHR_EXTENSION_276_SPEC_VERSION", "KHR_EXTENSION_276_SPEC_VERSION", Constant, 578),
    ("VK_KHR_EXTENSION_276_EXTENSION_NAME", "KHR_EXTENSION_276_EXTENSION_NAME", Constant, 579),
    ("VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION", "EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION", Constant, 580),
    ("VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME", "EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME", Constant, 581),
    ("VK_NV_DEVICE_GENERATED_COMMANDS_SPEC_VERSION", "NV_DEVICE_GENERATED_COMMANDS_SPEC_VERSION", Constant, 582),
    ("VK_NV_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME", "NV_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME", Constant, 583),
    ("VK_NV_INHERITED_VIEWPORT_SCISSOR_SPEC_VERSION", "NV_INHERITED_VIEWPORT_SCISSOR_SPEC_VERSION", Constant, 584),
    ("VK_NV_INHERITED_VIEWPORT_SCISSOR_EXTENSION_NAME", "NV_INHERITED_VIEWPORT_SCISSOR_EXTENSION_NAME", Constant, 585),
    ("VK_KHR_EXTENSION_280_SPEC_VERSION", "KHR_EXTENSION_280_SPEC_VERSION", Constant, 586),
    ("VK_KHR_EXTENSION_280_EXTENSION_NAME", "KHR_EXTENSION_280_EXTENSION_NAME", Constant, 587),
    ("VK_KHR_SHADER_INTEGER_DOT_PRODUCT_SPEC_VERSION", "KHR_SHADER_INTEGER_DOT_PRODUCT_SPEC_VERSION", Constant, 588),
    ("VK_KHR_SHADER_INTEGER_DOT_PRODUCT_EXTENSION_NAME", "KHR_SHADER_INTEGER_DOT_PRODUCT_EXTENSION_NAME", Constant, 589),
    ("VK_EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION", "EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION", Constant, 590),
    ("VK_EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME", "EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME", Constant, 591),
    ("VK_QCOM_RENDER_PASS_TRANSFORM_SPEC_VERSION", "QCOM_RENDER_PASS_TRANSFORM_SPEC_VERSION", Constant, 592),
    ("VK_QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME", "QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME", Constant, 593),
    ("VK_EXT_EXTENSION_284_SPEC_VERSION", "EXT_EXTENSION_284_SPEC_VERSION", Constant, 594),
    ("VK_EXT_EXTENSION_284_EXTENSION_NAME", "EXT_EXTENSION_284_EXTENSION_NAME", Constant, 595),
    ("VK_EXT_DEVICE_MEMORY_REPORT_SPEC_VERSION", "EXT_DEVICE_MEMORY_REPORT_SPEC_VERSION", Constant, 596),
    ("VK_EXT_DEVICE_MEMORY_REPORT_EXTENSION_NAME", "EXT_DEVICE_MEMORY_REPORT_EXTENSION_NAME", Constant, 597),
    ("VK_EXT_ACQUIRE_DRM_DISPLAY_SPEC_VERSION", "EXT_ACQUIRE_DRM_DISPLAY_SPEC_VERSION", Constant, 598),
    ("VK_EXT_ACQUIRE_DRM_DISPLAY_EXTENSION_NAME", "EXT_ACQUIRE_DRM_DISPLAY_EXTENSION_NAME", Constant, 599),
    ("VK_EXT_ROBUSTNESS_2_SPEC_VERSION", "EXT_ROBUSTNESS_2_SPEC_VERSION", Constant, 600),
    ("VK_EXT_ROBUSTNESS_2_EXTENSION_NAME", "EXT_ROBUSTNESS_2_EXTENSION_NAME", Constant, 601),
    ("VK_EXT_CUSTOM_BORDER_COLOR_SPEC_VERSION", "EXT_CUSTOM_BORDER_COLOR_SPEC_VERSION", Constant, 602),
    ("VK_EXT_CUSTOM_BORDER_COLOR_EXTENSION_NAME", "EXT_CUSTOM_BORDER_COLOR_EXTENSION_NAME", Constant, 603),
    ("VK_EXT_EXTENSION_289_SPEC_VERSION", "EXT_EXTENSION_289_SPEC_VERSION", Constant, 604),
    ("VK_EXT_EXTENSION_289_EXTENSION_NAME", "EXT_EXTENSION_289_EXTENSION_NAME", Constant, 605),
    ("VK_GOOGLE_USER_TYPE_SPEC_VERSION", "GOOGLE_USER_TYPE_SPEC_VERSION", Constant, 606),
    ("VK_GOOGLE_USER_TYPE_EXTENSION_NAME", "GOOGLE_USER_TYPE_EXTENSION_NAME", Constant, 607),
    ("VK_KHR_PIPELINE_LIBRARY_SPEC_VERSION", "KHR_PIPELINE_LIBRARY_SPEC_VERSION", Constant, 608),
    ("VK_KHR_PIPELINE_LIBRARY_EXTENSION_NAME", "KHR_PIPELINE_LIBRARY_EXTENSION_NAME", Constant, 609),
    ("VK_NV_EXTENSION_292_SPEC_VERSION", "NV_EXTENSION_292_SPEC_VERSION", Constant, 610),
    ("VK_NV_EXTENSION_292_EXTENSION_NAME", "NV_EXTENSION_292_EXTENSION_NAME", Constant, 611),
    ("VK_NV_EXTENSION_293_SPEC_VERSION", "NV_EXTENSION_293_SPEC_VERSION", Constant, 612),
    ("VK_NV_EXTENSION_293_EXTENSION_NAME", "NV_EXTENSION_293_EXTENSION_NAME", Constant, 613),
    ("VK_KHR_SHADER_NON_SEMANTIC_INFO_SPEC_VERSION", "KHR_SHADER_NON_SEMANTIC_INFO_SPEC_VERSION", Constant, 614),
    ("VK_KHR_SHADER_NON_SEMANTIC_INFO_EXTENSION_NAME", "KHR_SHADER_NON_SEMANTIC_INFO_EXTENSION_NAME", Constant, 615),
    ("VK_KHR_PRESENT_ID_SPEC_VERSION", "KHR_PRESENT_ID_SPEC_VERSION", Constant, 616),
    ("VK_KHR_PRESENT_ID_EXTENSION_NAME", "KHR_PRESENT_ID_EXTENSION_NAME", Constant, 617),
    ("VK_EXT_PRIVATE_DATA_SPEC_VERSION", "EXT_PRIVATE_DATA_SPEC_VERSION", Constant, 618),
    ("VK_EXT_PRIVATE_DATA_EXTENSION_NAME", "EXT_PRIVATE_DATA_EXTENSION_NAME", Constant, 619),
    ("VK_KHR_EXTENSION_297_SPEC_VERSION", "KHR_EXTENSION_297_SPEC_VERSION", Constant, 620),
    ("VK_KHR_EXTENSION_297_EXTENSION_NAME", "KHR_EXTENSION_297_EXTENSION_NAME", Constant, 621),
    ("VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_SPEC_VERSION", "EXT_PIPELINE_CREATION_CACHE_CONTROL_SPEC_VERSION", Constant, 622),
    ("VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_EXTENSION_NAME", "EXT_PIPELINE_CREATION_CACHE_CONTROL_EXTENSION_NAME", Constant, 623),
    ("VK_KHR_EXTENSION_299_SPEC_VERSION", "KHR_EXTENSION_299_SPEC_VERSION", Constant, 624),
    ("VK_KHR_EXTENSION_299_EXTENSION_NAME", "KHR_EXTENSION_299_EXTENSION_NAME", Constant, 625),
    ("VK_KHR_VIDEO_ENCODE_QUEUE_SPEC_VERSION", "KHR_VIDEO_ENCODE_QUEUE_SPEC_VERSION", Constant, 626),
    ("VK_KHR_VIDEO_ENCODE_QUEUE_EXTENSION_NAME", "KHR_VIDEO_ENCODE_QUEUE_EXTENSION_NAME", Constant, 627),
    ("VK_NV_DEVICE_DIAGNOSTICS_CONFIG_SPEC_VERSION", "NV_DEVICE_DIAGNOSTICS_CONFIG_SPEC_VERSION", Constant, 628),
    ("VK_NV_DEVICE_DIAGNOSTICS_CONFIG_EXTENSION_NAME", "NV_DEVICE_DIAGNOSTICS_CONFIG_EXTENSION_NAME", Constant, 629),
    ("VK_QCOM_RENDER_PASS_STORE_OPS_SPEC_VERSION", "QCOM_RENDER_PASS_STORE_OPS_SPEC_VERSION", Constant, 630),
    ("VK_QCOM_RENDER_PASS_STORE_OPS_EXTENSION_NAME", "QCOM_RENDER_PASS_STORE_OPS_EXTENSION_NAME", Constant, 631),
    ("VK_QCOM_EXTENSION_303_SPEC_VERSION", "QCOM_EXTENSION_303_SPEC_VERSION", Constant, 632),
    ("VK_QCOM_EXTENSION_303_EXTENSION_NAME", "QCOM_EXTENSION_303_EXTENSION_NAME", Constant, 633),
    ("VK_QCOM_EXTENSION_304_SPEC_VERSION", "QCOM_EXTENSION_304_SPEC_VERSION", Constant, 634),
    ("VK_QCOM_EXTENSION_304_EXTENSION_NAME", "QCOM_EXTENSION_304_EXTENSION_NAME", Constant, 635),
    ("VK_QCOM_EXTENSION_305_SPEC_VERSION", "QCOM_EXTENSION_305_SPEC_VERSION", Constant, 636),
    ("VK_QCOM_EXTENSION_305_EXTENSION_NAME", "QCOM_EXTENSION_305_EXTENSION_NAME", Constant, 637),
    ("VK_QCOM_EXTENSION_306_SPEC_VERSION", "QCOM_EXTENSION_306_SPEC_VERSION", Constant, 638),
    ("VK_QCOM_EXTENSION_306_EXTENSION_NAME", "QCOM_EXTENSION_306_EXTENSION_NAME", Constant, 639),
    ("VK_QCOM_EXTENSION_307_SPEC_VERSION", "QCOM_EXTENSION_307_SPEC_VERSION", Constant, 640),
    ("VK_QCOM_EXTENSION_307_EXTENSION_NAME", "QCOM_EXTENSION_307_EXTENSION_NAME", Constant, 641),
    ("VK_NV_EXTENSION_308_SPEC_VERSION", "NV_EXTENSION_308_SPEC_VERSION", Constant, 642),
    ("VK_NV_EXTENSION_308_EXTENSION_NAME", "NV_EXTENSION_308_EXTENSION_NAME", Constant, 643),
    ("VK_KHR_EXTENSION_309_SPEC_VERSION", "KHR_EXTENSION_309_SPEC_VERSION", Constant, 644),
    ("VK_KHR_EXTENSION_309_EXTENSION_NAME", "KHR_EXTENSION_309_EXTENSION_NAME", Constant, 645),
    ("VK_QCOM_EXTENSION_310_SPEC_VERSION", "QCOM_EXTENSION_310_SPEC_VERSION", Constant, 646),
    ("VK_QCOM_EXTENSION_310_EXTENSION_NAME", "QCOM_EXTENSION_310_EXTENSION_NAME", Constant, 647),
    ("VK_NV_EXTENSION_311_SPEC_VERSION", "NV_EXTENSION_311_SPEC_VERSION", Constant, 648),
    ("VK_NV_EXTENSION_311_EXTENSION_NAME", "NV_EXTENSION_311_EXTENSION_NAME", Constant, 649),
    ("VK_EXT_EXTENSION_312_SPEC_VERSION", "EXT_EXTENSION_312_SPEC_VERSION", Constant, 650),
    ("VK_EXT_EXTENSION_312_EXTENSION_NAME", "EXT_EXTENSION_312_EXTENSION_NAME", Constant, 651),
    ("VK_EXT_EXTENSION_313_SPEC_VERSION", "EXT_EXTENSION_313_SPEC_VERSION", Constant, 652),
    ("VK_EXT_EXTENSION_313_EXTENSION_NAME", "EXT_EXTENSION_313_EXTENSION_NAME", Constant, 653),
    ("VK_AMD_EXTENSION_314_SPEC_VERSION", "AMD_EXTENSION_314_SPEC_VERSION", Constant, 654),
    ("VK_AMD_EXTENSION_314_EXTENSION_NAME", "AMD_EXTENSION_314_EXTENSION_NAME", Constant, 655),
    ("VK_KHR_SYNCHRONIZATION_2_SPEC_VERSION", "KHR_SYNCHRONIZATION_2_SPEC_VERSION", Constant, 656),
    ("VK_KHR_SYNCHRONIZATION_2_EXTENSION_NAME", "KHR_SYNCHRONIZATION_2_EXTENSION_NAME", Constant, 657),
    ("VK_AMD_EXTENSION_316_SPEC_VERSION", "AMD_EXTENSION_316_SPEC_VERSION", Constant, 658),
    ("VK_AMD_EXTENSION_316_EXTENSION_NAME", "AMD_EXTENSION_316_EXTENSION_NAME", Constant, 659),
    ("VK_AMD_EXTENSION_317_SPEC_VERSION", "AMD_EXTENSION_317_SPEC_VERSION", Constant, 660),
    ("VK_AMD_EXTENSION_317_EXTENSION_NAME", "AMD_EXTENSION_317_EXTENSION_NAME", Constant, 661),
    ("VK_AMD_EXTENSION_318_SPEC_VERSION", "AMD_EXTENSION_318_SPEC_VERSION", Constant, 662),
    ("VK_AMD_EXTENSION_318_EXTENSION_NAME", "AMD_EXTENSION_318_EXTENSION_NAME", Constant, 663),
    ("VK_AMD_EXTENSION_319_SPEC_VERSION", "AMD_EXTENSION_319_SPEC_VERSION", Constant, 664),
    ("VK_AMD_EXTENSION_319_EXTENSION_NAME", "AMD_EXTENSION_319_EXTENSION_NAME", Constant, 665),
    ("VK_AMD_EXTENSION_320_SPEC_VERSION", "AMD_EXTENSION_320_SPEC_VERSION", Constant, 666),
    ("VK_AMD_EXTENSION_320_EXTENSION_NAME", "AMD_EXTENSION_320_EXTENSION_NAME", Constant, 667),
    ("VK_AMD_EXTENSION_321_SPEC_VERSION", "AMD_EXTENSION_321_SPEC_VERSION", Constant, 668),
    ("VK_AMD_EXTENSION_321_EXTENSION_NAME", "AMD_EXTENSION_321_EXTENSION_NAME", Constant, 669),
    ("VK_AMD_EXTENSION_322_SPEC_VERSION", "AMD_EXTENSION_322_SPEC_VERSION", Constant, 670),
    ("VK_AMD_EXTENSION_322_EXTENSION_NAME", "AMD_EXTENSION_322_EXTENSION_NAME", Constant, 671),
    ("VK_AMD_EXTENSION_323_SPEC_VERSION", "AMD_EXTENSION_323_SPEC_VERSION", Constant, 672),
    ("VK_AMD_EXTENSION_323_EXTENSION_NAME", "AMD_EXTENSION_323_EXTENSION_NAME", Constant, 673),
    ("VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_SPEC_VERSION", "KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_SPEC_VERSION", Constant, 674),
    ("VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_EXTENSION_NAME", "KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_EXTENSION_NAME", Constant, 675),
    ("VK_KHR_EXTENSION_325_SPEC_VERSION", "KHR_EXTENSION_325_SPEC_VERSION", Constant, 676),
    ("VK_KHR_EXTENSION_325_EXTENSION_NAME", "KHR_EXTENSION_325_EXTENSION_NAME", Constant, 677),
    ("VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_SPEC_VERSION", "KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_SPEC_VERSION", Constant, 678),
    ("VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_EXTENSION_NAME", "KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_EXTENSION_NAME", Constant, 679),
    ("VK_NV_FRAGMENT_SHADING_RATE_ENUMS_SPEC_VERSION", "NV_FRAGMENT_SHADING_RATE_ENUMS_SPEC_VERSION", Constant, 680),
    ("VK_NV_FRAGMENT_SHADING_RATE_ENUMS_EXTENSION_NAME", "NV_FRAGMENT_SHADING_RATE_ENUMS_EXTENSION_NAME", Constant, 681),
    ("VK_NV_RAY_TRACING_MOTION_BLUR_SPEC_VERSION", "NV_RAY_TRACING_MOTION_BLUR_SPEC_VERSION", Constant, 682),
    ("VK_NV_RAY_TRACING_MOTION_BLUR_EXTENSION_NAME", "NV_RAY_TRACING_MOTION_BLUR_EXTENSION_NAME", Constant, 683),
    ("VK_NV_EXTENSION_329_SPEC_VERSION", "NV_EXTENSION_329_SPEC_VERSION", Constant, 684),
    ("VK_NV_EXTENSION_329_EXTENSION_NAME", "NV_EXTENSION_329_EXTENSION_NAME", Constant, 685),
    ("VK_NV_EXTENSION_330_SPEC_VERSION", "NV_EXTENSION_330_SPEC_VERSION", Constant, 686),
    ("VK_NV_EXTENSION_330_EXTENSION_NAME", "NV_EXTENSION_330_EXTENSION_NAME", Constant, 687),
    ("VK_EXT_YCBCR_2PLANE_444_FORMATS_SPEC_VERSION", "EXT_YCBCR_2PLANE_444_FORMATS_SPEC_VERSION", Constant, 688),
    ("VK_EXT_YCBCR_2PLANE_444_FORMATS_EXTENSION_NAME", "EXT_YCBCR_2PLANE_444_FORMATS_EXTENSION_NAME", Constant, 689),
    ("VK_NV_EXTENSION_332_SPEC_VERSION", "NV_EXTENSION_332_SPEC_VERSION", Constant, 690),
    ("VK_NV_EXTENSION_332_EXTENSION_NAME", "NV_EXTENSION_332_EXTENSION_NAME", Constant, 691),
    ("VK_EXT_FRAGMENT_DENSITY_MAP_2_SPEC_VERSION", "EXT_FRAGMENT_DENSITY_MAP_2_SPEC_VERSION", Constant, 692),
    ("VK_EXT_FRAGMENT_DENSITY_MAP_2_EXTENSION_NAME", "EXT_FRAGMENT_DENSITY_MAP_2_EXTENSION_NAME", Constant, 693),
    ("VK_QCOM_ROTATED_COPY_COMMANDS_SPEC_VERSION", "QCOM_ROTATED_COPY_COMMANDS_SPEC_VERSION", Constant, 694),
    ("VK_QCOM_ROTATED_COPY_COMMANDS_EXTENSION_NAME", "QCOM_ROTATED_COPY_COMMANDS_EXTENSION_NAME", Constant, 695),
    ("VK_KHR_EXTENSION_335_SPEC_VERSION", "KHR_EXTENSION_335_SPEC_VERSION", Constant, 696),
    ("VK_KHR_EXTENSION_335_EXTENSION_NAME", "KHR_EXTENSION_335_EXTENSION_NAME", Constant, 697),
    ("VK_EXT_IMAGE_ROBUSTNESS_SPEC_VERSION", "EXT_IMAGE_ROBUSTNESS_SPEC_VERSION", Constant, 698),
    ("VK_EXT_IMAGE_ROBUSTNESS_EXTENSION_NAME", "EXT_IMAGE_ROBUSTNESS_EXTENSION_NAME", Constant, 699),
    ("VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_SPEC_VERSION", "KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_SPEC_VERSION", Constant, 700),
    ("VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_EXTENSION_NAME", "KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_EXTENSION_NAME", Constant, 701),
    ("VK_KHR_COPY_COMMANDS_2_SPEC_VERSION", "KHR_COPY_COMMANDS_2_SPEC_VERSION", Constant, 702),
    ("VK_KHR_COPY_COMMANDS_2_EXTENSION_NAME", "KHR_COPY_COMMANDS_2_EXTENSION_NAME", Constant, 703),
    ("VK_ARM_EXTENSION_339_SPEC_VERSION", "ARM_EXTENSION_339_SPEC_VERSION", Constant, 704),
    ("VK_ARM_EXTENSION_339_EXTENSION_NAME", "ARM_EXTENSION_339_EXTENSION_NAME", Constant, 705),
    ("VK_EXT_EXTENSION_340_SPEC_VERSION", "EXT_EXTENSION_340_SPEC_VERSION", Constant, 706),
    ("VK_EXT_EXTENSION_340_EXTENSION_NAME", "EXT_EXTENSION_340_EXTENSION_NAME", Constant, 707),
    ("VK_EXT_4444_FORMATS_SPEC_VERSION", "EXT_4444_FORMATS_SPEC_VERSION", Constant, 708),
    ("VK_EXT_4444_FORMATS_EXTENSION_NAME", "EXT_4444_FORMATS_EXTENSION_NAME", Constant, 709),
    ("VK_EXT_EXTENSION_342_SPEC_VERSION", "EXT_EXTENSION_342_SPEC_VERSION", Constant, 710),
    ("VK_EXT_EXTENSION_342_EXTENSION_NAME", "EXT_EXTENSION_342_EXTENSION_NAME", Constant, 711),
    ("VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION", "ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION", Constant, 712),
    ("VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME", "ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME", Constant, 713),
    ("VK_ARM_EXTENSION_344_SPEC_VERSION", "ARM_EXTENSION_344_SPEC_VERSION", Constant, 714),
    ("VK_ARM_EXTENSION_344_EXTENSION_NAME", "ARM_EXTENSION_344_EXTENSION_NAME", Constant, 715),
    ("VK_EXT_RGBA10X6_FORMATS_SPEC_VERSION", "EXT_RGBA10X6_FORMATS_SPEC_VERSION", Constant, 716),
    ("VK_EXT_RGBA10X6_FORMATS_EXTENSION_NAME", "EXT_RGBA10X6_FORMATS_EXTENSION_NAME", Constant, 717),
    ("VK_NV_ACQUIRE_WINRT_DISPLAY_SPEC_VERSION", "NV_ACQUIRE_WINRT_DISPLAY_SPEC_VERSION", Constant, 718),
    ("VK_NV_ACQUIRE_WINRT_DISPLAY_EXTENSION_NAME", "NV_ACQUIRE_WINRT_DISPLAY_EXTENSION_NAME", Constant, 719),
    ("VK_EXT_DIRECTFB_SURFACE_SPEC_VERSION", "EXT_DIRECTFB_SURFACE_SPEC_VERSION", Constant, 720),
    ("VK_EXT_DIRECTFB_SURFACE_EXTENSION_NAME", "EXT_DIRECTFB_SURFACE_EXTENSION_NAME", Constant, 721),
    ("VK_KHR_EXTENSION_350_SPEC_VERSION", "KHR_EXTENSION_350_SPEC_VERSION", Constant, 722),
    ("VK_KHR_EXTENSION_350_EXTENSION_NAME", "KHR_EXTENSION_350_EXTENSION_NAME", Constant, 723),
    ("VK_NV_EXTENSION_351_SPEC_VERSION", "NV_EXTENSION_351_SPEC_VERSION", Constant, 724),
    ("VK_NV_EXTENSION_351_EXTENSION_NAME", "NV_EXTENSION_351_EXTENSION_NAME", Constant, 725),
    ("VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION", "VALVE_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION", Constant, 726),
    ("VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME", "VALVE_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME", Constant, 727),
    ("VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_SPEC_VERSION", "EXT_VERTEX_INPUT_DYNAMIC_STATE_SPEC_VERSION", Constant, 728),
    ("VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_EXTENSION_NAME", "EXT_VERTEX_INPUT_DYNAMIC_STATE_EXTENSION_NAME", Constant, 729),
    ("VK_EXT_PHYSICAL_DEVICE_DRM_SPEC_VERSION", "EXT_PHYSICAL_DEVICE_DRM_SPEC_VERSION", Constant, 730),
    ("VK_EXT_PHYSICAL_DEVICE_DRM_EXTENSION_NAME", "EXT_PHYSICAL_DEVICE_DRM_EXTENSION_NAME", Constant, 731),
    ("VK_EXT_EXTENSION_355_SPEC_VERSION", "EXT_EXTENSION_355_SPEC_VERSION", Constant, 732),
    ("VK_EXT_EXTENSION_355_EXTENSION_NAME", "EXT_EXTENSION_355_EXTENSION_NAME", Constant, 733),
    ("VK_EXT_DEPTH_CLIP_CONTROL_SPEC_VERSION", "EXT_DEPTH_CLIP_CONTROL_SPEC_VERSION", Constant, 734),
    ("VK_EXT_DEPTH_CLIP_CONTROL_EXTENSION_NAME", "EXT_DEPTH_CLIP_CONTROL_EXTENSION_NAME", Constant, 735),
    ("VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_SPEC_VERSION", "EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_SPEC_VERSION", Constant, 736),
    ("VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_EXTENSION_NAME", "EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_EXTENSION_NAME", Constant, 737),
    ("VK_KHR_EXTENSION_358_SPEC_VERSION", "KHR_EXTENSION_358_SPEC_VERSION", Constant, 738),
    ("VK_KHR_EXTENSION_358_EXTENSION_NAME", "KHR_EXTENSION_358_EXTENSION_NAME", Constant, 739),
    ("VK_EXT_EXTENSION_359_SPEC_VERSION", "EXT_EXTENSION_359_SPEC_VERSION", Constant, 740),
    ("VK_EXT_EXTENSION_359_EXTENSION_NAME", "EXT_EXTENSION_359_EXTENSION_NAME", Constant, 741),
    ("VK_EXT_EXTENSION_360_SPEC_VERSION", "EXT_EXTENSION_360_SPEC_VERSION", Constant, 742),
    ("VK_EXT_EXTENSION_360_EXTENSION_NAME", "EXT_EXTENSION_360_EXTENSION_NAME", Constant, 743),
    ("VK_KHR_FORMAT_FEATURE_FLAGS_2_SPEC_VERSION", "KHR_FORMAT_FEATURE_FLAGS_2_SPEC_VERSION", Constant, 744),
    ("VK_KHR_FORMAT_FEATURE_FLAGS_2_EXTENSION_NAME", "KHR_FORMAT_FEATURE_FLAGS_2_EXTENSION_NAME", Constant, 745),
    ("VK_EXT_EXTENSION_362_SPEC_VERSION", "EXT_EXTENSION_362_SPEC_VERSION", Constant, 746),
    ("VK_EXT_EXTENSION_362_EXTENSION_NAME", "EXT_EXTENSION_362_EXTENSION_NAME", Constant, 747),
    ("VK_EXT_EXTENSION_363_SPEC_VERSION", "EXT_EXTENSION_363_SPEC_VERSION", Constant, 748),
    ("VK_EXT_EXTENSION_363_EXTENSION_NAME", "EXT_EXTENSION_363_EXTENSION_NAME", Constant, 749),
    ("VK_FUCHSIA_EXTENSION_364_SPEC_VERSION", "FUCHSIA_EXTENSION_364_SPEC_VERSION", Constant, 750),
    ("VK_FUCHSIA_EXTENSION_364_EXTENSION_NAME", "FUCHSIA_EXTENSION_364_EXTENSION_NAME", Constant, 751),
    ("VK_FUCHSIA_EXTERNAL_MEMORY_SPEC_VERSION", "FUCHSIA_EXTERNAL_MEMORY_SPEC_VERSION", Constant, 752),
    ("VK_FUCHSIA_EXTERNAL_MEMORY_EXTENSION_NAME", "FUCHSIA_EXTERNAL_MEMORY_EXTENSION_NAME", Constant, 753),
    ("VK_FUCHSIA_EXTERNAL_SEMAPHORE_SPEC_VERSION", "FUCHSIA_EXTERNAL_SEMAPHORE_SPEC_VERSION", Constant, 754),
    ("VK_FUCHSIA_EXTERNAL_SEMAPHORE_EXTENSION_NAME", "FUCHSIA_EXTERNAL_SEMAPHORE_EXTENSION_NAME", Constant, 755),
    ("VK_FUCHSIA_BUFFER_COLLECTION_SPEC_VERSION", "FUCHSIA_BUFFER_COLLECTION_SPEC_VERSION", Constant, 756),
    ("VK_FUCHSIA_BUFFER_COLLECTION_EXTENSION_NAME", "FUCHSIA_BUFFER_COLLECTION_EXTENSION_NAME", Constant, 757),
    ("VK_FUCHSIA_EXTENSION_368_SPEC_VERSION", "FUCHSIA_EXTENSION_368_SPEC_VERSION", Constant, 758),
    ("VK_FUCHSIA_EXTENSION_368_EXTENSION_NAME", "FUCHSIA_EXTENSION_368_EXTENSION_NAME", Constant, 759),
    ("VK_QCOM_EXTENSION_369_SPEC_VERSION", "QCOM_EXTENSION_369_SPEC_VERSION", Constant, 760),
    ("VK_QCOM_EXTENSION_369_EXTENSION_NAME", "QCOM_EXTENSION_369_EXTENSION_NAME", Constant, 761),
    ("VK_HUAWEI_SUBPASS_SHADING_SPEC_VERSION", "HUAWEI_SUBPASS_SHADING_SPEC_VERSION", Constant, 762),
    ("VK_HUAWEI_SUBPASS_SHADING_EXTENSION_NAME", "HUAWEI_SUBPASS_SHADING_EXTENSION_NAME", Constant, 763),
    ("VK_HUAWEI_INVOCATION_MASK_SPEC_VERSION", "HUAWEI_INVOCATION_MASK_SPEC_VERSION", Constant, 764),
    ("VK_HUAWEI_INVOCATION_MASK_EXTENSION_NAME", "HUAWEI_INVOCATION_MASK_EXTENSION_NAME", Constant, 765),
    ("VK_NV_EXTERNAL_MEMORY_RDMA_SPEC_VERSION", "NV_EXTERNAL_MEMORY_RDMA_SPEC_VERSION", Constant, 766),
    ("VK_NV_EXTERNAL_MEMORY_RDMA_EXTENSION_NAME", "NV_EXTERNAL_MEMORY_RDMA_EXTENSION_NAME", Constant, 767),
    ("VK_NV_EXTENSION_373_SPEC_VERSION", "NV_EXTENSION_373_SPEC_VERSION", Constant, 768),
    ("VK_NV_EXTENSION_373_EXTENSION_NAME", "NV_EXTENSION_373_EXTENSION_NAME", Constant, 769),
    ("VK_NV_EXTENSION_374_SPEC_VERSION", "NV_EXTENSION_374_SPEC_VERSION", Constant, 770),
    ("VK_NV_EXTENSION_374_EXTENSION_NAME", "NV_EXTENSION_374_EXTENSION_NAME", Constant, 771),
    ("VK_NV_EXTENSION_375_SPEC_VERSION", "NV_EXTENSION_375_SPEC_VERSION", Constant, 772),
    ("VK_NV_EXTENSION_375_EXTENSION_NAME", "NV_EXTENSION_375_EXTENSION_NAME", Constant, 773),
    ("VK_EXT_EXTENSION_376_SPEC_VERSION", "EXT_EXTENSION_376_SPEC_VERSION", Constant, 774),
    ("VK_EXT_EXTENSION_376_EXTENSION_NAME", "EXT_EXTENSION_376_EXTENSION_NAME", Constant, 775),
    ("VK_EXT_EXTENSION_377_SPEC_VERSION", "EXT_EXTENSION_377_SPEC_VERSION", Constant, 776),
    ("VK_EXT_EXTENSION_377_EXTENSION_NAME", "EXT_EXTENSION_377_EXTENSION_NAME", Constant, 777),
    ("VK_EXT_EXTENDED_DYNAMIC_STATE_2_SPEC_VERSION", "EXT_EXTENDED_DYNAMIC_STATE_2_SPEC_VERSION", Constant, 778),
    ("VK_EXT_EXTENDED_DYNAMIC_STATE_2_EXTENSION_NAME", "EXT_EXTENDED_DYNAMIC_STATE_2_EXTENSION_NAME", Constant, 779),
    ("VK_QNX_SCREEN_SURFACE_SPEC_VERSION", "QNX_SCREEN_SURFACE_SPEC_VERSION", Constant, 780),
    ("VK_QNX_SCREEN_SURFACE_EXTENSION_NAME", "QNX_SCREEN_SURFACE_EXTENSION_NAME", Constant, 781),
    ("VK_KHR_EXTENSION_380_SPEC_VERSION", "KHR_EXTENSION_380_SPEC_VERSION", Constant, 782),
    ("VK_KHR_EXTENSION_380_EXTENSION_NAME", "KHR_EXTENSION_380_EXTENSION_NAME", Constant, 783),
    ("VK_KHR_EXTENSION_381_SPEC_VERSION", "KHR_EXTENSION_381_SPEC_VERSION", Constant, 784),
    ("VK_KHR_EXTENSION_381_EXTENSION_NAME", "KHR_EXTENSION_381_EXTENSION_NAME", Constant, 785),
    ("VK_EXT_COLOR_WRITE_ENABLE_SPEC_VERSION", "EXT_COLOR_WRITE_ENABLE_SPEC_VERSION", Constant, 786),
    ("VK_EXT_COLOR_WRITE_ENABLE_EXTENSION_NAME", "EXT_COLOR_WRITE_ENABLE_EXTENSION_NAME", Constant, 787),
    ("VK_EXT_EXTENSION_383_SPEC_VERSION", "EXT_EXTENSION_383_SPEC_VERSION", Constant, 788),
    ("VK_EXT_EXTENSION_383_EXTENSION_NAME", "EXT_EXTENSION_383_EXTENSION_NAME", Constant, 789),
    ("VK_EXT_EXTENSION_384_SPEC_VERSION", "EXT_EXTENSION_384_SPEC_VERSION", Constant, 790),
    ("VK_EXT_EXTENSION_384_EXTENSION_NAME", "EXT_EXTENSION_384_EXTENSION_NAME", Constant, 791),
    ("VK_MESA_EXTENSION_385_SPEC_VERSION", "MESA_EXTENSION_385_SPEC_VERSION", Constant, 792),
    ("VK_MESA_EXTENSION_385_EXTENSION_NAME", "MESA_EXTENSION_385_EXTENSION_NAME", Constant, 793),
    ("VK_GOOGLE_EXTENSION_386_SPEC_VERSION", "GOOGLE_EXTENSION_386_SPEC_VERSION", Constant, 794),
    ("VK_GOOGLE_EXTENSION_386_EXTENSION_NAME", "GOOGLE_EXTENSION_386_EXTENSION_NAME", Constant, 795),
    ("VK_KHR_EXTENSION_387_SPEC_VERSION", "KHR_EXTENSION_387_SPEC_VERSION", Constant, 796),
    ("VK_KHR_EXTENSION_387_EXTENSION_NAME", "KHR_EXTENSION_387_EXTENSION_NAME", Constant, 797),
    ("VK_EXT_EXTENSION_388_SPEC_VERSION", "EXT_EXTENSION_388_SPEC_VERSION", Constant, 798),
    ("VK_EXT_EXTENSION_388_EXTENSION_NAME", "EXT_EXTENSION_388_EXTENSION_NAME", Constant, 799),
    ("VK_EXT_GLOBAL_PRIORITY_QUERY_SPEC_VERSION", "EXT_GLOBAL_PRIORITY_QUERY_SPEC_VERSION", Constant, 800),
    ("VK_EXT_GLOBAL_PRIORITY_QUERY_EXTENSION_NAME", "EXT_GLOBAL_PRIORITY_QUERY_EXTENSION_NAME", Constant, 801),
    ("VK_EXT_EXTENSION_390_SPEC_VERSION", "EXT_EXTENSION_390_SPEC_VERSION", Constant, 802),
    ("VK_EXT_EXTENSION_390_EXTENSION_NAME", "EXT_EXTENSION_390_EXTENSION_NAME", Constant, 803),
    ("VK_EXT_EXTENSION_391_SPEC_VERSION", "EXT_EXTENSION_391_SPEC_VERSION", Constant, 804),
    ("VK_EXT_EXTENSION_391_EXTENSION_NAME", "EXT_EXTENSION_391_EXTENSION_NAME", Constant, 805),
    ("VK_EXT_IMAGE_VIEW_MIN_LOD_SPEC_VERSION", "EXT_IMAGE_VIEW_MIN_LOD_SPEC_VERSION", Constant, 806),
    ("VK_EXT_IMAGE_VIEW_MIN_LOD_EXTENSION_NAME", "EXT_IMAGE_VIEW_MIN_LOD_EXTENSION_NAME", Constant, 807),
    ("VK_EXT_MULTI_DRAW_SPEC_VERSION", "EXT_MULTI_DRAW_SPEC_VERSION", Constant, 808),
    ("VK_EXT_MULTI_DRAW_EXTENSION_NAME", "EXT_MULTI_DRAW_EXTENSION_NAME", Constant, 809),
    ("VK_EXT_EXTENSION_394_SPEC_VERSION", "EXT_EXTENSION_394_SPEC_VERSION", Constant, 810),
    ("VK_EXT_EXTENSION_394_EXTENSION_NAME", "EXT_EXTENSION_394_EXTENSION_NAME", Constant, 811),
    ("VK_KHR_PORTABILITY_ENUMERATION_SPEC_VERSION", "KHR_PORTABILITY_ENUMERATION_SPEC_VERSION", Constant, 812),
    ("VK_KHR_PORTABILITY_ENUMERATION_EXTENSION_NAME", "KHR_PORTABILITY_ENUMERATION_EXTENSION_NAME", Constant, 813),
    ("VK_KHR_EXTENSION_396_SPEC_VERSION", "KHR_EXTENSION_396_SPEC_VERSION", Constant, 814),
    ("VK_KHR_EXTENSION_396_EXTENSION_NAME", "KHR_EXTENSION_396_EXTENSION_NAME", Constant, 815),
    ("VK_NV_EXTENSION_397_SPEC_VERSION", "NV_EXTENSION_397_SPEC_VERSION", Constant, 816),
    ("VK_NV_EXTENSION_397_EXTENSION_NAME", "NV_EXTENSION_397_EXTENSION_NAME", Constant, 817),
    ("VK_NV_EXTENSION_398_SPEC_VERSION", "NV_EXTENSION_398_SPEC_VERSION", Constant, 818),
    ("VK_NV_EXTENSION_398_EXTENSION_NAME", "NV_EXTENSION_398_EXTENSION_NAME", Constant, 819),
    ("VK_JUICE_EXTENSION_399_SPEC_VERSION", "JUICE_EXTENSION_399_SPEC_VERSION", Constant, 820),
    ("VK_JUICE_EXTENSION_399_EXTENSION_NAME", "JUICE_EXTENSION_399_EXTENSION_NAME", Constant, 821),
    ("VK_JUICE_EXTENSION_400_SPEC_VERSION", "JUICE_EXTENSION_400_SPEC_VERSION", Constant, 822),
    ("VK_JUICE_EXTENSION_400_EXTENSION_NAME", "JUICE_EXTENSION_400_EXTENSION_NAME", Constant, 823),
    ("VK_EXT_LOAD_STORE_OP_NONE_SPEC_VERSION", "EXT_LOAD_STORE_OP_NONE_SPEC_VERSION", Constant, 824),
    ("VK_EXT_LOAD_STORE_OP_NONE_EXTENSION_NAME", "EXT_LOAD_STORE_OP_NONE_EXTENSION_NAME", Constant, 825),
    ("VK_FB_EXTENSION_402_SPEC_VERSION", "FB_EXTENSION_402_SPEC_VERSION", Constant, 826),
    ("VK_FB_EXTENSION_402_EXTENSION_NAME", "FB_EXTENSION_402_EXTENSION_NAME", Constant, 827),
    ("VK_FB_EXTENSION_403_SPEC_VERSION", "FB_EXTENSION_403_SPEC_VERSION", Constant, 828),
    ("VK_FB_EXTENSION_403_EXTENSION_NAME", "FB_EXTENSION_403_EXTENSION_NAME", Constant, 829),
    ("VK_FB_EXTENSION_404_SPEC_VERSION", "FB_EXTENSION_404_SPEC_VERSION", Constant, 830),
    ("VK_FB_EXTENSION_404_EXTENSION_NAME", "FB_EXTENSION_404_EXTENSION_NAME", Constant, 831),
    ("VK_HUAWEI_EXTENSION_405_SPEC_VERSION", "HUAWEI_EXTENSION_405_SPEC_VERSION", Constant, 832),
    ("VK_HUAWEI_EXTENSION_405_EXTENSION_NAME", "HUAWEI_EXTENSION_405_EXTENSION_NAME", Constant, 833),
    ("VK_HUAWEI_EXTENSION_406_SPEC_VERSION", "HUAWEI_EXTENSION_406_SPEC_VERSION", Constant, 834),
    ("VK_HUAWEI_EXTENSION_406_EXTENSION_NAME", "HUAWEI_EXTENSION_406_EXTENSION_NAME", Constant, 835),
    ("VK_GGP_EXTENSION_407_SPEC_VERSION", "GGP_EXTENSION_407_SPEC_VERSION", Constant, 836),
    ("VK_GGP_EXTENSION_407_EXTENSION_NAME", "GGP_EXTENSION_407_EXTENSION_NAME", Constant, 837),
    ("VK_GGP_EXTENSION_408_SPEC_VERSION", "GGP_EXTENSION_408_SPEC_VERSION", Constant, 838),
    ("VK_GGP_EXTENSION_408_EXTENSION_NAME", "GGP_EXTENSION_408_EXTENSION_NAME", Constant, 839),
    ("VK_GGP_EXTENSION_409_SPEC_VERSION", "GGP_EXTENSION_409_SPEC_VERSION", Constant, 840),
    ("VK_GGP_EXTENSION_409_EXTENSION_NAME", "GGP_EXTENSION_409_EXTENSION_NAME", Constant, 841),
    ("VK_GGP_EXTENSION_410_SPEC_VERSION", "GGP_EXTENSION_410_SPEC_VERSION", Constant, 842),
    ("VK_GGP_EXTENSION_410_EXTENSION_NAME", "GGP_EXTENSION_410_EXTENSION_NAME", Constant, 843),
    ("VK_GGP_EXTENSION_411_SPEC_VERSION", "GGP_EXTENSION_411_SPEC_VERSION", Constant, 844),
    ("VK_GGP_EXTENSION_411_EXTENSION_NAME", "GGP_EXTENSION_411_EXTENSION_NAME", Constant, 845),
    ("VK_EXT_BORDER_COLOR_SWIZZLE_SPEC_VERSION", "EXT_BORDER_COLOR_SWIZZLE_SPEC_VERSION", Constant, 846),
    ("VK_EXT_BORDER_COLOR_SWIZZLE_EXTENSION_NAME", "EXT_BORDER_COLOR_SWIZZLE_EXTENSION_NAME", Constant, 847),
    ("VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_SPEC_VERSION", "EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_SPEC_VERSION", Constant, 848),
    ("VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_EXTENSION_NAME", "EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_EXTENSION_NAME", Constant, 849),
    ("VK_KHR_MAINTENANCE_4_SPEC_VERSION", "KHR_MAINTENANCE_4_SPEC_VERSION", Constant, 850),
    ("VK_KHR_MAINTENANCE_4_EXTENSION_NAME", "KHR_MAINTENANCE_4_EXTENSION_NAME", Constant, 851),
    ("VK_HUAWEI_EXTENSION_415_SPEC_VERSION", "HUAWEI_EXTENSION_415_SPEC_VERSION", Constant, 852),
    ("VK_HUAWEI_EXTENSION_415_EXTENSION_NAME", "HUAWEI_EXTENSION_415_EXTENSION_NAME", Constant, 853),
    ("VK_ARM_EXTENSION_416_SPEC_VERSION", "ARM_EXTENSION_416_SPEC_VERSION", Constant, 854),
    ("VK_ARM_EXTENSION_416_EXTENSION_NAME", "ARM_EXTENSION_416_EXTENSION_NAME", Constant, 855),
    ("VK_KHR_EXTENSION_417_SPEC_VERSION", "KHR_EXTENSION_417_SPEC_VERSION", Constant, 856),
    ("VK_KHR_EXTENSION_417_EXTENSION_NAME", "KHR_EXTENSION_417_EXTENSION_NAME", Constant, 857),
    ("VK_ARM_EXTENSION_418_SPEC_VERSION", "ARM_EXTENSION_418_SPEC_VERSION", Constant, 858),
    ("VK_ARM_EXTENSION_418_EXTENSION_NAME", "ARM_EXTENSION_418_EXTENSION_NAME", Constant, 859),
    ("VK_EXT_EXTENSION_419_SPEC_VERSION", "EXT_EXTENSION_419_SPEC_VERSION", Constant, 860),
    ("VK_EXT_EXTENSION_419_EXTENSION_NAME", "EXT_EXTENSION_419_EXTENSION_NAME", Constant, 861),
    ("VK_EXT_EXTENSION_420_SPEC_VERSION", "EXT_EXTENSION_420_SPEC_VERSION", Constant, 862),
    ("VK_EXT_EXTENSION_420_EXTENSION_NAME", "EXT_EXTENSION_420_EXTENSION_NAME", Constant, 863),
    ("VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_SPEC_VERSION", "VALVE_DESCRIPTOR_SET_HOST_MAPPING_SPEC_VERSION", Constant, 864),
    ("VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_EXTENSION_NAME", "VALVE_DESCRIPTOR_SET_HOST_MAPPING_EXTENSION_NAME", Constant, 865),
    ("VK_EXT_EXTENSION_422_SPEC_VERSION", "EXT_EXTENSION_422_SPEC_VERSION", Constant, 866),
    ("VK_EXT_EXTENSION_422_EXTENSION_NAME", "EXT_EXTENSION_422_EXTENSION_NAME", Constant, 867),
    ("VK_EXT_DISABLE_CUBE_MAP_WRAP_SPEC_VERSION", "EXT_DISABLE_CUBE_MAP_WRAP_SPEC_VERSION", Constant, 868),
    ("VK_EXT_DISABLE_CUBE_MAP_WRAP_EXTENSION_NAME", "EXT_DISABLE_CUBE_MAP_WRAP_EXTENSION_NAME", Constant, 869),
    ("VK_ARM_EXTENSION_424_SPEC_VERSION", "ARM_EXTENSION_424_SPEC_VERSION", Constant, 870),
    ("VK_ARM_EXTENSION_424_EXTENSION_NAME", "ARM_EXTENSION_424_EXTENSION_NAME", Constant, 871),
    ("VK_ARM_EXTENSION_425_SPEC_VERSION", "ARM_EXTENSION_425_SPEC_VERSION", Constant, 872),
    ("VK_ARM_EXTENSION_425_EXTENSION_NAME", "ARM_EXTENSION_425_EXTENSION_NAME", Constant, 873),
    ("VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_SPEC_VERSION", "QCOM_FRAGMENT_DENSITY_MAP_OFFSET_SPEC_VERSION", Constant, 874),
    ("VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_EXTENSION_NAME", "QCOM_FRAGMENT_DENSITY_MAP_OFFSET_EXTENSION_NAME", Constant, 875),
    ("VK_NV_EXTENSION_427_SPEC_VERSION", "NV_EXTENSION_427_SPEC_VERSION", Constant, 876),
    ("VK_NV_EXTENSION_427_EXTENSION_NAME", "NV_EXTENSION_427_EXTENSION_NAME", Constant, 877),
    ("VK_NV_EXTENSION_428_SPEC_VERSION", "NV_EXTENSION_428_SPEC_VERSION", Constant, 878),
    ("VK_NV_EXTENSION_428_EXTENSION_NAME", "NV_EXTENSION_428_EXTENSION_NAME", Constant, 879),
    ("VK_NV_EXTENSION_429_SPEC_VERSION", "NV_EXTENSION_429_SPEC_VERSION", Constant, 880),
    ("VK_NV_EXTENSION_429_EXTENSION_NAME", "NV_EXTENSION_429_EXTENSION_NAME", Constant, 881),
    ("VK_NV_EXTENSION_430_SPEC_VERSION", "NV_EXTENSION_430_SPEC_VERSION", Constant, 882),
    ("VK_NV_EXTENSION_430_EXTENSION_NAME", "NV_EXTENSION_430_EXTENSION_NAME", Constant, 883),
    ("VK_NV_LINEAR_COLOR_ATTACHMENT_SPEC_VERSION", "NV_LINEAR_COLOR_ATTACHMENT_SPEC_VERSION", Constant, 884),
    ("VK_NV_LINEAR_COLOR_ATTACHMENT_EXTENSION_NAME", "NV_LINEAR_COLOR_ATTACHMENT_EXTENSION_NAME", Constant, 885),
    ("VK_NV_EXTENSION_432_SPEC_VERSION", "NV_EXTENSION_432_SPEC_VERSION", Constant, 886),
    ("VK_NV_EXTENSION_432_EXTENSION_NAME", "NV_EXTENSION_432_EXTENSION_NAME", Constant, 887),
    ("VK_NV_EXTENSION_433_SPEC_VERSION", "NV_EXTENSION_433_SPEC_VERSION", Constant, 888),
    ("VK_NV_EXTENSION_433_EXTENSION_NAME", "NV_EXTENSION_433_EXTENSION_NAME", Constant, 889),
    ("VK_GOOGLE_SURFACELESS_QUERY_SPEC_VERSION", "GOOGLE_SURFACELESS_QUERY_SPEC_VERSION", Constant, 890),
    ("VK_GOOGLE_SURFACELESS_QUERY_EXTENSION_NAME", "GOOGLE_SURFACELESS_QUERY_EXTENSION_NAME", Constant, 891),
    ("VK_KHR_EXTENSION_435_SPEC_VERSION", "KHR_EXTENSION_435_SPEC_VERSION", Constant, 892),
    ("VK_KHR_EXTENSION_435_EXTENSION_NAME", "KHR_EXTENSION_435_EXTENSION_NAME", Constant, 893),
    ("VK_NV_EXTENSION_436_SPEC_VERSION", "NV_EXTENSION_436_SPEC_VERSION", Constant, 894),
    ("VK_NV_EXTENSION_436_EXTENSION_NAME", "NV_EXTENSION_436_EXTENSION_NAME", Constant, 895),
    ("VK_EXT_EXTENSION_437_SPEC_VERSION", "EXT_EXTENSION_437_SPEC_VERSION", Constant, 896),
    ("VK_EXT_EXTENSION_437_EXTENSION_NAME", "EXT_EXTENSION_437_EXTENSION_NAME", Constant, 897),
    ("VK_EXT_EXTENSION_438_SPEC_VERSION", "EXT_EXTENSION_438_SPEC_VERSION", Constant, 898),
    ("VK_EXT_EXTENSION_438_EXTENSION_NAME", "EXT_EXTENSION_438_EXTENSION_NAME", Constant, 899),
    ("VK_SEC_EXTENSION_439_SPEC_VERSION", "SEC_EXTENSION_439_SPEC_VERSION", Constant, 900),
    ("VK_SEC_EXTENSION_439_EXTENSION_NAME", "SEC_EXTENSION_439_EXTENSION_NAME", Constant, 901),
    ("VK_QCOM_EXTENSION_440_SPEC_VERSION", "QCOM_EXTENSION_440_SPEC_VERSION", Constant, 902),
    ("VK_QCOM_EXTENSION_440_EXTENSION_NAME", "QCOM_EXTENSION_440_EXTENSION_NAME", Constant, 903),
    ("VK_QCOM_EXTENSION_441_SPEC_VERSION", "QCOM_EXTENSION_441_SPEC_VERSION", Constant, 904),
    ("VK_QCOM_EXTENSION_441_EXTENSION_NAME", "QCOM_EXTENSION_441_EXTENSION_NAME", Constant, 905),
    ("VK_COREAVI_EXTENSION_442_SPEC_VERSION", "COREAVI_EXTENSION_442_SPEC_VERSION", Constant, 906),
    ("VK_COREAVI_EXTENSION_442_EXTENSION_NAME", "COREAVI_EXTENSION_442_EXTENSION_NAME", Constant, 907),
    ("VK_COREAVI_EXTENSION_443_SPEC_VERSION", "COREAVI_EXTENSION_443_SPEC_VERSION", Constant, 908),
    ("VK_COREAVI_EXTENSION_443_EXTENSION_NAME", "COREAVI_EXTENSION_443_EXTENSION_NAME", Constant, 909),
    ("VK_COREAVI_EXTENSION_444_SPEC_VERSION", "COREAVI_EXTENSION_444_SPEC_VERSION", Constant, 910),
    ("VK_COREAVI_EXTENSION_444_EXTENSION_NAME", "COREAVI_EXTENSION_444_EXTENSION_NAME", Constant, 911),
    ("VK_COREAVI_EXTENSION_445_SPEC_VERSION", "COREAVI_EXTENSION_445_SPEC_VERSION", Constant, 912),
    ("VK_COREAVI_EXTENSION_445_EXTENSION_NAME", "COREAVI_EXTENSION_445_EXTENSION_NAME", Constant, 913),
    ("VK_COREAVI_EXTENSION_446_SPEC_VERSION", "COREAVI_EXTENSION_446_SPEC_VERSION", Constant, 914),
    ("VK_COREAVI_EXTENSION_446_EXTENSION_NAME", "COREAVI_EXTENSION_446_EXTENSION_NAME", Constant, 915),
    ("VK_COREAVI_EXTENSION_447_SPEC_VERSION", "COREAVI_EXTENSION_447_SPEC_VERSION", Constant, 916),
    ("VK_COREAVI_EXTENSION_447_EXTENSION_NAME", "COREAVI_EXTENSION_447_EXTENSION_NAME", Constant, 917),
    ("VK_SEC_EXTENSION_448_SPEC_VERSION", "SEC_EXTENSION_448_SPEC_VERSION", Constant, 918),
    ("VK_SEC_EXTENSION_448_EXTENSION_NAME", "SEC_EXTENSION_448_EXTENSION_NAME", Constant, 919),
    ("VK_SEC_EXTENSION_449_SPEC_VERSION", "SEC_EXTENSION_449_SPEC_VERSION", Constant, 920),
    ("VK_SEC_EXTENSION_449_EXTENSION_NAME", "SEC_EXTENSION_449_EXTENSION_NAME", Constant, 921),
    ("VK_SEC_EXTENSION_450_SPEC_VERSION", "SEC_EXTENSION_450_SPEC_VERSION", Constant, 922),
    ("VK_SEC_EXTENSION_450_EXTENSION_NAME", "SEC_EXTENSION_450_EXTENSION_NAME", Constant, 923),
    ("VK_SEC_EXTENSION_451_SPEC_VERSION", "SEC_EXTENSION_451_SPEC_VERSION", Constant, 924),
    ("VK_SEC_EXTENSION_451_EXTENSION_NAME", "SEC_EXTENSION_451_EXTENSION_NAME", Constant, 925),
    ("VK_NV_EXTENSION_452_SPEC_VERSION", "NV_EXTENSION_452_SPEC_VERSION", Constant, 926),
    ("VK_NV_EXTENSION_452_EXTENSION_NAME", "NV_EXTENSION_452_EXTENSION_NAME", Constant, 927),
    ("VK_ARM_EXTENSION_453_SPEC_VERSION", "ARM_EXTENSION_453_SPEC_VERSION", Constant, 928),
    ("VK_ARM_EXTENSION_453_EXTENSION_NAME", "ARM_EXTENSION_453_EXTENSION_NAME", Constant, 929),
    ("VK_GOOGLE_EXTENSION_454_SPEC_VERSION", "GOOGLE_EXTENSION_454_SPEC_VERSION", Constant, 930),
    ("VK_GOOGLE_EXTENSION_454_EXTENSION_NAME", "GOOGLE_EXTENSION_454_EXTENSION_NAME", Constant, 931),
    ("VK_GOOGLE_EXTENSION_455_SPEC_VERSION", "GOOGLE_EXTENSION_455_SPEC_VERSION", Constant, 932),
    ("VK_GOOGLE_EXTENSION_455_EXTENSION_NAME", "GOOGLE_EXTENSION_455_EXTENSION_NAME", Constant, 933),
    ("VK_NV_EXTENSION_456_SPEC_VERSION", "NV_EXTENSION_456_SPEC_VERSION", Constant, 934),
    ("VK_NV_EXTENSION_456_EXTENSION_NAME", "NV_EXTENSION_456_EXTENSION_NAME", Constant, 935),
    ("VK_EXT_EXTENSION_457_SPEC_VERSION", "EXT_EXTENSION_457_SPEC_VERSION", Constant, 936),
    ("VK_EXT_EXTENSION_457_EXTENSION_NAME", "EXT_EXTENSION_457_EXTENSION_NAME", Constant, 937),
    ("VK_EXT_EXTENSION_458_SPEC_VERSION", "EXT_EXTENSION_458_SPEC_VERSION", Constant, 938),
    ("VK_EXT_EXTENSION_458_EXTENSION_NAME", "EXT_EXTENSION_458_EXTENSION_NAME", Constant, 939),
    ("VK_ARM_EXTENSION_459_SPEC_VERSION", "ARM_EXTENSION_459_SPEC_VERSION", Constant, 940),
    ("VK_ARM_EXTENSION_459_EXTENSION_NAME", "ARM_EXTENSION_459_EXTENSION_NAME", Constant, 941),
    ("VK_EXT_EXTENSION_460_SPEC_VERSION", "EXT_EXTENSION_460_SPEC_VERSION", Constant, 942),
    ("VK_EXT_EXTENSION_460_EXTENSION_NAME", "EXT_EXTENSION_460_EXTENSION_NAME", Constant, 943),
    ("VK_EXT_EXTENSION_461_SPEC_VERSION", "EXT_EXTENSION_461_SPEC_VERSION", Constant, 944),
    ("VK_EXT_EXTENSION_461_EXTENSION_NAME", "EXT_EXTENSION_461_EXTENSION_NAME", Constant, 945),
    ("VK_EXT_EXTENSION_462_SPEC_VERSION", "EXT_EXTENSION_462_SPEC_VERSION", Constant, 946),
    ("VK_EXT_EXTENSION_462_EXTENSION_NAME", "EXT_EXTENSION_462_EXTENSION_NAME", Constant, 947),
    ("VK_EXT_EXTENSION_463_SPEC_VERSION", "EXT_EXTENSION_463_SPEC_VERSION", Constant, 948),
    ("VK_EXT_EXTENSION_463_EXTENSION_NAME", "EXT_EXTENSION_463_EXTENSION_NAME", Constant, 949),
    ("VK_KHR_surface", "VK_KHR_surface", Extension, 0),
    ("VK_KHR_swapchain", "VK_KHR_swapchain", Extension, 1),
    ("VK_KHR_display", "VK_KHR_display", Extension, 2),
    ("VK_KHR_display_swapchain", "VK_KHR_display_swapchain", Extension, 3),
    ("VK_KHR_xlib_surface", "VK_KHR_xlib_surface", Extension, 4),
    ("VK_KHR_xcb_surface", "VK_KHR_xcb_surface", Extension, 5),
    ("VK_KHR_wayland_surface", "VK_KHR_wayland_surface", Extension, 6),
    ("VK_KHR_mir_surface", "VK_KHR_mir_surface", Extension, 7),
    ("VK_KHR_android_surface", "VK_KHR_android_surface", Extension, 8),
    ("VK_KHR_win32_surface", "VK_KHR_win32_surface", Extension, 9),
    ("VK_ANDROID_native_buffer", "VK_ANDROID_native_buffer", Extension, 10),
    ("VK_EXT_debug_report", "VK_EXT_debug_report", Extension, 11),
    ("VK_NV_glsl_shader", "VK_NV_glsl_shader", Extension, 12),
    ("VK_EXT_depth_range_unrestricted", "VK_EXT_depth_range_unrestricted", Extension, 13),
    ("VK_KHR_sampler_mirror_clamp_to_edge", "VK_KHR_sampler_mirror_clamp_to_edge", Extension, 14),
    ("VK_IMG_filter_cubic", "VK_IMG_filter_cubic", Extension, 15),
    ("VK_AMD_extension_17", "VK_AMD_extension_17", Extension, 16),
    ("VK_AMD_extension_18", "VK_AMD_extension_18", Extension, 17),
    ("VK_AMD_rasterization_order", "VK_AMD_rasterization_order", Extension, 18),
    ("VK_AMD_extension_20", "VK_AMD_extension_20", Extension, 19),
    ("VK_AMD_shader_trinary_minmax", "VK_AMD_shader_trinary_minmax", Extension, 20),
    ("VK_AMD_shader_explicit_vertex_parameter", "VK_AMD_shader_explicit_vertex_parameter", Extension, 21),
    ("VK_EXT_debug_marker", "VK_EXT_debug_marker", Extension, 22),
    ("VK_KHR_video_queue", "VK_KHR_video_queue", Extension, 23),
    ("VK_KHR_video_decode_queue", "VK_KHR_video_decode_queue", Extension, 24),
    ("VK_AMD_gcn_shader", "VK_AMD_gcn_shader", Extension, 25),
    ("VK_NV_dedicated_allocation", "VK_NV_dedicated_allocation", Extension, 26),
    ("VK_EXT_extension_28", "VK_EXT_extension_28", Extension, 27),
    ("VK_EXT_transform_feedback", "VK_EXT_transform_feedback", Extension, 28),
    ("VK_NVX_binary_import", "VK_NVX_binary_import", Extension, 29),
    ("VK_NVX_image_view_handle", "VK_NVX_image_view_handle", Extension, 30),
    ("VK_AMD_extension_32", "VK_AMD_extension_32", Extension, 31),
    ("VK_AMD_extension_33", "VK_AMD_extension_33", Extension, 32),
    ("VK_AMD_draw_indirect_count", "VK_AMD_draw_indirect_count", Extension, 33),
    ("VK_AMD_extension_35", "VK_AMD_extension_35", Extension, 34),
    ("VK_AMD_negative_viewport_height", "VK_AMD_negative_viewport_height", Extension, 35),
    ("VK_AMD_gpu_shader_half_float", "VK_AMD_gpu_shader_half_float", Extension, 36),
    ("VK_AMD_shader_ballot", "VK_AMD_shader_ballot", Extension, 37),
    ("VK_EXT_video_encode_h264", "VK_EXT_video_encode_h264", Extension, 38),
    ("VK_EXT_video_encode_h265", "VK_EXT_video_encode_h265", Extension, 39),
    ("VK_EXT_video_decode_h264", "VK_EXT_video_decode_h264", Extension, 40),
    ("VK_AMD_texture_gather_bias_lod", "VK_AMD_texture_gather_bias_lod", Extension, 41),
    ("VK_AMD_shader_info", "VK_AMD_shader_info", Extension, 42),
    ("VK_AMD_extension_44", "VK_AMD_extension_44", Extension, 43),
    ("VK_KHR_dynamic_rendering", "VK_KHR_dynamic_rendering", Extension, 44),
    ("VK_AMD_extension_46", "VK_AMD_extension_46", Extension, 45),
    ("VK_AMD_shader_image_load_store_lod", "VK_AMD_shader_image_load_store_lod", Extension, 46),
    ("VK_NVX_extension_48", "VK_NVX_extension_48", Extension, 47),
    ("VK_GOOGLE_extension_49", "VK_GOOGLE_extension_49", Extension, 48),
    ("VK_GGP_stream_descriptor_surface", "VK_GGP_stream_descriptor_surface", Extension, 49),
    ("VK_NV_corner_sampled_image", "VK_NV_corner_sampled_image", Extension, 50),
    ("VK_NV_extension_52", "VK_NV_extension_52", Extension, 51),
    ("VK_NV_extension_53", "VK_NV_extension_53", Extension, 52),
    ("VK_KHR_multiview", "VK_KHR_multiview", Extension, 53),
    ("VK_IMG_format_pvrtc", "VK_IMG_format_pvrtc", Extension, 54),
    ("VK_NV_external_memory_capabilities", "VK_NV_external_memory_capabilities", Extension, 55),
    ("VK_NV_external_memory", "VK_NV_external_memory", Extension, 56),
    ("VK_NV_external_memory_win32", "VK_NV_external_memory_win32", Extension, 57),
    ("VK_NV_win32_keyed_mutex", "VK_NV_win32_keyed_mutex", Extension, 58),
    ("VK_KHR_get_physical_device_properties2", "VK_KHR_get_physical_device_properties2", Extension, 59),
    ("VK_KHR_device_group", "VK_KHR_device_group", Extension, 60),
    ("VK_EXT_validation_flags", "VK_EXT_validation_flags", Extension, 61),
    ("VK_NN_vi_surface", "VK_NN_vi_surface", Extension, 62),
    ("VK_KHR_shader_draw_parameters", "VK_KHR_shader_draw_parameters", Extension, 63),
    ("VK_EXT_shader_subgroup_ballot", "VK_EXT_shader_subgroup_ballot", Extension, 64),
    ("VK_EXT_shader_subgroup_vote", "VK_EXT_shader_subgroup_vote", Extension, 65),
    ("VK_EXT_texture_compression_astc_hdr", "VK_EXT_texture_compression_astc_hdr", Extension, 66),
    ("VK_EXT_astc_decode_mode", "VK_EXT_astc_decode_mode", Extension, 67),
    ("VK_IMG_extension_69", "VK_IMG_extension_69", Extension, 68),
    ("VK_KHR_maintenance1", "VK_KHR_maintenance1", Extension, 69),
    ("VK_KHR_device_group_creation", "VK_KHR_device_group_creation", Extension, 70),
    ("VK_KHR_external_memory_capabilities", "VK_KHR_external_memory_capabilities", Extension, 71),
    ("VK_KHR_external_memory", "VK_KHR_external_memory", Extension, 72),
    ("VK_KHR_external_memory_win32", "VK_KHR_external_memory_win32", Extension, 73),
    ("VK_KHR_external_memory_fd", "VK_KHR_external_memory_fd", Extension, 74),
    ("VK_KHR_win32_keyed_mutex", "VK_KHR_win32_keyed_mutex", Extension, 75),
    ("VK_KHR_external_semaphore_capabilities", "VK_KHR_external_semaphore_capabilities", Extension, 76),
    ("VK_KHR_external_semaphore", "VK_KHR_external_semaphore", Extension, 77),
    ("VK_KHR_external_semaphore_win32", "VK_KHR_external_semaphore_win32", Extension, 78),
    ("VK_KHR_external_semaphore_fd", "VK_KHR_external_semaphore_fd", Extension, 79),
    ("VK_KHR_push_descriptor", "VK_KHR_push_descriptor", Extension, 80),
    ("VK_EXT_conditional_rendering", "VK_EXT_conditional_rendering", Extension, 81),
    ("VK_KHR_shader_float16_int8", "VK_KHR_shader_float16_int8", Extension, 82),
    ("VK_KHR_16bit_storage", "VK_KHR_16bit_storage", Extension, 83),
    ("VK_KHR_incremental_present", "VK_KHR_incremental_present", Extension, 84),
    ("VK_KHR_descriptor_update_template", "VK_KHR_descriptor_update_template", Extension, 85),
    ("VK_NVX_device_generated_commands", "VK_NVX_device_generated_commands", Extension, 86),
    ("VK_NV_clip_space_w_scaling", "VK_NV_clip_space_w_scaling", Extension, 87),
    ("VK_EXT_direct_mode_display", "VK_EXT_direct_mode_display", Extension, 88),
    ("VK_EXT_acquire_xlib_display", "VK_EXT_acquire_xlib_display", Extension, 89),
    ("VK_EXT_display_surface_counter", "VK_EXT_display_surface_counter", Extension, 90),
    ("VK_EXT_display_control", "VK_EXT_display_control", Extension, 91),
    ("VK_GOOGLE_display_timing", "VK_GOOGLE_display_timing", Extension, 92),
    ("VK_RESERVED_do_not_use_94", "VK_RESERVED_do_not_use_94", Extension, 93),
    ("VK_NV_sample_mask_override_coverage", "VK_NV_sample_mask_override_coverage", Extension, 94),
    ("VK_NV_geometry_shader_passthrough", "VK_NV_geometry_shader_passthrough", Extension, 95),
    ("VK_NV_viewport_array2", "VK_NV_viewport_array2", Extension, 96),
    ("VK_NVX_multiview_per_view_attributes", "VK_NVX_multiview_per_view_attributes", Extension, 97),
    ("VK_NV_viewport_swizzle", "VK_NV_viewport_swizzle", Extension, 98),
    ("VK_EXT_discard_rectangles", "VK_EXT_discard_rectangles", Extension, 99),
    ("VK_NV_extension_101", "VK_NV_extension_101", Extension, 100),
    ("VK_EXT_conservative_rasterization", "VK_EXT_conservative_rasterization", Extension, 101),
    ("VK_EXT_depth_clip_enable", "VK_EXT_depth_clip_enable", Extension, 102),
    ("VK_NV_extension_104", "VK_NV_extension_104", Extension, 103),
    ("VK_EXT_swapchain_colorspace", "VK_EXT_swapchain_colorspace", Extension, 104),
    ("VK_EXT_hdr_metadata", "VK_EXT_hdr_metadata", Extension, 105),
    ("VK_IMG_extension_107", "VK_IMG_extension_107", Extension, 106),
    ("VK_IMG_extension_108", "VK_IMG_extension_108", Extension, 107),
    ("VK_KHR_imageless_framebuffer", "VK_KHR_imageless_framebuffer", Extension, 108),
    ("VK_KHR_create_renderpass2", "VK_KHR_create_renderpass2", Extension, 109),
    ("VK_IMG_extension_111", "VK_IMG_extension_111", Extension, 110),
    ("VK_KHR_shared_presentable_image", "VK_KHR_shared_presentable_image", Extension, 111),
    ("VK_KHR_external_fence_capabilities", "VK_KHR_external_fence_capabilities", Extension, 112),
    ("VK_KHR_external_fence", "VK_KHR_external_fence", Extension, 113),
    ("VK_KHR_external_fence_win32", "VK_KHR_external_fence_win32", Extension, 114),
    ("VK_KHR_external_fence_fd", "VK_KHR_external_fence_fd", Extension, 115),
    ("VK_KHR_performance_query", "VK_KHR_performance_query", Extension, 116),
    ("VK_KHR_maintenance2", "VK_KHR_maintenance2", Extension, 117),
    ("VK_KHR_extension_119", "VK_KHR_extension_119", Extension, 118),
    ("VK_KHR_get_surface_capabilities2", "VK_KHR_get_surface_capabilities2", Extension, 119),
    ("VK_KHR_variable_pointers", "VK_KHR_variable_pointers", Extension, 120),
    ("VK_KHR_get_display_properties2", "VK_KHR_get_display_properties2", Extension, 121),
    ("VK_MVK_ios_surface", "VK_MVK_ios_surface", Extension, 122),
    ("VK_MVK_macos_surface", "VK_MVK_macos_surface", Extension, 123),
    ("VK_MVK_moltenvk", "VK_MVK_moltenvk", Extension, 124),
    ("VK_EXT_external_memory_dma_buf", "VK_EXT_external_memory_dma_buf", Extension, 125),
    ("VK_EXT_queue_family_foreign", "VK_EXT_queue_family_foreign", Extension, 126),
    ("VK_KHR_dedicated_allocation", "VK_KHR_dedicated_allocation", Extension, 127),
    ("VK_EXT_debug_utils", "VK_EXT_debug_utils", Extension, 128),
    ("VK_ANDROID_external_memory_android_hardware_buffer", "VK_ANDROID_external_memory_android_hardware_buffer", Extension, 129),
    ("VK_EXT_sampler_filter_minmax", "VK_EXT_sampler_filter_minmax", Extension, 130),
    ("VK_KHR_storage_buffer_storage_class", "VK_KHR_storage_buffer_storage_class", Extension, 131),
    ("VK_AMD_gpu_shader_int16", "VK_AMD_gpu_shader_int16", Extension, 132),
    ("VK_AMD_extension_134", "VK_AMD_extension_134", Extension, 133),
    ("VK_AMD_extension_135", "VK_AMD_extension_135", Extension, 134),
    ("VK_AMD_extension_136", "VK_AMD_extension_136", Extension, 135),
    ("VK_AMD_mixed_attachment_samples", "VK_AMD_mixed_attachment_samples", Extension, 136),
    ("VK_AMD_shader_fragment_mask", "VK_AMD_shader_fragment_mask", Extension, 137),
    ("VK_EXT_inline_uniform_block", "VK_EXT_inline_uniform_block", Extension, 138),
    ("VK_AMD_extension_140", "VK_AMD_extension_140", Extension, 139),
    ("VK_EXT_shader_stencil_export", "VK_EXT_shader_stencil_export", Extension, 140),
    ("VK_AMD_extension_142", "VK_AMD_extension_142", Extension, 141),
    ("VK_AMD_extension_143", "VK_AMD_extension_143", Extension, 142),
    ("VK_EXT_sample_locations", "VK_EXT_sample_locations", Extension, 143),
    ("VK_KHR_relaxed_block_layout", "VK_KHR_relaxed_block_layout", Extension, 144),
    ("VK_RESERVED_do_not_use_146", "VK_RESERVED_do_not_use_146", Extension, 145),
    ("VK_KHR_get_memory_requirements2", "VK_KHR_get_memory_requirements2", Extension, 146),
    ("VK_KHR_image_format_list", "VK_KHR_image_format_list", Extension, 147),
    ("VK_EXT_blend_operation_advanced", "VK_EXT_blend_operation_advanced", Extension, 148),
    ("VK_NV_fragment_coverage_to_color", "VK_NV_fragment_coverage_to_color", Extension, 149),
    ("VK_KHR_acceleration_structure", "VK_KHR_acceleration_structure", Extension, 150),
    ("VK_KHR_ray_tracing_pipeline", "VK_KHR_ray_tracing_pipeline", Extension, 151),
    ("VK_KHR_ray_query", "VK_KHR_ray_query", Extension, 152),
    ("VK_NV_extension_152", "VK_NV_extension_152", Extension, 153),
    ("VK_NV_framebuffer_mixed_samples", "VK_NV_framebuffer_mixed_samples", Extension, 154),
    ("VK_NV_fill_rectangle", "VK_NV_fill_rectangle", Extension, 155),
    ("VK_NV_shader_sm_builtins", "VK_NV_shader_sm_builtins", Extension, 156),
    ("VK_EXT_post_depth_coverage", "VK_EXT_post_depth_coverage", Extension, 157),
    ("VK_KHR_sampler_ycbcr_conversion", "VK_KHR_sampler_ycbcr_conversion", Extension, 158),
    ("VK_KHR_bind_memory2", "VK_KHR_bind_memory2", Extension, 159),
    ("VK_EXT_image_drm_format_modifier", "VK_EXT_image_drm_format_modifier", Extension, 160),
    ("VK_EXT_extension_160", "VK_EXT_extension_160", Extension, 161),
    ("VK_EXT_validation_cache", "VK_EXT_validation_cache", Extension, 162),
    ("VK_EXT_descriptor_indexing", "VK_EXT_descriptor_indexing", Extension, 163),
    ("VK_EXT_shader_viewport_index_layer", "VK_EXT_shader_viewport_index_layer", Extension, 164),
    ("VK_KHR_portability_subset", "VK_KHR_portability_subset", Extension, 165),
    ("VK_NV_shading_rate_image", "VK_NV_shading_rate_image", Extension, 166),
    ("VK_NV_ray_tracing", "VK_NV_ray_tracing", Extension, 167),
    ("VK_NV_representative_fragment_test", "VK_NV_representative_fragment_test", Extension, 168),
    ("VK_NV_extension_168", "VK_NV_extension_168", Extension, 169),
    ("VK_KHR_maintenance3", "VK_KHR_maintenance3", Extension, 170),
    ("VK_KHR_draw_indirect_count", "VK_KHR_draw_indirect_count", Extension, 171),
    ("VK_EXT_filter_cubic", "VK_EXT_filter_cubic", Extension, 172),
    ("VK_QCOM_render_pass_shader_resolve", "VK_QCOM_render_pass_shader_resolve", Extension, 173),
    ("VK_QCOM_extension_173", "VK_QCOM_extension_173", Extension, 174),
    ("VK_QCOM_extension_174", "VK_QCOM_extension_174", Extension, 175),
    ("VK_EXT_global_priority", "VK_EXT_global_priority", Extension, 176),
    ("VK_KHR_shader_subgroup_extended_types", "VK_KHR_shader_subgroup_extended_types", Extension, 177),
    ("VK_EXT_extension_177", "VK_EXT_extension_177", Extension, 178),
    ("VK_KHR_8bit_storage", "VK_KHR_8bit_storage", Extension, 179),
    ("VK_EXT_external_memory_host", "VK_EXT_external_memory_host", Extension, 180),
    ("VK_AMD_buffer_marker", "VK_AMD_buffer_marker", Extension, 181),
    ("VK_KHR_shader_atomic_int64", "VK_KHR_shader_atomic_int64", Extension, 182),
    ("VK_KHR_shader_clock", "VK_KHR_shader_clock", Extension, 183),
    ("VK_AMD_extension_183", "VK_AMD_extension_183", Extension, 184),
    ("VK_AMD_pipeline_compiler_control", "VK_AMD_pipeline_compiler_control", Extension, 185),
    ("VK_EXT_calibrated_timestamps", "VK_EXT_calibrated_timestamps", Extension, 186),
    ("VK_AMD_shader_core_properties", "VK_AMD_shader_core_properties", Extension, 187),
    ("VK_AMD_extension_187", "VK_AMD_extension_187", Extension, 188),
    ("VK_EXT_video_decode_h265", "VK_EXT_video_decode_h265", Extension, 189),
    ("VK_KHR_global_priority", "VK_KHR_global_priority", Extension, 190),
    ("VK_AMD_memory_overallocation_behavior", "VK_AMD_memory_overallocation_behavior", Extension, 191),
    ("VK_EXT_vertex_attribute_divisor", "VK_EXT_vertex_attribute_divisor", Extension, 192),
    ("VK_GGP_frame_token", "VK_GGP_frame_token", Extension, 193),
    ("VK_EXT_pipeline_creation_feedback", "VK_EXT_pipeline_creation_feedback", Extension, 194),
    ("VK_GOOGLE_extension_194", "VK_GOOGLE_extension_194", Extension, 195),
    ("VK_GOOGLE_extension_195", "VK_GOOGLE_extension_195", Extension, 196),
    ("VK_GOOGLE_extension_196", "VK_GOOGLE_extension_196", Extension, 197),
    ("VK_KHR_driver_properties", "VK_KHR_driver_properties", Extension, 198),
    ("VK_KHR_shader_float_controls", "VK_KHR_shader_float_controls", Extension, 199),
    ("VK_NV_shader_subgroup_partitioned", "VK_NV_shader_subgroup_partitioned", Extension, 200),
    ("VK_KHR_depth_stencil_resolve", "VK_KHR_depth_stencil_resolve", Extension, 201),
    ("VK_KHR_swapchain_mutable_format", "VK_KHR_swapchain_mutable_format", Extension, 202),
    ("VK_NV_compute_shader_derivatives", "VK_NV_compute_shader_derivatives", Extension, 203),
    ("VK_NV_mesh_shader", "VK_NV_mesh_shader", Extension, 204),
    ("VK_NV_fragment_shader_barycentric", "VK_NV_fragment_shader_barycentric", Extension, 205),
    ("VK_NV_shader_image_footprint", "VK_NV_shader_image_footprint", Extension, 206),
    ("VK_NV_scissor_exclusive", "VK_NV_scissor_exclusive", Extension, 207),
    ("VK_NV_device_diagnostic_checkpoints", "VK_NV_device_diagnostic_checkpoints", Extension, 208),
    ("VK_KHR_timeline_semaphore", "VK_KHR_timeline_semaphore", Extension, 209),
    ("VK_KHR_extension_209", "VK_KHR_extension_209", Extension, 210),
    ("VK_INTEL_shader_integer_functions2", "VK_INTEL_shader_integer_functions2", Extension, 211),
    ("VK_INTEL_performance_query", "VK_INTEL_performance_query", Extension, 212),
    ("VK_KHR_vulkan_memory_model", "VK_KHR_vulkan_memory_model", Extension, 213),
    ("VK_EXT_pci_bus_info", "VK_EXT_pci_bus_info", Extension, 214),
    ("VK_AMD_display_native_hdr", "VK_AMD_display_native_hdr", Extension, 215),
    ("VK_FUCHSIA_imagepipe_surface", "VK_FUCHSIA_imagepipe_surface", Extension, 216),
    ("VK_KHR_shader_terminate_invocation", "VK_KHR_shader_terminate_invocation", Extension, 217),
    ("VK_GOOGLE_extension_217", "VK_GOOGLE_extension_217", Extension, 218),
    ("VK_EXT_metal_surface", "VK_EXT_metal_surface", Extension, 219),
    ("VK_EXT_fragment_density_map", "VK_EXT_fragment_density_map", Extension, 220),
    ("VK_EXT_extension_220", "VK_EXT_extension_220", Extension, 221),
    ("VK_KHR_extension_221", "VK_KHR_extension_221", Extension, 222),
    ("VK_EXT_scalar_block_layout", "VK_EXT_scalar_block_layout", Extension, 223),
    ("VK_EXT_extension_223", "VK_EXT_extension_223", Extension, 224),
    ("VK_GOOGLE_hlsl_functionality1", "VK_GOOGLE_hlsl_functionality1", Extension, 225),
    ("VK_GOOGLE_decorate_string", "VK_GOOGLE_decorate_string", Extension, 226),
    ("VK_EXT_subgroup_size_control", "VK_EXT_subgroup_size_control", Extension, 227),
    ("VK_KHR_fragment_shading_rate", "VK_KHR_fragment_shading_rate", Extension, 228),
    ("VK_AMD_shader_core_properties2", "VK_AMD_shader_core_properties2", Extension, 229),
    ("VK_AMD_extension_229", "VK_AMD_extension_229", Extension, 230),
    ("VK_AMD_device_coherent_memory", "VK_AMD_device_coherent_memory", Extension, 231),
    ("VK_AMD_extension_231", "VK_AMD_extension_231", Extension, 232),
    ("VK_AMD_extension_232", "VK_AMD_extension_232", Extension, 233),
    ("VK_AMD_extension_233", "VK_AMD_extension_233", Extension, 234),
    ("VK_AMD_extension_234", "VK_AMD_extension_234", Extension, 235),
    ("VK_EXT_shader_image_atomic_int64", "VK_EXT_shader_image_atomic_int64", Extension, 236),
    ("VK_AMD_extension_236", "VK_AMD_extension_236", Extension, 237),
    ("VK_KHR_spirv_1_4", "VK_KHR_spirv_1_4", Extension, 238),
    ("VK_EXT_memory_budget", "VK_EXT_memory_budget", Extension, 239),
    ("VK_EXT_memory_priority", "VK_EXT_memory_priority", Extension, 240),
    ("VK_KHR_surface_protected_capabilities", "VK_KHR_surface_protected_capabilities", Extension, 241),
    ("VK_NV_dedicated_allocation_image_aliasing", "VK_NV_dedicated_allocation_image_aliasing", Extension, 242),
    ("VK_KHR_separate_depth_stencil_layouts", "VK_KHR_separate_depth_stencil_layouts", Extension, 243),
    ("VK_INTEL_extension_243", "VK_INTEL_extension_243", Extension, 244),
    ("VK_MESA_extension_244", "VK_MESA_extension_244", Extension, 245),
    ("VK_EXT_buffer_device_address", "VK_EXT_buffer_device_address", Extension, 246),
    ("VK_EXT_tooling_info", "VK_EXT_tooling_info", Extension, 247),
    ("VK_EXT_separate_stencil_usage", "VK_EXT_separate_stencil_usage", Extension, 248),
    ("VK_EXT_validation_features", "VK_EXT_validation_features", Extension, 249),
    ("VK_KHR_present_wait", "VK_KHR_present_wait", Extension, 250),
    ("VK_NV_cooperative_matrix", "VK_NV_cooperative_matrix", Extension, 251),
    ("VK_NV_coverage_reduction_mode", "VK_NV_coverage_reduction_mode", Extension, 252),
    ("VK_EXT_fragment_shader_interlock", "VK_EXT_fragment_shader_interlock", Extension, 253),
    ("VK_EXT_ycbcr_image_arrays", "VK_EXT_ycbcr_image_arrays", Extension, 254),
    ("VK_KHR_uniform_buffer_standard_layout", "VK_KHR_uniform_buffer_standard_layout", Extension, 255),
    ("VK_EXT_provoking_vertex", "VK_EXT_provoking_vertex", Extension, 256),
    ("VK_EXT_full_screen_exclusive", "VK_EXT_full_screen_exclusive", Extension, 257),
    ("VK_EXT_headless_surface", "VK_EXT_headless_surface", Extension, 258),
    ("VK_KHR_buffer_device_address", "VK_KHR_buffer_device_address", Extension, 259),
    ("VK_EXT_extension_259", "VK_EXT_extension_259", Extension, 260),
    ("VK_EXT_line_rasterization", "VK_EXT_line_rasterization", Extension, 261),
    ("VK_EXT_shader_atomic_float", "VK_EXT_shader_atomic_float", Extension, 262),
    ("VK_EXT_host_query_reset", "VK_EXT_host_query_reset", Extension, 263),
    ("VK_GGP_extension_263", "VK_GGP_extension_263", Extension, 264),
    ("VK_BRCM_extension_264", "VK_BRCM_extension_264", Extension, 265),
    ("VK_BRCM_extension_265", "VK_BRCM_extension_265", Extension, 266),
    ("VK_EXT_index_type_uint8", "VK_EXT_index_type_uint8", Extension, 267),
    ("VK_EXT_extension_267", "VK_EXT_extension_267", Extension, 268),
    ("VK_EXT_extended_dynamic_state", "VK_EXT_extended_dynamic_state", Extension, 269),
    ("VK_KHR_deferred_host_operations", "VK_KHR_deferred_host_operations", Extension, 270),
    ("VK_KHR_pipeline_executable_properties", "VK_KHR_pipeline_executable_properties", Extension, 271),
    ("VK_INTEL_extension_271", "VK_INTEL_extension_271", Extension, 272),
    ("VK_INTEL_extension_272", "VK_INTEL_extension_272", Extension, 273),
    ("VK_INTEL_extension_273", "VK_INTEL_extension_273", Extension, 274),
    ("VK_EXT_shader_atomic_float2", "VK_EXT_shader_atomic_float2", Extension, 275),
    ("VK_KHR_extension_275", "VK_KHR_extension_275", Extension, 276),
    ("VK_KHR_extension_276", "VK_KHR_extension_276", Extension, 277),
    ("VK_EXT_shader_demote_to_helper_invocation", "VK_EXT_shader_demote_to_helper_invocation", Extension, 278),
    ("VK_NV_device_generated_commands", "VK_NV_device_generated_commands", Extension, 279),
    ("VK_NV_inherited_viewport_scissor", "VK_NV_inherited_viewport_scissor", Extension, 280),
    ("VK_KHR_extension_280", "VK_KHR_extension_280", Extension, 281),
    ("VK_KHR_shader_integer_dot_product", "VK_KHR_shader_integer_dot_product", Extension, 282),
    ("VK_EXT_texel_buffer_alignment", "VK_EXT_texel_buffer_alignment", Extension, 283),
    ("VK_QCOM_render_pass_transform", "VK_QCOM_render_pass_transform", Extension, 284),
    ("VK_EXT_extension_284", "VK_EXT_extension_284", Extension, 285),
    ("VK_EXT_device_memory_report", "VK_EXT_device_memory_report", Extension, 286),
    ("VK_EXT_acquire_drm_display", "VK_EXT_acquire_drm_display", Extension, 287),
    ("VK_EXT_robustness2", "VK_EXT_robustness2", Extension, 288),
    ("VK_EXT_custom_border_color", "VK_EXT_custom_border_color", Extension, 289),
    ("VK_EXT_extension_289", "VK_EXT_extension_289", Extension, 290),
    ("VK_GOOGLE_user_type", "VK_GOOGLE_user_type", Extension, 291),
    ("VK_KHR_pipeline_library", "VK_KHR_pipeline_library", Extension, 292),
    ("VK_NV_extension_292", "VK_NV_extension_292", Extension, 293),
    ("VK_NV_extension_293", "VK_NV_extension_293", Extension, 294),
    ("VK_KHR_shader_non_semantic_info", "VK_KHR_shader_non_semantic_info", Extension, 295),
    ("VK_KHR_present_id", "VK_KHR_present_id", Extension, 296),
    ("VK_EXT_private_data", "VK_EXT_private_data", Extension, 297),
    ("VK_KHR_extension_297", "VK_KHR_extension_297", Extension, 298),
    ("VK_EXT_pipeline_creation_cache_control", "VK_EXT_pipeline_creation_cache_control", Extension, 299),
    ("VK_KHR_extension_299", "VK_KHR_extension_299", Extension, 300),
    ("VK_KHR_video_encode_queue", "VK_KHR_video_encode_queue", Extension, 301),
    ("VK_NV_device_diagnostics_config", "VK_NV_device_diagnostics_config", Extension, 302),
    ("VK_QCOM_render_pass_store_ops", "VK_QCOM_render_pass_store_ops", Extension, 303),
    ("VK_QCOM_extension_303", "VK_QCOM_extension_303", Extension, 304),
    ("VK_QCOM_extension_304", "VK_QCOM_extension_304", Extension, 305),
    ("VK_QCOM_extension_305", "VK_QCOM_extension_305", Extension, 306),
    ("VK_QCOM_extension_306", "VK_QCOM_extension_306", Extension, 307),
    ("VK_QCOM_extension_307", "VK_QCOM_extension_307", Extension, 308),
    ("VK_NV_extension_308", "VK_NV_extension_308", Extension, 309),
    ("VK_KHR_extension_309", "VK_KHR_extension_309", Extension, 310),
    ("VK_QCOM_extension_310", "VK_QCOM_extension_310", Extension, 311),
    ("VK_NV_extension_311", "VK_NV_extension_311", Extension, 312),
    ("VK_EXT_extension_312", "VK_EXT_extension_312", Extension, 313),
    ("VK_EXT_extension_313", "VK_EXT_extension_313", Extension, 314),
    ("VK_AMD_extension_314", "VK_AMD_extension_314", Extension, 315),
    ("VK_KHR_synchronization2", "VK_KHR_synchronization2", Extension, 316),
    ("VK_AMD_extension_316", "VK_AMD_extension_316", Extension, 317),
    ("VK_AMD_extension_317", "VK_AMD_extension_317", Extension, 318),
    ("VK_AMD_extension_318", "VK_AMD_extension_318", Extension, 319),
    ("VK_AMD_extension_319", "VK_AMD_extension_319", Extension, 320),
    ("VK_AMD_extension_320", "VK_AMD_extension_320", Extension, 321),
    ("VK_AMD_extension_321", "VK_AMD_extension_321", Extension, 322),
    ("VK_AMD_extension_322", "VK_AMD_extension_322", Extension, 323),
    ("VK_AMD_extension_323", "VK_AMD_extension_323", Extension, 324),
    ("VK_KHR_shader_subgroup_uniform_control_flow", "VK_KHR_shader_subgroup_uniform_control_flow", Extension, 325),
    ("VK_KHR_extension_325", "VK_KHR_extension_325", Extension, 326),
    ("VK_KHR_zero_initialize_workgroup_memory", "VK_KHR_zero_initialize_workgroup_memory", Extension, 327),
    ("VK_NV_fragment_shading_rate_enums", "VK_NV_fragment_shading_rate_enums", Extension, 328),
    ("VK_NV_ray_tracing_motion_blur", "VK_NV_ray_tracing_motion_blur", Extension, 329),
    ("VK_NV_extension_329", "VK_NV_extension_329", Extension, 330),
    ("VK_NV_extension_330", "VK_NV_extension_330", Extension, 331),
    ("VK_EXT_ycbcr_2plane_444_formats", "VK_EXT_ycbcr_2plane_444_formats", Extension, 332),
    ("VK_NV_extension_332", "VK_NV_extension_332", Extension, 333),
    ("VK_EXT_fragment_density_map2", "VK_EXT_fragment_density_map2", Extension, 334),
    ("VK_QCOM_rotated_copy_commands", "VK_QCOM_rotated_copy_commands", Extension, 335),
    ("VK_KHR_extension_335", "VK_KHR_extension_335", Extension, 336),
    ("VK_EXT_image_robustness", "VK_EXT_image_robustness", Extension, 337),
    ("VK_KHR_workgroup_memory_explicit_layout", "VK_KHR_workgroup_memory_explicit_layout", Extension, 338),
    ("VK_KHR_copy_commands2", "VK_KHR_copy_commands2", Extension, 339),
    ("VK_ARM_extension_339", "VK_ARM_extension_339", Extension, 340),
    ("VK_EXT_extension_340", "VK_EXT_extension_340", Extension, 341),
    ("VK_EXT_4444_formats", "VK_EXT_4444_formats", Extension, 342),
    ("VK_EXT_extension_342", "VK_EXT_extension_342", Extension, 343),
    ("VK_ARM_rasterization_order_attachment_access", "VK_ARM_rasterization_order_attachment_access", Extension, 344),
    ("VK_ARM_extension_344", "VK_ARM_extension_344", Extension, 345),
    ("VK_EXT_rgba10x6_formats", "VK_EXT_rgba10x6_formats", Extension, 346),
    ("VK_NV_acquire_winrt_display", "VK_NV_acquire_winrt_display", Extension, 347),
    ("VK_EXT_directfb_surface", "VK_EXT_directfb_surface", Extension, 348),
    ("VK_KHR_extension_350", "VK_KHR_extension_350", Extension, 349),
    ("VK_NV_extension_351", "VK_NV_extension_351", Extension, 350),
    ("VK_VALVE_mutable_descriptor_type", "VK_VALVE_mutable_descriptor_type", Extension, 351),
    ("VK_EXT_vertex_input_dynamic_state", "VK_EXT_vertex_input_dynamic_state", Extension, 352),
    ("VK_EXT_physical_device_drm", "VK_EXT_physical_device_drm", Extension, 353),
    ("VK_EXT_extension_355", "VK_EXT_extension_355", Extension, 354),
    ("VK_EXT_depth_clip_control", "VK_EXT_depth_clip_control", Extension, 355),
    ("VK_EXT_primitive_topology_list_restart", "VK_EXT_primitive_topology_list_restart", Extension, 356),
    ("VK_KHR_extension_358", "VK_KHR_extension_358", Extension, 357),
    ("VK_EXT_extension_359", "VK_EXT_extension_359", Extension, 358),
    ("VK_EXT_extension_360", "VK_EXT_extension_360", Extension, 359),
    ("VK_KHR_format_feature_flags2", "VK_KHR_format_feature_flags2", Extension, 360),
    ("VK_EXT_extension_362", "VK_EXT_extension_362", Extension, 361),
    ("VK_EXT_extension_363", "VK_EXT_extension_363", Extension, 362),
    ("VK_FUCHSIA_extension_364", "VK_FUCHSIA_extension_364", Extension, 363),
    ("VK_FUCHSIA_external_memory", "VK_FUCHSIA_external_memory", Extension, 364),
    ("VK_FUCHSIA_external_semaphore", "VK_FUCHSIA_external_semaphore", Extension, 365),
    ("VK_FUCHSIA_buffer_collection", "VK_FUCHSIA_buffer_collection", Extension, 366),
    ("VK_FUCHSIA_extension_368", "VK_FUCHSIA_extension_368", Extension, 367),
    ("VK_QCOM_extension_369", "VK_QCOM_extension_369", Extension, 368),
    ("VK_HUAWEI_subpass_shading", "VK_HUAWEI_subpass_shading", Extension, 369),
    ("VK_HUAWEI_invocation_mask", "VK_HUAWEI_invocation_mask", Extension, 370),
    ("VK_NV_external_memory_rdma", "VK_NV_external_memory_rdma", Extension, 371),
    ("VK_NV_extension_373", "VK_NV_extension_373", Extension, 372),
    ("VK_NV_extension_374", "VK_NV_extension_374", Extension, 373),
    ("VK_NV_extension_375", "VK_NV_extension_375", Extension, 374),
    ("VK_EXT_extension_376", "VK_EXT_extension_376", Extension, 375),
    ("VK_EXT_extension_377", "VK_EXT_extension_377", Extension, 376),
    ("VK_EXT_extended_dynamic_state2", "VK_EXT_extended_dynamic_state2", Extension, 377),
    ("VK_QNX_screen_surface", "VK_QNX_screen_surface", Extension, 378),
    ("VK_KHR_extension_380", "VK_KHR_extension_380", Extension, 379),
    ("VK_KHR_extension_381", "VK_KHR_extension_381", Extension, 380),
    ("VK_EXT_color_write_enable", "VK_EXT_color_write_enable", Extension, 381),
    ("VK_EXT_extension_383", "VK_EXT_extension_383", Extension, 382),
    ("VK_EXT_extension_384", "VK_EXT_extension_384", Extension, 383),
    ("VK_MESA_extension_385", "VK_MESA_extension_385", Extension, 384),
    ("VK_GOOGLE_extension_386", "VK_GOOGLE_extension_386", Extension, 385),
    ("VK_KHR_extension_387", "VK_KHR_extension_387", Extension, 386),
    ("VK_EXT_extension_388", "VK_EXT_extension_388", Extension, 387),
    ("VK_EXT_global_priority_query", "VK_EXT_global_priority_query", Extension, 388),
    ("VK_EXT_extension_390", "VK_EXT_extension_390", Extension, 389),
    ("VK_EXT_extension_391", "VK_EXT_extension_391", Extension, 390),
    ("VK_EXT_image_view_min_lod", "VK_EXT_image_view_min_lod", Extension, 391),
    ("VK_EXT_multi_draw", "VK_EXT_multi_draw", Extension, 392),
    ("VK_EXT_extension_394", "VK_EXT_extension_394", Extension, 393),
    ("VK_KHR_portability_enumeration", "VK_KHR_portability_enumeration", Extension, 394),
    ("VK_KHR_extension_396", "VK_KHR_extension_396", Extension, 395),
    ("VK_NV_extension_397", "VK_NV_extension_397", Extension, 396),
    ("VK_NV_extension_398", "VK_NV_extension_398", Extension, 397),
    ("VK_JUICE_extension_399", "VK_JUICE_extension_399", Extension, 398),
    ("VK_JUICE_extension_400", "VK_JUICE_extension_400", Extension, 399),
    ("VK_EXT_load_store_op_none", "VK_EXT_load_store_op_none", Extension, 400),
    ("VK_FB_extension_402", "VK_FB_extension_402", Extension, 401),
    ("VK_FB_extension_403", "VK_FB_extension_403", Extension, 402),
    ("VK_FB_extension_404", "VK_FB_extension_404", Extension, 403),
    ("VK_HUAWEI_extension_405", "VK_HUAWEI_extension_405", Extension, 404),
    ("VK_HUAWEI_extension_406", "VK_HUAWEI_extension_406", Extension, 405),
    ("VK_GGP_extension_407", "VK_GGP_extension_407", Extension, 406),
    ("VK_GGP_extension_408", "VK_GGP_extension_408", Extension, 407),
    ("VK_GGP_extension_409", "VK_GGP_extension_409", Extension, 408),
    ("VK_GGP_extension_410", "VK_GGP_extension_410", Extension, 409),
    ("VK_GGP_extension_411", "VK_GGP_extension_411", Extension, 410),
    ("VK_EXT_border_color_swizzle", "VK_EXT_border_color_swizzle", Extension, 411),
    ("VK_EXT_pageable_device_local_memory", "VK_EXT_pageable_device_local_memory", Extension, 412),
    ("VK_KHR_maintenance4", "VK_KHR_maintenance4", Extension, 413),
    ("VK_HUAWEI_extension_415", "VK_HUAWEI_extension_415", Extension, 414),
    ("VK_ARM_extension_416", "VK_ARM_extension_416", Extension, 415),
    ("VK_KHR_extension_417", "VK_KHR_extension_417", Extension, 416),
    ("VK_ARM_extension_418", "VK_ARM_extension_418", Extension, 417),
    ("VK_EXT_extension_419", "VK_EXT_extension_419", Extension, 418),
    ("VK_EXT_extension_420", "VK_EXT_extension_420", Extension, 419),
    ("VK_VALVE_descriptor_set_host_mapping", "VK_VALVE_descriptor_set_host_mapping", Extension, 420),
    ("VK_EXT_extension_422", "VK_EXT_extension_422", Extension, 421),
    ("VK_EXT_disable_cube_map_wrap", "VK_EXT_disable_cube_map_wrap", Extension, 422),
    ("VK_ARM_extension_424", "VK_ARM_extension_424", Extension, 423),
    ("VK_ARM_extension_425", "VK_ARM_extension_425", Extension, 424),
    ("VK_QCOM_fragment_density_map_offset", "VK_QCOM_fragment_density_map_offset", Extension, 425),
    ("VK_NV_extension_427", "VK_NV_extension_427", Extension, 426),
    ("VK_NV_extension_428", "VK_NV_extension_428", Extension, 427),
    ("VK_NV_extension_429", "VK_NV_extension_429", Extension, 428),
    ("VK_NV_extension_430", "VK_NV_extension_430", Extension, 429),
    ("VK_NV_linear_color_attachment", "VK_NV_linear_color_attachment", Extension, 430),
    ("VK_NV_extension_432", "VK_NV_extension_432", Extension, 431),
    ("VK_NV_extension_433", "VK_NV_extension_433", Extension, 432),
    ("VK_GOOGLE_surfaceless_query", "VK_GOOGLE_surfaceless_query", Extension, 433),
    ("VK_KHR_extension_435", "VK_KHR_extension_435", Extension, 434),
    ("VK_NV_extension_436", "VK_NV_extension_436", Extension, 435),
    ("VK_EXT_extension_437", "VK_EXT_extension_437", Extension, 436),
    ("VK_EXT_extension_438", "VK_EXT_extension_438", Extension, 437),
    ("VK_SEC_extension_439", "VK_SEC_extension_439", Extension, 438),
    ("VK_QCOM_extension_440", "VK_QCOM_extension_440", Extension, 439),
    ("VK_QCOM_extension_441", "VK_QCOM_extension_441", Extension, 440),
    ("VK_COREAVI_extension_442", "VK_COREAVI_extension_442", Extension, 441),
    ("VK_COREAVI_extension_443", "VK_COREAVI_extension_443", Extension, 442),
    ("VK_COREAVI_extension_444", "VK_COREAVI_extension_444", Extension, 443),
    ("VK_COREAVI_extension_445", "VK_COREAVI_extension_445", Extension, 444),
    ("VK_COREAVI_extension_446", "VK_COREAVI_extension_446", Extension, 445),
    ("VK_COREAVI_extension_447", "VK_COREAVI_extension_447", Extension, 446),
    ("VK_SEC_extension_448", "VK_SEC_extension_448", Extension, 447),
    ("VK_SEC_extension_449", "VK_SEC_extension_449", Extension, 448),
    ("VK_SEC_extension_450", "VK_SEC_extension_450", Extension, 449),
    ("VK_SEC_extension_451", "VK_SEC_extension_451", Extension, 450),
    ("VK_NV_extension_452", "VK_NV_extension_452", Extension, 451),
    ("VK_ARM_extension_453", "VK_ARM_extension_453", Extension, 452),
    ("VK_GOOGLE_extension_454", "VK_GOOGLE_extension_454", Extension, 453),
    ("VK_GOOGLE_extension_455", "VK_GOOGLE_extension_455", Extension, 454),
    ("VK_NV_extension_456", "VK_NV_extension_456", Extension, 455),
    ("VK_EXT_extension_457", "VK_EXT_extension_457", Extension, 456),
    ("VK_EXT_extension_458", "VK_EXT_extension_458", Extension, 457),
    ("VK_ARM_extension_459", "VK_ARM_extension_459", Extension, 458),
    ("VK_EXT_extension_460", "VK_EXT_extension_460", Extension, 459),
    ("VK_EXT_extension_461", "VK_EXT_extension_461", Extension, 460),
    ("VK_EXT_extension_462", "VK_EXT_extension_462", Extension, 461),
    ("VK_EXT_extension_463", "VK_EXT_extension_463", Extension, 462),
  ],
  vendors: [],
  extensions: [
    Extension(
      name: "VK_KHR_surface",
      disabled: false,
      id: 1,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_surface", 1, false),
    ),
    Extension(
      name: "VK_KHR_swapchain",
      disabled: false,
      id: 2,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_swapchain", 2, false),
    ),
    Extension(
      name: "VK_KHR_display",
      disabled: false,
      id: 3,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_display", 3, false),
    ),
    Extension(
      name: "VK_KHR_display_swapchain",
      disabled: false,
      id: 4,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
        "VK_KHR_display",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_display_swapchain", 4, false),
    ),
    Extension(
      name: "VK_KHR_xlib_surface",
      disabled: false,
      id: 5,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_xlib_surface", 5, false),
    ),
    Extension(
      name: "VK_KHR_xcb_surface",
      disabled: false,
      id: 6,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_xcb_surface", 6, false),
    ),
    Extension(
      name: "VK_KHR_wayland_surface",
      disabled: false,
      id: 7,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_wayland_surface", 7, false),
    ),
    Extension(
      name: "VK_KHR_mir_surface",
      disabled: true,
      id: 8,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_mir_surface", 8, true),
    ),
    Extension(
      name: "VK_KHR_android_surface",
      disabled: false,
      id: 9,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_android_surface", 9, false),
    ),
    Extension(
      name: "VK_KHR_win32_surface",
      disabled: false,
      id: 10,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_win32_surface", 10, false),
    ),
    Extension(
      name: "VK_ANDROID_native_buffer",
      disabled: true,
      id: 11,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
    ),
    Extension(
      name: "VK_EXT_debug_report",
      disabled: false,
      id: 12,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Deprecated("VK_EXT_debug_utils"),
      origin: Extension("VK_EXT_debug_report", 12, false),
    ),
    Extension(
      name: "VK_NV_glsl_shader",
      disabled: false,
      id: 13,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Deprecated(""),
      origin: Extension("VK_NV_glsl_shader", 13, false),
    ),
    Extension(
      name: "VK_EXT_depth_range_unrestricted",
      disabled: false,
      id: 14,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_depth_range_unrestricted", 14, false),
    ),
    Extension(
      name: "VK_KHR_sampler_mirror_clamp_to_edge",
      disabled: false,
      id: 15,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_sampler_mirror_clamp_to_edge", 15, false),
    ),
    Extension(
      name: "VK_IMG_filter_cubic",
      disabled: false,
      id: 16,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_IMG_filter_cubic", 16, false),
    ),
    Extension(
      name: "VK_AMD_extension_17",
      disabled: true,
      id: 17,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_17", 17, true),
    ),
    Extension(
      name: "VK_AMD_extension_18",
      disabled: true,
      id: 18,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_18", 18, true),
    ),
    Extension(
      name: "VK_AMD_rasterization_order",
      disabled: false,
      id: 19,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_rasterization_order", 19, false),
    ),
    Extension(
      name: "VK_AMD_extension_20",
      disabled: true,
      id: 20,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_20", 20, true),
    ),
    Extension(
      name: "VK_AMD_shader_trinary_minmax",
      disabled: false,
      id: 21,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_shader_trinary_minmax", 21, false),
    ),
    Extension(
      name: "VK_AMD_shader_explicit_vertex_parameter",
      disabled: false,
      id: 22,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_shader_explicit_vertex_parameter", 22, false),
    ),
    Extension(
      name: "VK_EXT_debug_marker",
      disabled: false,
      id: 23,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_debug_report",
      ],
      deprecation_status: Promoted("VK_EXT_debug_utils"),
      origin: Extension("VK_EXT_debug_marker", 23, false),
    ),
    Extension(
      name: "VK_KHR_video_queue",
      disabled: false,
      id: 24,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_sampler_ycbcr_conversion",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_video_queue", 24, false),
    ),
    Extension(
      name: "VK_KHR_video_decode_queue",
      disabled: false,
      id: 25,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_video_queue",
        "VK_KHR_synchronization2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
    ),
    Extension(
      name: "VK_AMD_gcn_shader",
      disabled: false,
      id: 26,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_gcn_shader", 26, false),
    ),
    Extension(
      name: "VK_NV_dedicated_allocation",
      disabled: false,
      id: 27,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Deprecated("VK_KHR_dedicated_allocation"),
      origin: Extension("VK_NV_dedicated_allocation", 27, false),
    ),
    Extension(
      name: "VK_EXT_extension_28",
      disabled: true,
      id: 28,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_28", 28, true),
    ),
    Extension(
      name: "VK_EXT_transform_feedback",
      disabled: false,
      id: 29,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_transform_feedback", 29, false),
    ),
    Extension(
      name: "VK_NVX_binary_import",
      disabled: false,
      id: 30,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NVX_binary_import", 30, false),
    ),
    Extension(
      name: "VK_NVX_image_view_handle",
      disabled: false,
      id: 31,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NVX_image_view_handle", 31, false),
    ),
    Extension(
      name: "VK_AMD_extension_32",
      disabled: true,
      id: 32,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_32", 32, true),
    ),
    Extension(
      name: "VK_AMD_extension_33",
      disabled: true,
      id: 33,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_33", 33, true),
    ),
    Extension(
      name: "VK_AMD_draw_indirect_count",
      disabled: false,
      id: 34,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Promoted("VK_KHR_draw_indirect_count"),
      origin: Extension("VK_AMD_draw_indirect_count", 34, false),
    ),
    Extension(
      name: "VK_AMD_extension_35",
      disabled: true,
      id: 35,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_35", 35, true),
    ),
    Extension(
      name: "VK_AMD_negative_viewport_height",
      disabled: false,
      id: 36,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Obsoleted("VK_KHR_maintenance1"),
      origin: Extension("VK_AMD_negative_viewport_height", 36, false),
    ),
    Extension(
      name: "VK_AMD_gpu_shader_half_float",
      disabled: false,
      id: 37,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Deprecated("VK_KHR_shader_float16_int8"),
      origin: Extension("VK_AMD_gpu_shader_half_float", 37, false),
    ),
    Extension(
      name: "VK_AMD_shader_ballot",
      disabled: false,
      id: 38,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_shader_ballot", 38, false),
    ),
    Extension(
      name: "VK_EXT_video_encode_h264",
      disabled: true,
      id: 39,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_video_encode_queue",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
    ),
    Extension(
      name: "VK_EXT_video_encode_h265",
      disabled: true,
      id: 40,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_video_encode_queue",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
    ),
    Extension(
      name: "VK_EXT_video_decode_h264",
      disabled: true,
      id: 41,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_video_decode_queue",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
    ),
    Extension(
      name: "VK_AMD_texture_gather_bias_lod",
      disabled: false,
      id: 42,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_AMD_texture_gather_bias_lod", 42, false),
    ),
    Extension(
      name: "VK_AMD_shader_info",
      disabled: false,
      id: 43,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_shader_info", 43, false),
    ),
    Extension(
      name: "VK_AMD_extension_44",
      disabled: true,
      id: 44,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_44", 44, true),
    ),
    Extension(
      name: "VK_KHR_dynamic_rendering",
      disabled: false,
      id: 45,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
    ),
    Extension(
      name: "VK_AMD_extension_46",
      disabled: true,
      id: 46,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_46", 46, true),
    ),
    Extension(
      name: "VK_AMD_shader_image_load_store_lod",
      disabled: false,
      id: 47,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_shader_image_load_store_lod", 47, false),
    ),
    Extension(
      name: "VK_NVX_extension_48",
      disabled: true,
      id: 48,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NVX_extension_48", 48, true),
    ),
    Extension(
      name: "VK_GOOGLE_extension_49",
      disabled: true,
      id: 49,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_extension_49", 49, true),
    ),
    Extension(
      name: "VK_GGP_stream_descriptor_surface",
      disabled: true,
      id: 50,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_GGP_stream_descriptor_surface", 50, true),
    ),
    Extension(
      name: "VK_NV_corner_sampled_image",
      disabled: false,
      id: 51,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_corner_sampled_image", 51, false),
    ),
    Extension(
      name: "VK_NV_extension_52",
      disabled: true,
      id: 52,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_52", 52, true),
    ),
    Extension(
      name: "VK_NV_extension_53",
      disabled: true,
      id: 53,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_53", 53, true),
    ),
    Extension(
      name: "VK_KHR_multiview",
      disabled: false,
      id: 54,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_multiview", 54, false),
    ),
    Extension(
      name: "VK_IMG_format_pvrtc",
      disabled: false,
      id: 55,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_IMG_format_pvrtc", 55, false),
    ),
    Extension(
      name: "VK_NV_external_memory_capabilities",
      disabled: false,
      id: 56,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Deprecated("VK_KHR_external_memory_capabilities"),
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
    ),
    Extension(
      name: "VK_NV_external_memory",
      disabled: false,
      id: 57,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_NV_external_memory_capabilities",
      ],
      deprecation_status: Deprecated("VK_KHR_external_memory"),
      origin: Extension("VK_NV_external_memory", 57, false),
    ),
    Extension(
      name: "VK_NV_external_memory_win32",
      disabled: false,
      id: 58,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_NV_external_memory",
      ],
      deprecation_status: Deprecated("VK_KHR_external_memory_win32"),
      origin: Extension("VK_NV_external_memory_win32", 58, false),
    ),
    Extension(
      name: "VK_NV_win32_keyed_mutex",
      disabled: false,
      id: 59,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_NV_external_memory_win32",
      ],
      deprecation_status: Promoted("VK_KHR_win32_keyed_mutex"),
      origin: Extension("VK_NV_win32_keyed_mutex", 59, false),
    ),
    Extension(
      name: "VK_KHR_get_physical_device_properties2",
      disabled: false,
      id: 60,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
    ),
    Extension(
      name: "VK_KHR_device_group",
      disabled: false,
      id: 61,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_device_group_creation",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_device_group", 61, false),
    ),
    Extension(
      name: "VK_EXT_validation_flags",
      disabled: false,
      id: 62,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Deprecated("VK_EXT_validation_features"),
      origin: Extension("VK_EXT_validation_flags", 62, false),
    ),
    Extension(
      name: "VK_NN_vi_surface",
      disabled: false,
      id: 63,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NN_vi_surface", 63, false),
    ),
    Extension(
      name: "VK_KHR_shader_draw_parameters",
      disabled: false,
      id: 64,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_shader_draw_parameters", 64, false),
    ),
    Extension(
      name: "VK_EXT_shader_subgroup_ballot",
      disabled: false,
      id: 65,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: DeprecatedVersion(Vulkan1_2),
      origin: Extension("VK_EXT_shader_subgroup_ballot", 65, false),
    ),
    Extension(
      name: "VK_EXT_shader_subgroup_vote",
      disabled: false,
      id: 66,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: DeprecatedVersion(Vulkan1_1),
      origin: Extension("VK_EXT_shader_subgroup_vote", 66, false),
    ),
    Extension(
      name: "VK_EXT_texture_compression_astc_hdr",
      disabled: false,
      id: 67,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
    ),
    Extension(
      name: "VK_EXT_astc_decode_mode",
      disabled: false,
      id: 68,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_astc_decode_mode", 68, false),
    ),
    Extension(
      name: "VK_IMG_extension_69",
      disabled: true,
      id: 69,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_IMG_extension_69", 69, true),
    ),
    Extension(
      name: "VK_KHR_maintenance1",
      disabled: false,
      id: 70,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_maintenance1", 70, false),
    ),
    Extension(
      name: "VK_KHR_device_group_creation",
      disabled: false,
      id: 71,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_device_group_creation", 71, false),
    ),
    Extension(
      name: "VK_KHR_external_memory_capabilities",
      disabled: false,
      id: 72,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
    ),
    Extension(
      name: "VK_KHR_external_memory",
      disabled: false,
      id: 73,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory_capabilities",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_external_memory", 73, false),
    ),
    Extension(
      name: "VK_KHR_external_memory_win32",
      disabled: false,
      id: 74,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
    ),
    Extension(
      name: "VK_KHR_external_memory_fd",
      disabled: false,
      id: 75,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_external_memory_fd", 75, false),
    ),
    Extension(
      name: "VK_KHR_win32_keyed_mutex",
      disabled: false,
      id: 76,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory_win32",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_win32_keyed_mutex", 76, false),
    ),
    Extension(
      name: "VK_KHR_external_semaphore_capabilities",
      disabled: false,
      id: 77,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
    ),
    Extension(
      name: "VK_KHR_external_semaphore",
      disabled: false,
      id: 78,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_semaphore_capabilities",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_external_semaphore", 78, false),
    ),
    Extension(
      name: "VK_KHR_external_semaphore_win32",
      disabled: false,
      id: 79,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_semaphore",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
    ),
    Extension(
      name: "VK_KHR_external_semaphore_fd",
      disabled: false,
      id: 80,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_semaphore",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
    ),
    Extension(
      name: "VK_KHR_push_descriptor",
      disabled: false,
      id: 81,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_push_descriptor", 81, false),
    ),
    Extension(
      name: "VK_EXT_conditional_rendering",
      disabled: false,
      id: 82,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_conditional_rendering", 82, false),
    ),
    Extension(
      name: "VK_KHR_shader_float16_int8",
      disabled: false,
      id: 83,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_shader_float16_int8", 83, false),
    ),
    Extension(
      name: "VK_KHR_16bit_storage",
      disabled: false,
      id: 84,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_storage_buffer_storage_class",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_16bit_storage", 84, false),
    ),
    Extension(
      name: "VK_KHR_incremental_present",
      disabled: false,
      id: 85,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_incremental_present", 85, false),
    ),
    Extension(
      name: "VK_KHR_descriptor_update_template",
      disabled: false,
      id: 86,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
    ),
    Extension(
      name: "VK_NVX_device_generated_commands",
      disabled: true,
      id: 87,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NVX_device_generated_commands", 87, true),
    ),
    Extension(
      name: "VK_NV_clip_space_w_scaling",
      disabled: false,
      id: 88,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_clip_space_w_scaling", 88, false),
    ),
    Extension(
      name: "VK_EXT_direct_mode_display",
      disabled: false,
      id: 89,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_display",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_direct_mode_display", 89, false),
    ),
    Extension(
      name: "VK_EXT_acquire_xlib_display",
      disabled: false,
      id: 90,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_direct_mode_display",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_acquire_xlib_display", 90, false),
    ),
    Extension(
      name: "VK_EXT_display_surface_counter",
      disabled: false,
      id: 91,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_display",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_display_surface_counter", 91, false),
    ),
    Extension(
      name: "VK_EXT_display_control",
      disabled: false,
      id: 92,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_display_surface_counter",
        "VK_KHR_swapchain",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_display_control", 92, false),
    ),
    Extension(
      name: "VK_GOOGLE_display_timing",
      disabled: false,
      id: 93,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
      ],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
    ),
    Extension(
      name: "VK_RESERVED_do_not_use_94",
      disabled: true,
      id: 94,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_RESERVED_do_not_use_94", 94, true),
    ),
    Extension(
      name: "VK_NV_sample_mask_override_coverage",
      disabled: false,
      id: 95,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_sample_mask_override_coverage", 95, false),
    ),
    Extension(
      name: "VK_NV_geometry_shader_passthrough",
      disabled: false,
      id: 96,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_geometry_shader_passthrough", 96, false),
    ),
    Extension(
      name: "VK_NV_viewport_array2",
      disabled: false,
      id: 97,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_viewport_array2", 97, false),
    ),
    Extension(
      name: "VK_NVX_multiview_per_view_attributes",
      disabled: false,
      id: 98,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_multiview",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NVX_multiview_per_view_attributes", 98, false),
    ),
    Extension(
      name: "VK_NV_viewport_swizzle",
      disabled: false,
      id: 99,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_viewport_swizzle", 99, false),
    ),
    Extension(
      name: "VK_EXT_discard_rectangles",
      disabled: false,
      id: 100,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_discard_rectangles", 100, false),
    ),
    Extension(
      name: "VK_NV_extension_101",
      disabled: true,
      id: 101,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_101", 101, true),
    ),
    Extension(
      name: "VK_EXT_conservative_rasterization",
      disabled: false,
      id: 102,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_conservative_rasterization", 102, false),
    ),
    Extension(
      name: "VK_EXT_depth_clip_enable",
      disabled: false,
      id: 103,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_depth_clip_enable", 103, false),
    ),
    Extension(
      name: "VK_NV_extension_104",
      disabled: true,
      id: 104,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_104", 104, true),
    ),
    Extension(
      name: "VK_EXT_swapchain_colorspace",
      disabled: false,
      id: 105,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
    ),
    Extension(
      name: "VK_EXT_hdr_metadata",
      disabled: false,
      id: 106,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_hdr_metadata", 106, false),
    ),
    Extension(
      name: "VK_IMG_extension_107",
      disabled: true,
      id: 107,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_IMG_extension_107", 107, true),
    ),
    Extension(
      name: "VK_IMG_extension_108",
      disabled: true,
      id: 108,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_IMG_extension_108", 108, true),
    ),
    Extension(
      name: "VK_KHR_imageless_framebuffer",
      disabled: false,
      id: 109,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_maintenance2",
        "VK_KHR_image_format_list",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
    ),
    Extension(
      name: "VK_KHR_create_renderpass2",
      disabled: false,
      id: 110,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_multiview",
        "VK_KHR_maintenance2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
    ),
    Extension(
      name: "VK_IMG_extension_111",
      disabled: true,
      id: 111,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_IMG_extension_111", 111, true),
    ),
    Extension(
      name: "VK_KHR_shared_presentable_image",
      disabled: false,
      id: 112,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_get_surface_capabilities2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_shared_presentable_image", 112, false),
    ),
    Extension(
      name: "VK_KHR_external_fence_capabilities",
      disabled: false,
      id: 113,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
    ),
    Extension(
      name: "VK_KHR_external_fence",
      disabled: false,
      id: 114,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_fence_capabilities",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_external_fence", 114, false),
    ),
    Extension(
      name: "VK_KHR_external_fence_win32",
      disabled: false,
      id: 115,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_fence",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_external_fence_win32", 115, false),
    ),
    Extension(
      name: "VK_KHR_external_fence_fd",
      disabled: false,
      id: 116,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_fence",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_external_fence_fd", 116, false),
    ),
    Extension(
      name: "VK_KHR_performance_query",
      disabled: false,
      id: 117,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_performance_query", 117, false),
    ),
    Extension(
      name: "VK_KHR_maintenance2",
      disabled: false,
      id: 118,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_maintenance2", 118, false),
    ),
    Extension(
      name: "VK_KHR_extension_119",
      disabled: true,
      id: 119,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_119", 119, true),
    ),
    Extension(
      name: "VK_KHR_get_surface_capabilities2",
      disabled: false,
      id: 120,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
    ),
    Extension(
      name: "VK_KHR_variable_pointers",
      disabled: false,
      id: 121,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_storage_buffer_storage_class",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_variable_pointers", 121, false),
    ),
    Extension(
      name: "VK_KHR_get_display_properties2",
      disabled: false,
      id: 122,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_display",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
    ),
    Extension(
      name: "VK_MVK_ios_surface",
      disabled: false,
      id: 123,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Deprecated("VK_EXT_metal_surface"),
      origin: Extension("VK_MVK_ios_surface", 123, false),
    ),
    Extension(
      name: "VK_MVK_macos_surface",
      disabled: false,
      id: 124,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Deprecated("VK_EXT_metal_surface"),
      origin: Extension("VK_MVK_macos_surface", 124, false),
    ),
    Extension(
      name: "VK_MVK_moltenvk",
      disabled: true,
      id: 125,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_MVK_moltenvk", 125, true),
    ),
    Extension(
      name: "VK_EXT_external_memory_dma_buf",
      disabled: false,
      id: 126,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory_fd",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_external_memory_dma_buf", 126, false),
    ),
    Extension(
      name: "VK_EXT_queue_family_foreign",
      disabled: false,
      id: 127,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_queue_family_foreign", 127, false),
    ),
    Extension(
      name: "VK_KHR_dedicated_allocation",
      disabled: false,
      id: 128,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_memory_requirements2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_dedicated_allocation", 128, false),
    ),
    Extension(
      name: "VK_EXT_debug_utils",
      disabled: false,
      id: 129,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_debug_utils", 129, false),
    ),
    Extension(
      name: "VK_ANDROID_external_memory_android_hardware_buffer",
      disabled: false,
      id: 130,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_sampler_ycbcr_conversion",
        "VK_KHR_external_memory",
        "VK_EXT_queue_family_foreign",
        "VK_KHR_dedicated_allocation",
      ],
      deprecation_status: Current,
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
    ),
    Extension(
      name: "VK_EXT_sampler_filter_minmax",
      disabled: false,
      id: 131,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
    ),
    Extension(
      name: "VK_KHR_storage_buffer_storage_class",
      disabled: false,
      id: 132,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_storage_buffer_storage_class", 132, false),
    ),
    Extension(
      name: "VK_AMD_gpu_shader_int16",
      disabled: false,
      id: 133,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Deprecated("VK_KHR_shader_float16_int8"),
      origin: Extension("VK_AMD_gpu_shader_int16", 133, false),
    ),
    Extension(
      name: "VK_AMD_extension_134",
      disabled: true,
      id: 134,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_134", 134, true),
    ),
    Extension(
      name: "VK_AMD_extension_135",
      disabled: true,
      id: 135,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_135", 135, true),
    ),
    Extension(
      name: "VK_AMD_extension_136",
      disabled: true,
      id: 136,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_136", 136, true),
    ),
    Extension(
      name: "VK_AMD_mixed_attachment_samples",
      disabled: false,
      id: 137,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_mixed_attachment_samples", 137, false),
    ),
    Extension(
      name: "VK_AMD_shader_fragment_mask",
      disabled: false,
      id: 138,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_shader_fragment_mask", 138, false),
    ),
    Extension(
      name: "VK_EXT_inline_uniform_block",
      disabled: false,
      id: 139,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_maintenance1",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_inline_uniform_block", 139, false),
    ),
    Extension(
      name: "VK_AMD_extension_140",
      disabled: true,
      id: 140,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_140", 140, true),
    ),
    Extension(
      name: "VK_EXT_shader_stencil_export",
      disabled: false,
      id: 141,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_shader_stencil_export", 141, false),
    ),
    Extension(
      name: "VK_AMD_extension_142",
      disabled: true,
      id: 142,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_142", 142, true),
    ),
    Extension(
      name: "VK_AMD_extension_143",
      disabled: true,
      id: 143,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_143", 143, true),
    ),
    Extension(
      name: "VK_EXT_sample_locations",
      disabled: false,
      id: 144,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_sample_locations", 144, false),
    ),
    Extension(
      name: "VK_KHR_relaxed_block_layout",
      disabled: false,
      id: 145,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_relaxed_block_layout", 145, false),
    ),
    Extension(
      name: "VK_RESERVED_do_not_use_146",
      disabled: true,
      id: 146,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_RESERVED_do_not_use_146", 146, true),
    ),
    Extension(
      name: "VK_KHR_get_memory_requirements2",
      disabled: false,
      id: 147,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
    ),
    Extension(
      name: "VK_KHR_image_format_list",
      disabled: false,
      id: 148,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_image_format_list", 148, false),
    ),
    Extension(
      name: "VK_EXT_blend_operation_advanced",
      disabled: false,
      id: 149,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
    ),
    Extension(
      name: "VK_NV_fragment_coverage_to_color",
      disabled: false,
      id: 150,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_fragment_coverage_to_color", 150, false),
    ),
    Extension(
      name: "VK_KHR_acceleration_structure",
      disabled: false,
      id: 151,
      ty: Device,
      min_core: Vulkan1_1,
      required: [
        "VK_EXT_descriptor_indexing",
        "VK_KHR_buffer_device_address",
        "VK_KHR_deferred_host_operations",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
    ),
    Extension(
      name: "VK_KHR_ray_tracing_pipeline",
      disabled: false,
      id: 348,
      ty: Device,
      min_core: Vulkan1_1,
      required: [
        "VK_KHR_spirv_1_4",
        "VK_KHR_acceleration_structure",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
    ),
    Extension(
      name: "VK_KHR_ray_query",
      disabled: false,
      id: 349,
      ty: Device,
      min_core: Vulkan1_1,
      required: [
        "VK_KHR_spirv_1_4",
        "VK_KHR_acceleration_structure",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_ray_query", 349, false),
    ),
    Extension(
      name: "VK_NV_extension_152",
      disabled: true,
      id: 152,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_152", 152, true),
    ),
    Extension(
      name: "VK_NV_framebuffer_mixed_samples",
      disabled: false,
      id: 153,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
    ),
    Extension(
      name: "VK_NV_fill_rectangle",
      disabled: false,
      id: 154,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_fill_rectangle", 154, false),
    ),
    Extension(
      name: "VK_NV_shader_sm_builtins",
      disabled: false,
      id: 155,
      ty: Device,
      min_core: Vulkan1_1,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_shader_sm_builtins", 155, false),
    ),
    Extension(
      name: "VK_EXT_post_depth_coverage",
      disabled: false,
      id: 156,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_post_depth_coverage", 156, false),
    ),
    Extension(
      name: "VK_KHR_sampler_ycbcr_conversion",
      disabled: false,
      id: 157,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_maintenance1",
        "VK_KHR_bind_memory2",
        "VK_KHR_get_memory_requirements2",
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
    ),
    Extension(
      name: "VK_KHR_bind_memory2",
      disabled: false,
      id: 158,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_bind_memory2", 158, false),
    ),
    Extension(
      name: "VK_EXT_image_drm_format_modifier",
      disabled: false,
      id: 159,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_bind_memory2",
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_image_format_list",
        "VK_KHR_sampler_ycbcr_conversion",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
    ),
    Extension(
      name: "VK_EXT_extension_160",
      disabled: true,
      id: 160,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_160", 160, true),
    ),
    Extension(
      name: "VK_EXT_validation_cache",
      disabled: false,
      id: 161,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_validation_cache", 161, false),
    ),
    Extension(
      name: "VK_EXT_descriptor_indexing",
      disabled: false,
      id: 162,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_maintenance3",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
    ),
    Extension(
      name: "VK_EXT_shader_viewport_index_layer",
      disabled: false,
      id: 163,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_EXT_shader_viewport_index_layer", 163, false),
    ),
    Extension(
      name: "VK_KHR_portability_subset",
      disabled: false,
      id: 164,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_portability_subset", 164, false),
    ),
    Extension(
      name: "VK_NV_shading_rate_image",
      disabled: false,
      id: 165,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_shading_rate_image", 165, false),
    ),
    Extension(
      name: "VK_NV_ray_tracing",
      disabled: false,
      id: 166,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_get_memory_requirements2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_ray_tracing", 166, false),
    ),
    Extension(
      name: "VK_NV_representative_fragment_test",
      disabled: false,
      id: 167,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_representative_fragment_test", 167, false),
    ),
    Extension(
      name: "VK_NV_extension_168",
      disabled: true,
      id: 168,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_168", 168, true),
    ),
    Extension(
      name: "VK_KHR_maintenance3",
      disabled: false,
      id: 169,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_1),
      origin: Extension("VK_KHR_maintenance3", 169, false),
    ),
    Extension(
      name: "VK_KHR_draw_indirect_count",
      disabled: false,
      id: 170,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_draw_indirect_count", 170, false),
    ),
    Extension(
      name: "VK_EXT_filter_cubic",
      disabled: false,
      id: 171,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_filter_cubic", 171, false),
    ),
    Extension(
      name: "VK_QCOM_render_pass_shader_resolve",
      disabled: true,
      id: 172,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_render_pass_shader_resolve", 172, true),
    ),
    Extension(
      name: "VK_QCOM_extension_173",
      disabled: true,
      id: 173,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_173", 173, true),
    ),
    Extension(
      name: "VK_QCOM_extension_174",
      disabled: true,
      id: 174,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_174", 174, true),
    ),
    Extension(
      name: "VK_EXT_global_priority",
      disabled: false,
      id: 175,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Promoted("VK_KHR_global_priority"),
      origin: Extension("VK_EXT_global_priority", 175, false),
    ),
    Extension(
      name: "VK_KHR_shader_subgroup_extended_types",
      disabled: false,
      id: 176,
      ty: Device,
      min_core: Vulkan1_1,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_shader_subgroup_extended_types", 176, false),
    ),
    Extension(
      name: "VK_EXT_extension_177",
      disabled: true,
      id: 177,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_177", 177, true),
    ),
    Extension(
      name: "VK_KHR_8bit_storage",
      disabled: false,
      id: 178,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_storage_buffer_storage_class",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_8bit_storage", 178, false),
    ),
    Extension(
      name: "VK_EXT_external_memory_host",
      disabled: false,
      id: 179,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_external_memory_host", 179, false),
    ),
    Extension(
      name: "VK_AMD_buffer_marker",
      disabled: false,
      id: 180,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_buffer_marker", 180, false),
    ),
    Extension(
      name: "VK_KHR_shader_atomic_int64",
      disabled: false,
      id: 181,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_shader_atomic_int64", 181, false),
    ),
    Extension(
      name: "VK_KHR_shader_clock",
      disabled: false,
      id: 182,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_shader_clock", 182, false),
    ),
    Extension(
      name: "VK_AMD_extension_183",
      disabled: true,
      id: 183,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_183", 183, true),
    ),
    Extension(
      name: "VK_AMD_pipeline_compiler_control",
      disabled: false,
      id: 184,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_pipeline_compiler_control", 184, false),
    ),
    Extension(
      name: "VK_EXT_calibrated_timestamps",
      disabled: false,
      id: 185,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
    ),
    Extension(
      name: "VK_AMD_shader_core_properties",
      disabled: false,
      id: 186,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_AMD_shader_core_properties", 186, false),
    ),
    Extension(
      name: "VK_AMD_extension_187",
      disabled: true,
      id: 187,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_187", 187, true),
    ),
    Extension(
      name: "VK_EXT_video_decode_h265",
      disabled: true,
      id: 188,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_video_decode_queue",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
    ),
    Extension(
      name: "VK_KHR_global_priority",
      disabled: false,
      id: 189,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_global_priority", 189, false),
    ),
    Extension(
      name: "VK_AMD_memory_overallocation_behavior",
      disabled: false,
      id: 190,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
    ),
    Extension(
      name: "VK_EXT_vertex_attribute_divisor",
      disabled: false,
      id: 191,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
    ),
    Extension(
      name: "VK_GGP_frame_token",
      disabled: true,
      id: 192,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
        "VK_GGP_stream_descriptor_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_GGP_frame_token", 192, true),
    ),
    Extension(
      name: "VK_EXT_pipeline_creation_feedback",
      disabled: false,
      id: 193,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_pipeline_creation_feedback", 193, false),
    ),
    Extension(
      name: "VK_GOOGLE_extension_194",
      disabled: true,
      id: 194,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_extension_194", 194, true),
    ),
    Extension(
      name: "VK_GOOGLE_extension_195",
      disabled: true,
      id: 195,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_extension_195", 195, true),
    ),
    Extension(
      name: "VK_GOOGLE_extension_196",
      disabled: true,
      id: 196,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_extension_196", 196, true),
    ),
    Extension(
      name: "VK_KHR_driver_properties",
      disabled: false,
      id: 197,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_driver_properties", 197, false),
    ),
    Extension(
      name: "VK_KHR_shader_float_controls",
      disabled: false,
      id: 198,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_shader_float_controls", 198, false),
    ),
    Extension(
      name: "VK_NV_shader_subgroup_partitioned",
      disabled: false,
      id: 199,
      ty: Device,
      min_core: Vulkan1_1,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_shader_subgroup_partitioned", 199, false),
    ),
    Extension(
      name: "VK_KHR_depth_stencil_resolve",
      disabled: false,
      id: 200,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_create_renderpass2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
    ),
    Extension(
      name: "VK_KHR_swapchain_mutable_format",
      disabled: false,
      id: 201,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
        "VK_KHR_maintenance2",
        "VK_KHR_image_format_list",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_swapchain_mutable_format", 201, false),
    ),
    Extension(
      name: "VK_NV_compute_shader_derivatives",
      disabled: false,
      id: 202,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_compute_shader_derivatives", 202, false),
    ),
    Extension(
      name: "VK_NV_mesh_shader",
      disabled: false,
      id: 203,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_mesh_shader", 203, false),
    ),
    Extension(
      name: "VK_NV_fragment_shader_barycentric",
      disabled: false,
      id: 204,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_fragment_shader_barycentric", 204, false),
    ),
    Extension(
      name: "VK_NV_shader_image_footprint",
      disabled: false,
      id: 205,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_shader_image_footprint", 205, false),
    ),
    Extension(
      name: "VK_NV_scissor_exclusive",
      disabled: false,
      id: 206,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_scissor_exclusive", 206, false),
    ),
    Extension(
      name: "VK_NV_device_diagnostic_checkpoints",
      disabled: false,
      id: 207,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
    ),
    Extension(
      name: "VK_KHR_timeline_semaphore",
      disabled: false,
      id: 208,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
    ),
    Extension(
      name: "VK_KHR_extension_209",
      disabled: true,
      id: 209,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_209", 209, true),
    ),
    Extension(
      name: "VK_INTEL_shader_integer_functions2",
      disabled: false,
      id: 210,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_INTEL_shader_integer_functions2", 210, false),
    ),
    Extension(
      name: "VK_INTEL_performance_query",
      disabled: false,
      id: 211,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_INTEL_performance_query", 211, false),
    ),
    Extension(
      name: "VK_KHR_vulkan_memory_model",
      disabled: false,
      id: 212,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_vulkan_memory_model", 212, false),
    ),
    Extension(
      name: "VK_EXT_pci_bus_info",
      disabled: false,
      id: 213,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_pci_bus_info", 213, false),
    ),
    Extension(
      name: "VK_AMD_display_native_hdr",
      disabled: false,
      id: 214,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_get_surface_capabilities2",
        "VK_KHR_swapchain",
      ],
      deprecation_status: Current,
      origin: Extension("VK_AMD_display_native_hdr", 214, false),
    ),
    Extension(
      name: "VK_FUCHSIA_imagepipe_surface",
      disabled: false,
      id: 215,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_FUCHSIA_imagepipe_surface", 215, false),
    ),
    Extension(
      name: "VK_KHR_shader_terminate_invocation",
      disabled: false,
      id: 216,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_shader_terminate_invocation", 216, false),
    ),
    Extension(
      name: "VK_GOOGLE_extension_217",
      disabled: true,
      id: 217,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_extension_217", 217, true),
    ),
    Extension(
      name: "VK_EXT_metal_surface",
      disabled: false,
      id: 218,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_metal_surface", 218, false),
    ),
    Extension(
      name: "VK_EXT_fragment_density_map",
      disabled: false,
      id: 219,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_fragment_density_map", 219, false),
    ),
    Extension(
      name: "VK_EXT_extension_220",
      disabled: true,
      id: 220,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_220", 220, true),
    ),
    Extension(
      name: "VK_KHR_extension_221",
      disabled: true,
      id: 221,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_221", 221, true),
    ),
    Extension(
      name: "VK_EXT_scalar_block_layout",
      disabled: false,
      id: 222,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_EXT_scalar_block_layout", 222, false),
    ),
    Extension(
      name: "VK_EXT_extension_223",
      disabled: true,
      id: 223,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_223", 223, true),
    ),
    Extension(
      name: "VK_GOOGLE_hlsl_functionality1",
      disabled: false,
      id: 224,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_hlsl_functionality1", 224, false),
    ),
    Extension(
      name: "VK_GOOGLE_decorate_string",
      disabled: false,
      id: 225,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_decorate_string", 225, false),
    ),
    Extension(
      name: "VK_EXT_subgroup_size_control",
      disabled: false,
      id: 226,
      ty: Device,
      min_core: Vulkan1_1,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_subgroup_size_control", 226, false),
    ),
    Extension(
      name: "VK_KHR_fragment_shading_rate",
      disabled: false,
      id: 227,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_create_renderpass2",
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
    ),
    Extension(
      name: "VK_AMD_shader_core_properties2",
      disabled: false,
      id: 228,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_AMD_shader_core_properties",
      ],
      deprecation_status: Current,
      origin: Extension("VK_AMD_shader_core_properties2", 228, false),
    ),
    Extension(
      name: "VK_AMD_extension_229",
      disabled: true,
      id: 229,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_229", 229, true),
    ),
    Extension(
      name: "VK_AMD_device_coherent_memory",
      disabled: false,
      id: 230,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_device_coherent_memory", 230, false),
    ),
    Extension(
      name: "VK_AMD_extension_231",
      disabled: true,
      id: 231,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_231", 231, true),
    ),
    Extension(
      name: "VK_AMD_extension_232",
      disabled: true,
      id: 232,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_232", 232, true),
    ),
    Extension(
      name: "VK_AMD_extension_233",
      disabled: true,
      id: 233,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_233", 233, true),
    ),
    Extension(
      name: "VK_AMD_extension_234",
      disabled: true,
      id: 234,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_234", 234, true),
    ),
    Extension(
      name: "VK_EXT_shader_image_atomic_int64",
      disabled: false,
      id: 235,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_shader_image_atomic_int64", 235, false),
    ),
    Extension(
      name: "VK_AMD_extension_236",
      disabled: true,
      id: 236,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_236", 236, true),
    ),
    Extension(
      name: "VK_KHR_spirv_1_4",
      disabled: false,
      id: 237,
      ty: Device,
      min_core: Vulkan1_1,
      required: [
        "VK_KHR_shader_float_controls",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_spirv_1_4", 237, false),
    ),
    Extension(
      name: "VK_EXT_memory_budget",
      disabled: false,
      id: 238,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_memory_budget", 238, false),
    ),
    Extension(
      name: "VK_EXT_memory_priority",
      disabled: false,
      id: 239,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_memory_priority", 239, false),
    ),
    Extension(
      name: "VK_KHR_surface_protected_capabilities",
      disabled: false,
      id: 240,
      ty: Instance,
      min_core: Vulkan1_1,
      required: [
        "VK_KHR_get_surface_capabilities2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_surface_protected_capabilities", 240, false),
    ),
    Extension(
      name: "VK_NV_dedicated_allocation_image_aliasing",
      disabled: false,
      id: 241,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_dedicated_allocation",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_dedicated_allocation_image_aliasing", 241, false),
    ),
    Extension(
      name: "VK_KHR_separate_depth_stencil_layouts",
      disabled: false,
      id: 242,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_create_renderpass2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
    ),
    Extension(
      name: "VK_INTEL_extension_243",
      disabled: true,
      id: 243,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_INTEL_extension_243", 243, true),
    ),
    Extension(
      name: "VK_MESA_extension_244",
      disabled: true,
      id: 244,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_MESA_extension_244", 244, true),
    ),
    Extension(
      name: "VK_EXT_buffer_device_address",
      disabled: false,
      id: 245,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Deprecated("VK_KHR_buffer_device_address"),
      origin: Extension("VK_EXT_buffer_device_address", 245, false),
    ),
    Extension(
      name: "VK_EXT_tooling_info",
      disabled: false,
      id: 246,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_tooling_info", 246, false),
    ),
    Extension(
      name: "VK_EXT_separate_stencil_usage",
      disabled: false,
      id: 247,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_EXT_separate_stencil_usage", 247, false),
    ),
    Extension(
      name: "VK_EXT_validation_features",
      disabled: false,
      id: 248,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_validation_features", 248, false),
    ),
    Extension(
      name: "VK_KHR_present_wait",
      disabled: false,
      id: 249,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
        "VK_KHR_present_id",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_present_wait", 249, false),
    ),
    Extension(
      name: "VK_NV_cooperative_matrix",
      disabled: false,
      id: 250,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
    ),
    Extension(
      name: "VK_NV_coverage_reduction_mode",
      disabled: false,
      id: 251,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_NV_framebuffer_mixed_samples",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
    ),
    Extension(
      name: "VK_EXT_fragment_shader_interlock",
      disabled: false,
      id: 252,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_fragment_shader_interlock", 252, false),
    ),
    Extension(
      name: "VK_EXT_ycbcr_image_arrays",
      disabled: false,
      id: 253,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_sampler_ycbcr_conversion",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_ycbcr_image_arrays", 253, false),
    ),
    Extension(
      name: "VK_KHR_uniform_buffer_standard_layout",
      disabled: false,
      id: 254,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_uniform_buffer_standard_layout", 254, false),
    ),
    Extension(
      name: "VK_EXT_provoking_vertex",
      disabled: false,
      id: 255,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_provoking_vertex", 255, false),
    ),
    Extension(
      name: "VK_EXT_full_screen_exclusive",
      disabled: false,
      id: 256,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_KHR_surface",
        "VK_KHR_get_surface_capabilities2",
        "VK_KHR_swapchain",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
    ),
    Extension(
      name: "VK_EXT_headless_surface",
      disabled: false,
      id: 257,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_headless_surface", 257, false),
    ),
    Extension(
      name: "VK_KHR_buffer_device_address",
      disabled: false,
      id: 258,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
    ),
    Extension(
      name: "VK_EXT_extension_259",
      disabled: true,
      id: 259,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_259", 259, true),
    ),
    Extension(
      name: "VK_EXT_line_rasterization",
      disabled: false,
      id: 260,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_line_rasterization", 260, false),
    ),
    Extension(
      name: "VK_EXT_shader_atomic_float",
      disabled: false,
      id: 261,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_shader_atomic_float", 261, false),
    ),
    Extension(
      name: "VK_EXT_host_query_reset",
      disabled: false,
      id: 262,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_2),
      origin: Extension("VK_EXT_host_query_reset", 262, false),
    ),
    Extension(
      name: "VK_GGP_extension_263",
      disabled: true,
      id: 263,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GGP_extension_263", 263, true),
    ),
    Extension(
      name: "VK_BRCM_extension_264",
      disabled: true,
      id: 264,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_BRCM_extension_264", 264, true),
    ),
    Extension(
      name: "VK_BRCM_extension_265",
      disabled: true,
      id: 265,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_BRCM_extension_265", 265, true),
    ),
    Extension(
      name: "VK_EXT_index_type_uint8",
      disabled: false,
      id: 266,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_index_type_uint8", 266, false),
    ),
    Extension(
      name: "VK_EXT_extension_267",
      disabled: true,
      id: 267,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_267", 267, true),
    ),
    Extension(
      name: "VK_EXT_extended_dynamic_state",
      disabled: false,
      id: 268,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
    ),
    Extension(
      name: "VK_KHR_deferred_host_operations",
      disabled: false,
      id: 269,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
    ),
    Extension(
      name: "VK_KHR_pipeline_executable_properties",
      disabled: false,
      id: 270,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
    ),
    Extension(
      name: "VK_INTEL_extension_271",
      disabled: true,
      id: 271,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_INTEL_extension_271", 271, true),
    ),
    Extension(
      name: "VK_INTEL_extension_272",
      disabled: true,
      id: 272,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_INTEL_extension_272", 272, true),
    ),
    Extension(
      name: "VK_INTEL_extension_273",
      disabled: true,
      id: 273,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_INTEL_extension_273", 273, true),
    ),
    Extension(
      name: "VK_EXT_shader_atomic_float2",
      disabled: false,
      id: 274,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_shader_atomic_float",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_shader_atomic_float2", 274, false),
    ),
    Extension(
      name: "VK_KHR_extension_275",
      disabled: true,
      id: 275,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_275", 275, true),
    ),
    Extension(
      name: "VK_KHR_extension_276",
      disabled: true,
      id: 276,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_276", 276, true),
    ),
    Extension(
      name: "VK_EXT_shader_demote_to_helper_invocation",
      disabled: false,
      id: 277,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_shader_demote_to_helper_invocation", 277, false),
    ),
    Extension(
      name: "VK_NV_device_generated_commands",
      disabled: false,
      id: 278,
      ty: Device,
      min_core: Vulkan1_1,
      required: [
        "VK_KHR_buffer_device_address",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_device_generated_commands", 278, false),
    ),
    Extension(
      name: "VK_NV_inherited_viewport_scissor",
      disabled: false,
      id: 279,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_inherited_viewport_scissor", 279, false),
    ),
    Extension(
      name: "VK_KHR_extension_280",
      disabled: true,
      id: 280,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_280", 280, true),
    ),
    Extension(
      name: "VK_KHR_shader_integer_dot_product",
      disabled: false,
      id: 281,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_shader_integer_dot_product", 281, false),
    ),
    Extension(
      name: "VK_EXT_texel_buffer_alignment",
      disabled: false,
      id: 282,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_texel_buffer_alignment", 282, false),
    ),
    Extension(
      name: "VK_QCOM_render_pass_transform",
      disabled: true,
      id: 283,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_render_pass_transform", 283, true),
    ),
    Extension(
      name: "VK_EXT_extension_284",
      disabled: true,
      id: 284,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_284", 284, true),
    ),
    Extension(
      name: "VK_EXT_device_memory_report",
      disabled: false,
      id: 285,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_device_memory_report", 285, false),
    ),
    Extension(
      name: "VK_EXT_acquire_drm_display",
      disabled: false,
      id: 286,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_direct_mode_display",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_acquire_drm_display", 286, false),
    ),
    Extension(
      name: "VK_EXT_robustness2",
      disabled: false,
      id: 287,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_robustness2", 287, false),
    ),
    Extension(
      name: "VK_EXT_custom_border_color",
      disabled: false,
      id: 288,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_custom_border_color", 288, false),
    ),
    Extension(
      name: "VK_EXT_extension_289",
      disabled: true,
      id: 289,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_289", 289, true),
    ),
    Extension(
      name: "VK_GOOGLE_user_type",
      disabled: false,
      id: 290,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_user_type", 290, false),
    ),
    Extension(
      name: "VK_KHR_pipeline_library",
      disabled: false,
      id: 291,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_pipeline_library", 291, false),
    ),
    Extension(
      name: "VK_NV_extension_292",
      disabled: true,
      id: 292,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_292", 292, true),
    ),
    Extension(
      name: "VK_NV_extension_293",
      disabled: true,
      id: 293,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_293", 293, true),
    ),
    Extension(
      name: "VK_KHR_shader_non_semantic_info",
      disabled: false,
      id: 294,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_shader_non_semantic_info", 294, false),
    ),
    Extension(
      name: "VK_KHR_present_id",
      disabled: false,
      id: 295,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_present_id", 295, false),
    ),
    Extension(
      name: "VK_EXT_private_data",
      disabled: false,
      id: 296,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_private_data", 296, false),
    ),
    Extension(
      name: "VK_KHR_extension_297",
      disabled: true,
      id: 297,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_297", 297, true),
    ),
    Extension(
      name: "VK_EXT_pipeline_creation_cache_control",
      disabled: false,
      id: 298,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
    ),
    Extension(
      name: "VK_KHR_extension_299",
      disabled: true,
      id: 299,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_299", 299, true),
    ),
    Extension(
      name: "VK_KHR_video_encode_queue",
      disabled: false,
      id: 300,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_video_queue",
        "VK_KHR_synchronization2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
    ),
    Extension(
      name: "VK_NV_device_diagnostics_config",
      disabled: false,
      id: 301,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_device_diagnostics_config", 301, false),
    ),
    Extension(
      name: "VK_QCOM_render_pass_store_ops",
      disabled: true,
      id: 302,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_render_pass_store_ops", 302, true),
    ),
    Extension(
      name: "VK_QCOM_extension_303",
      disabled: true,
      id: 303,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_303", 303, true),
    ),
    Extension(
      name: "VK_QCOM_extension_304",
      disabled: true,
      id: 304,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_304", 304, true),
    ),
    Extension(
      name: "VK_QCOM_extension_305",
      disabled: true,
      id: 305,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_305", 305, true),
    ),
    Extension(
      name: "VK_QCOM_extension_306",
      disabled: true,
      id: 306,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_306", 306, true),
    ),
    Extension(
      name: "VK_QCOM_extension_307",
      disabled: true,
      id: 307,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_307", 307, true),
    ),
    Extension(
      name: "VK_NV_extension_308",
      disabled: true,
      id: 308,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_308", 308, true),
    ),
    Extension(
      name: "VK_KHR_extension_309",
      disabled: true,
      id: 309,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_309", 309, true),
    ),
    Extension(
      name: "VK_QCOM_extension_310",
      disabled: true,
      id: 310,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_310", 310, true),
    ),
    Extension(
      name: "VK_NV_extension_311",
      disabled: true,
      id: 311,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_311", 311, true),
    ),
    Extension(
      name: "VK_EXT_extension_312",
      disabled: true,
      id: 312,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_312", 312, true),
    ),
    Extension(
      name: "VK_EXT_extension_313",
      disabled: true,
      id: 313,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_313", 313, true),
    ),
    Extension(
      name: "VK_AMD_extension_314",
      disabled: true,
      id: 314,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_314", 314, true),
    ),
    Extension(
      name: "VK_KHR_synchronization2",
      disabled: false,
      id: 315,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_synchronization2", 315, false),
    ),
    Extension(
      name: "VK_AMD_extension_316",
      disabled: true,
      id: 316,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_316", 316, true),
    ),
    Extension(
      name: "VK_AMD_extension_317",
      disabled: true,
      id: 317,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_317", 317, true),
    ),
    Extension(
      name: "VK_AMD_extension_318",
      disabled: true,
      id: 318,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_318", 318, true),
    ),
    Extension(
      name: "VK_AMD_extension_319",
      disabled: true,
      id: 319,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_319", 319, true),
    ),
    Extension(
      name: "VK_AMD_extension_320",
      disabled: true,
      id: 320,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_320", 320, true),
    ),
    Extension(
      name: "VK_AMD_extension_321",
      disabled: true,
      id: 321,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_321", 321, true),
    ),
    Extension(
      name: "VK_AMD_extension_322",
      disabled: true,
      id: 322,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_322", 322, true),
    ),
    Extension(
      name: "VK_AMD_extension_323",
      disabled: true,
      id: 323,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_AMD_extension_323", 323, true),
    ),
    Extension(
      name: "VK_KHR_shader_subgroup_uniform_control_flow",
      disabled: false,
      id: 324,
      ty: Device,
      min_core: Vulkan1_1,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_shader_subgroup_uniform_control_flow", 324, false),
    ),
    Extension(
      name: "VK_KHR_extension_325",
      disabled: true,
      id: 325,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_325", 325, true),
    ),
    Extension(
      name: "VK_KHR_zero_initialize_workgroup_memory",
      disabled: false,
      id: 326,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_zero_initialize_workgroup_memory", 326, false),
    ),
    Extension(
      name: "VK_NV_fragment_shading_rate_enums",
      disabled: false,
      id: 327,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_fragment_shading_rate",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
    ),
    Extension(
      name: "VK_NV_ray_tracing_motion_blur",
      disabled: false,
      id: 328,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_ray_tracing_pipeline",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
    ),
    Extension(
      name: "VK_NV_extension_329",
      disabled: true,
      id: 329,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_329", 329, true),
    ),
    Extension(
      name: "VK_NV_extension_330",
      disabled: true,
      id: 330,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_330", 330, true),
    ),
    Extension(
      name: "VK_EXT_ycbcr_2plane_444_formats",
      disabled: false,
      id: 331,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_sampler_ycbcr_conversion",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
    ),
    Extension(
      name: "VK_NV_extension_332",
      disabled: true,
      id: 332,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_332", 332, true),
    ),
    Extension(
      name: "VK_EXT_fragment_density_map2",
      disabled: false,
      id: 333,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_fragment_density_map",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_fragment_density_map2", 333, false),
    ),
    Extension(
      name: "VK_QCOM_rotated_copy_commands",
      disabled: true,
      id: 334,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_swapchain",
        "VK_KHR_copy_commands2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_rotated_copy_commands", 334, true),
    ),
    Extension(
      name: "VK_KHR_extension_335",
      disabled: true,
      id: 335,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_335", 335, true),
    ),
    Extension(
      name: "VK_EXT_image_robustness",
      disabled: false,
      id: 336,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_image_robustness", 336, false),
    ),
    Extension(
      name: "VK_KHR_workgroup_memory_explicit_layout",
      disabled: false,
      id: 337,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_KHR_workgroup_memory_explicit_layout", 337, false),
    ),
    Extension(
      name: "VK_KHR_copy_commands2",
      disabled: false,
      id: 338,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_copy_commands2", 338, false),
    ),
    Extension(
      name: "VK_ARM_extension_339",
      disabled: true,
      id: 339,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ARM_extension_339", 339, true),
    ),
    Extension(
      name: "VK_EXT_extension_340",
      disabled: true,
      id: 340,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_340", 340, true),
    ),
    Extension(
      name: "VK_EXT_4444_formats",
      disabled: false,
      id: 341,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_4444_formats", 341, false),
    ),
    Extension(
      name: "VK_EXT_extension_342",
      disabled: true,
      id: 342,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_342", 342, true),
    ),
    Extension(
      name: "VK_ARM_rasterization_order_attachment_access",
      disabled: false,
      id: 343,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
    ),
    Extension(
      name: "VK_ARM_extension_344",
      disabled: true,
      id: 344,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ARM_extension_344", 344, true),
    ),
    Extension(
      name: "VK_EXT_rgba10x6_formats",
      disabled: false,
      id: 345,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_sampler_ycbcr_conversion",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_rgba10x6_formats", 345, false),
    ),
    Extension(
      name: "VK_NV_acquire_winrt_display",
      disabled: false,
      id: 346,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_direct_mode_display",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_acquire_winrt_display", 346, false),
    ),
    Extension(
      name: "VK_EXT_directfb_surface",
      disabled: false,
      id: 347,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_directfb_surface", 347, false),
    ),
    Extension(
      name: "VK_KHR_extension_350",
      disabled: true,
      id: 350,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_350", 350, true),
    ),
    Extension(
      name: "VK_NV_extension_351",
      disabled: true,
      id: 351,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_351", 351, true),
    ),
    Extension(
      name: "VK_VALVE_mutable_descriptor_type",
      disabled: false,
      id: 352,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_maintenance3",
      ],
      deprecation_status: Current,
      origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
    ),
    Extension(
      name: "VK_EXT_vertex_input_dynamic_state",
      disabled: false,
      id: 353,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
    ),
    Extension(
      name: "VK_EXT_physical_device_drm",
      disabled: false,
      id: 354,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_physical_device_drm", 354, false),
    ),
    Extension(
      name: "VK_EXT_extension_355",
      disabled: true,
      id: 355,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_355", 355, true),
    ),
    Extension(
      name: "VK_EXT_depth_clip_control",
      disabled: false,
      id: 356,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_depth_clip_control", 356, false),
    ),
    Extension(
      name: "VK_EXT_primitive_topology_list_restart",
      disabled: false,
      id: 357,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_primitive_topology_list_restart", 357, false),
    ),
    Extension(
      name: "VK_KHR_extension_358",
      disabled: true,
      id: 358,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_358", 358, true),
    ),
    Extension(
      name: "VK_EXT_extension_359",
      disabled: true,
      id: 359,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_359", 359, true),
    ),
    Extension(
      name: "VK_EXT_extension_360",
      disabled: true,
      id: 360,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_360", 360, true),
    ),
    Extension(
      name: "VK_KHR_format_feature_flags2",
      disabled: false,
      id: 361,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_format_feature_flags2", 361, false),
    ),
    Extension(
      name: "VK_EXT_extension_362",
      disabled: true,
      id: 362,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_362", 362, true),
    ),
    Extension(
      name: "VK_EXT_extension_363",
      disabled: true,
      id: 363,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_363", 363, true),
    ),
    Extension(
      name: "VK_FUCHSIA_extension_364",
      disabled: true,
      id: 364,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_FUCHSIA_extension_364", 364, true),
    ),
    Extension(
      name: "VK_FUCHSIA_external_memory",
      disabled: false,
      id: 365,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory_capabilities",
        "VK_KHR_external_memory",
      ],
      deprecation_status: Current,
      origin: Extension("VK_FUCHSIA_external_memory", 365, false),
    ),
    Extension(
      name: "VK_FUCHSIA_external_semaphore",
      disabled: false,
      id: 366,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_semaphore_capabilities",
        "VK_KHR_external_semaphore",
      ],
      deprecation_status: Current,
      origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
    ),
    Extension(
      name: "VK_FUCHSIA_buffer_collection",
      disabled: false,
      id: 367,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_FUCHSIA_external_memory",
        "VK_KHR_sampler_ycbcr_conversion",
      ],
      deprecation_status: Current,
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
    ),
    Extension(
      name: "VK_FUCHSIA_extension_368",
      disabled: true,
      id: 368,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_FUCHSIA_extension_368", 368, true),
    ),
    Extension(
      name: "VK_QCOM_extension_369",
      disabled: true,
      id: 369,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_369", 369, true),
    ),
    Extension(
      name: "VK_HUAWEI_subpass_shading",
      disabled: false,
      id: 370,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_create_renderpass2",
        "VK_KHR_synchronization2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
    ),
    Extension(
      name: "VK_HUAWEI_invocation_mask",
      disabled: false,
      id: 371,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_ray_tracing_pipeline",
        "VK_KHR_synchronization2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
    ),
    Extension(
      name: "VK_NV_external_memory_rdma",
      disabled: false,
      id: 372,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_external_memory",
      ],
      deprecation_status: Current,
      origin: Extension("VK_NV_external_memory_rdma", 372, false),
    ),
    Extension(
      name: "VK_NV_extension_373",
      disabled: true,
      id: 373,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_373", 373, true),
    ),
    Extension(
      name: "VK_NV_extension_374",
      disabled: true,
      id: 374,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_374", 374, true),
    ),
    Extension(
      name: "VK_NV_extension_375",
      disabled: true,
      id: 375,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_375", 375, true),
    ),
    Extension(
      name: "VK_EXT_extension_376",
      disabled: true,
      id: 376,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_376", 376, true),
    ),
    Extension(
      name: "VK_EXT_extension_377",
      disabled: true,
      id: 377,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_377", 377, true),
    ),
    Extension(
      name: "VK_EXT_extended_dynamic_state2",
      disabled: false,
      id: 378,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
    ),
    Extension(
      name: "VK_QNX_screen_surface",
      disabled: true,
      id: 379,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_QNX_screen_surface", 379, true),
    ),
    Extension(
      name: "VK_KHR_extension_380",
      disabled: true,
      id: 380,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_380", 380, true),
    ),
    Extension(
      name: "VK_KHR_extension_381",
      disabled: true,
      id: 381,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_381", 381, true),
    ),
    Extension(
      name: "VK_EXT_color_write_enable",
      disabled: false,
      id: 382,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_color_write_enable", 382, false),
    ),
    Extension(
      name: "VK_EXT_extension_383",
      disabled: true,
      id: 383,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_383", 383, true),
    ),
    Extension(
      name: "VK_EXT_extension_384",
      disabled: true,
      id: 384,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_384", 384, true),
    ),
    Extension(
      name: "VK_MESA_extension_385",
      disabled: true,
      id: 385,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_MESA_extension_385", 385, true),
    ),
    Extension(
      name: "VK_GOOGLE_extension_386",
      disabled: true,
      id: 386,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_extension_386", 386, true),
    ),
    Extension(
      name: "VK_KHR_extension_387",
      disabled: true,
      id: 387,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_387", 387, true),
    ),
    Extension(
      name: "VK_EXT_extension_388",
      disabled: true,
      id: 388,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_388", 388, true),
    ),
    Extension(
      name: "VK_EXT_global_priority_query",
      disabled: false,
      id: 389,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_global_priority",
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Promoted("VK_KHR_global_priority"),
      origin: Extension("VK_EXT_global_priority_query", 389, false),
    ),
    Extension(
      name: "VK_EXT_extension_390",
      disabled: true,
      id: 390,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_390", 390, true),
    ),
    Extension(
      name: "VK_EXT_extension_391",
      disabled: true,
      id: 391,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_391", 391, true),
    ),
    Extension(
      name: "VK_EXT_image_view_min_lod",
      disabled: false,
      id: 392,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_image_view_min_lod", 392, false),
    ),
    Extension(
      name: "VK_EXT_multi_draw",
      disabled: false,
      id: 393,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_multi_draw", 393, false),
    ),
    Extension(
      name: "VK_EXT_extension_394",
      disabled: true,
      id: 394,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_394", 394, true),
    ),
    Extension(
      name: "VK_KHR_portability_enumeration",
      disabled: false,
      id: 395,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_portability_enumeration", 395, false),
    ),
    Extension(
      name: "VK_KHR_extension_396",
      disabled: true,
      id: 396,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_396", 396, true),
    ),
    Extension(
      name: "VK_NV_extension_397",
      disabled: true,
      id: 397,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_397", 397, true),
    ),
    Extension(
      name: "VK_NV_extension_398",
      disabled: true,
      id: 398,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_398", 398, true),
    ),
    Extension(
      name: "VK_JUICE_extension_399",
      disabled: true,
      id: 399,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_JUICE_extension_399", 399, true),
    ),
    Extension(
      name: "VK_JUICE_extension_400",
      disabled: true,
      id: 400,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_JUICE_extension_400", 400, true),
    ),
    Extension(
      name: "VK_EXT_load_store_op_none",
      disabled: false,
      id: 401,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_load_store_op_none", 401, false),
    ),
    Extension(
      name: "VK_FB_extension_402",
      disabled: true,
      id: 402,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_FB_extension_402", 402, true),
    ),
    Extension(
      name: "VK_FB_extension_403",
      disabled: true,
      id: 403,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_FB_extension_403", 403, true),
    ),
    Extension(
      name: "VK_FB_extension_404",
      disabled: true,
      id: 404,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_FB_extension_404", 404, true),
    ),
    Extension(
      name: "VK_HUAWEI_extension_405",
      disabled: true,
      id: 405,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_HUAWEI_extension_405", 405, true),
    ),
    Extension(
      name: "VK_HUAWEI_extension_406",
      disabled: true,
      id: 406,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_HUAWEI_extension_406", 406, true),
    ),
    Extension(
      name: "VK_GGP_extension_407",
      disabled: true,
      id: 407,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GGP_extension_407", 407, true),
    ),
    Extension(
      name: "VK_GGP_extension_408",
      disabled: true,
      id: 408,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GGP_extension_408", 408, true),
    ),
    Extension(
      name: "VK_GGP_extension_409",
      disabled: true,
      id: 409,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GGP_extension_409", 409, true),
    ),
    Extension(
      name: "VK_GGP_extension_410",
      disabled: true,
      id: 410,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GGP_extension_410", 410, true),
    ),
    Extension(
      name: "VK_GGP_extension_411",
      disabled: true,
      id: 411,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GGP_extension_411", 411, true),
    ),
    Extension(
      name: "VK_EXT_border_color_swizzle",
      disabled: false,
      id: 412,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_custom_border_color",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_border_color_swizzle", 412, false),
    ),
    Extension(
      name: "VK_EXT_pageable_device_local_memory",
      disabled: false,
      id: 413,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_EXT_memory_priority",
      ],
      deprecation_status: Current,
      origin: Extension("VK_EXT_pageable_device_local_memory", 413, false),
    ),
    Extension(
      name: "VK_KHR_maintenance4",
      disabled: false,
      id: 414,
      ty: Device,
      min_core: Vulkan1_1,
      required: [],
      deprecation_status: PromotedVersion(Vulkan1_3),
      origin: Extension("VK_KHR_maintenance4", 414, false),
    ),
    Extension(
      name: "VK_HUAWEI_extension_415",
      disabled: true,
      id: 415,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_HUAWEI_extension_415", 415, true),
    ),
    Extension(
      name: "VK_ARM_extension_416",
      disabled: true,
      id: 416,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ARM_extension_416", 416, true),
    ),
    Extension(
      name: "VK_KHR_extension_417",
      disabled: true,
      id: 417,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_417", 417, true),
    ),
    Extension(
      name: "VK_ARM_extension_418",
      disabled: true,
      id: 418,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ARM_extension_418", 418, true),
    ),
    Extension(
      name: "VK_EXT_extension_419",
      disabled: true,
      id: 419,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_419", 419, true),
    ),
    Extension(
      name: "VK_EXT_extension_420",
      disabled: true,
      id: 420,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_420", 420, true),
    ),
    Extension(
      name: "VK_VALVE_descriptor_set_host_mapping",
      disabled: true,
      id: 421,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
    ),
    Extension(
      name: "VK_EXT_extension_422",
      disabled: true,
      id: 422,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_422", 422, true),
    ),
    Extension(
      name: "VK_EXT_disable_cube_map_wrap",
      disabled: true,
      id: 423,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_disable_cube_map_wrap", 423, true),
    ),
    Extension(
      name: "VK_ARM_extension_424",
      disabled: true,
      id: 424,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ARM_extension_424", 424, true),
    ),
    Extension(
      name: "VK_ARM_extension_425",
      disabled: true,
      id: 425,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ARM_extension_425", 425, true),
    ),
    Extension(
      name: "VK_QCOM_fragment_density_map_offset",
      disabled: true,
      id: 426,
      ty: Device,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_get_physical_device_properties2",
        "VK_EXT_fragment_density_map",
      ],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
    ),
    Extension(
      name: "VK_NV_extension_427",
      disabled: true,
      id: 427,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_427", 427, true),
    ),
    Extension(
      name: "VK_NV_extension_428",
      disabled: true,
      id: 428,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_428", 428, true),
    ),
    Extension(
      name: "VK_NV_extension_429",
      disabled: true,
      id: 429,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_429", 429, true),
    ),
    Extension(
      name: "VK_NV_extension_430",
      disabled: true,
      id: 430,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_430", 430, true),
    ),
    Extension(
      name: "VK_NV_linear_color_attachment",
      disabled: false,
      id: 431,
      ty: Device,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_linear_color_attachment", 431, false),
    ),
    Extension(
      name: "VK_NV_extension_432",
      disabled: true,
      id: 432,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_432", 432, true),
    ),
    Extension(
      name: "VK_NV_extension_433",
      disabled: true,
      id: 433,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_433", 433, true),
    ),
    Extension(
      name: "VK_GOOGLE_surfaceless_query",
      disabled: false,
      id: 434,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [
        "VK_KHR_surface",
      ],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_surfaceless_query", 434, false),
    ),
    Extension(
      name: "VK_KHR_extension_435",
      disabled: true,
      id: 435,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_KHR_extension_435", 435, true),
    ),
    Extension(
      name: "VK_NV_extension_436",
      disabled: true,
      id: 436,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_436", 436, true),
    ),
    Extension(
      name: "VK_EXT_extension_437",
      disabled: true,
      id: 437,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_437", 437, true),
    ),
    Extension(
      name: "VK_EXT_extension_438",
      disabled: true,
      id: 438,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_438", 438, true),
    ),
    Extension(
      name: "VK_SEC_extension_439",
      disabled: true,
      id: 439,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_SEC_extension_439", 439, true),
    ),
    Extension(
      name: "VK_QCOM_extension_440",
      disabled: true,
      id: 440,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_440", 440, true),
    ),
    Extension(
      name: "VK_QCOM_extension_441",
      disabled: true,
      id: 441,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_QCOM_extension_441", 441, true),
    ),
    Extension(
      name: "VK_COREAVI_extension_442",
      disabled: true,
      id: 442,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_COREAVI_extension_442", 442, true),
    ),
    Extension(
      name: "VK_COREAVI_extension_443",
      disabled: true,
      id: 443,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_COREAVI_extension_443", 443, true),
    ),
    Extension(
      name: "VK_COREAVI_extension_444",
      disabled: true,
      id: 444,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_COREAVI_extension_444", 444, true),
    ),
    Extension(
      name: "VK_COREAVI_extension_445",
      disabled: true,
      id: 445,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_COREAVI_extension_445", 445, true),
    ),
    Extension(
      name: "VK_COREAVI_extension_446",
      disabled: true,
      id: 446,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_COREAVI_extension_446", 446, true),
    ),
    Extension(
      name: "VK_COREAVI_extension_447",
      disabled: true,
      id: 447,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_COREAVI_extension_447", 447, true),
    ),
    Extension(
      name: "VK_SEC_extension_448",
      disabled: true,
      id: 448,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_SEC_extension_448", 448, true),
    ),
    Extension(
      name: "VK_SEC_extension_449",
      disabled: true,
      id: 449,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_SEC_extension_449", 449, true),
    ),
    Extension(
      name: "VK_SEC_extension_450",
      disabled: true,
      id: 450,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_SEC_extension_450", 450, true),
    ),
    Extension(
      name: "VK_SEC_extension_451",
      disabled: true,
      id: 451,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_SEC_extension_451", 451, true),
    ),
    Extension(
      name: "VK_NV_extension_452",
      disabled: true,
      id: 452,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_452", 452, true),
    ),
    Extension(
      name: "VK_ARM_extension_453",
      disabled: true,
      id: 453,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ARM_extension_453", 453, true),
    ),
    Extension(
      name: "VK_GOOGLE_extension_454",
      disabled: true,
      id: 454,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_extension_454", 454, true),
    ),
    Extension(
      name: "VK_GOOGLE_extension_455",
      disabled: true,
      id: 455,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_GOOGLE_extension_455", 455, true),
    ),
    Extension(
      name: "VK_NV_extension_456",
      disabled: true,
      id: 456,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_NV_extension_456", 456, true),
    ),
    Extension(
      name: "VK_EXT_extension_457",
      disabled: true,
      id: 457,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_457", 457, true),
    ),
    Extension(
      name: "VK_EXT_extension_458",
      disabled: true,
      id: 458,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_458", 458, true),
    ),
    Extension(
      name: "VK_ARM_extension_459",
      disabled: true,
      id: 459,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_ARM_extension_459", 459, true),
    ),
    Extension(
      name: "VK_EXT_extension_460",
      disabled: true,
      id: 460,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_460", 460, true),
    ),
    Extension(
      name: "VK_EXT_extension_461",
      disabled: true,
      id: 461,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_461", 461, true),
    ),
    Extension(
      name: "VK_EXT_extension_462",
      disabled: true,
      id: 462,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_462", 462, true),
    ),
    Extension(
      name: "VK_EXT_extension_463",
      disabled: true,
      id: 463,
      ty: Instance,
      min_core: Vulkan1_0,
      required: [],
      deprecation_status: Current,
      origin: Extension("VK_EXT_extension_463", 463, true),
    ),
  ],
  tags: [
    Tag("IMG"),
    Tag("AMD"),
    Tag("AMDX"),
    Tag("ARM"),
    Tag("FSL"),
    Tag("BRCM"),
    Tag("NXP"),
    Tag("NV"),
    Tag("NVX"),
    Tag("VIV"),
    Tag("VSI"),
    Tag("KDAB"),
    Tag("ANDROID"),
    Tag("CHROMIUM"),
    Tag("FUCHSIA"),
    Tag("GGP"),
    Tag("GOOGLE"),
    Tag("QCOM"),
    Tag("LUNARG"),
    Tag("NZXT"),
    Tag("SAMSUNG"),
    Tag("SEC"),
    Tag("TIZEN"),
    Tag("RENDERDOC"),
    Tag("NN"),
    Tag("MVK"),
    Tag("KHR"),
    Tag("KHX"),
    Tag("EXT"),
    Tag("MESA"),
    Tag("INTEL"),
    Tag("HUAWEI"),
    Tag("VALVE"),
    Tag("QNX"),
    Tag("JUICE"),
    Tag("FB"),
    Tag("RASTERGRID"),
  ],
  opaque_types: [
    OpaqueType(
      original_name: "Display",
      requires: "X11/Xlib.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "VisualID",
      requires: "X11/Xlib.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "Window",
      requires: "X11/Xlib.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "RROutput",
      requires: "X11/extensions/Xrandr.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "wl_display",
      requires: "wayland-client.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "wl_surface",
      requires: "wayland-client.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "HINSTANCE",
      requires: "windows.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "HWND",
      requires: "windows.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "HMONITOR",
      requires: "windows.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "HANDLE",
      requires: "windows.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "SECURITY_ATTRIBUTES",
      requires: "windows.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "DWORD",
      requires: "windows.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "LPCWSTR",
      requires: "windows.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "xcb_connection_t",
      requires: "xcb/xcb.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "xcb_visualid_t",
      requires: "xcb/xcb.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "xcb_window_t",
      requires: "xcb/xcb.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "IDirectFB",
      requires: "directfb.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "IDirectFBSurface",
      requires: "directfb.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "zx_handle_t",
      requires: "zircon/types.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "GgpStreamDescriptor",
      requires: "ggp_c/vulkan_types.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "GgpFrameToken",
      requires: "ggp_c/vulkan_types.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "_screen_context",
      requires: "screen/screen.h",
      origin: Opaque,
    ),
    OpaqueType(
      original_name: "_screen_window",
      requires: "screen/screen.h",
      origin: Opaque,
    ),
  ],
  aliases: [
    Alias(
      original_name: "VkGeometryFlagsNV",
      name: "GeometryFlagsNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkGeometryFlagsKHR",
    ),
    Alias(
      original_name: "VkGeometryInstanceFlagsNV",
      name: "GeometryInstanceFlagsNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkGeometryInstanceFlagsKHR",
    ),
    Alias(
      original_name: "VkBuildAccelerationStructureFlagsNV",
      name: "BuildAccelerationStructureFlagsNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkBuildAccelerationStructureFlagsKHR",
    ),
    Alias(
      original_name: "VkPrivateDataSlotCreateFlagsEXT",
      name: "PrivateDataSlotCreateFlagsEXT",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "VkPrivateDataSlotCreateFlags",
    ),
    Alias(
      original_name: "VkDescriptorUpdateTemplateCreateFlagsKHR",
      name: "DescriptorUpdateTemplateCreateFlagsKHR",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      of: "VkDescriptorUpdateTemplateCreateFlags",
    ),
    Alias(
      original_name: "VkPipelineCreationFeedbackFlagsEXT",
      name: "PipelineCreationFeedbackFlagsEXT",
      origin: Extension("VK_EXT_pipeline_creation_feedback", 193, false),
      of: "VkPipelineCreationFeedbackFlags",
    ),
    Alias(
      original_name: "VkSemaphoreWaitFlagsKHR",
      name: "SemaphoreWaitFlagsKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkSemaphoreWaitFlags",
    ),
    Alias(
      original_name: "VkAccessFlags2KHR",
      name: "AccessFlags2KHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkAccessFlags2",
    ),
    Alias(
      original_name: "VkPipelineStageFlags2KHR",
      name: "PipelineStageFlags2KHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkPipelineStageFlags2",
    ),
    Alias(
      original_name: "VkFormatFeatureFlags2KHR",
      name: "FormatFeatureFlags2KHR",
      origin: Extension("VK_KHR_format_feature_flags2", 361, false),
      of: "VkFormatFeatureFlags2",
    ),
    Alias(
      original_name: "VkRenderingFlagsKHR",
      name: "RenderingFlagsKHR",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "VkRenderingFlags",
    ),
    Alias(
      original_name: "VkPeerMemoryFeatureFlagsKHR",
      name: "PeerMemoryFeatureFlagsKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkPeerMemoryFeatureFlags",
    ),
    Alias(
      original_name: "VkMemoryAllocateFlagsKHR",
      name: "MemoryAllocateFlagsKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkMemoryAllocateFlags",
    ),
    Alias(
      original_name: "VkCommandPoolTrimFlagsKHR",
      name: "CommandPoolTrimFlagsKHR",
      origin: Extension("VK_KHR_maintenance1", 70, false),
      of: "VkCommandPoolTrimFlags",
    ),
    Alias(
      original_name: "VkExternalMemoryHandleTypeFlagsKHR",
      name: "ExternalMemoryHandleTypeFlagsKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkExternalMemoryHandleTypeFlags",
    ),
    Alias(
      original_name: "VkExternalMemoryFeatureFlagsKHR",
      name: "ExternalMemoryFeatureFlagsKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkExternalMemoryFeatureFlags",
    ),
    Alias(
      original_name: "VkExternalSemaphoreHandleTypeFlagsKHR",
      name: "ExternalSemaphoreHandleTypeFlagsKHR",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      of: "VkExternalSemaphoreHandleTypeFlags",
    ),
    Alias(
      original_name: "VkExternalSemaphoreFeatureFlagsKHR",
      name: "ExternalSemaphoreFeatureFlagsKHR",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      of: "VkExternalSemaphoreFeatureFlags",
    ),
    Alias(
      original_name: "VkSemaphoreImportFlagsKHR",
      name: "SemaphoreImportFlagsKHR",
      origin: Extension("VK_KHR_external_semaphore", 78, false),
      of: "VkSemaphoreImportFlags",
    ),
    Alias(
      original_name: "VkExternalFenceHandleTypeFlagsKHR",
      name: "ExternalFenceHandleTypeFlagsKHR",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "VkExternalFenceHandleTypeFlags",
    ),
    Alias(
      original_name: "VkExternalFenceFeatureFlagsKHR",
      name: "ExternalFenceFeatureFlagsKHR",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "VkExternalFenceFeatureFlags",
    ),
    Alias(
      original_name: "VkFenceImportFlagsKHR",
      name: "FenceImportFlagsKHR",
      origin: Extension("VK_KHR_external_fence", 114, false),
      of: "VkFenceImportFlags",
    ),
    Alias(
      original_name: "VkDescriptorBindingFlagsEXT",
      name: "DescriptorBindingFlagsEXT",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      of: "VkDescriptorBindingFlags",
    ),
    Alias(
      original_name: "VkResolveModeFlagsKHR",
      name: "ResolveModeFlagsKHR",
      origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
      of: "VkResolveModeFlags",
    ),
    Alias(
      original_name: "VkToolPurposeFlagsEXT",
      name: "ToolPurposeFlagsEXT",
      origin: Extension("VK_EXT_tooling_info", 246, false),
      of: "VkToolPurposeFlags",
    ),
    Alias(
      original_name: "VkSubmitFlagsKHR",
      name: "SubmitFlagsKHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkSubmitFlags",
    ),
    Alias(
      original_name: "VkDescriptorUpdateTemplateKHR",
      name: "DescriptorUpdateTemplateKHR",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      of: "VkDescriptorUpdateTemplate",
    ),
    Alias(
      original_name: "VkSamplerYcbcrConversionKHR",
      name: "SamplerYcbcrConversionKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkSamplerYcbcrConversion",
    ),
    Alias(
      original_name: "VkPrivateDataSlotEXT",
      name: "PrivateDataSlotEXT",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "VkPrivateDataSlot",
    ),
    Alias(
      original_name: "VkPrivateDataSlotCreateFlagBitsEXT",
      name: "PrivateDataSlotCreateFlagBitsEXT",
      origin: Unknown,
      of: "VkPrivateDataSlotCreateFlagBits",
    ),
    Alias(
      original_name: "VkDescriptorUpdateTemplateTypeKHR",
      name: "DescriptorUpdateTemplateTypeKHR",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      of: "VkDescriptorUpdateTemplateType",
    ),
    Alias(
      original_name: "VkPointClippingBehaviorKHR",
      name: "PointClippingBehaviorKHR",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VkPointClippingBehavior",
    ),
    Alias(
      original_name: "VkQueueGlobalPriorityEXT",
      name: "QueueGlobalPriorityEXT",
      origin: Extension("VK_EXT_global_priority", 175, false),
      of: "VkQueueGlobalPriorityKHR",
    ),
    Alias(
      original_name: "VkResolveModeFlagBitsKHR",
      name: "ResolveModeFlagBitsKHR",
      origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
      of: "VkResolveModeFlagBits",
    ),
    Alias(
      original_name: "VkDescriptorBindingFlagBitsEXT",
      name: "DescriptorBindingFlagBitsEXT",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      of: "VkDescriptorBindingFlagBits",
    ),
    Alias(
      original_name: "VkSemaphoreTypeKHR",
      name: "SemaphoreTypeKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkSemaphoreType",
    ),
    Alias(
      original_name: "VkGeometryFlagBitsNV",
      name: "GeometryFlagBitsNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkGeometryFlagBitsKHR",
    ),
    Alias(
      original_name: "VkGeometryInstanceFlagBitsNV",
      name: "GeometryInstanceFlagBitsNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkGeometryInstanceFlagBitsKHR",
    ),
    Alias(
      original_name: "VkBuildAccelerationStructureFlagBitsNV",
      name: "BuildAccelerationStructureFlagBitsNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkBuildAccelerationStructureFlagBitsKHR",
    ),
    Alias(
      original_name: "VkCopyAccelerationStructureModeNV",
      name: "CopyAccelerationStructureModeNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkCopyAccelerationStructureModeKHR",
    ),
    Alias(
      original_name: "VkAccelerationStructureTypeNV",
      name: "AccelerationStructureTypeNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkAccelerationStructureTypeKHR",
    ),
    Alias(
      original_name: "VkGeometryTypeNV",
      name: "GeometryTypeNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkGeometryTypeKHR",
    ),
    Alias(
      original_name: "VkRayTracingShaderGroupTypeNV",
      name: "RayTracingShaderGroupTypeNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkRayTracingShaderGroupTypeKHR",
    ),
    Alias(
      original_name: "VkPipelineCreationFeedbackFlagBitsEXT",
      name: "PipelineCreationFeedbackFlagBitsEXT",
      origin: Extension("VK_EXT_pipeline_creation_feedback", 193, false),
      of: "VkPipelineCreationFeedbackFlagBits",
    ),
    Alias(
      original_name: "VkSemaphoreWaitFlagBitsKHR",
      name: "SemaphoreWaitFlagBitsKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkSemaphoreWaitFlagBits",
    ),
    Alias(
      original_name: "VkToolPurposeFlagBitsEXT",
      name: "ToolPurposeFlagBitsEXT",
      origin: Extension("VK_EXT_tooling_info", 246, false),
      of: "VkToolPurposeFlagBits",
    ),
    Alias(
      original_name: "VkAccessFlagBits2KHR",
      name: "AccessFlagBits2KHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkAccessFlagBits2",
    ),
    Alias(
      original_name: "VkPipelineStageFlagBits2KHR",
      name: "PipelineStageFlagBits2KHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkPipelineStageFlagBits2",
    ),
    Alias(
      original_name: "VkFormatFeatureFlagBits2KHR",
      name: "FormatFeatureFlagBits2KHR",
      origin: Extension("VK_KHR_format_feature_flags2", 361, false),
      of: "VkFormatFeatureFlagBits2",
    ),
    Alias(
      original_name: "VkRenderingFlagBitsKHR",
      name: "RenderingFlagBitsKHR",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "VkRenderingFlagBits",
    ),
    Alias(
      original_name: "VkExternalMemoryHandleTypeFlagBitsKHR",
      name: "ExternalMemoryHandleTypeFlagBitsKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkExternalMemoryHandleTypeFlagBits",
    ),
    Alias(
      original_name: "VkExternalMemoryFeatureFlagBitsKHR",
      name: "ExternalMemoryFeatureFlagBitsKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkExternalMemoryFeatureFlagBits",
    ),
    Alias(
      original_name: "VkExternalSemaphoreHandleTypeFlagBitsKHR",
      name: "ExternalSemaphoreHandleTypeFlagBitsKHR",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      of: "VkExternalSemaphoreHandleTypeFlagBits",
    ),
    Alias(
      original_name: "VkExternalSemaphoreFeatureFlagBitsKHR",
      name: "ExternalSemaphoreFeatureFlagBitsKHR",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      of: "VkExternalSemaphoreFeatureFlagBits",
    ),
    Alias(
      original_name: "VkSemaphoreImportFlagBitsKHR",
      name: "SemaphoreImportFlagBitsKHR",
      origin: Extension("VK_KHR_external_semaphore", 78, false),
      of: "VkSemaphoreImportFlagBits",
    ),
    Alias(
      original_name: "VkExternalFenceHandleTypeFlagBitsKHR",
      name: "ExternalFenceHandleTypeFlagBitsKHR",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "VkExternalFenceHandleTypeFlagBits",
    ),
    Alias(
      original_name: "VkExternalFenceFeatureFlagBitsKHR",
      name: "ExternalFenceFeatureFlagBitsKHR",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "VkExternalFenceFeatureFlagBits",
    ),
    Alias(
      original_name: "VkFenceImportFlagBitsKHR",
      name: "FenceImportFlagBitsKHR",
      origin: Extension("VK_KHR_external_fence", 114, false),
      of: "VkFenceImportFlagBits",
    ),
    Alias(
      original_name: "VkPeerMemoryFeatureFlagBitsKHR",
      name: "PeerMemoryFeatureFlagBitsKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkPeerMemoryFeatureFlagBits",
    ),
    Alias(
      original_name: "VkMemoryAllocateFlagBitsKHR",
      name: "MemoryAllocateFlagBitsKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkMemoryAllocateFlagBits",
    ),
    Alias(
      original_name: "VkTessellationDomainOriginKHR",
      name: "TessellationDomainOriginKHR",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VkTessellationDomainOrigin",
    ),
    Alias(
      original_name: "VkSamplerYcbcrModelConversionKHR",
      name: "SamplerYcbcrModelConversionKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkSamplerYcbcrModelConversion",
    ),
    Alias(
      original_name: "VkSamplerYcbcrRangeKHR",
      name: "SamplerYcbcrRangeKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkSamplerYcbcrRange",
    ),
    Alias(
      original_name: "VkChromaLocationKHR",
      name: "ChromaLocationKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkChromaLocation",
    ),
    Alias(
      original_name: "VkSamplerReductionModeEXT",
      name: "SamplerReductionModeEXT",
      origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
      of: "VkSamplerReductionMode",
    ),
    Alias(
      original_name: "VkShaderFloatControlsIndependenceKHR",
      name: "ShaderFloatControlsIndependenceKHR",
      origin: Extension("VK_KHR_shader_float_controls", 198, false),
      of: "VkShaderFloatControlsIndependence",
    ),
    Alias(
      original_name: "VkSubmitFlagBitsKHR",
      name: "SubmitFlagBitsKHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkSubmitFlagBits",
    ),
    Alias(
      original_name: "VkDriverIdKHR",
      name: "DriverIdKHR",
      origin: Extension("VK_KHR_driver_properties", 197, false),
      of: "VkDriverId",
    ),
    Alias(
      original_name: "VkDevicePrivateDataCreateInfoEXT",
      name: "DevicePrivateDataCreateInfoEXT",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "VkDevicePrivateDataCreateInfo",
    ),
    Alias(
      original_name: "VkPrivateDataSlotCreateInfoEXT",
      name: "PrivateDataSlotCreateInfoEXT",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "VkPrivateDataSlotCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDevicePrivateDataFeaturesEXT",
      name: "PhysicalDevicePrivateDataFeaturesEXT",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "VkPhysicalDevicePrivateDataFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceFeatures2KHR",
      name: "PhysicalDeviceFeatures2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkPhysicalDeviceFeatures2",
    ),
    Alias(
      original_name: "VkPhysicalDeviceProperties2KHR",
      name: "PhysicalDeviceProperties2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkPhysicalDeviceProperties2",
    ),
    Alias(
      original_name: "VkFormatProperties2KHR",
      name: "FormatProperties2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkFormatProperties2",
    ),
    Alias(
      original_name: "VkImageFormatProperties2KHR",
      name: "ImageFormatProperties2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkImageFormatProperties2",
    ),
    Alias(
      original_name: "VkPhysicalDeviceImageFormatInfo2KHR",
      name: "PhysicalDeviceImageFormatInfo2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkPhysicalDeviceImageFormatInfo2",
    ),
    Alias(
      original_name: "VkQueueFamilyProperties2KHR",
      name: "QueueFamilyProperties2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkQueueFamilyProperties2",
    ),
    Alias(
      original_name: "VkPhysicalDeviceMemoryProperties2KHR",
      name: "PhysicalDeviceMemoryProperties2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkPhysicalDeviceMemoryProperties2",
    ),
    Alias(
      original_name: "VkSparseImageFormatProperties2KHR",
      name: "SparseImageFormatProperties2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkSparseImageFormatProperties2",
    ),
    Alias(
      original_name: "VkPhysicalDeviceSparseImageFormatInfo2KHR",
      name: "PhysicalDeviceSparseImageFormatInfo2KHR",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "VkPhysicalDeviceSparseImageFormatInfo2",
    ),
    Alias(
      original_name: "VkConformanceVersionKHR",
      name: "ConformanceVersionKHR",
      origin: Extension("VK_KHR_driver_properties", 197, false),
      of: "VkConformanceVersion",
    ),
    Alias(
      original_name: "VkPhysicalDeviceDriverPropertiesKHR",
      name: "PhysicalDeviceDriverPropertiesKHR",
      origin: Extension("VK_KHR_driver_properties", 197, false),
      of: "VkPhysicalDeviceDriverProperties",
    ),
    Alias(
      original_name: "VkPhysicalDeviceVariablePointersFeaturesKHR",
      name: "PhysicalDeviceVariablePointersFeaturesKHR",
      origin: Extension("VK_KHR_variable_pointers", 121, false),
      of: "VkPhysicalDeviceVariablePointersFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceVariablePointerFeaturesKHR",
      name: "PhysicalDeviceVariablePointerFeaturesKHR",
      origin: Extension("VK_KHR_variable_pointers", 121, false),
      of: "VkPhysicalDeviceVariablePointersFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceVariablePointerFeatures",
      name: "PhysicalDeviceVariablePointerFeatures",
      origin: Vulkan1_1,
      of: "VkPhysicalDeviceVariablePointersFeatures",
    ),
    Alias(
      original_name: "VkExternalMemoryPropertiesKHR",
      name: "ExternalMemoryPropertiesKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkExternalMemoryProperties",
    ),
    Alias(
      original_name: "VkPhysicalDeviceExternalImageFormatInfoKHR",
      name: "PhysicalDeviceExternalImageFormatInfoKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkPhysicalDeviceExternalImageFormatInfo",
    ),
    Alias(
      original_name: "VkExternalImageFormatPropertiesKHR",
      name: "ExternalImageFormatPropertiesKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkExternalImageFormatProperties",
    ),
    Alias(
      original_name: "VkPhysicalDeviceExternalBufferInfoKHR",
      name: "PhysicalDeviceExternalBufferInfoKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkPhysicalDeviceExternalBufferInfo",
    ),
    Alias(
      original_name: "VkExternalBufferPropertiesKHR",
      name: "ExternalBufferPropertiesKHR",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "VkExternalBufferProperties",
    ),
    Alias(
      original_name: "VkPhysicalDeviceIDPropertiesKHR",
      name: "PhysicalDeviceIdPropertiesKHR",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "VkPhysicalDeviceIDProperties",
    ),
    Alias(
      original_name: "VkExternalMemoryImageCreateInfoKHR",
      name: "ExternalMemoryImageCreateInfoKHR",
      origin: Extension("VK_KHR_external_memory", 73, false),
      of: "VkExternalMemoryImageCreateInfo",
    ),
    Alias(
      original_name: "VkExternalMemoryBufferCreateInfoKHR",
      name: "ExternalMemoryBufferCreateInfoKHR",
      origin: Extension("VK_KHR_external_memory", 73, false),
      of: "VkExternalMemoryBufferCreateInfo",
    ),
    Alias(
      original_name: "VkExportMemoryAllocateInfoKHR",
      name: "ExportMemoryAllocateInfoKHR",
      origin: Extension("VK_KHR_external_memory", 73, false),
      of: "VkExportMemoryAllocateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceExternalSemaphoreInfoKHR",
      name: "PhysicalDeviceExternalSemaphoreInfoKHR",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      of: "VkPhysicalDeviceExternalSemaphoreInfo",
    ),
    Alias(
      original_name: "VkExternalSemaphorePropertiesKHR",
      name: "ExternalSemaphorePropertiesKHR",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      of: "VkExternalSemaphoreProperties",
    ),
    Alias(
      original_name: "VkExportSemaphoreCreateInfoKHR",
      name: "ExportSemaphoreCreateInfoKHR",
      origin: Extension("VK_KHR_external_semaphore", 78, false),
      of: "VkExportSemaphoreCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceExternalFenceInfoKHR",
      name: "PhysicalDeviceExternalFenceInfoKHR",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "VkPhysicalDeviceExternalFenceInfo",
    ),
    Alias(
      original_name: "VkExternalFencePropertiesKHR",
      name: "ExternalFencePropertiesKHR",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "VkExternalFenceProperties",
    ),
    Alias(
      original_name: "VkExportFenceCreateInfoKHR",
      name: "ExportFenceCreateInfoKHR",
      origin: Extension("VK_KHR_external_fence", 114, false),
      of: "VkExportFenceCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceMultiviewFeaturesKHR",
      name: "PhysicalDeviceMultiviewFeaturesKHR",
      origin: Extension("VK_KHR_multiview", 54, false),
      of: "VkPhysicalDeviceMultiviewFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceMultiviewPropertiesKHR",
      name: "PhysicalDeviceMultiviewPropertiesKHR",
      origin: Extension("VK_KHR_multiview", 54, false),
      of: "VkPhysicalDeviceMultiviewProperties",
    ),
    Alias(
      original_name: "VkRenderPassMultiviewCreateInfoKHR",
      name: "RenderPassMultiviewCreateInfoKHR",
      origin: Extension("VK_KHR_multiview", 54, false),
      of: "VkRenderPassMultiviewCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceGroupPropertiesKHR",
      name: "PhysicalDeviceGroupPropertiesKHR",
      origin: Extension("VK_KHR_device_group_creation", 71, false),
      of: "VkPhysicalDeviceGroupProperties",
    ),
    Alias(
      original_name: "VkMemoryAllocateFlagsInfoKHR",
      name: "MemoryAllocateFlagsInfoKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkMemoryAllocateFlagsInfo",
    ),
    Alias(
      original_name: "VkBindBufferMemoryInfoKHR",
      name: "BindBufferMemoryInfoKHR",
      origin: Extension("VK_KHR_bind_memory2", 158, false),
      of: "VkBindBufferMemoryInfo",
    ),
    Alias(
      original_name: "VkBindBufferMemoryDeviceGroupInfoKHR",
      name: "BindBufferMemoryDeviceGroupInfoKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkBindBufferMemoryDeviceGroupInfo",
    ),
    Alias(
      original_name: "VkBindImageMemoryInfoKHR",
      name: "BindImageMemoryInfoKHR",
      origin: Extension("VK_KHR_bind_memory2", 158, false),
      of: "VkBindImageMemoryInfo",
    ),
    Alias(
      original_name: "VkBindImageMemoryDeviceGroupInfoKHR",
      name: "BindImageMemoryDeviceGroupInfoKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkBindImageMemoryDeviceGroupInfo",
    ),
    Alias(
      original_name: "VkDeviceGroupRenderPassBeginInfoKHR",
      name: "DeviceGroupRenderPassBeginInfoKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkDeviceGroupRenderPassBeginInfo",
    ),
    Alias(
      original_name: "VkDeviceGroupCommandBufferBeginInfoKHR",
      name: "DeviceGroupCommandBufferBeginInfoKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkDeviceGroupCommandBufferBeginInfo",
    ),
    Alias(
      original_name: "VkDeviceGroupSubmitInfoKHR",
      name: "DeviceGroupSubmitInfoKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkDeviceGroupSubmitInfo",
    ),
    Alias(
      original_name: "VkDeviceGroupBindSparseInfoKHR",
      name: "DeviceGroupBindSparseInfoKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "VkDeviceGroupBindSparseInfo",
    ),
    Alias(
      original_name: "VkDeviceGroupDeviceCreateInfoKHR",
      name: "DeviceGroupDeviceCreateInfoKHR",
      origin: Extension("VK_KHR_device_group_creation", 71, false),
      of: "VkDeviceGroupDeviceCreateInfo",
    ),
    Alias(
      original_name: "VkDescriptorUpdateTemplateEntryKHR",
      name: "DescriptorUpdateTemplateEntryKHR",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      of: "VkDescriptorUpdateTemplateEntry",
    ),
    Alias(
      original_name: "VkDescriptorUpdateTemplateCreateInfoKHR",
      name: "DescriptorUpdateTemplateCreateInfoKHR",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      of: "VkDescriptorUpdateTemplateCreateInfo",
    ),
    Alias(
      original_name: "VkInputAttachmentAspectReferenceKHR",
      name: "InputAttachmentAspectReferenceKHR",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VkInputAttachmentAspectReference",
    ),
    Alias(
      original_name: "VkRenderPassInputAttachmentAspectCreateInfoKHR",
      name: "RenderPassInputAttachmentAspectCreateInfoKHR",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VkRenderPassInputAttachmentAspectCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDevice16BitStorageFeaturesKHR",
      name: "PhysicalDevice16BitStorageFeaturesKHR",
      origin: Extension("VK_KHR_16bit_storage", 84, false),
      of: "VkPhysicalDevice16BitStorageFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR",
      name: "PhysicalDeviceShaderSubgroupExtendedTypesFeaturesKHR",
      origin: Extension("VK_KHR_shader_subgroup_extended_types", 176, false),
      of: "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures",
    ),
    Alias(
      original_name: "VkBufferMemoryRequirementsInfo2KHR",
      name: "BufferMemoryRequirementsInfo2KHR",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      of: "VkBufferMemoryRequirementsInfo2",
    ),
    Alias(
      original_name: "VkDeviceBufferMemoryRequirementsKHR",
      name: "DeviceBufferMemoryRequirementsKHR",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      of: "VkDeviceBufferMemoryRequirements",
    ),
    Alias(
      original_name: "VkImageMemoryRequirementsInfo2KHR",
      name: "ImageMemoryRequirementsInfo2KHR",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      of: "VkImageMemoryRequirementsInfo2",
    ),
    Alias(
      original_name: "VkImageSparseMemoryRequirementsInfo2KHR",
      name: "ImageSparseMemoryRequirementsInfo2KHR",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      of: "VkImageSparseMemoryRequirementsInfo2",
    ),
    Alias(
      original_name: "VkDeviceImageMemoryRequirementsKHR",
      name: "DeviceImageMemoryRequirementsKHR",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      of: "VkDeviceImageMemoryRequirements",
    ),
    Alias(
      original_name: "VkMemoryRequirements2KHR",
      name: "MemoryRequirements2KHR",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkMemoryRequirements2",
    ),
    Alias(
      original_name: "VkSparseImageMemoryRequirements2KHR",
      name: "SparseImageMemoryRequirements2KHR",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      of: "VkSparseImageMemoryRequirements2",
    ),
    Alias(
      original_name: "VkPhysicalDevicePointClippingPropertiesKHR",
      name: "PhysicalDevicePointClippingPropertiesKHR",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VkPhysicalDevicePointClippingProperties",
    ),
    Alias(
      original_name: "VkMemoryDedicatedRequirementsKHR",
      name: "MemoryDedicatedRequirementsKHR",
      origin: Extension("VK_KHR_dedicated_allocation", 128, false),
      of: "VkMemoryDedicatedRequirements",
    ),
    Alias(
      original_name: "VkMemoryDedicatedAllocateInfoKHR",
      name: "MemoryDedicatedAllocateInfoKHR",
      origin: Extension("VK_KHR_dedicated_allocation", 128, false),
      of: "VkMemoryDedicatedAllocateInfo",
    ),
    Alias(
      original_name: "VkImageViewUsageCreateInfoKHR",
      name: "ImageViewUsageCreateInfoKHR",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VkImageViewUsageCreateInfo",
    ),
    Alias(
      original_name: "VkPipelineTessellationDomainOriginStateCreateInfoKHR",
      name: "PipelineTessellationDomainOriginStateCreateInfoKHR",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VkPipelineTessellationDomainOriginStateCreateInfo",
    ),
    Alias(
      original_name: "VkSamplerYcbcrConversionInfoKHR",
      name: "SamplerYcbcrConversionInfoKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkSamplerYcbcrConversionInfo",
    ),
    Alias(
      original_name: "VkSamplerYcbcrConversionCreateInfoKHR",
      name: "SamplerYcbcrConversionCreateInfoKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkSamplerYcbcrConversionCreateInfo",
    ),
    Alias(
      original_name: "VkBindImagePlaneMemoryInfoKHR",
      name: "BindImagePlaneMemoryInfoKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkBindImagePlaneMemoryInfo",
    ),
    Alias(
      original_name: "VkImagePlaneMemoryRequirementsInfoKHR",
      name: "ImagePlaneMemoryRequirementsInfoKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkImagePlaneMemoryRequirementsInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceSamplerYcbcrConversionFeaturesKHR",
      name: "PhysicalDeviceSamplerYcbcrConversionFeaturesKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
    ),
    Alias(
      original_name: "VkSamplerYcbcrConversionImageFormatPropertiesKHR",
      name: "SamplerYcbcrConversionImageFormatPropertiesKHR",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "VkSamplerYcbcrConversionImageFormatProperties",
    ),
    Alias(
      original_name: "VkPhysicalDeviceSamplerFilterMinmaxPropertiesEXT",
      name: "PhysicalDeviceSamplerFilterMinmaxPropertiesEXT",
      origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
      of: "VkPhysicalDeviceSamplerFilterMinmaxProperties",
    ),
    Alias(
      original_name: "VkSamplerReductionModeCreateInfoEXT",
      name: "SamplerReductionModeCreateInfoEXT",
      origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
      of: "VkSamplerReductionModeCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceInlineUniformBlockFeaturesEXT",
      name: "PhysicalDeviceInlineUniformBlockFeaturesEXT",
      origin: Extension("VK_EXT_inline_uniform_block", 139, false),
      of: "VkPhysicalDeviceInlineUniformBlockFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceInlineUniformBlockPropertiesEXT",
      name: "PhysicalDeviceInlineUniformBlockPropertiesEXT",
      origin: Extension("VK_EXT_inline_uniform_block", 139, false),
      of: "VkPhysicalDeviceInlineUniformBlockProperties",
    ),
    Alias(
      original_name: "VkWriteDescriptorSetInlineUniformBlockEXT",
      name: "WriteDescriptorSetInlineUniformBlockEXT",
      origin: Extension("VK_EXT_inline_uniform_block", 139, false),
      of: "VkWriteDescriptorSetInlineUniformBlock",
    ),
    Alias(
      original_name: "VkDescriptorPoolInlineUniformBlockCreateInfoEXT",
      name: "DescriptorPoolInlineUniformBlockCreateInfoEXT",
      origin: Extension("VK_EXT_inline_uniform_block", 139, false),
      of: "VkDescriptorPoolInlineUniformBlockCreateInfo",
    ),
    Alias(
      original_name: "VkImageFormatListCreateInfoKHR",
      name: "ImageFormatListCreateInfoKHR",
      origin: Extension("VK_KHR_image_format_list", 148, false),
      of: "VkImageFormatListCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceMaintenance3PropertiesKHR",
      name: "PhysicalDeviceMaintenance3PropertiesKHR",
      origin: Extension("VK_KHR_maintenance3", 169, false),
      of: "VkPhysicalDeviceMaintenance3Properties",
    ),
    Alias(
      original_name: "VkPhysicalDeviceMaintenance4FeaturesKHR",
      name: "PhysicalDeviceMaintenance4FeaturesKHR",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      of: "VkPhysicalDeviceMaintenance4Features",
    ),
    Alias(
      original_name: "VkPhysicalDeviceMaintenance4PropertiesKHR",
      name: "PhysicalDeviceMaintenance4PropertiesKHR",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      of: "VkPhysicalDeviceMaintenance4Properties",
    ),
    Alias(
      original_name: "VkDescriptorSetLayoutSupportKHR",
      name: "DescriptorSetLayoutSupportKHR",
      origin: Extension("VK_KHR_maintenance3", 169, false),
      of: "VkDescriptorSetLayoutSupport",
    ),
    Alias(
      original_name: "VkPhysicalDeviceShaderDrawParameterFeatures",
      name: "PhysicalDeviceShaderDrawParameterFeatures",
      origin: Vulkan1_1,
      of: "VkPhysicalDeviceShaderDrawParametersFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceShaderFloat16Int8FeaturesKHR",
      name: "PhysicalDeviceShaderFloat16Int8FeaturesKHR",
      origin: Extension("VK_KHR_shader_float16_int8", 83, false),
      of: "VkPhysicalDeviceShaderFloat16Int8Features",
    ),
    Alias(
      original_name: "VkPhysicalDeviceFloat16Int8FeaturesKHR",
      name: "PhysicalDeviceFloat16Int8FeaturesKHR",
      origin: Extension("VK_KHR_shader_float16_int8", 83, false),
      of: "VkPhysicalDeviceShaderFloat16Int8Features",
    ),
    Alias(
      original_name: "VkPhysicalDeviceFloatControlsPropertiesKHR",
      name: "PhysicalDeviceFloatControlsPropertiesKHR",
      origin: Extension("VK_KHR_shader_float_controls", 198, false),
      of: "VkPhysicalDeviceFloatControlsProperties",
    ),
    Alias(
      original_name: "VkPhysicalDeviceHostQueryResetFeaturesEXT",
      name: "PhysicalDeviceHostQueryResetFeaturesEXT",
      origin: Extension("VK_EXT_host_query_reset", 262, false),
      of: "VkPhysicalDeviceHostQueryResetFeatures",
    ),
    Alias(
      original_name: "VkDeviceQueueGlobalPriorityCreateInfoEXT",
      name: "DeviceQueueGlobalPriorityCreateInfoEXT",
      origin: Extension("VK_EXT_global_priority", 175, false),
      of: "VkDeviceQueueGlobalPriorityCreateInfoKHR",
    ),
    Alias(
      original_name: "VkPhysicalDeviceGlobalPriorityQueryFeaturesEXT",
      name: "PhysicalDeviceGlobalPriorityQueryFeaturesEXT",
      origin: Extension("VK_EXT_global_priority_query", 389, false),
      of: "VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR",
    ),
    Alias(
      original_name: "VkQueueFamilyGlobalPriorityPropertiesEXT",
      name: "QueueFamilyGlobalPriorityPropertiesEXT",
      origin: Extension("VK_EXT_global_priority_query", 389, false),
      of: "VkQueueFamilyGlobalPriorityPropertiesKHR",
    ),
    Alias(
      original_name: "VkPhysicalDeviceDescriptorIndexingFeaturesEXT",
      name: "PhysicalDeviceDescriptorIndexingFeaturesEXT",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      of: "VkPhysicalDeviceDescriptorIndexingFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceDescriptorIndexingPropertiesEXT",
      name: "PhysicalDeviceDescriptorIndexingPropertiesEXT",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      of: "VkPhysicalDeviceDescriptorIndexingProperties",
    ),
    Alias(
      original_name: "VkDescriptorSetLayoutBindingFlagsCreateInfoEXT",
      name: "DescriptorSetLayoutBindingFlagsCreateInfoEXT",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      of: "VkDescriptorSetLayoutBindingFlagsCreateInfo",
    ),
    Alias(
      original_name: "VkDescriptorSetVariableDescriptorCountAllocateInfoEXT",
      name: "DescriptorSetVariableDescriptorCountAllocateInfoEXT",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      of: "VkDescriptorSetVariableDescriptorCountAllocateInfo",
    ),
    Alias(
      original_name: "VkDescriptorSetVariableDescriptorCountLayoutSupportEXT",
      name: "DescriptorSetVariableDescriptorCountLayoutSupportEXT",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      of: "VkDescriptorSetVariableDescriptorCountLayoutSupport",
    ),
    Alias(
      original_name: "VkAttachmentDescription2KHR",
      name: "AttachmentDescription2KHR",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "VkAttachmentDescription2",
    ),
    Alias(
      original_name: "VkAttachmentReference2KHR",
      name: "AttachmentReference2KHR",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "VkAttachmentReference2",
    ),
    Alias(
      original_name: "VkSubpassDescription2KHR",
      name: "SubpassDescription2KHR",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "VkSubpassDescription2",
    ),
    Alias(
      original_name: "VkSubpassDependency2KHR",
      name: "SubpassDependency2KHR",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "VkSubpassDependency2",
    ),
    Alias(
      original_name: "VkRenderPassCreateInfo2KHR",
      name: "RenderPassCreateInfo2KHR",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "VkRenderPassCreateInfo2",
    ),
    Alias(
      original_name: "VkSubpassBeginInfoKHR",
      name: "SubpassBeginInfoKHR",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "VkSubpassBeginInfo",
    ),
    Alias(
      original_name: "VkSubpassEndInfoKHR",
      name: "SubpassEndInfoKHR",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "VkSubpassEndInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceTimelineSemaphoreFeaturesKHR",
      name: "PhysicalDeviceTimelineSemaphoreFeaturesKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkPhysicalDeviceTimelineSemaphoreFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceTimelineSemaphorePropertiesKHR",
      name: "PhysicalDeviceTimelineSemaphorePropertiesKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkPhysicalDeviceTimelineSemaphoreProperties",
    ),
    Alias(
      original_name: "VkSemaphoreTypeCreateInfoKHR",
      name: "SemaphoreTypeCreateInfoKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkSemaphoreTypeCreateInfo",
    ),
    Alias(
      original_name: "VkTimelineSemaphoreSubmitInfoKHR",
      name: "TimelineSemaphoreSubmitInfoKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkTimelineSemaphoreSubmitInfo",
    ),
    Alias(
      original_name: "VkSemaphoreWaitInfoKHR",
      name: "SemaphoreWaitInfoKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkSemaphoreWaitInfo",
    ),
    Alias(
      original_name: "VkSemaphoreSignalInfoKHR",
      name: "SemaphoreSignalInfoKHR",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "VkSemaphoreSignalInfo",
    ),
    Alias(
      original_name: "VkPhysicalDevice8BitStorageFeaturesKHR",
      name: "PhysicalDevice8BitStorageFeaturesKHR",
      origin: Extension("VK_KHR_8bit_storage", 178, false),
      of: "VkPhysicalDevice8BitStorageFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceVulkanMemoryModelFeaturesKHR",
      name: "PhysicalDeviceVulkanMemoryModelFeaturesKHR",
      origin: Extension("VK_KHR_vulkan_memory_model", 212, false),
      of: "VkPhysicalDeviceVulkanMemoryModelFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceShaderAtomicInt64FeaturesKHR",
      name: "PhysicalDeviceShaderAtomicInt64FeaturesKHR",
      origin: Extension("VK_KHR_shader_atomic_int64", 181, false),
      of: "VkPhysicalDeviceShaderAtomicInt64Features",
    ),
    Alias(
      original_name: "VkPhysicalDeviceDepthStencilResolvePropertiesKHR",
      name: "PhysicalDeviceDepthStencilResolvePropertiesKHR",
      origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
      of: "VkPhysicalDeviceDepthStencilResolveProperties",
    ),
    Alias(
      original_name: "VkSubpassDescriptionDepthStencilResolveKHR",
      name: "SubpassDescriptionDepthStencilResolveKHR",
      origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
      of: "VkSubpassDescriptionDepthStencilResolve",
    ),
    Alias(
      original_name: "VkImageStencilUsageCreateInfoEXT",
      name: "ImageStencilUsageCreateInfoEXT",
      origin: Extension("VK_EXT_separate_stencil_usage", 247, false),
      of: "VkImageStencilUsageCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceScalarBlockLayoutFeaturesEXT",
      name: "PhysicalDeviceScalarBlockLayoutFeaturesEXT",
      origin: Extension("VK_EXT_scalar_block_layout", 222, false),
      of: "VkPhysicalDeviceScalarBlockLayoutFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceUniformBufferStandardLayoutFeaturesKHR",
      name: "PhysicalDeviceUniformBufferStandardLayoutFeaturesKHR",
      origin: Extension("VK_KHR_uniform_buffer_standard_layout", 254, false),
      of: "VkPhysicalDeviceUniformBufferStandardLayoutFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceBufferDeviceAddressFeaturesKHR",
      name: "PhysicalDeviceBufferDeviceAddressFeaturesKHR",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      of: "VkPhysicalDeviceBufferDeviceAddressFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceBufferAddressFeaturesEXT",
      name: "PhysicalDeviceBufferAddressFeaturesEXT",
      origin: Extension("VK_EXT_buffer_device_address", 245, false),
      of: "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
    ),
    Alias(
      original_name: "VkBufferDeviceAddressInfoKHR",
      name: "BufferDeviceAddressInfoKHR",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      of: "VkBufferDeviceAddressInfo",
    ),
    Alias(
      original_name: "VkBufferDeviceAddressInfoEXT",
      name: "BufferDeviceAddressInfoEXT",
      origin: Extension("VK_EXT_buffer_device_address", 245, false),
      of: "VkBufferDeviceAddressInfo",
    ),
    Alias(
      original_name: "VkBufferOpaqueCaptureAddressCreateInfoKHR",
      name: "BufferOpaqueCaptureAddressCreateInfoKHR",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      of: "VkBufferOpaqueCaptureAddressCreateInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceImagelessFramebufferFeaturesKHR",
      name: "PhysicalDeviceImagelessFramebufferFeaturesKHR",
      origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
      of: "VkPhysicalDeviceImagelessFramebufferFeatures",
    ),
    Alias(
      original_name: "VkFramebufferAttachmentsCreateInfoKHR",
      name: "FramebufferAttachmentsCreateInfoKHR",
      origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
      of: "VkFramebufferAttachmentsCreateInfo",
    ),
    Alias(
      original_name: "VkFramebufferAttachmentImageInfoKHR",
      name: "FramebufferAttachmentImageInfoKHR",
      origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
      of: "VkFramebufferAttachmentImageInfo",
    ),
    Alias(
      original_name: "VkRenderPassAttachmentBeginInfoKHR",
      name: "RenderPassAttachmentBeginInfoKHR",
      origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
      of: "VkRenderPassAttachmentBeginInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceTextureCompressionASTCHDRFeaturesEXT",
      name: "PhysicalDeviceTextureCompressionAstchdrFeaturesEXT",
      origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
      of: "VkPhysicalDeviceTextureCompressionASTCHDRFeatures",
    ),
    Alias(
      original_name: "VkPipelineCreationFeedbackEXT",
      name: "PipelineCreationFeedbackEXT",
      origin: Extension("VK_EXT_pipeline_creation_feedback", 193, false),
      of: "VkPipelineCreationFeedback",
    ),
    Alias(
      original_name: "VkPipelineCreationFeedbackCreateInfoEXT",
      name: "PipelineCreationFeedbackCreateInfoEXT",
      origin: Extension("VK_EXT_pipeline_creation_feedback", 193, false),
      of: "VkPipelineCreationFeedbackCreateInfo",
    ),
    Alias(
      original_name: "VkQueryPoolCreateInfoINTEL",
      name: "QueryPoolCreateInfoINTEL",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      of: "VkQueryPoolPerformanceQueryCreateInfoINTEL",
    ),
    Alias(
      original_name: "VkPhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR",
      name: "PhysicalDeviceSeparateDepthStencilLayoutsFeaturesKHR",
      origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
      of: "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures",
    ),
    Alias(
      original_name: "VkAttachmentReferenceStencilLayoutKHR",
      name: "AttachmentReferenceStencilLayoutKHR",
      origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
      of: "VkAttachmentReferenceStencilLayout",
    ),
    Alias(
      original_name: "VkAttachmentDescriptionStencilLayoutKHR",
      name: "AttachmentDescriptionStencilLayoutKHR",
      origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
      of: "VkAttachmentDescriptionStencilLayout",
    ),
    Alias(
      original_name: "VkPhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT",
      name: "PhysicalDeviceShaderDemoteToHelperInvocationFeaturesEXT",
      origin: Extension("VK_EXT_shader_demote_to_helper_invocation", 277, false),
      of: "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceTexelBufferAlignmentPropertiesEXT",
      name: "PhysicalDeviceTexelBufferAlignmentPropertiesEXT",
      origin: Extension("VK_EXT_texel_buffer_alignment", 282, false),
      of: "VkPhysicalDeviceTexelBufferAlignmentProperties",
    ),
    Alias(
      original_name: "VkPhysicalDeviceSubgroupSizeControlFeaturesEXT",
      name: "PhysicalDeviceSubgroupSizeControlFeaturesEXT",
      origin: Extension("VK_EXT_subgroup_size_control", 226, false),
      of: "VkPhysicalDeviceSubgroupSizeControlFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceSubgroupSizeControlPropertiesEXT",
      name: "PhysicalDeviceSubgroupSizeControlPropertiesEXT",
      origin: Extension("VK_EXT_subgroup_size_control", 226, false),
      of: "VkPhysicalDeviceSubgroupSizeControlProperties",
    ),
    Alias(
      original_name: "VkPipelineShaderStageRequiredSubgroupSizeCreateInfoEXT",
      name: "PipelineShaderStageRequiredSubgroupSizeCreateInfoEXT",
      origin: Extension("VK_EXT_subgroup_size_control", 226, false),
      of: "VkPipelineShaderStageRequiredSubgroupSizeCreateInfo",
    ),
    Alias(
      original_name: "VkMemoryOpaqueCaptureAddressAllocateInfoKHR",
      name: "MemoryOpaqueCaptureAddressAllocateInfoKHR",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      of: "VkMemoryOpaqueCaptureAddressAllocateInfo",
    ),
    Alias(
      original_name: "VkDeviceMemoryOpaqueCaptureAddressInfoKHR",
      name: "DeviceMemoryOpaqueCaptureAddressInfoKHR",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      of: "VkDeviceMemoryOpaqueCaptureAddressInfo",
    ),
    Alias(
      original_name: "VkPhysicalDevicePipelineCreationCacheControlFeaturesEXT",
      name: "PhysicalDevicePipelineCreationCacheControlFeaturesEXT",
      origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
      of: "VkPhysicalDevicePipelineCreationCacheControlFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceToolPropertiesEXT",
      name: "PhysicalDeviceToolPropertiesEXT",
      origin: Extension("VK_EXT_tooling_info", 246, false),
      of: "VkPhysicalDeviceToolProperties",
    ),
    Alias(
      original_name: "VkAabbPositionsNV",
      name: "AabbPositionsNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkAabbPositionsKHR",
    ),
    Alias(
      original_name: "VkTransformMatrixNV",
      name: "TransformMatrixNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkTransformMatrixKHR",
    ),
    Alias(
      original_name: "VkAccelerationStructureInstanceNV",
      name: "AccelerationStructureInstanceNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VkAccelerationStructureInstanceKHR",
    ),
    Alias(
      original_name: "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR",
      name: "PhysicalDeviceZeroInitializeWorkgroupMemoryFeaturesKHR",
      origin: Extension("VK_KHR_zero_initialize_workgroup_memory", 326, false),
      of: "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceImageRobustnessFeaturesEXT",
      name: "PhysicalDeviceImageRobustnessFeaturesEXT",
      origin: Extension("VK_EXT_image_robustness", 336, false),
      of: "VkPhysicalDeviceImageRobustnessFeatures",
    ),
    Alias(
      original_name: "VkBufferCopy2KHR",
      name: "BufferCopy2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkBufferCopy2",
    ),
    Alias(
      original_name: "VkImageCopy2KHR",
      name: "ImageCopy2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkImageCopy2",
    ),
    Alias(
      original_name: "VkImageBlit2KHR",
      name: "ImageBlit2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkImageBlit2",
    ),
    Alias(
      original_name: "VkBufferImageCopy2KHR",
      name: "BufferImageCopy2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkBufferImageCopy2",
    ),
    Alias(
      original_name: "VkImageResolve2KHR",
      name: "ImageResolve2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkImageResolve2",
    ),
    Alias(
      original_name: "VkCopyBufferInfo2KHR",
      name: "CopyBufferInfo2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkCopyBufferInfo2",
    ),
    Alias(
      original_name: "VkCopyImageInfo2KHR",
      name: "CopyImageInfo2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkCopyImageInfo2",
    ),
    Alias(
      original_name: "VkBlitImageInfo2KHR",
      name: "BlitImageInfo2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkBlitImageInfo2",
    ),
    Alias(
      original_name: "VkCopyBufferToImageInfo2KHR",
      name: "CopyBufferToImageInfo2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkCopyBufferToImageInfo2",
    ),
    Alias(
      original_name: "VkCopyImageToBufferInfo2KHR",
      name: "CopyImageToBufferInfo2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkCopyImageToBufferInfo2",
    ),
    Alias(
      original_name: "VkResolveImageInfo2KHR",
      name: "ResolveImageInfo2KHR",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "VkResolveImageInfo2",
    ),
    Alias(
      original_name: "VkPhysicalDeviceShaderTerminateInvocationFeaturesKHR",
      name: "PhysicalDeviceShaderTerminateInvocationFeaturesKHR",
      origin: Extension("VK_KHR_shader_terminate_invocation", 216, false),
      of: "VkPhysicalDeviceShaderTerminateInvocationFeatures",
    ),
    Alias(
      original_name: "VkMemoryBarrier2KHR",
      name: "MemoryBarrier2KHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkMemoryBarrier2",
    ),
    Alias(
      original_name: "VkImageMemoryBarrier2KHR",
      name: "ImageMemoryBarrier2KHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkImageMemoryBarrier2",
    ),
    Alias(
      original_name: "VkBufferMemoryBarrier2KHR",
      name: "BufferMemoryBarrier2KHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkBufferMemoryBarrier2",
    ),
    Alias(
      original_name: "VkDependencyInfoKHR",
      name: "DependencyInfoKHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkDependencyInfo",
    ),
    Alias(
      original_name: "VkSemaphoreSubmitInfoKHR",
      name: "SemaphoreSubmitInfoKHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkSemaphoreSubmitInfo",
    ),
    Alias(
      original_name: "VkCommandBufferSubmitInfoKHR",
      name: "CommandBufferSubmitInfoKHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkCommandBufferSubmitInfo",
    ),
    Alias(
      original_name: "VkSubmitInfo2KHR",
      name: "SubmitInfo2KHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkSubmitInfo2",
    ),
    Alias(
      original_name: "VkPhysicalDeviceSynchronization2FeaturesKHR",
      name: "PhysicalDeviceSynchronization2FeaturesKHR",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "VkPhysicalDeviceSynchronization2Features",
    ),
    Alias(
      original_name: "VkPhysicalDeviceShaderIntegerDotProductFeaturesKHR",
      name: "PhysicalDeviceShaderIntegerDotProductFeaturesKHR",
      origin: Extension("VK_KHR_shader_integer_dot_product", 281, false),
      of: "VkPhysicalDeviceShaderIntegerDotProductFeatures",
    ),
    Alias(
      original_name: "VkPhysicalDeviceShaderIntegerDotProductPropertiesKHR",
      name: "PhysicalDeviceShaderIntegerDotProductPropertiesKHR",
      origin: Extension("VK_KHR_shader_integer_dot_product", 281, false),
      of: "VkPhysicalDeviceShaderIntegerDotProductProperties",
    ),
    Alias(
      original_name: "VkFormatProperties3KHR",
      name: "FormatProperties3KHR",
      origin: Extension("VK_KHR_format_feature_flags2", 361, false),
      of: "VkFormatProperties3",
    ),
    Alias(
      original_name: "VkPipelineRenderingCreateInfoKHR",
      name: "PipelineRenderingCreateInfoKHR",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "VkPipelineRenderingCreateInfo",
    ),
    Alias(
      original_name: "VkRenderingInfoKHR",
      name: "RenderingInfoKHR",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "VkRenderingInfo",
    ),
    Alias(
      original_name: "VkRenderingAttachmentInfoKHR",
      name: "RenderingAttachmentInfoKHR",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "VkRenderingAttachmentInfo",
    ),
    Alias(
      original_name: "VkPhysicalDeviceDynamicRenderingFeaturesKHR",
      name: "PhysicalDeviceDynamicRenderingFeaturesKHR",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "VkPhysicalDeviceDynamicRenderingFeatures",
    ),
    Alias(
      original_name: "VkCommandBufferInheritanceRenderingInfoKHR",
      name: "CommandBufferInheritanceRenderingInfoKHR",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "VkCommandBufferInheritanceRenderingInfo",
    ),
    Alias(
      original_name: "VkAttachmentSampleCountInfoNV",
      name: "AttachmentSampleCountInfoNV",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "VkAttachmentSampleCountInfoAMD",
    ),
  ],
  structs: [
    Struct(
      original_name: "VkBaseOutStructure",
      name: "BaseOutStructure",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pNext",
          name: "next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkBaseInStructure",
      name: "BaseInStructure",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pNext",
          name: "next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkOffset2D",
      name: "Offset2D",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "x",
          name: "x",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "y",
          name: "y",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkOffset3D",
      name: "Offset3D",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "x",
          name: "x",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "y",
          name: "y",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "z",
          name: "z",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkExtent2D",
      name: "Extent2D",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "width",
          name: "width",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "height",
          name: "height",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkExtent3D",
      name: "Extent3D",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "width",
          name: "width",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "height",
          name: "height",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depth",
          name: "depth",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkViewport",
      name: "Viewport",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "x",
          name: "x",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "y",
          name: "y",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "width",
          name: "width",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "height",
          name: "height",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "minDepth",
          name: "min_depth",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDepth",
          name: "max_depth",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkRect2D",
      name: "Rect2D",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extent",
          name: "extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkClearRect",
      name: "ClearRect",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "rect",
          name: "rect",
          ty: Named("VkRect2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "baseArrayLayer",
          name: "base_array_layer",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layerCount",
          name: "layer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkComponentMapping",
      name: "ComponentMapping",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "r",
          name: "r",
          ty: Named("VkComponentSwizzle"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "g",
          name: "g",
          ty: Named("VkComponentSwizzle"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "b",
          name: "b",
          ty: Named("VkComponentSwizzle"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "a",
          name: "a",
          ty: Named("VkComponentSwizzle"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceProperties",
      name: "PhysicalDeviceProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "apiVersion",
          name: "api_version",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverVersion",
          name: "driver_version",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vendorID",
          name: "vendor_id",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceID",
          name: "device_id",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceType",
          name: "device_type",
          ty: Named("VkPhysicalDeviceType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceName",
          name: "device_name",
          ty: Array(Native(Char), Constant("VK_MAX_PHYSICAL_DEVICE_NAME_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineCacheUUID",
          name: "pipeline_cache_uuid",
          ty: Array(Native(UInt(1)), Constant("VK_UUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "limits",
          name: "limits",
          ty: Named("VkPhysicalDeviceLimits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseProperties",
          name: "sparse_properties",
          ty: Named("VkPhysicalDeviceSparseProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkExtensionProperties",
      name: "ExtensionProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "extensionName",
          name: "extension_name",
          ty: Array(Native(Char), Constant("VK_MAX_EXTENSION_NAME_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "specVersion",
          name: "spec_version",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkLayerProperties",
      name: "LayerProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "layerName",
          name: "layer_name",
          ty: Array(Native(Char), Constant("VK_MAX_EXTENSION_NAME_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "specVersion",
          name: "spec_version",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "implementationVersion",
          name: "implementation_version",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "description",
          name: "description",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkApplicationInfo",
      name: "ApplicationInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_APPLICATION_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pApplicationName",
          name: "application_name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "applicationVersion",
          name: "application_version",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pEngineName",
          name: "engine_name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "engineVersion",
          name: "engine_version",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "apiVersion",
          name: "api_version",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkAllocationCallbacks",
      name: "AllocationCallbacks",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "pUserData",
          name: "user_data",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pfnAllocation",
          name: "pfn_allocation",
          ty: Named("PFN_vkAllocationFunction"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pfnReallocation",
          name: "pfn_reallocation",
          ty: Named("PFN_vkReallocationFunction"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pfnFree",
          name: "pfn_free",
          ty: Named("PFN_vkFreeFunction"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pfnInternalAllocation",
          name: "pfn_internal_allocation",
          ty: Named("PFN_vkInternalAllocationNotification"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pfnInternalFree",
          name: "pfn_internal_free",
          ty: Named("PFN_vkInternalFreeNotification"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceQueueCreateInfo",
      name: "DeviceQueueCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDeviceQueueCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueCount",
          name: "queue_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pQueuePriorities",
          name: "queue_priorities",
          ty: Slice(Const, Native(Float), Variable("queueCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDeviceQueueGlobalPriorityCreateInfoKHR",
      ],
    ),
    Struct(
      original_name: "VkDeviceCreateInfo",
      name: "DeviceCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDeviceCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueCreateInfoCount",
          name: "queue_create_info_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pQueueCreateInfos",
          name: "queue_create_infos",
          ty: Slice(Const, Named("VkDeviceQueueCreateInfo"), Variable("queueCreateInfoCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "enabledLayerCount",
          name: "enabled_layer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppEnabledLayerNames",
          name: "pp_enabled_layer_names",
          ty: Slice(Const, NullTerminatedString(Const), Variable("enabledLayerCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "enabledExtensionCount",
          name: "enabled_extension_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppEnabledExtensionNames",
          name: "pp_enabled_extension_names",
          ty: Slice(Const, NullTerminatedString(Const), Variable("enabledExtensionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pEnabledFeatures",
          name: "enabled_features",
          ty: Pointer(Const, Named("VkPhysicalDeviceFeatures")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV",
        "VkDevicePrivateDataCreateInfo",
        "VkPhysicalDevicePrivateDataFeatures",
        "VkPhysicalDeviceFeatures2",
        "VkPhysicalDeviceVariablePointersFeatures",
        "VkPhysicalDeviceMultiviewFeatures",
        "VkDeviceGroupDeviceCreateInfo",
        "VkPhysicalDevicePresentIdFeaturesKHR",
        "VkPhysicalDevicePresentWaitFeaturesKHR",
        "VkPhysicalDevice16BitStorageFeatures",
        "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures",
        "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
        "VkPhysicalDeviceProtectedMemoryFeatures",
        "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT",
        "VkPhysicalDeviceMultiDrawFeaturesEXT",
        "VkPhysicalDeviceInlineUniformBlockFeatures",
        "VkPhysicalDeviceMaintenance4Features",
        "VkPhysicalDeviceShaderDrawParametersFeatures",
        "VkPhysicalDeviceShaderFloat16Int8Features",
        "VkPhysicalDeviceHostQueryResetFeatures",
        "VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR",
        "VkPhysicalDeviceDeviceMemoryReportFeaturesEXT",
        "VkDeviceDeviceMemoryReportCreateInfoEXT",
        "VkPhysicalDeviceDescriptorIndexingFeatures",
        "VkPhysicalDeviceTimelineSemaphoreFeatures",
        "VkPhysicalDevice8BitStorageFeatures",
        "VkPhysicalDeviceConditionalRenderingFeaturesEXT",
        "VkPhysicalDeviceVulkanMemoryModelFeatures",
        "VkPhysicalDeviceShaderAtomicInt64Features",
        "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
        "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
        "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT",
        "VkPhysicalDeviceASTCDecodeFeaturesEXT",
        "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
        "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV",
        "VkPhysicalDeviceExclusiveScissorFeaturesNV",
        "VkPhysicalDeviceCornerSampledImageFeaturesNV",
        "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
        "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
        "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
        "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
        "VkPhysicalDeviceShadingRateImageFeaturesNV",
        "VkPhysicalDeviceInvocationMaskFeaturesHUAWEI",
        "VkPhysicalDeviceMeshShaderFeaturesNV",
        "VkPhysicalDeviceAccelerationStructureFeaturesKHR",
        "VkPhysicalDeviceRayTracingPipelineFeaturesKHR",
        "VkPhysicalDeviceRayQueryFeaturesKHR",
        "VkDeviceMemoryOverallocationCreateInfoAMD",
        "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
        "VkPhysicalDeviceFragmentDensityMap2FeaturesEXT",
        "VkPhysicalDeviceScalarBlockLayoutFeatures",
        "VkPhysicalDeviceUniformBufferStandardLayoutFeatures",
        "VkPhysicalDeviceDepthClipEnableFeaturesEXT",
        "VkPhysicalDeviceMemoryPriorityFeaturesEXT",
        "VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT",
        "VkPhysicalDeviceBufferDeviceAddressFeatures",
        "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
        "VkPhysicalDeviceImagelessFramebufferFeatures",
        "VkPhysicalDeviceTextureCompressionASTCHDRFeatures",
        "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
        "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT",
        "VkPhysicalDevicePerformanceQueryFeaturesKHR",
        "VkPhysicalDeviceCoverageReductionModeFeaturesNV",
        "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
        "VkPhysicalDeviceShaderClockFeaturesKHR",
        "VkPhysicalDeviceIndexTypeUint8FeaturesEXT",
        "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
        "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
        "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures",
        "VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT",
        "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
        "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures",
        "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
        "VkPhysicalDeviceSubgroupSizeControlFeatures",
        "VkPhysicalDeviceLineRasterizationFeaturesEXT",
        "VkPhysicalDevicePipelineCreationCacheControlFeatures",
        "VkPhysicalDeviceVulkan11Features",
        "VkPhysicalDeviceVulkan12Features",
        "VkPhysicalDeviceVulkan13Features",
        "VkPhysicalDeviceCoherentMemoryFeaturesAMD",
        "VkPhysicalDeviceCustomBorderColorFeaturesEXT",
        "VkPhysicalDeviceBorderColorSwizzleFeaturesEXT",
        "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT",
        "VkPhysicalDeviceExtendedDynamicState2FeaturesEXT",
        "VkPhysicalDeviceDiagnosticsConfigFeaturesNV",
        "VkDeviceDiagnosticsConfigCreateInfoNV",
        "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures",
        "VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR",
        "VkPhysicalDeviceRobustness2FeaturesEXT",
        "VkPhysicalDeviceImageRobustnessFeatures",
        "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR",
        "VkPhysicalDevicePortabilitySubsetFeaturesKHR",
        "VkPhysicalDevice4444FormatsFeaturesEXT",
        "VkPhysicalDeviceSubpassShadingFeaturesHUAWEI",
        "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT",
        "VkPhysicalDeviceFragmentShadingRateFeaturesKHR",
        "VkPhysicalDeviceShaderTerminateInvocationFeatures",
        "VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV",
        "VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE",
        "VkPhysicalDeviceDepthClipControlFeaturesEXT",
        "VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT",
        "VkPhysicalDeviceExternalMemoryRDMAFeaturesNV",
        "VkPhysicalDeviceColorWriteEnableFeaturesEXT",
        "VkPhysicalDeviceSynchronization2Features",
        "VkPhysicalDeviceInheritedViewportScissorFeaturesNV",
        "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT",
        "VkPhysicalDeviceProvokingVertexFeaturesEXT",
        "VkPhysicalDeviceShaderIntegerDotProductFeatures",
        "VkPhysicalDeviceRayTracingMotionBlurFeaturesNV",
        "VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT",
        "VkPhysicalDeviceDynamicRenderingFeatures",
        "VkPhysicalDeviceImageViewMinLodFeaturesEXT",
        "VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM",
        "VkPhysicalDeviceLinearColorAttachmentFeaturesNV",
      ],
    ),
    Struct(
      original_name: "VkInstanceCreateInfo",
      name: "InstanceCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkInstanceCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pApplicationInfo",
          name: "application_info",
          ty: Pointer(Const, Named("VkApplicationInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "enabledLayerCount",
          name: "enabled_layer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppEnabledLayerNames",
          name: "pp_enabled_layer_names",
          ty: Slice(Const, NullTerminatedString(Const), Variable("enabledLayerCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "enabledExtensionCount",
          name: "enabled_extension_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppEnabledExtensionNames",
          name: "pp_enabled_extension_names",
          ty: Slice(Const, NullTerminatedString(Const), Variable("enabledExtensionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDebugReportCallbackCreateInfoEXT",
        "VkValidationFlagsEXT",
        "VkValidationFeaturesEXT",
        "VkDebugUtilsMessengerCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkQueueFamilyProperties",
      name: "QueueFamilyProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "queueFlags",
          name: "queue_flags",
          ty: Named("VkQueueFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueCount",
          name: "queue_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "timestampValidBits",
          name: "timestamp_valid_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minImageTransferGranularity",
          name: "min_image_transfer_granularity",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMemoryProperties",
      name: "PhysicalDeviceMemoryProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "memoryTypeCount",
          name: "memory_type_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypes",
          name: "memory_types",
          ty: Array(Named("VkMemoryType"), Constant("VK_MAX_MEMORY_TYPES")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryHeapCount",
          name: "memory_heap_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryHeaps",
          name: "memory_heaps",
          ty: Array(Named("VkMemoryHeap"), Constant("VK_MAX_MEMORY_HEAPS")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryAllocateInfo",
      name: "MemoryAllocateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "allocationSize",
          name: "allocation_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypeIndex",
          name: "memory_type_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDedicatedAllocationMemoryAllocateInfoNV",
        "VkExportMemoryAllocateInfoNV",
        "VkImportMemoryWin32HandleInfoNV",
        "VkExportMemoryWin32HandleInfoNV",
        "VkExportMemoryAllocateInfo",
        "VkImportMemoryWin32HandleInfoKHR",
        "VkExportMemoryWin32HandleInfoKHR",
        "VkImportMemoryZirconHandleInfoFUCHSIA",
        "VkImportMemoryFdInfoKHR",
        "VkMemoryAllocateFlagsInfo",
        "VkMemoryDedicatedAllocateInfo",
        "VkImportMemoryHostPointerInfoEXT",
        "VkImportAndroidHardwareBufferInfoANDROID",
        "VkMemoryPriorityAllocateInfoEXT",
        "VkMemoryOpaqueCaptureAddressAllocateInfo",
        "VkImportMemoryBufferCollectionFUCHSIA",
      ],
    ),
    Struct(
      original_name: "VkMemoryRequirements",
      name: "MemoryRequirements",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "alignment",
          name: "alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypeBits",
          name: "memory_type_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSparseImageFormatProperties",
      name: "SparseImageFormatProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "aspectMask",
          name: "aspect_mask",
          ty: Named("VkImageAspectFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageGranularity",
          name: "image_granularity",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSparseImageFormatFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSparseImageMemoryRequirements",
      name: "SparseImageMemoryRequirements",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "formatProperties",
          name: "format_properties",
          ty: Named("VkSparseImageFormatProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageMipTailFirstLod",
          name: "image_mip_tail_first_lod",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageMipTailSize",
          name: "image_mip_tail_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageMipTailOffset",
          name: "image_mip_tail_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageMipTailStride",
          name: "image_mip_tail_stride",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryType",
      name: "MemoryType",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "propertyFlags",
          name: "property_flags",
          ty: Named("VkMemoryPropertyFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "heapIndex",
          name: "heap_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryHeap",
      name: "MemoryHeap",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkMemoryHeapFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkMappedMemoryRange",
      name: "MappedMemoryRange",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkFormatProperties",
      name: "FormatProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "linearTilingFeatures",
          name: "linear_tiling_features",
          ty: Named("VkFormatFeatureFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "optimalTilingFeatures",
          name: "optimal_tiling_features",
          ty: Named("VkFormatFeatureFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferFeatures",
          name: "buffer_features",
          ty: Named("VkFormatFeatureFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkImageFormatProperties",
      name: "ImageFormatProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "maxExtent",
          name: "max_extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMipLevels",
          name: "max_mip_levels",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxArrayLayers",
          name: "max_array_layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleCounts",
          name: "sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxResourceSize",
          name: "max_resource_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorBufferInfo",
      name: "DescriptorBufferInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "range",
          name: "range",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorImageInfo",
      name: "DescriptorImageInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sampler",
          name: "sampler",
          ty: Named("VkSampler"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "imageView",
          name: "image_view",
          ty: Named("VkImageView"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "imageLayout",
          name: "image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkWriteDescriptorSet",
      name: "WriteDescriptorSet",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSet",
          name: "dst_set",
          ty: Named("VkDescriptorSet"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "dstBinding",
          name: "dst_binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstArrayElement",
          name: "dst_array_element",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorCount",
          name: "descriptor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorType",
          name: "descriptor_type",
          ty: Named("VkDescriptorType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pImageInfo",
          name: "image_info",
          ty: Slice(Const, Named("VkDescriptorImageInfo"), Variable("descriptorCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pBufferInfo",
          name: "buffer_info",
          ty: Slice(Const, Named("VkDescriptorBufferInfo"), Variable("descriptorCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pTexelBufferView",
          name: "texel_buffer_view",
          ty: Slice(Const, Named("VkBufferView"), Variable("descriptorCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkWriteDescriptorSetInlineUniformBlock",
        "VkWriteDescriptorSetAccelerationStructureKHR",
        "VkWriteDescriptorSetAccelerationStructureNV",
      ],
    ),
    Struct(
      original_name: "VkCopyDescriptorSet",
      name: "CopyDescriptorSet",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcSet",
          name: "src_set",
          ty: Named("VkDescriptorSet"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcBinding",
          name: "src_binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcArrayElement",
          name: "src_array_element",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSet",
          name: "dst_set",
          ty: Named("VkDescriptorSet"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstBinding",
          name: "dst_binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstArrayElement",
          name: "dst_array_element",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorCount",
          name: "descriptor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkBufferCreateInfo",
      name: "BufferCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkBufferCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Named("VkBufferUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sharingMode",
          name: "sharing_mode",
          ty: Named("VkSharingMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndexCount",
          name: "queue_family_index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pQueueFamilyIndices",
          name: "queue_family_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("queueFamilyIndexCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDedicatedAllocationBufferCreateInfoNV",
        "VkExternalMemoryBufferCreateInfo",
        "VkBufferOpaqueCaptureAddressCreateInfo",
        "VkBufferDeviceAddressCreateInfoEXT",
        "VkVideoProfilesKHR",
        "VkVideoProfileKHR",
        "VkBufferCollectionBufferCreateInfoFUCHSIA",
      ],
    ),
    Struct(
      original_name: "VkBufferViewCreateInfo",
      name: "BufferViewCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkBufferViewCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "range",
          name: "range",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkImageSubresource",
      name: "ImageSubresource",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "aspectMask",
          name: "aspect_mask",
          ty: Named("VkImageAspectFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mipLevel",
          name: "mip_level",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "arrayLayer",
          name: "array_layer",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkImageSubresourceLayers",
      name: "ImageSubresourceLayers",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "aspectMask",
          name: "aspect_mask",
          ty: Named("VkImageAspectFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mipLevel",
          name: "mip_level",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "baseArrayLayer",
          name: "base_array_layer",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layerCount",
          name: "layer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkImageSubresourceRange",
      name: "ImageSubresourceRange",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "aspectMask",
          name: "aspect_mask",
          ty: Named("VkImageAspectFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "baseMipLevel",
          name: "base_mip_level",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "levelCount",
          name: "level_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "baseArrayLayer",
          name: "base_array_layer",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layerCount",
          name: "layer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryBarrier",
      name: "MemoryBarrier",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_BARRIER"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAccessMask",
          name: "src_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstAccessMask",
          name: "dst_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkBufferMemoryBarrier",
      name: "BufferMemoryBarrier",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAccessMask",
          name: "src_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "dstAccessMask",
          name: "dst_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "srcQueueFamilyIndex",
          name: "src_queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstQueueFamilyIndex",
          name: "dst_queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkImageMemoryBarrier",
      name: "ImageMemoryBarrier",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAccessMask",
          name: "src_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "dstAccessMask",
          name: "dst_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "oldLayout",
          name: "old_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "newLayout",
          name: "new_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcQueueFamilyIndex",
          name: "src_queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstQueueFamilyIndex",
          name: "dst_queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subresourceRange",
          name: "subresource_range",
          ty: Named("VkImageSubresourceRange"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkSampleLocationsInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkImageCreateInfo",
      name: "ImageCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkImageCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageType",
          name: "image_type",
          ty: Named("VkImageType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extent",
          name: "extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mipLevels",
          name: "mip_levels",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "arrayLayers",
          name: "array_layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samples",
          name: "samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tiling",
          name: "tiling",
          ty: Named("VkImageTiling"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sharingMode",
          name: "sharing_mode",
          ty: Named("VkSharingMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndexCount",
          name: "queue_family_index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pQueueFamilyIndices",
          name: "queue_family_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("queueFamilyIndexCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "initialLayout",
          name: "initial_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDedicatedAllocationImageCreateInfoNV",
        "VkExternalMemoryImageCreateInfoNV",
        "VkExternalMemoryImageCreateInfo",
        "VkImageSwapchainCreateInfoKHR",
        "VkImageFormatListCreateInfo",
        "VkExternalFormatANDROID",
        "VkImageDrmFormatModifierListCreateInfoEXT",
        "VkImageDrmFormatModifierExplicitCreateInfoEXT",
        "VkImageStencilUsageCreateInfo",
        "VkVideoProfilesKHR",
        "VkVideoProfileKHR",
        "VkBufferCollectionImageCreateInfoFUCHSIA",
      ],
    ),
    Struct(
      original_name: "VkSubresourceLayout",
      name: "SubresourceLayout",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rowPitch",
          name: "row_pitch",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "arrayPitch",
          name: "array_pitch",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthPitch",
          name: "depth_pitch",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkImageViewCreateInfo",
      name: "ImageViewCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkImageViewCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewType",
          name: "view_type",
          ty: Named("VkImageViewType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "components",
          name: "components",
          ty: Named("VkComponentMapping"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subresourceRange",
          name: "subresource_range",
          ty: Named("VkImageSubresourceRange"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkImageViewUsageCreateInfo",
        "VkSamplerYcbcrConversionInfo",
        "VkImageViewASTCDecodeModeEXT",
        "VkVideoProfilesKHR",
        "VkVideoProfileKHR",
        "VkImageViewMinLodCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkBufferCopy",
      name: "BufferCopy",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "srcOffset",
          name: "src_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstOffset",
          name: "dst_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSparseMemoryBind",
      name: "SparseMemoryBind",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "resourceOffset",
          name: "resource_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryOffset",
          name: "memory_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSparseMemoryBindFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSparseImageMemoryBind",
      name: "SparseImageMemoryBind",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "subresource",
          name: "subresource",
          ty: Named("VkImageSubresource"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extent",
          name: "extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryOffset",
          name: "memory_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSparseMemoryBindFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSparseBufferMemoryBindInfo",
      name: "SparseBufferMemoryBindInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bindCount",
          name: "bind_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pBinds",
          name: "binds",
          ty: Slice(Const, Named("VkSparseMemoryBind"), Variable("bindCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSparseImageOpaqueMemoryBindInfo",
      name: "SparseImageOpaqueMemoryBindInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bindCount",
          name: "bind_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pBinds",
          name: "binds",
          ty: Slice(Const, Named("VkSparseMemoryBind"), Variable("bindCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSparseImageMemoryBindInfo",
      name: "SparseImageMemoryBindInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bindCount",
          name: "bind_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pBinds",
          name: "binds",
          ty: Slice(Const, Named("VkSparseImageMemoryBind"), Variable("bindCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkBindSparseInfo",
      name: "BindSparseInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BIND_SPARSE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "waitSemaphoreCount",
          name: "wait_semaphore_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pWaitSemaphores",
          name: "wait_semaphores",
          ty: Slice(Const, Named("VkSemaphore"), Variable("waitSemaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferBindCount",
          name: "buffer_bind_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pBufferBinds",
          name: "buffer_binds",
          ty: Slice(Const, Named("VkSparseBufferMemoryBindInfo"), Variable("bufferBindCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageOpaqueBindCount",
          name: "image_opaque_bind_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pImageOpaqueBinds",
          name: "image_opaque_binds",
          ty: Slice(Const, Named("VkSparseImageOpaqueMemoryBindInfo"), Variable("imageOpaqueBindCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageBindCount",
          name: "image_bind_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pImageBinds",
          name: "image_binds",
          ty: Slice(Const, Named("VkSparseImageMemoryBindInfo"), Variable("imageBindCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "signalSemaphoreCount",
          name: "signal_semaphore_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSignalSemaphores",
          name: "signal_semaphores",
          ty: Slice(Const, Named("VkSemaphore"), Variable("signalSemaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDeviceGroupBindSparseInfo",
        "VkTimelineSemaphoreSubmitInfo",
      ],
    ),
    Struct(
      original_name: "VkImageCopy",
      name: "ImageCopy",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "srcSubresource",
          name: "src_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcOffset",
          name: "src_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSubresource",
          name: "dst_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstOffset",
          name: "dst_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extent",
          name: "extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkImageBlit",
      name: "ImageBlit",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "srcSubresource",
          name: "src_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcOffsets",
          name: "src_offsets",
          ty: Array(Named("VkOffset3D"), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSubresource",
          name: "dst_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstOffsets",
          name: "dst_offsets",
          ty: Array(Named("VkOffset3D"), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkBufferImageCopy",
      name: "BufferImageCopy",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "bufferOffset",
          name: "buffer_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferRowLength",
          name: "buffer_row_length",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferImageHeight",
          name: "buffer_image_height",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageSubresource",
          name: "image_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageOffset",
          name: "image_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageExtent",
          name: "image_extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkImageResolve",
      name: "ImageResolve",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "srcSubresource",
          name: "src_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcOffset",
          name: "src_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSubresource",
          name: "dst_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstOffset",
          name: "dst_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extent",
          name: "extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkShaderModuleCreateInfo",
      name: "ShaderModuleCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkShaderModuleCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "codeSize",
          name: "code_size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCode",
          name: "code",
          ty: Slice(Const, Native(UInt(4)), Divide(Variable("codeSize"), ConstantInt(4))),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkShaderModuleValidationCacheCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkDescriptorSetLayoutBinding",
      name: "DescriptorSetLayoutBinding",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "binding",
          name: "binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorType",
          name: "descriptor_type",
          ty: Named("VkDescriptorType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorCount",
          name: "descriptor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stageFlags",
          name: "stage_flags",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pImmutableSamplers",
          name: "immutable_samplers",
          ty: Slice(Const, Named("VkSampler"), Variable("descriptorCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorSetLayoutCreateInfo",
      name: "DescriptorSetLayoutCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDescriptorSetLayoutCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bindingCount",
          name: "binding_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pBindings",
          name: "bindings",
          ty: Slice(Const, Named("VkDescriptorSetLayoutBinding"), Variable("bindingCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDescriptorSetLayoutBindingFlagsCreateInfo",
        "VkMutableDescriptorTypeCreateInfoVALVE",
      ],
    ),
    Struct(
      original_name: "VkDescriptorPoolSize",
      name: "DescriptorPoolSize",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkDescriptorType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorCount",
          name: "descriptor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorPoolCreateInfo",
      name: "DescriptorPoolCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDescriptorPoolCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSets",
          name: "max_sets",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "poolSizeCount",
          name: "pool_size_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPoolSizes",
          name: "pool_sizes",
          ty: Slice(Const, Named("VkDescriptorPoolSize"), Variable("poolSizeCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDescriptorPoolInlineUniformBlockCreateInfo",
        "VkMutableDescriptorTypeCreateInfoVALVE",
      ],
    ),
    Struct(
      original_name: "VkDescriptorSetAllocateInfo",
      name: "DescriptorSetAllocateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorPool",
          name: "descriptor_pool",
          ty: Named("VkDescriptorPool"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorSetCount",
          name: "descriptor_set_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSetLayouts",
          name: "set_layouts",
          ty: Slice(Const, Named("VkDescriptorSetLayout"), Variable("descriptorSetCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDescriptorSetVariableDescriptorCountAllocateInfo",
      ],
    ),
    Struct(
      original_name: "VkSpecializationMapEntry",
      name: "SpecializationMapEntry",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "constantID",
          name: "constant_id",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSpecializationInfo",
      name: "SpecializationInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "mapEntryCount",
          name: "map_entry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMapEntries",
          name: "map_entries",
          ty: Slice(Const, Named("VkSpecializationMapEntry"), Variable("mapEntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dataSize",
          name: "data_size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pData",
          name: "data",
          ty: Slice(Const, Native(Void), Variable("dataSize")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineShaderStageCreateInfo",
      name: "PipelineShaderStageCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineShaderStageCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stage",
          name: "stage",
          ty: Named("VkShaderStageFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "module",
          name: "module",
          ty: Named("VkShaderModule"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pName",
          name: "name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSpecializationInfo",
          name: "specialization_info",
          ty: Pointer(Const, Named("VkSpecializationInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPipelineShaderStageRequiredSubgroupSizeCreateInfo",
      ],
    ),
    Struct(
      original_name: "VkComputePipelineCreateInfo",
      name: "ComputePipelineCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stage",
          name: "stage",
          ty: Named("VkPipelineShaderStageCreateInfo"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layout",
          name: "layout",
          ty: Named("VkPipelineLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "basePipelineHandle",
          name: "base_pipeline_handle",
          ty: Named("VkPipeline"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "basePipelineIndex",
          name: "base_pipeline_index",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPipelineCreationFeedbackCreateInfo",
        "VkSubpassShadingPipelineCreateInfoHUAWEI",
        "VkPipelineCompilerControlCreateInfoAMD",
      ],
    ),
    Struct(
      original_name: "VkVertexInputBindingDescription",
      name: "VertexInputBindingDescription",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "binding",
          name: "binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stride",
          name: "stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inputRate",
          name: "input_rate",
          ty: Named("VkVertexInputRate"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkVertexInputAttributeDescription",
      name: "VertexInputAttributeDescription",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "location",
          name: "location",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "binding",
          name: "binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineVertexInputStateCreateInfo",
      name: "PipelineVertexInputStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineVertexInputStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexBindingDescriptionCount",
          name: "vertex_binding_description_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVertexBindingDescriptions",
          name: "vertex_binding_descriptions",
          ty: Slice(Const, Named("VkVertexInputBindingDescription"), Variable("vertexBindingDescriptionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexAttributeDescriptionCount",
          name: "vertex_attribute_description_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVertexAttributeDescriptions",
          name: "vertex_attribute_descriptions",
          ty: Slice(Const, Named("VkVertexInputAttributeDescription"), Variable("vertexAttributeDescriptionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPipelineVertexInputDivisorStateCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkPipelineInputAssemblyStateCreateInfo",
      name: "PipelineInputAssemblyStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineInputAssemblyStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "topology",
          name: "topology",
          ty: Named("VkPrimitiveTopology"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primitiveRestartEnable",
          name: "primitive_restart_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineTessellationStateCreateInfo",
      name: "PipelineTessellationStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineTessellationStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "patchControlPoints",
          name: "patch_control_points",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPipelineTessellationDomainOriginStateCreateInfo",
      ],
    ),
    Struct(
      original_name: "VkPipelineViewportStateCreateInfo",
      name: "PipelineViewportStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineViewportStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportCount",
          name: "viewport_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pViewports",
          name: "viewports",
          ty: Slice(Const, Named("VkViewport"), Variable("viewportCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "scissorCount",
          name: "scissor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pScissors",
          name: "scissors",
          ty: Slice(Const, Named("VkRect2D"), Variable("scissorCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPipelineViewportWScalingStateCreateInfoNV",
        "VkPipelineViewportSwizzleStateCreateInfoNV",
        "VkPipelineViewportExclusiveScissorStateCreateInfoNV",
        "VkPipelineViewportShadingRateImageStateCreateInfoNV",
        "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV",
        "VkPipelineViewportDepthClipControlCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkPipelineRasterizationStateCreateInfo",
      name: "PipelineRasterizationStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineRasterizationStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthClampEnable",
          name: "depth_clamp_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizerDiscardEnable",
          name: "rasterizer_discard_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "polygonMode",
          name: "polygon_mode",
          ty: Named("VkPolygonMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "cullMode",
          name: "cull_mode",
          ty: Named("VkCullModeFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "frontFace",
          name: "front_face",
          ty: Named("VkFrontFace"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthBiasEnable",
          name: "depth_bias_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthBiasConstantFactor",
          name: "depth_bias_constant_factor",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthBiasClamp",
          name: "depth_bias_clamp",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthBiasSlopeFactor",
          name: "depth_bias_slope_factor",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "lineWidth",
          name: "line_width",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPipelineRasterizationStateRasterizationOrderAMD",
        "VkPipelineRasterizationConservativeStateCreateInfoEXT",
        "VkPipelineRasterizationStateStreamCreateInfoEXT",
        "VkPipelineRasterizationDepthClipStateCreateInfoEXT",
        "VkPipelineRasterizationLineStateCreateInfoEXT",
        "VkPipelineRasterizationProvokingVertexStateCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkPipelineMultisampleStateCreateInfo",
      name: "PipelineMultisampleStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineMultisampleStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizationSamples",
          name: "rasterization_samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleShadingEnable",
          name: "sample_shading_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minSampleShading",
          name: "min_sample_shading",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSampleMask",
          name: "sample_mask",
          ty: Slice(Const, Named("VkSampleMask"), Divide(Add(Variable("rasterizationSamples"), ConstantInt(31)), ConstantInt(32))),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "alphaToCoverageEnable",
          name: "alpha_to_coverage_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "alphaToOneEnable",
          name: "alpha_to_one_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPipelineCoverageToColorStateCreateInfoNV",
        "VkPipelineSampleLocationsStateCreateInfoEXT",
        "VkPipelineCoverageModulationStateCreateInfoNV",
        "VkPipelineCoverageReductionStateCreateInfoNV",
      ],
    ),
    Struct(
      original_name: "VkPipelineColorBlendAttachmentState",
      name: "PipelineColorBlendAttachmentState",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "blendEnable",
          name: "blend_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcColorBlendFactor",
          name: "src_color_blend_factor",
          ty: Named("VkBlendFactor"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstColorBlendFactor",
          name: "dst_color_blend_factor",
          ty: Named("VkBlendFactor"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorBlendOp",
          name: "color_blend_op",
          ty: Named("VkBlendOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAlphaBlendFactor",
          name: "src_alpha_blend_factor",
          ty: Named("VkBlendFactor"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstAlphaBlendFactor",
          name: "dst_alpha_blend_factor",
          ty: Named("VkBlendFactor"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "alphaBlendOp",
          name: "alpha_blend_op",
          ty: Named("VkBlendOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorWriteMask",
          name: "color_write_mask",
          ty: Named("VkColorComponentFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineColorBlendStateCreateInfo",
      name: "PipelineColorBlendStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineColorBlendStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "logicOpEnable",
          name: "logic_op_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "logicOp",
          name: "logic_op",
          ty: Named("VkLogicOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "attachmentCount",
          name: "attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttachments",
          name: "attachments",
          ty: Slice(Const, Named("VkPipelineColorBlendAttachmentState"), Variable("attachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "blendConstants",
          name: "blend_constants",
          ty: Array(Native(Float), ConstantInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkPipelineColorBlendAdvancedStateCreateInfoEXT",
        "VkPipelineColorWriteCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkPipelineDynamicStateCreateInfo",
      name: "PipelineDynamicStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineDynamicStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dynamicStateCount",
          name: "dynamic_state_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDynamicStates",
          name: "dynamic_states",
          ty: Slice(Const, Named("VkDynamicState"), Variable("dynamicStateCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkStencilOpState",
      name: "StencilOpState",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "failOp",
          name: "fail_op",
          ty: Named("VkStencilOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "passOp",
          name: "pass_op",
          ty: Named("VkStencilOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthFailOp",
          name: "depth_fail_op",
          ty: Named("VkStencilOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compareOp",
          name: "compare_op",
          ty: Named("VkCompareOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compareMask",
          name: "compare_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "writeMask",
          name: "write_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "reference",
          name: "reference",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineDepthStencilStateCreateInfo",
      name: "PipelineDepthStencilStateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineDepthStencilStateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthTestEnable",
          name: "depth_test_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthWriteEnable",
          name: "depth_write_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthCompareOp",
          name: "depth_compare_op",
          ty: Named("VkCompareOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthBoundsTestEnable",
          name: "depth_bounds_test_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilTestEnable",
          name: "stencil_test_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "front",
          name: "front",
          ty: Named("VkStencilOpState"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "back",
          name: "back",
          ty: Named("VkStencilOpState"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minDepthBounds",
          name: "min_depth_bounds",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDepthBounds",
          name: "max_depth_bounds",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkGraphicsPipelineCreateInfo",
      name: "GraphicsPipelineCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stageCount",
          name: "stage_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStages",
          name: "stages",
          ty: Slice(Const, Named("VkPipelineShaderStageCreateInfo"), Variable("stageCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVertexInputState",
          name: "vertex_input_state",
          ty: Pointer(Const, Named("VkPipelineVertexInputStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pInputAssemblyState",
          name: "input_assembly_state",
          ty: Pointer(Const, Named("VkPipelineInputAssemblyStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pTessellationState",
          name: "tessellation_state",
          ty: Pointer(Const, Named("VkPipelineTessellationStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pViewportState",
          name: "viewport_state",
          ty: Pointer(Const, Named("VkPipelineViewportStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pRasterizationState",
          name: "rasterization_state",
          ty: Pointer(Const, Named("VkPipelineRasterizationStateCreateInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMultisampleState",
          name: "multisample_state",
          ty: Pointer(Const, Named("VkPipelineMultisampleStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pDepthStencilState",
          name: "depth_stencil_state",
          ty: Pointer(Const, Named("VkPipelineDepthStencilStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pColorBlendState",
          name: "color_blend_state",
          ty: Pointer(Const, Named("VkPipelineColorBlendStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pDynamicState",
          name: "dynamic_state",
          ty: Pointer(Const, Named("VkPipelineDynamicStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layout",
          name: "layout",
          ty: Named("VkPipelineLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderPass",
          name: "render_pass",
          ty: Named("VkRenderPass"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subpass",
          name: "subpass",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "basePipelineHandle",
          name: "base_pipeline_handle",
          ty: Named("VkPipeline"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "basePipelineIndex",
          name: "base_pipeline_index",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkGraphicsPipelineShaderGroupsCreateInfoNV",
        "VkPipelineDiscardRectangleStateCreateInfoEXT",
        "VkPipelineRepresentativeFragmentTestStateCreateInfoNV",
        "VkPipelineCreationFeedbackCreateInfo",
        "VkPipelineCompilerControlCreateInfoAMD",
        "VkPipelineFragmentShadingRateStateCreateInfoKHR",
        "VkPipelineFragmentShadingRateEnumStateCreateInfoNV",
        "VkPipelineRenderingCreateInfo",
        "VkAttachmentSampleCountInfoAMD",
        "VkMultiviewPerViewAttributesInfoNVX",
      ],
    ),
    Struct(
      original_name: "VkPipelineCacheCreateInfo",
      name: "PipelineCacheCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCacheCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "initialDataSize",
          name: "initial_data_size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pInitialData",
          name: "initial_data",
          ty: Slice(Const, Native(Void), Variable("initialDataSize")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineCacheHeaderVersionOne",
      name: "PipelineCacheHeaderVersionOne",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "headerSize",
          name: "header_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "headerVersion",
          name: "header_version",
          ty: Named("VkPipelineCacheHeaderVersion"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vendorID",
          name: "vendor_id",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceID",
          name: "device_id",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineCacheUUID",
          name: "pipeline_cache_uuid",
          ty: Array(Native(UInt(1)), Constant("VK_UUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPushConstantRange",
      name: "PushConstantRange",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "stageFlags",
          name: "stage_flags",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineLayoutCreateInfo",
      name: "PipelineLayoutCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineLayoutCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "setLayoutCount",
          name: "set_layout_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSetLayouts",
          name: "set_layouts",
          ty: Slice(Const, Named("VkDescriptorSetLayout"), Variable("setLayoutCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pushConstantRangeCount",
          name: "push_constant_range_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPushConstantRanges",
          name: "push_constant_ranges",
          ty: Slice(Const, Named("VkPushConstantRange"), Variable("pushConstantRangeCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSamplerCreateInfo",
      name: "SamplerCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSamplerCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "magFilter",
          name: "mag_filter",
          ty: Named("VkFilter"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minFilter",
          name: "min_filter",
          ty: Named("VkFilter"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mipmapMode",
          name: "mipmap_mode",
          ty: Named("VkSamplerMipmapMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "addressModeU",
          name: "address_mode_u",
          ty: Named("VkSamplerAddressMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "addressModeV",
          name: "address_mode_v",
          ty: Named("VkSamplerAddressMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "addressModeW",
          name: "address_mode_w",
          ty: Named("VkSamplerAddressMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mipLodBias",
          name: "mip_lod_bias",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "anisotropyEnable",
          name: "anisotropy_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxAnisotropy",
          name: "max_anisotropy",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compareEnable",
          name: "compare_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compareOp",
          name: "compare_op",
          ty: Named("VkCompareOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "minLod",
          name: "min_lod",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxLod",
          name: "max_lod",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "borderColor",
          name: "border_color",
          ty: Named("VkBorderColor"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "unnormalizedCoordinates",
          name: "unnormalized_coordinates",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkSamplerYcbcrConversionInfo",
        "VkSamplerReductionModeCreateInfo",
        "VkSamplerCustomBorderColorCreateInfoEXT",
        "VkSamplerBorderColorComponentMappingCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkCommandPoolCreateInfo",
      name: "CommandPoolCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkCommandPoolCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkCommandBufferAllocateInfo",
      name: "CommandBufferAllocateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "commandPool",
          name: "command_pool",
          ty: Named("VkCommandPool"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "level",
          name: "level",
          ty: Named("VkCommandBufferLevel"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "commandBufferCount",
          name: "command_buffer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkCommandBufferInheritanceInfo",
      name: "CommandBufferInheritanceInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderPass",
          name: "render_pass",
          ty: Named("VkRenderPass"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "subpass",
          name: "subpass",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "framebuffer",
          name: "framebuffer",
          ty: Named("VkFramebuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "occlusionQueryEnable",
          name: "occlusion_query_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queryFlags",
          name: "query_flags",
          ty: Named("VkQueryControlFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pipelineStatistics",
          name: "pipeline_statistics",
          ty: Named("VkQueryPipelineStatisticFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkCommandBufferInheritanceConditionalRenderingInfoEXT",
        "VkCommandBufferInheritanceViewportScissorInfoNV",
        "VkCommandBufferInheritanceRenderingInfo",
        "VkAttachmentSampleCountInfoAMD",
        "VkMultiviewPerViewAttributesInfoNVX",
      ],
    ),
    Struct(
      original_name: "VkCommandBufferBeginInfo",
      name: "CommandBufferBeginInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkCommandBufferUsageFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pInheritanceInfo",
          name: "inheritance_info",
          ty: Pointer(Const, Named("VkCommandBufferInheritanceInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDeviceGroupCommandBufferBeginInfo",
      ],
    ),
    Struct(
      original_name: "VkRenderPassBeginInfo",
      name: "RenderPassBeginInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderPass",
          name: "render_pass",
          ty: Named("VkRenderPass"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "framebuffer",
          name: "framebuffer",
          ty: Named("VkFramebuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderArea",
          name: "render_area",
          ty: Named("VkRect2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "clearValueCount",
          name: "clear_value_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pClearValues",
          name: "clear_values",
          ty: Slice(Const, Named("VkClearValue"), Variable("clearValueCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkDeviceGroupRenderPassBeginInfo",
        "VkRenderPassSampleLocationsBeginInfoEXT",
        "VkRenderPassAttachmentBeginInfo",
      ],
    ),
    Struct(
      original_name: "VkClearDepthStencilValue",
      name: "ClearDepthStencilValue",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "depth",
          name: "depth",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencil",
          name: "stencil",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkClearAttachment",
      name: "ClearAttachment",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "aspectMask",
          name: "aspect_mask",
          ty: Named("VkImageAspectFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorAttachment",
          name: "color_attachment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "clearValue",
          name: "clear_value",
          ty: Named("VkClearValue"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkAttachmentDescription",
      name: "AttachmentDescription",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkAttachmentDescriptionFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samples",
          name: "samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "loadOp",
          name: "load_op",
          ty: Named("VkAttachmentLoadOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storeOp",
          name: "store_op",
          ty: Named("VkAttachmentStoreOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilLoadOp",
          name: "stencil_load_op",
          ty: Named("VkAttachmentLoadOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilStoreOp",
          name: "stencil_store_op",
          ty: Named("VkAttachmentStoreOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "initialLayout",
          name: "initial_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "finalLayout",
          name: "final_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkAttachmentReference",
      name: "AttachmentReference",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "attachment",
          name: "attachment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layout",
          name: "layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSubpassDescription",
      name: "SubpassDescription",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSubpassDescriptionFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineBindPoint",
          name: "pipeline_bind_point",
          ty: Named("VkPipelineBindPoint"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inputAttachmentCount",
          name: "input_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pInputAttachments",
          name: "input_attachments",
          ty: Slice(Const, Named("VkAttachmentReference"), Variable("inputAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorAttachmentCount",
          name: "color_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pColorAttachments",
          name: "color_attachments",
          ty: Slice(Const, Named("VkAttachmentReference"), Variable("colorAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pResolveAttachments",
          name: "resolve_attachments",
          ty: Slice(Const, Named("VkAttachmentReference"), Variable("colorAttachmentCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDepthStencilAttachment",
          name: "depth_stencil_attachment",
          ty: Pointer(Const, Named("VkAttachmentReference")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "preserveAttachmentCount",
          name: "preserve_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPreserveAttachments",
          name: "preserve_attachments",
          ty: Slice(Const, Native(UInt(4)), Variable("preserveAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSubpassDependency",
      name: "SubpassDependency",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "srcSubpass",
          name: "src_subpass",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSubpass",
          name: "dst_subpass",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcStageMask",
          name: "src_stage_mask",
          ty: Named("VkPipelineStageFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstStageMask",
          name: "dst_stage_mask",
          ty: Named("VkPipelineStageFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAccessMask",
          name: "src_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstAccessMask",
          name: "dst_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dependencyFlags",
          name: "dependency_flags",
          ty: Named("VkDependencyFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkRenderPassCreateInfo",
      name: "RenderPassCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkRenderPassCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachmentCount",
          name: "attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttachments",
          name: "attachments",
          ty: Slice(Const, Named("VkAttachmentDescription"), Variable("attachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subpassCount",
          name: "subpass_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSubpasses",
          name: "subpasses",
          ty: Slice(Const, Named("VkSubpassDescription"), Variable("subpassCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dependencyCount",
          name: "dependency_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDependencies",
          name: "dependencies",
          ty: Slice(Const, Named("VkSubpassDependency"), Variable("dependencyCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkRenderPassMultiviewCreateInfo",
        "VkRenderPassInputAttachmentAspectCreateInfo",
        "VkRenderPassFragmentDensityMapCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkEventCreateInfo",
      name: "EventCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EVENT_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkEventCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkFenceCreateInfo",
      name: "FenceCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FENCE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkFenceCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkExportFenceCreateInfo",
        "VkExportFenceWin32HandleInfoKHR",
      ],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFeatures",
      name: "PhysicalDeviceFeatures",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "robustBufferAccess",
          name: "robust_buffer_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fullDrawIndexUint32",
          name: "full_draw_index_uint32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageCubeArray",
          name: "image_cube_array",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "independentBlend",
          name: "independent_blend",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "geometryShader",
          name: "geometry_shader",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tessellationShader",
          name: "tessellation_shader",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleRateShading",
          name: "sample_rate_shading",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dualSrcBlend",
          name: "dual_src_blend",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "logicOp",
          name: "logic_op",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multiDrawIndirect",
          name: "multi_draw_indirect",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drawIndirectFirstInstance",
          name: "draw_indirect_first_instance",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthClamp",
          name: "depth_clamp",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthBiasClamp",
          name: "depth_bias_clamp",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fillModeNonSolid",
          name: "fill_mode_non_solid",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthBounds",
          name: "depth_bounds",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "wideLines",
          name: "wide_lines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "largePoints",
          name: "large_points",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "alphaToOne",
          name: "alpha_to_one",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multiViewport",
          name: "multi_viewport",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerAnisotropy",
          name: "sampler_anisotropy",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "textureCompressionETC2",
          name: "texture_compression_etc2",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "textureCompressionASTC_LDR",
          name: "texture_compression_astc_ldr",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "textureCompressionBC",
          name: "texture_compression_bc",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "occlusionQueryPrecise",
          name: "occlusion_query_precise",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineStatisticsQuery",
          name: "pipeline_statistics_query",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexPipelineStoresAndAtomics",
          name: "vertex_pipeline_stores_and_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentStoresAndAtomics",
          name: "fragment_stores_and_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderTessellationAndGeometryPointSize",
          name: "shader_tessellation_and_geometry_point_size",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderImageGatherExtended",
          name: "shader_image_gather_extended",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageExtendedFormats",
          name: "shader_storage_image_extended_formats",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageMultisample",
          name: "shader_storage_image_multisample",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageReadWithoutFormat",
          name: "shader_storage_image_read_without_format",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageWriteWithoutFormat",
          name: "shader_storage_image_write_without_format",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformBufferArrayDynamicIndexing",
          name: "shader_uniform_buffer_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSampledImageArrayDynamicIndexing",
          name: "shader_sampled_image_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageBufferArrayDynamicIndexing",
          name: "shader_storage_buffer_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageArrayDynamicIndexing",
          name: "shader_storage_image_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderClipDistance",
          name: "shader_clip_distance",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderCullDistance",
          name: "shader_cull_distance",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderFloat64",
          name: "shader_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInt64",
          name: "shader_int64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInt16",
          name: "shader_int16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderResourceResidency",
          name: "shader_resource_residency",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderResourceMinLod",
          name: "shader_resource_min_lod",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseBinding",
          name: "sparse_binding",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseResidencyBuffer",
          name: "sparse_residency_buffer",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseResidencyImage2D",
          name: "sparse_residency_image2_d",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseResidencyImage3D",
          name: "sparse_residency_image3_d",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseResidency2Samples",
          name: "sparse_residency2_samples",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseResidency4Samples",
          name: "sparse_residency4_samples",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseResidency8Samples",
          name: "sparse_residency8_samples",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseResidency16Samples",
          name: "sparse_residency16_samples",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseResidencyAliased",
          name: "sparse_residency_aliased",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "variableMultisampleRate",
          name: "variable_multisample_rate",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inheritedQueries",
          name: "inherited_queries",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSparseProperties",
      name: "PhysicalDeviceSparseProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "residencyStandard2DBlockShape",
          name: "residency_standard2_d_block_shape",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "residencyStandard2DMultisampleBlockShape",
          name: "residency_standard2_d_multisample_block_shape",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "residencyStandard3DBlockShape",
          name: "residency_standard3_d_block_shape",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "residencyAlignedMipSize",
          name: "residency_aligned_mip_size",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "residencyNonResidentStrict",
          name: "residency_non_resident_strict",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceLimits",
      name: "PhysicalDeviceLimits",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "maxImageDimension1D",
          name: "max_image_dimension1_d",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageDimension2D",
          name: "max_image_dimension2_d",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageDimension3D",
          name: "max_image_dimension3_d",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageDimensionCube",
          name: "max_image_dimension_cube",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageArrayLayers",
          name: "max_image_array_layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTexelBufferElements",
          name: "max_texel_buffer_elements",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxUniformBufferRange",
          name: "max_uniform_buffer_range",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxStorageBufferRange",
          name: "max_storage_buffer_range",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPushConstantsSize",
          name: "max_push_constants_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMemoryAllocationCount",
          name: "max_memory_allocation_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSamplerAllocationCount",
          name: "max_sampler_allocation_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferImageGranularity",
          name: "buffer_image_granularity",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseAddressSpaceSize",
          name: "sparse_address_space_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBoundDescriptorSets",
          name: "max_bound_descriptor_sets",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorSamplers",
          name: "max_per_stage_descriptor_samplers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUniformBuffers",
          name: "max_per_stage_descriptor_uniform_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorStorageBuffers",
          name: "max_per_stage_descriptor_storage_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorSampledImages",
          name: "max_per_stage_descriptor_sampled_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorStorageImages",
          name: "max_per_stage_descriptor_storage_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorInputAttachments",
          name: "max_per_stage_descriptor_input_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageResources",
          name: "max_per_stage_resources",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetSamplers",
          name: "max_descriptor_set_samplers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUniformBuffers",
          name: "max_descriptor_set_uniform_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUniformBuffersDynamic",
          name: "max_descriptor_set_uniform_buffers_dynamic",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetStorageBuffers",
          name: "max_descriptor_set_storage_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetStorageBuffersDynamic",
          name: "max_descriptor_set_storage_buffers_dynamic",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetSampledImages",
          name: "max_descriptor_set_sampled_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetStorageImages",
          name: "max_descriptor_set_storage_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetInputAttachments",
          name: "max_descriptor_set_input_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVertexInputAttributes",
          name: "max_vertex_input_attributes",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVertexInputBindings",
          name: "max_vertex_input_bindings",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVertexInputAttributeOffset",
          name: "max_vertex_input_attribute_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVertexInputBindingStride",
          name: "max_vertex_input_binding_stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVertexOutputComponents",
          name: "max_vertex_output_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTessellationGenerationLevel",
          name: "max_tessellation_generation_level",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTessellationPatchSize",
          name: "max_tessellation_patch_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTessellationControlPerVertexInputComponents",
          name: "max_tessellation_control_per_vertex_input_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTessellationControlPerVertexOutputComponents",
          name: "max_tessellation_control_per_vertex_output_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTessellationControlPerPatchOutputComponents",
          name: "max_tessellation_control_per_patch_output_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTessellationControlTotalOutputComponents",
          name: "max_tessellation_control_total_output_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTessellationEvaluationInputComponents",
          name: "max_tessellation_evaluation_input_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTessellationEvaluationOutputComponents",
          name: "max_tessellation_evaluation_output_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxGeometryShaderInvocations",
          name: "max_geometry_shader_invocations",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxGeometryInputComponents",
          name: "max_geometry_input_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxGeometryOutputComponents",
          name: "max_geometry_output_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxGeometryOutputVertices",
          name: "max_geometry_output_vertices",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxGeometryTotalOutputComponents",
          name: "max_geometry_total_output_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentInputComponents",
          name: "max_fragment_input_components",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentOutputAttachments",
          name: "max_fragment_output_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentDualSrcAttachments",
          name: "max_fragment_dual_src_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentCombinedOutputResources",
          name: "max_fragment_combined_output_resources",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxComputeSharedMemorySize",
          name: "max_compute_shared_memory_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxComputeWorkGroupCount",
          name: "max_compute_work_group_count",
          ty: Array(Native(UInt(4)), ConstantInt(3)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxComputeWorkGroupInvocations",
          name: "max_compute_work_group_invocations",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxComputeWorkGroupSize",
          name: "max_compute_work_group_size",
          ty: Array(Native(UInt(4)), ConstantInt(3)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subPixelPrecisionBits",
          name: "sub_pixel_precision_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subTexelPrecisionBits",
          name: "sub_texel_precision_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mipmapPrecisionBits",
          name: "mipmap_precision_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDrawIndexedIndexValue",
          name: "max_draw_indexed_index_value",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDrawIndirectCount",
          name: "max_draw_indirect_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSamplerLodBias",
          name: "max_sampler_lod_bias",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSamplerAnisotropy",
          name: "max_sampler_anisotropy",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxViewports",
          name: "max_viewports",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxViewportDimensions",
          name: "max_viewport_dimensions",
          ty: Array(Native(UInt(4)), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportBoundsRange",
          name: "viewport_bounds_range",
          ty: Array(Native(Float), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportSubPixelBits",
          name: "viewport_sub_pixel_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minMemoryMapAlignment",
          name: "min_memory_map_alignment",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minTexelBufferOffsetAlignment",
          name: "min_texel_buffer_offset_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minUniformBufferOffsetAlignment",
          name: "min_uniform_buffer_offset_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minStorageBufferOffsetAlignment",
          name: "min_storage_buffer_offset_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minTexelOffset",
          name: "min_texel_offset",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTexelOffset",
          name: "max_texel_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minTexelGatherOffset",
          name: "min_texel_gather_offset",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTexelGatherOffset",
          name: "max_texel_gather_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minInterpolationOffset",
          name: "min_interpolation_offset",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxInterpolationOffset",
          name: "max_interpolation_offset",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subPixelInterpolationOffsetBits",
          name: "sub_pixel_interpolation_offset_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFramebufferWidth",
          name: "max_framebuffer_width",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFramebufferHeight",
          name: "max_framebuffer_height",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFramebufferLayers",
          name: "max_framebuffer_layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "framebufferColorSampleCounts",
          name: "framebuffer_color_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "framebufferDepthSampleCounts",
          name: "framebuffer_depth_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "framebufferStencilSampleCounts",
          name: "framebuffer_stencil_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "framebufferNoAttachmentsSampleCounts",
          name: "framebuffer_no_attachments_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxColorAttachments",
          name: "max_color_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampledImageColorSampleCounts",
          name: "sampled_image_color_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampledImageIntegerSampleCounts",
          name: "sampled_image_integer_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampledImageDepthSampleCounts",
          name: "sampled_image_depth_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampledImageStencilSampleCounts",
          name: "sampled_image_stencil_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageImageSampleCounts",
          name: "storage_image_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSampleMaskWords",
          name: "max_sample_mask_words",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "timestampComputeAndGraphics",
          name: "timestamp_compute_and_graphics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "timestampPeriod",
          name: "timestamp_period",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxClipDistances",
          name: "max_clip_distances",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxCullDistances",
          name: "max_cull_distances",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxCombinedClipAndCullDistances",
          name: "max_combined_clip_and_cull_distances",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "discreteQueuePriorities",
          name: "discrete_queue_priorities",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pointSizeRange",
          name: "point_size_range",
          ty: Array(Native(Float), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "lineWidthRange",
          name: "line_width_range",
          ty: Array(Native(Float), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pointSizeGranularity",
          name: "point_size_granularity",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "lineWidthGranularity",
          name: "line_width_granularity",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "strictLines",
          name: "strict_lines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "standardSampleLocations",
          name: "standard_sample_locations",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "optimalBufferCopyOffsetAlignment",
          name: "optimal_buffer_copy_offset_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "optimalBufferCopyRowPitchAlignment",
          name: "optimal_buffer_copy_row_pitch_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "nonCoherentAtomSize",
          name: "non_coherent_atom_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkSemaphoreCreateInfo",
      name: "SemaphoreCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSemaphoreCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkExportSemaphoreCreateInfo",
        "VkExportSemaphoreWin32HandleInfoKHR",
        "VkSemaphoreTypeCreateInfo",
      ],
    ),
    Struct(
      original_name: "VkQueryPoolCreateInfo",
      name: "QueryPoolCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkQueryPoolCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queryType",
          name: "query_type",
          ty: Named("VkQueryType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queryCount",
          name: "query_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineStatistics",
          name: "pipeline_statistics",
          ty: Named("VkQueryPipelineStatisticFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkQueryPoolPerformanceCreateInfoKHR",
        "VkQueryPoolPerformanceQueryCreateInfoINTEL",
        "VkVideoProfileKHR",
      ],
    ),
    Struct(
      original_name: "VkFramebufferCreateInfo",
      name: "FramebufferCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkFramebufferCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderPass",
          name: "render_pass",
          ty: Named("VkRenderPass"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachmentCount",
          name: "attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttachments",
          name: "attachments",
          ty: Slice(Const, Named("VkImageView"), Variable("attachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "width",
          name: "width",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "height",
          name: "height",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layers",
          name: "layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkFramebufferAttachmentsCreateInfo",
      ],
    ),
    Struct(
      original_name: "VkDrawIndirectCommand",
      name: "DrawIndirectCommand",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "vertexCount",
          name: "vertex_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceCount",
          name: "instance_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "firstVertex",
          name: "first_vertex",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "firstInstance",
          name: "first_instance",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkDrawIndexedIndirectCommand",
      name: "DrawIndexedIndirectCommand",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "indexCount",
          name: "index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceCount",
          name: "instance_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "firstIndex",
          name: "first_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexOffset",
          name: "vertex_offset",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "firstInstance",
          name: "first_instance",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkDispatchIndirectCommand",
      name: "DispatchIndirectCommand",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "x",
          name: "x",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "y",
          name: "y",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "z",
          name: "z",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [],
    ),
    Struct(
      original_name: "VkMultiDrawInfoEXT",
      name: "MultiDrawInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "firstVertex",
          name: "first_vertex",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexCount",
          name: "vertex_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_multi_draw", 393, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMultiDrawIndexedInfoEXT",
      name: "MultiDrawIndexedInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "firstIndex",
          name: "first_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexCount",
          name: "index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexOffset",
          name: "vertex_offset",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_multi_draw", 393, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSubmitInfo",
      name: "SubmitInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBMIT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "waitSemaphoreCount",
          name: "wait_semaphore_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pWaitSemaphores",
          name: "wait_semaphores",
          ty: Slice(Const, Named("VkSemaphore"), Variable("waitSemaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pWaitDstStageMask",
          name: "wait_dst_stage_mask",
          ty: Slice(Const, Named("VkPipelineStageFlags"), Variable("waitSemaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "commandBufferCount",
          name: "command_buffer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCommandBuffers",
          name: "command_buffers",
          ty: Slice(Const, Named("VkCommandBuffer"), Variable("commandBufferCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "signalSemaphoreCount",
          name: "signal_semaphore_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSignalSemaphores",
          name: "signal_semaphores",
          ty: Slice(Const, Named("VkSemaphore"), Variable("signalSemaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
      extended: [
        "VkWin32KeyedMutexAcquireReleaseInfoNV",
        "VkWin32KeyedMutexAcquireReleaseInfoKHR",
        "VkD3D12FenceSubmitInfoKHR",
        "VkDeviceGroupSubmitInfo",
        "VkProtectedSubmitInfo",
        "VkTimelineSemaphoreSubmitInfo",
        "VkPerformanceQuerySubmitInfoKHR",
      ],
    ),
    Struct(
      original_name: "VkDisplayPropertiesKHR",
      name: "DisplayPropertiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "display",
          name: "display",
          ty: Named("VkDisplayKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "displayName",
          name: "display_name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "physicalDimensions",
          name: "physical_dimensions",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "physicalResolution",
          name: "physical_resolution",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedTransforms",
          name: "supported_transforms",
          ty: Named("VkSurfaceTransformFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "planeReorderPossible",
          name: "plane_reorder_possible",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "persistentContent",
          name: "persistent_content",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_display", 3, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayPlanePropertiesKHR",
      name: "DisplayPlanePropertiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "currentDisplay",
          name: "current_display",
          ty: Named("VkDisplayKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "currentStackIndex",
          name: "current_stack_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_display", 3, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayModeParametersKHR",
      name: "DisplayModeParametersKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "visibleRegion",
          name: "visible_region",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "refreshRate",
          name: "refresh_rate",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_display", 3, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayModePropertiesKHR",
      name: "DisplayModePropertiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "displayMode",
          name: "display_mode",
          ty: Named("VkDisplayModeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "parameters",
          name: "parameters",
          ty: Named("VkDisplayModeParametersKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_display", 3, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayModeCreateInfoKHR",
      name: "DisplayModeCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDisplayModeCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "parameters",
          name: "parameters",
          ty: Named("VkDisplayModeParametersKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_display", 3, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayPlaneCapabilitiesKHR",
      name: "DisplayPlaneCapabilitiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "supportedAlpha",
          name: "supported_alpha",
          ty: Named("VkDisplayPlaneAlphaFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minSrcPosition",
          name: "min_src_position",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSrcPosition",
          name: "max_src_position",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minSrcExtent",
          name: "min_src_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSrcExtent",
          name: "max_src_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minDstPosition",
          name: "min_dst_position",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDstPosition",
          name: "max_dst_position",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minDstExtent",
          name: "min_dst_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDstExtent",
          name: "max_dst_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_display", 3, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplaySurfaceCreateInfoKHR",
      name: "DisplaySurfaceCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDisplaySurfaceCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "displayMode",
          name: "display_mode",
          ty: Named("VkDisplayModeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "planeIndex",
          name: "plane_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "planeStackIndex",
          name: "plane_stack_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transform",
          name: "transform",
          ty: Named("VkSurfaceTransformFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "globalAlpha",
          name: "global_alpha",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "alphaMode",
          name: "alpha_mode",
          ty: Named("VkDisplayPlaneAlphaFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageExtent",
          name: "image_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_display", 3, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayPresentInfoKHR",
      name: "DisplayPresentInfoKHR",
      extends: [
        "VkPresentInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcRect",
          name: "src_rect",
          ty: Named("VkRect2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstRect",
          name: "dst_rect",
          ty: Named("VkRect2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "persistent",
          name: "persistent",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_display_swapchain", 4, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSurfaceCapabilitiesKHR",
      name: "SurfaceCapabilitiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "minImageCount",
          name: "min_image_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageCount",
          name: "max_image_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "currentExtent",
          name: "current_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minImageExtent",
          name: "min_image_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageExtent",
          name: "max_image_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageArrayLayers",
          name: "max_image_array_layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedTransforms",
          name: "supported_transforms",
          ty: Named("VkSurfaceTransformFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "currentTransform",
          name: "current_transform",
          ty: Named("VkSurfaceTransformFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedCompositeAlpha",
          name: "supported_composite_alpha",
          ty: Named("VkCompositeAlphaFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedUsageFlags",
          name: "supported_usage_flags",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_surface", 1, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAndroidSurfaceCreateInfoKHR",
      name: "AndroidSurfaceCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkAndroidSurfaceCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "window",
          name: "window",
          ty: Pointer(Mutable, Named("ANativeWindow")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_android_surface", 9, false),
      extended: [],
    ),
    Struct(
      original_name: "VkViSurfaceCreateInfoNN",
      name: "ViSurfaceCreateInfoNN",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkViSurfaceCreateFlagsNN"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "window",
          name: "window",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NN_vi_surface", 63, false),
      extended: [],
    ),
    Struct(
      original_name: "VkWaylandSurfaceCreateInfoKHR",
      name: "WaylandSurfaceCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkWaylandSurfaceCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "display",
          name: "display",
          ty: Pointer(Mutable, Named("wl_display")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "surface",
          name: "surface",
          ty: Pointer(Mutable, Named("wl_surface")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_wayland_surface", 7, false),
      extended: [],
    ),
    Struct(
      original_name: "VkWin32SurfaceCreateInfoKHR",
      name: "Win32SurfaceCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkWin32SurfaceCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "hinstance",
          name: "hinstance",
          ty: Named("HINSTANCE"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "hwnd",
          name: "hwnd",
          ty: Named("HWND"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_win32_surface", 10, false),
      extended: [],
    ),
    Struct(
      original_name: "VkXlibSurfaceCreateInfoKHR",
      name: "XlibSurfaceCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkXlibSurfaceCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dpy",
          name: "dpy",
          ty: Pointer(Mutable, Named("Display")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "window",
          name: "window",
          ty: Named("Window"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_xlib_surface", 5, false),
      extended: [],
    ),
    Struct(
      original_name: "VkXcbSurfaceCreateInfoKHR",
      name: "XcbSurfaceCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkXcbSurfaceCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "connection",
          name: "connection",
          ty: Pointer(Mutable, Named("xcb_connection_t")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "window",
          name: "window",
          ty: Named("xcb_window_t"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_xcb_surface", 6, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDirectFBSurfaceCreateInfoEXT",
      name: "DirectFBSurfaceCreateInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDirectFBSurfaceCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dfb",
          name: "dfb",
          ty: Pointer(Mutable, Named("IDirectFB")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "surface",
          name: "surface",
          ty: Pointer(Mutable, Named("IDirectFBSurface")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_directfb_surface", 347, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImagePipeSurfaceCreateInfoFUCHSIA",
      name: "ImagePipeSurfaceCreateInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkImagePipeSurfaceCreateFlagsFUCHSIA"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imagePipeHandle",
          name: "image_pipe_handle",
          ty: Named("zx_handle_t"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_imagepipe_surface", 215, false),
      extended: [],
    ),
    Struct(
      original_name: "VkStreamDescriptorSurfaceCreateInfoGGP",
      name: "StreamDescriptorSurfaceCreateInfoGGP",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkStreamDescriptorSurfaceCreateFlagsGGP"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "streamDescriptor",
          name: "stream_descriptor",
          ty: Named("GgpStreamDescriptor"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_GGP_stream_descriptor_surface", 50, true),
      extended: [],
    ),
    Struct(
      original_name: "VkScreenSurfaceCreateInfoQNX",
      name: "ScreenSurfaceCreateInfoQNX",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkScreenSurfaceCreateFlagsQNX"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "context",
          name: "context",
          ty: Pointer(Mutable, Named("_screen_context")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "window",
          name: "window",
          ty: Pointer(Mutable, Named("_screen_window")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_QNX_screen_surface", 379, true),
      extended: [],
    ),
    Struct(
      original_name: "VkSurfaceFormatKHR",
      name: "SurfaceFormatKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorSpace",
          name: "color_space",
          ty: Named("VkColorSpaceKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_surface", 1, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSwapchainCreateInfoKHR",
      name: "SwapchainCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSwapchainCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "surface",
          name: "surface",
          ty: Named("VkSurfaceKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minImageCount",
          name: "min_image_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageFormat",
          name: "image_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageColorSpace",
          name: "image_color_space",
          ty: Named("VkColorSpaceKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageExtent",
          name: "image_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageArrayLayers",
          name: "image_array_layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageUsage",
          name: "image_usage",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageSharingMode",
          name: "image_sharing_mode",
          ty: Named("VkSharingMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndexCount",
          name: "queue_family_index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pQueueFamilyIndices",
          name: "queue_family_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("queueFamilyIndexCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "preTransform",
          name: "pre_transform",
          ty: Named("VkSurfaceTransformFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compositeAlpha",
          name: "composite_alpha",
          ty: Named("VkCompositeAlphaFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "presentMode",
          name: "present_mode",
          ty: Named("VkPresentModeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "clipped",
          name: "clipped",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "oldSwapchain",
          name: "old_swapchain",
          ty: Named("VkSwapchainKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_swapchain", 2, false),
      extended: [
        "VkSwapchainCounterCreateInfoEXT",
        "VkDeviceGroupSwapchainCreateInfoKHR",
        "VkSwapchainDisplayNativeHdrCreateInfoAMD",
        "VkImageFormatListCreateInfo",
        "VkSurfaceFullScreenExclusiveInfoEXT",
        "VkSurfaceFullScreenExclusiveWin32InfoEXT",
      ],
    ),
    Struct(
      original_name: "VkPresentInfoKHR",
      name: "PresentInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PRESENT_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "waitSemaphoreCount",
          name: "wait_semaphore_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pWaitSemaphores",
          name: "wait_semaphores",
          ty: Slice(Const, Named("VkSemaphore"), Variable("waitSemaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "swapchainCount",
          name: "swapchain_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSwapchains",
          name: "swapchains",
          ty: Slice(Const, Named("VkSwapchainKHR"), Variable("swapchainCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pImageIndices",
          name: "image_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("swapchainCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pResults",
          name: "results",
          ty: Slice(Mutable, Named("VkResult"), Variable("swapchainCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_swapchain", 2, false),
      extended: [
        "VkDisplayPresentInfoKHR",
        "VkPresentRegionsKHR",
        "VkDeviceGroupPresentInfoKHR",
        "VkPresentIdKHR",
        "VkPresentTimesInfoGOOGLE",
      ],
    ),
    Struct(
      original_name: "VkDebugReportCallbackCreateInfoEXT",
      name: "DebugReportCallbackCreateInfoEXT",
      extends: [
        "VkInstanceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDebugReportFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pfnCallback",
          name: "pfn_callback",
          ty: Named("PFN_vkDebugReportCallbackEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pUserData",
          name: "user_data",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_report", 12, false),
      extended: [],
    ),
    Struct(
      original_name: "VkValidationFlagsEXT",
      name: "ValidationFlagsEXT",
      extends: [
        "VkInstanceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "disabledValidationCheckCount",
          name: "disabled_validation_check_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDisabledValidationChecks",
          name: "disabled_validation_checks",
          ty: Slice(Const, Named("VkValidationCheckEXT"), Variable("disabledValidationCheckCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_validation_flags", 62, false),
      extended: [],
    ),
    Struct(
      original_name: "VkValidationFeaturesEXT",
      name: "ValidationFeaturesEXT",
      extends: [
        "VkInstanceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "enabledValidationFeatureCount",
          name: "enabled_validation_feature_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pEnabledValidationFeatures",
          name: "enabled_validation_features",
          ty: Slice(Const, Named("VkValidationFeatureEnableEXT"), Variable("enabledValidationFeatureCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "disabledValidationFeatureCount",
          name: "disabled_validation_feature_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDisabledValidationFeatures",
          name: "disabled_validation_features",
          ty: Slice(Const, Named("VkValidationFeatureDisableEXT"), Variable("disabledValidationFeatureCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_validation_features", 248, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineRasterizationStateRasterizationOrderAMD",
      name: "PipelineRasterizationStateRasterizationOrderAMD",
      extends: [
        "VkPipelineRasterizationStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizationOrder",
          name: "rasterization_order",
          ty: Named("VkRasterizationOrderAMD"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_rasterization_order", 19, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDebugMarkerObjectNameInfoEXT",
      name: "DebugMarkerObjectNameInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectType",
          name: "object_type",
          ty: Named("VkDebugReportObjectTypeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "object",
          name: "object",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pObjectName",
          name: "object_name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_marker", 23, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDebugMarkerObjectTagInfoEXT",
      name: "DebugMarkerObjectTagInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectType",
          name: "object_type",
          ty: Named("VkDebugReportObjectTypeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "object",
          name: "object",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tagName",
          name: "tag_name",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tagSize",
          name: "tag_size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pTag",
          name: "tag",
          ty: Slice(Const, Native(Void), Variable("tagSize")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_marker", 23, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDebugMarkerMarkerInfoEXT",
      name: "DebugMarkerMarkerInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMarkerName",
          name: "marker_name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "color",
          name: "color",
          ty: Array(Native(Float), ConstantInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_marker", 23, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDedicatedAllocationImageCreateInfoNV",
      name: "DedicatedAllocationImageCreateInfoNV",
      extends: [
        "VkImageCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dedicatedAllocation",
          name: "dedicated_allocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_dedicated_allocation", 27, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDedicatedAllocationBufferCreateInfoNV",
      name: "DedicatedAllocationBufferCreateInfoNV",
      extends: [
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dedicatedAllocation",
          name: "dedicated_allocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_dedicated_allocation", 27, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDedicatedAllocationMemoryAllocateInfoNV",
      name: "DedicatedAllocationMemoryAllocateInfoNV",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_dedicated_allocation", 27, false),
      extended: [],
    ),
    Struct(
      original_name: "VkExternalImageFormatPropertiesNV",
      name: "ExternalImageFormatPropertiesNV",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "imageFormatProperties",
          name: "image_format_properties",
          ty: Named("VkImageFormatProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "externalMemoryFeatures",
          name: "external_memory_features",
          ty: Named("VkExternalMemoryFeatureFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "exportFromImportedHandleTypes",
          name: "export_from_imported_handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compatibleHandleTypes",
          name: "compatible_handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
      extended: [],
    ),
    Struct(
      original_name: "VkExternalMemoryImageCreateInfoNV",
      name: "ExternalMemoryImageCreateInfoNV",
      extends: [
        "VkImageCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleTypes",
          name: "handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_external_memory", 57, false),
      extended: [],
    ),
    Struct(
      original_name: "VkExportMemoryAllocateInfoNV",
      name: "ExportMemoryAllocateInfoNV",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleTypes",
          name: "handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_external_memory", 57, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportMemoryWin32HandleInfoNV",
      name: "ImportMemoryWin32HandleInfoNV",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handle",
          name: "handle",
          ty: Named("HANDLE"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_external_memory_win32", 58, false),
      extended: [],
    ),
    Struct(
      original_name: "VkExportMemoryWin32HandleInfoNV",
      name: "ExportMemoryWin32HandleInfoNV",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttributes",
          name: "attributes",
          ty: Pointer(Const, Named("SECURITY_ATTRIBUTES")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dwAccess",
          name: "dw_access",
          ty: Named("DWORD"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_external_memory_win32", 58, false),
      extended: [],
    ),
    Struct(
      original_name: "VkWin32KeyedMutexAcquireReleaseInfoNV",
      name: "Win32KeyedMutexAcquireReleaseInfoNV",
      extends: [
        "VkSubmitInfo",
        "VkSubmitInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "acquireCount",
          name: "acquire_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAcquireSyncs",
          name: "acquire_syncs",
          ty: Slice(Const, Named("VkDeviceMemory"), Variable("acquireCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAcquireKeys",
          name: "acquire_keys",
          ty: Slice(Const, Native(UInt(8)), Variable("acquireCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAcquireTimeoutMilliseconds",
          name: "acquire_timeout_milliseconds",
          ty: Slice(Const, Native(UInt(4)), Variable("acquireCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "releaseCount",
          name: "release_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReleaseSyncs",
          name: "release_syncs",
          ty: Slice(Const, Named("VkDeviceMemory"), Variable("releaseCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReleaseKeys",
          name: "release_keys",
          ty: Slice(Const, Native(UInt(8)), Variable("releaseCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_win32_keyed_mutex", 59, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV",
      name: "PhysicalDeviceDeviceGeneratedCommandsFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceGeneratedCommands",
          name: "device_generated_commands",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDevicePrivateDataCreateInfo",
      name: "DevicePrivateDataCreateInfo",
      extends: [
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "privateDataSlotRequestCount",
          name: "private_data_slot_request_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPrivateDataSlotCreateInfo",
      name: "PrivateDataSlotCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPrivateDataSlotCreateFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePrivateDataFeatures",
      name: "PhysicalDevicePrivateDataFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "privateData",
          name: "private_data",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV",
      name: "PhysicalDeviceDeviceGeneratedCommandsPropertiesNV",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxGraphicsShaderGroupCount",
          name: "max_graphics_shader_group_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxIndirectSequenceCount",
          name: "max_indirect_sequence_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxIndirectCommandsTokenCount",
          name: "max_indirect_commands_token_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxIndirectCommandsStreamCount",
          name: "max_indirect_commands_stream_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxIndirectCommandsTokenOffset",
          name: "max_indirect_commands_token_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxIndirectCommandsStreamStride",
          name: "max_indirect_commands_stream_stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minSequencesCountBufferOffsetAlignment",
          name: "min_sequences_count_buffer_offset_alignment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minSequencesIndexBufferOffsetAlignment",
          name: "min_sequences_index_buffer_offset_alignment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minIndirectCommandsBufferOffsetAlignment",
          name: "min_indirect_commands_buffer_offset_alignment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMultiDrawPropertiesEXT",
      name: "PhysicalDeviceMultiDrawPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMultiDrawCount",
          name: "max_multi_draw_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_multi_draw", 393, false),
      extended: [],
    ),
    Struct(
      original_name: "VkGraphicsShaderGroupCreateInfoNV",
      name: "GraphicsShaderGroupCreateInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stageCount",
          name: "stage_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStages",
          name: "stages",
          ty: Slice(Const, Named("VkPipelineShaderStageCreateInfo"), Variable("stageCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVertexInputState",
          name: "vertex_input_state",
          ty: Pointer(Const, Named("VkPipelineVertexInputStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pTessellationState",
          name: "tessellation_state",
          ty: Pointer(Const, Named("VkPipelineTessellationStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkGraphicsPipelineShaderGroupsCreateInfoNV",
      name: "GraphicsPipelineShaderGroupsCreateInfoNV",
      extends: [
        "VkGraphicsPipelineCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "groupCount",
          name: "group_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pGroups",
          name: "groups",
          ty: Slice(Const, Named("VkGraphicsShaderGroupCreateInfoNV"), Variable("groupCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineCount",
          name: "pipeline_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPipelines",
          name: "pipelines",
          ty: Slice(Const, Named("VkPipeline"), Variable("pipelineCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBindShaderGroupIndirectCommandNV",
      name: "BindShaderGroupIndirectCommandNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "groupIndex",
          name: "group_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBindIndexBufferIndirectCommandNV",
      name: "BindIndexBufferIndirectCommandNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "bufferAddress",
          name: "buffer_address",
          ty: Named("VkDeviceAddress"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexType",
          name: "index_type",
          ty: Named("VkIndexType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBindVertexBufferIndirectCommandNV",
      name: "BindVertexBufferIndirectCommandNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "bufferAddress",
          name: "buffer_address",
          ty: Named("VkDeviceAddress"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stride",
          name: "stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSetStateFlagsIndirectCommandNV",
      name: "SetStateFlagsIndirectCommandNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "data",
          name: "data",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkIndirectCommandsStreamNV",
      name: "IndirectCommandsStreamNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkIndirectCommandsLayoutTokenNV",
      name: "IndirectCommandsLayoutTokenNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tokenType",
          name: "token_type",
          ty: Named("VkIndirectCommandsTokenTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stream",
          name: "stream",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexBindingUnit",
          name: "vertex_binding_unit",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexDynamicStride",
          name: "vertex_dynamic_stride",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pushconstantPipelineLayout",
          name: "pushconstant_pipeline_layout",
          ty: Named("VkPipelineLayout"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pushconstantShaderStageFlags",
          name: "pushconstant_shader_stage_flags",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pushconstantOffset",
          name: "pushconstant_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pushconstantSize",
          name: "pushconstant_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indirectStateFlags",
          name: "indirect_state_flags",
          ty: Named("VkIndirectStateFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexTypeCount",
          name: "index_type_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pIndexTypes",
          name: "index_types",
          ty: Slice(Const, Named("VkIndexType"), Variable("indexTypeCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pIndexTypeValues",
          name: "index_type_values",
          ty: Slice(Const, Native(UInt(4)), Variable("indexTypeCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkIndirectCommandsLayoutCreateInfoNV",
      name: "IndirectCommandsLayoutCreateInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkIndirectCommandsLayoutUsageFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineBindPoint",
          name: "pipeline_bind_point",
          ty: Named("VkPipelineBindPoint"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tokenCount",
          name: "token_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pTokens",
          name: "tokens",
          ty: Slice(Const, Named("VkIndirectCommandsLayoutTokenNV"), Variable("tokenCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "streamCount",
          name: "stream_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStreamStrides",
          name: "stream_strides",
          ty: Slice(Const, Native(UInt(4)), Variable("streamCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkGeneratedCommandsInfoNV",
      name: "GeneratedCommandsInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineBindPoint",
          name: "pipeline_bind_point",
          ty: Named("VkPipelineBindPoint"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipeline",
          name: "pipeline",
          ty: Named("VkPipeline"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indirectCommandsLayout",
          name: "indirect_commands_layout",
          ty: Named("VkIndirectCommandsLayoutNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "streamCount",
          name: "stream_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStreams",
          name: "streams",
          ty: Slice(Const, Named("VkIndirectCommandsStreamNV"), Variable("streamCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sequencesCount",
          name: "sequences_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "preprocessBuffer",
          name: "preprocess_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "preprocessOffset",
          name: "preprocess_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "preprocessSize",
          name: "preprocess_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sequencesCountBuffer",
          name: "sequences_count_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sequencesCountOffset",
          name: "sequences_count_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sequencesIndexBuffer",
          name: "sequences_index_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sequencesIndexOffset",
          name: "sequences_index_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkGeneratedCommandsMemoryRequirementsInfoNV",
      name: "GeneratedCommandsMemoryRequirementsInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineBindPoint",
          name: "pipeline_bind_point",
          ty: Named("VkPipelineBindPoint"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipeline",
          name: "pipeline",
          ty: Named("VkPipeline"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indirectCommandsLayout",
          name: "indirect_commands_layout",
          ty: Named("VkIndirectCommandsLayoutNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSequencesCount",
          name: "max_sequences_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFeatures2",
      name: "PhysicalDeviceFeatures2",
      extends: [
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "features",
          name: "features",
          ty: Named("VkPhysicalDeviceFeatures"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkPhysicalDeviceDeviceGeneratedCommandsFeaturesNV",
        "VkPhysicalDevicePrivateDataFeatures",
        "VkPhysicalDeviceVariablePointersFeatures",
        "VkPhysicalDeviceMultiviewFeatures",
        "VkPhysicalDevicePresentIdFeaturesKHR",
        "VkPhysicalDevicePresentWaitFeaturesKHR",
        "VkPhysicalDevice16BitStorageFeatures",
        "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures",
        "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
        "VkPhysicalDeviceProtectedMemoryFeatures",
        "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT",
        "VkPhysicalDeviceMultiDrawFeaturesEXT",
        "VkPhysicalDeviceInlineUniformBlockFeatures",
        "VkPhysicalDeviceMaintenance4Features",
        "VkPhysicalDeviceShaderDrawParametersFeatures",
        "VkPhysicalDeviceShaderFloat16Int8Features",
        "VkPhysicalDeviceHostQueryResetFeatures",
        "VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR",
        "VkPhysicalDeviceDeviceMemoryReportFeaturesEXT",
        "VkPhysicalDeviceDescriptorIndexingFeatures",
        "VkPhysicalDeviceTimelineSemaphoreFeatures",
        "VkPhysicalDevice8BitStorageFeatures",
        "VkPhysicalDeviceConditionalRenderingFeaturesEXT",
        "VkPhysicalDeviceVulkanMemoryModelFeatures",
        "VkPhysicalDeviceShaderAtomicInt64Features",
        "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
        "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
        "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT",
        "VkPhysicalDeviceASTCDecodeFeaturesEXT",
        "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
        "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV",
        "VkPhysicalDeviceExclusiveScissorFeaturesNV",
        "VkPhysicalDeviceCornerSampledImageFeaturesNV",
        "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
        "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
        "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
        "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
        "VkPhysicalDeviceShadingRateImageFeaturesNV",
        "VkPhysicalDeviceInvocationMaskFeaturesHUAWEI",
        "VkPhysicalDeviceMeshShaderFeaturesNV",
        "VkPhysicalDeviceAccelerationStructureFeaturesKHR",
        "VkPhysicalDeviceRayTracingPipelineFeaturesKHR",
        "VkPhysicalDeviceRayQueryFeaturesKHR",
        "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
        "VkPhysicalDeviceFragmentDensityMap2FeaturesEXT",
        "VkPhysicalDeviceScalarBlockLayoutFeatures",
        "VkPhysicalDeviceUniformBufferStandardLayoutFeatures",
        "VkPhysicalDeviceDepthClipEnableFeaturesEXT",
        "VkPhysicalDeviceMemoryPriorityFeaturesEXT",
        "VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT",
        "VkPhysicalDeviceBufferDeviceAddressFeatures",
        "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
        "VkPhysicalDeviceImagelessFramebufferFeatures",
        "VkPhysicalDeviceTextureCompressionASTCHDRFeatures",
        "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
        "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT",
        "VkPhysicalDevicePerformanceQueryFeaturesKHR",
        "VkPhysicalDeviceCoverageReductionModeFeaturesNV",
        "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
        "VkPhysicalDeviceShaderClockFeaturesKHR",
        "VkPhysicalDeviceIndexTypeUint8FeaturesEXT",
        "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
        "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
        "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures",
        "VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT",
        "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
        "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures",
        "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
        "VkPhysicalDeviceSubgroupSizeControlFeatures",
        "VkPhysicalDeviceLineRasterizationFeaturesEXT",
        "VkPhysicalDevicePipelineCreationCacheControlFeatures",
        "VkPhysicalDeviceVulkan11Features",
        "VkPhysicalDeviceVulkan12Features",
        "VkPhysicalDeviceVulkan13Features",
        "VkPhysicalDeviceCoherentMemoryFeaturesAMD",
        "VkPhysicalDeviceCustomBorderColorFeaturesEXT",
        "VkPhysicalDeviceBorderColorSwizzleFeaturesEXT",
        "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT",
        "VkPhysicalDeviceExtendedDynamicState2FeaturesEXT",
        "VkPhysicalDeviceDiagnosticsConfigFeaturesNV",
        "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures",
        "VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR",
        "VkPhysicalDeviceRobustness2FeaturesEXT",
        "VkPhysicalDeviceImageRobustnessFeatures",
        "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR",
        "VkPhysicalDevicePortabilitySubsetFeaturesKHR",
        "VkPhysicalDevice4444FormatsFeaturesEXT",
        "VkPhysicalDeviceSubpassShadingFeaturesHUAWEI",
        "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT",
        "VkPhysicalDeviceFragmentShadingRateFeaturesKHR",
        "VkPhysicalDeviceShaderTerminateInvocationFeatures",
        "VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV",
        "VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE",
        "VkPhysicalDeviceDepthClipControlFeaturesEXT",
        "VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT",
        "VkPhysicalDeviceExternalMemoryRDMAFeaturesNV",
        "VkPhysicalDeviceColorWriteEnableFeaturesEXT",
        "VkPhysicalDeviceSynchronization2Features",
        "VkPhysicalDeviceInheritedViewportScissorFeaturesNV",
        "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT",
        "VkPhysicalDeviceProvokingVertexFeaturesEXT",
        "VkPhysicalDeviceShaderIntegerDotProductFeatures",
        "VkPhysicalDeviceRayTracingMotionBlurFeaturesNV",
        "VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT",
        "VkPhysicalDeviceDynamicRenderingFeatures",
        "VkPhysicalDeviceImageViewMinLodFeaturesEXT",
        "VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM",
        "VkPhysicalDeviceLinearColorAttachmentFeaturesNV",
      ],
    ),
    Struct(
      original_name: "VkPhysicalDeviceProperties2",
      name: "PhysicalDeviceProperties2",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "properties",
          name: "properties",
          ty: Named("VkPhysicalDeviceProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkPhysicalDeviceDeviceGeneratedCommandsPropertiesNV",
        "VkPhysicalDeviceMultiDrawPropertiesEXT",
        "VkPhysicalDevicePushDescriptorPropertiesKHR",
        "VkPhysicalDeviceDriverProperties",
        "VkPhysicalDeviceIDProperties",
        "VkPhysicalDeviceMultiviewProperties",
        "VkPhysicalDeviceDiscardRectanglePropertiesEXT",
        "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX",
        "VkPhysicalDeviceSubgroupProperties",
        "VkPhysicalDevicePointClippingProperties",
        "VkPhysicalDeviceProtectedMemoryProperties",
        "VkPhysicalDeviceSamplerFilterMinmaxProperties",
        "VkPhysicalDeviceSampleLocationsPropertiesEXT",
        "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT",
        "VkPhysicalDeviceInlineUniformBlockProperties",
        "VkPhysicalDeviceMaintenance3Properties",
        "VkPhysicalDeviceMaintenance4Properties",
        "VkPhysicalDeviceFloatControlsProperties",
        "VkPhysicalDeviceExternalMemoryHostPropertiesEXT",
        "VkPhysicalDeviceConservativeRasterizationPropertiesEXT",
        "VkPhysicalDeviceShaderCorePropertiesAMD",
        "VkPhysicalDeviceShaderCoreProperties2AMD",
        "VkPhysicalDeviceDescriptorIndexingProperties",
        "VkPhysicalDeviceTimelineSemaphoreProperties",
        "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT",
        "VkPhysicalDevicePCIBusInfoPropertiesEXT",
        "VkPhysicalDeviceDepthStencilResolveProperties",
        "VkPhysicalDeviceTransformFeedbackPropertiesEXT",
        "VkPhysicalDeviceShadingRateImagePropertiesNV",
        "VkPhysicalDeviceMeshShaderPropertiesNV",
        "VkPhysicalDeviceAccelerationStructurePropertiesKHR",
        "VkPhysicalDeviceRayTracingPipelinePropertiesKHR",
        "VkPhysicalDeviceRayTracingPropertiesNV",
        "VkPhysicalDeviceFragmentDensityMapPropertiesEXT",
        "VkPhysicalDeviceFragmentDensityMap2PropertiesEXT",
        "VkPhysicalDeviceCooperativeMatrixPropertiesNV",
        "VkPhysicalDevicePerformanceQueryPropertiesKHR",
        "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV",
        "VkPhysicalDeviceTexelBufferAlignmentProperties",
        "VkPhysicalDeviceSubgroupSizeControlProperties",
        "VkPhysicalDeviceSubpassShadingPropertiesHUAWEI",
        "VkPhysicalDeviceLineRasterizationPropertiesEXT",
        "VkPhysicalDeviceVulkan11Properties",
        "VkPhysicalDeviceVulkan12Properties",
        "VkPhysicalDeviceVulkan13Properties",
        "VkPhysicalDeviceCustomBorderColorPropertiesEXT",
        "VkPhysicalDeviceRobustness2PropertiesEXT",
        "VkPhysicalDevicePortabilitySubsetPropertiesKHR",
        "VkPhysicalDeviceFragmentShadingRatePropertiesKHR",
        "VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV",
        "VkPhysicalDeviceProvokingVertexPropertiesEXT",
        "VkPhysicalDeviceShaderIntegerDotProductProperties",
        "VkPhysicalDeviceDrmPropertiesEXT",
      ],
    ),
    Struct(
      original_name: "VkFormatProperties2",
      name: "FormatProperties2",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "formatProperties",
          name: "format_properties",
          ty: Named("VkFormatProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkDrmFormatModifierPropertiesListEXT",
        "VkVideoProfilesKHR",
        "VkVideoProfileKHR",
        "VkFormatProperties3",
        "VkDrmFormatModifierPropertiesList2EXT",
      ],
    ),
    Struct(
      original_name: "VkImageFormatProperties2",
      name: "ImageFormatProperties2",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageFormatProperties",
          name: "image_format_properties",
          ty: Named("VkImageFormatProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkExternalImageFormatProperties",
        "VkSamplerYcbcrConversionImageFormatProperties",
        "VkTextureLODGatherFormatPropertiesAMD",
        "VkAndroidHardwareBufferUsageANDROID",
        "VkFilterCubicImageViewImageFormatPropertiesEXT",
      ],
    ),
    Struct(
      original_name: "VkPhysicalDeviceImageFormatInfo2",
      name: "PhysicalDeviceImageFormatInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkImageType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tiling",
          name: "tiling",
          ty: Named("VkImageTiling"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkImageCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkPhysicalDeviceExternalImageFormatInfo",
        "VkImageFormatListCreateInfo",
        "VkPhysicalDeviceImageDrmFormatModifierInfoEXT",
        "VkImageStencilUsageCreateInfo",
        "VkPhysicalDeviceImageViewImageFormatInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkQueueFamilyProperties2",
      name: "QueueFamilyProperties2",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyProperties",
          name: "queue_family_properties",
          ty: Named("VkQueueFamilyProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkQueueFamilyGlobalPriorityPropertiesKHR",
        "VkQueueFamilyCheckpointPropertiesNV",
        "VkQueueFamilyCheckpointProperties2NV",
        "VkVideoQueueFamilyProperties2KHR",
        "VkQueueFamilyQueryResultStatusProperties2KHR",
      ],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMemoryProperties2",
      name: "PhysicalDeviceMemoryProperties2",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryProperties",
          name: "memory_properties",
          ty: Named("VkPhysicalDeviceMemoryProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkPhysicalDeviceMemoryBudgetPropertiesEXT",
      ],
    ),
    Struct(
      original_name: "VkSparseImageFormatProperties2",
      name: "SparseImageFormatProperties2",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "properties",
          name: "properties",
          ty: Named("VkSparseImageFormatProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSparseImageFormatInfo2",
      name: "PhysicalDeviceSparseImageFormatInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkImageType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samples",
          name: "samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tiling",
          name: "tiling",
          ty: Named("VkImageTiling"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePushDescriptorPropertiesKHR",
      name: "PhysicalDevicePushDescriptorPropertiesKHR",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPushDescriptors",
          name: "max_push_descriptors",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_push_descriptor", 81, false),
      extended: [],
    ),
    Struct(
      original_name: "VkConformanceVersion",
      name: "ConformanceVersion",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "major",
          name: "major",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minor",
          name: "minor",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subminor",
          name: "subminor",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "patch",
          name: "patch",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDriverProperties",
      name: "PhysicalDeviceDriverProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverID",
          name: "driver_id",
          ty: Named("VkDriverId"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverName",
          name: "driver_name",
          ty: Array(Native(Char), Constant("VK_MAX_DRIVER_NAME_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverInfo",
          name: "driver_info",
          ty: Array(Native(Char), Constant("VK_MAX_DRIVER_INFO_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "conformanceVersion",
          name: "conformance_version",
          ty: Named("VkConformanceVersion"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPresentRegionsKHR",
      name: "PresentRegionsKHR",
      extends: [
        "VkPresentInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "swapchainCount",
          name: "swapchain_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pRegions",
          name: "regions",
          ty: Slice(Const, Named("VkPresentRegionKHR"), Variable("swapchainCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_incremental_present", 85, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPresentRegionKHR",
      name: "PresentRegionKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "rectangleCount",
          name: "rectangle_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pRectangles",
          name: "rectangles",
          ty: Slice(Const, Named("VkRectLayerKHR"), Variable("rectangleCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_incremental_present", 85, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRectLayerKHR",
      name: "RectLayerKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extent",
          name: "extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "layer",
          name: "layer",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_incremental_present", 85, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVariablePointersFeatures",
      name: "PhysicalDeviceVariablePointersFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "variablePointersStorageBuffer",
          name: "variable_pointers_storage_buffer",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "variablePointers",
          name: "variable_pointers",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExternalMemoryProperties",
      name: "ExternalMemoryProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "externalMemoryFeatures",
          name: "external_memory_features",
          ty: Named("VkExternalMemoryFeatureFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "exportFromImportedHandleTypes",
          name: "export_from_imported_handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compatibleHandleTypes",
          name: "compatible_handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExternalImageFormatInfo",
      name: "PhysicalDeviceExternalImageFormatInfo",
      extends: [
        "VkPhysicalDeviceImageFormatInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExternalImageFormatProperties",
      name: "ExternalImageFormatProperties",
      extends: [
        "VkImageFormatProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "externalMemoryProperties",
          name: "external_memory_properties",
          ty: Named("VkExternalMemoryProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExternalBufferInfo",
      name: "PhysicalDeviceExternalBufferInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkBufferCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Named("VkBufferUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExternalBufferProperties",
      name: "ExternalBufferProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "externalMemoryProperties",
          name: "external_memory_properties",
          ty: Named("VkExternalMemoryProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceIDProperties",
      name: "PhysicalDeviceIdProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceUUID",
          name: "device_uuid",
          ty: Array(Native(UInt(1)), Constant("VK_UUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverUUID",
          name: "driver_uuid",
          ty: Array(Native(UInt(1)), Constant("VK_UUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceLUID",
          name: "device_luid",
          ty: Array(Native(UInt(1)), Constant("VK_LUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceNodeMask",
          name: "device_node_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceLUIDValid",
          name: "device_luid_valid",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExternalMemoryImageCreateInfo",
      name: "ExternalMemoryImageCreateInfo",
      extends: [
        "VkImageCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleTypes",
          name: "handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExternalMemoryBufferCreateInfo",
      name: "ExternalMemoryBufferCreateInfo",
      extends: [
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleTypes",
          name: "handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExportMemoryAllocateInfo",
      name: "ExportMemoryAllocateInfo",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleTypes",
          name: "handle_types",
          ty: Named("VkExternalMemoryHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkImportMemoryWin32HandleInfoKHR",
      name: "ImportMemoryWin32HandleInfoKHR",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handle",
          name: "handle",
          ty: Named("HANDLE"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Named("LPCWSTR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
      extended: [],
    ),
    Struct(
      original_name: "VkExportMemoryWin32HandleInfoKHR",
      name: "ExportMemoryWin32HandleInfoKHR",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttributes",
          name: "attributes",
          ty: Pointer(Const, Named("SECURITY_ATTRIBUTES")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dwAccess",
          name: "dw_access",
          ty: Named("DWORD"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Named("LPCWSTR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportMemoryZirconHandleInfoFUCHSIA",
      name: "ImportMemoryZirconHandleInfoFUCHSIA",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handle",
          name: "handle",
          ty: Named("zx_handle_t"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_external_memory", 365, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryZirconHandlePropertiesFUCHSIA",
      name: "MemoryZirconHandlePropertiesFUCHSIA",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypeBits",
          name: "memory_type_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_external_memory", 365, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryGetZirconHandleInfoFUCHSIA",
      name: "MemoryGetZirconHandleInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_external_memory", 365, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryWin32HandlePropertiesKHR",
      name: "MemoryWin32HandlePropertiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypeBits",
          name: "memory_type_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryGetWin32HandleInfoKHR",
      name: "MemoryGetWin32HandleInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportMemoryFdInfoKHR",
      name: "ImportMemoryFdInfoKHR",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fd",
          name: "fd",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_memory_fd", 75, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryFdPropertiesKHR",
      name: "MemoryFdPropertiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypeBits",
          name: "memory_type_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_memory_fd", 75, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryGetFdInfoKHR",
      name: "MemoryGetFdInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_memory_fd", 75, false),
      extended: [],
    ),
    Struct(
      original_name: "VkWin32KeyedMutexAcquireReleaseInfoKHR",
      name: "Win32KeyedMutexAcquireReleaseInfoKHR",
      extends: [
        "VkSubmitInfo",
        "VkSubmitInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "acquireCount",
          name: "acquire_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAcquireSyncs",
          name: "acquire_syncs",
          ty: Slice(Const, Named("VkDeviceMemory"), Variable("acquireCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAcquireKeys",
          name: "acquire_keys",
          ty: Slice(Const, Native(UInt(8)), Variable("acquireCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAcquireTimeouts",
          name: "acquire_timeouts",
          ty: Slice(Const, Native(UInt(4)), Variable("acquireCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "releaseCount",
          name: "release_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReleaseSyncs",
          name: "release_syncs",
          ty: Slice(Const, Named("VkDeviceMemory"), Variable("releaseCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReleaseKeys",
          name: "release_keys",
          ty: Slice(Const, Native(UInt(8)), Variable("releaseCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_win32_keyed_mutex", 76, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExternalSemaphoreInfo",
      name: "PhysicalDeviceExternalSemaphoreInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalSemaphoreHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkSemaphoreTypeCreateInfo",
      ],
    ),
    Struct(
      original_name: "VkExternalSemaphoreProperties",
      name: "ExternalSemaphoreProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "exportFromImportedHandleTypes",
          name: "export_from_imported_handle_types",
          ty: Named("VkExternalSemaphoreHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compatibleHandleTypes",
          name: "compatible_handle_types",
          ty: Named("VkExternalSemaphoreHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "externalSemaphoreFeatures",
          name: "external_semaphore_features",
          ty: Named("VkExternalSemaphoreFeatureFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExportSemaphoreCreateInfo",
      name: "ExportSemaphoreCreateInfo",
      extends: [
        "VkSemaphoreCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleTypes",
          name: "handle_types",
          ty: Named("VkExternalSemaphoreHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkImportSemaphoreWin32HandleInfoKHR",
      name: "ImportSemaphoreWin32HandleInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSemaphoreImportFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalSemaphoreHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "handle",
          name: "handle",
          ty: Named("HANDLE"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Named("LPCWSTR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
      extended: [],
    ),
    Struct(
      original_name: "VkExportSemaphoreWin32HandleInfoKHR",
      name: "ExportSemaphoreWin32HandleInfoKHR",
      extends: [
        "VkSemaphoreCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttributes",
          name: "attributes",
          ty: Pointer(Const, Named("SECURITY_ATTRIBUTES")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dwAccess",
          name: "dw_access",
          ty: Named("DWORD"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Named("LPCWSTR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
      extended: [],
    ),
    Struct(
      original_name: "VkD3D12FenceSubmitInfoKHR",
      name: "D3d12FenceSubmitInfoKHR",
      extends: [
        "VkSubmitInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "waitSemaphoreValuesCount",
          name: "wait_semaphore_values_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pWaitSemaphoreValues",
          name: "wait_semaphore_values",
          ty: Slice(Const, Native(UInt(8)), Variable("waitSemaphoreValuesCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "signalSemaphoreValuesCount",
          name: "signal_semaphore_values_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSignalSemaphoreValues",
          name: "signal_semaphore_values",
          ty: Slice(Const, Native(UInt(8)), Variable("signalSemaphoreValuesCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSemaphoreGetWin32HandleInfoKHR",
      name: "SemaphoreGetWin32HandleInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalSemaphoreHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportSemaphoreFdInfoKHR",
      name: "ImportSemaphoreFdInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSemaphoreImportFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalSemaphoreHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fd",
          name: "fd",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSemaphoreGetFdInfoKHR",
      name: "SemaphoreGetFdInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalSemaphoreHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportSemaphoreZirconHandleInfoFUCHSIA",
      name: "ImportSemaphoreZirconHandleInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSemaphoreImportFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalSemaphoreHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "zirconHandle",
          name: "zircon_handle",
          ty: Named("zx_handle_t"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSemaphoreGetZirconHandleInfoFUCHSIA",
      name: "SemaphoreGetZirconHandleInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalSemaphoreHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExternalFenceInfo",
      name: "PhysicalDeviceExternalFenceInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalFenceHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExternalFenceProperties",
      name: "ExternalFenceProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "exportFromImportedHandleTypes",
          name: "export_from_imported_handle_types",
          ty: Named("VkExternalFenceHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compatibleHandleTypes",
          name: "compatible_handle_types",
          ty: Named("VkExternalFenceHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "externalFenceFeatures",
          name: "external_fence_features",
          ty: Named("VkExternalFenceFeatureFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkExportFenceCreateInfo",
      name: "ExportFenceCreateInfo",
      extends: [
        "VkFenceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleTypes",
          name: "handle_types",
          ty: Named("VkExternalFenceHandleTypeFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkImportFenceWin32HandleInfoKHR",
      name: "ImportFenceWin32HandleInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fence",
          name: "fence",
          ty: Named("VkFence"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkFenceImportFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalFenceHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "handle",
          name: "handle",
          ty: Named("HANDLE"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Named("LPCWSTR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_fence_win32", 115, false),
      extended: [],
    ),
    Struct(
      original_name: "VkExportFenceWin32HandleInfoKHR",
      name: "ExportFenceWin32HandleInfoKHR",
      extends: [
        "VkFenceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttributes",
          name: "attributes",
          ty: Pointer(Const, Named("SECURITY_ATTRIBUTES")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dwAccess",
          name: "dw_access",
          ty: Named("DWORD"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Named("LPCWSTR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_fence_win32", 115, false),
      extended: [],
    ),
    Struct(
      original_name: "VkFenceGetWin32HandleInfoKHR",
      name: "FenceGetWin32HandleInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fence",
          name: "fence",
          ty: Named("VkFence"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalFenceHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_fence_win32", 115, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportFenceFdInfoKHR",
      name: "ImportFenceFdInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fence",
          name: "fence",
          ty: Named("VkFence"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkFenceImportFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalFenceHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fd",
          name: "fd",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_fence_fd", 116, false),
      extended: [],
    ),
    Struct(
      original_name: "VkFenceGetFdInfoKHR",
      name: "FenceGetFdInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fence",
          name: "fence",
          ty: Named("VkFence"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalFenceHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_external_fence_fd", 116, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMultiviewFeatures",
      name: "PhysicalDeviceMultiviewFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multiview",
          name: "multiview",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multiviewGeometryShader",
          name: "multiview_geometry_shader",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multiviewTessellationShader",
          name: "multiview_tessellation_shader",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMultiviewProperties",
      name: "PhysicalDeviceMultiviewProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMultiviewViewCount",
          name: "max_multiview_view_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMultiviewInstanceIndex",
          name: "max_multiview_instance_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkRenderPassMultiviewCreateInfo",
      name: "RenderPassMultiviewCreateInfo",
      extends: [
        "VkRenderPassCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subpassCount",
          name: "subpass_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pViewMasks",
          name: "view_masks",
          ty: Slice(Const, Native(UInt(4)), Variable("subpassCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dependencyCount",
          name: "dependency_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pViewOffsets",
          name: "view_offsets",
          ty: Slice(Const, Native(Int(4)), Variable("dependencyCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "correlationMaskCount",
          name: "correlation_mask_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCorrelationMasks",
          name: "correlation_masks",
          ty: Slice(Const, Native(UInt(4)), Variable("correlationMaskCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkSurfaceCapabilities2EXT",
      name: "SurfaceCapabilities2EXT",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minImageCount",
          name: "min_image_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageCount",
          name: "max_image_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "currentExtent",
          name: "current_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minImageExtent",
          name: "min_image_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageExtent",
          name: "max_image_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxImageArrayLayers",
          name: "max_image_array_layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedTransforms",
          name: "supported_transforms",
          ty: Named("VkSurfaceTransformFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "currentTransform",
          name: "current_transform",
          ty: Named("VkSurfaceTransformFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedCompositeAlpha",
          name: "supported_composite_alpha",
          ty: Named("VkCompositeAlphaFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedUsageFlags",
          name: "supported_usage_flags",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedSurfaceCounters",
          name: "supported_surface_counters",
          ty: Named("VkSurfaceCounterFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_display_surface_counter", 91, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayPowerInfoEXT",
      name: "DisplayPowerInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "powerState",
          name: "power_state",
          ty: Named("VkDisplayPowerStateEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_display_control", 92, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceEventInfoEXT",
      name: "DeviceEventInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceEvent",
          name: "device_event",
          ty: Named("VkDeviceEventTypeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_display_control", 92, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayEventInfoEXT",
      name: "DisplayEventInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "displayEvent",
          name: "display_event",
          ty: Named("VkDisplayEventTypeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_display_control", 92, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSwapchainCounterCreateInfoEXT",
      name: "SwapchainCounterCreateInfoEXT",
      extends: [
        "VkSwapchainCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "surfaceCounters",
          name: "surface_counters",
          ty: Named("VkSurfaceCounterFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_display_control", 92, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceGroupProperties",
      name: "PhysicalDeviceGroupProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "physicalDeviceCount",
          name: "physical_device_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "physicalDevices",
          name: "physical_devices",
          ty: Array(Named("VkPhysicalDevice"), Constant("VK_MAX_DEVICE_GROUP_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subsetAllocation",
          name: "subset_allocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryAllocateFlagsInfo",
      name: "MemoryAllocateFlagsInfo",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkMemoryAllocateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceMask",
          name: "device_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkBindBufferMemoryInfo",
      name: "BindBufferMemoryInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryOffset",
          name: "memory_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkBindBufferMemoryDeviceGroupInfo",
      ],
    ),
    Struct(
      original_name: "VkBindBufferMemoryDeviceGroupInfo",
      name: "BindBufferMemoryDeviceGroupInfo",
      extends: [
        "VkBindBufferMemoryInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceIndexCount",
          name: "device_index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDeviceIndices",
          name: "device_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("deviceIndexCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkBindImageMemoryInfo",
      name: "BindImageMemoryInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "memoryOffset",
          name: "memory_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkBindImageMemoryDeviceGroupInfo",
        "VkBindImageMemorySwapchainInfoKHR",
        "VkBindImagePlaneMemoryInfo",
      ],
    ),
    Struct(
      original_name: "VkBindImageMemoryDeviceGroupInfo",
      name: "BindImageMemoryDeviceGroupInfo",
      extends: [
        "VkBindImageMemoryInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceIndexCount",
          name: "device_index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDeviceIndices",
          name: "device_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("deviceIndexCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "splitInstanceBindRegionCount",
          name: "split_instance_bind_region_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSplitInstanceBindRegions",
          name: "split_instance_bind_regions",
          ty: Slice(Const, Named("VkRect2D"), Variable("splitInstanceBindRegionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceGroupRenderPassBeginInfo",
      name: "DeviceGroupRenderPassBeginInfo",
      extends: [
        "VkRenderPassBeginInfo",
        "VkRenderingInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceMask",
          name: "device_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceRenderAreaCount",
          name: "device_render_area_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDeviceRenderAreas",
          name: "device_render_areas",
          ty: Slice(Const, Named("VkRect2D"), Variable("deviceRenderAreaCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceGroupCommandBufferBeginInfo",
      name: "DeviceGroupCommandBufferBeginInfo",
      extends: [
        "VkCommandBufferBeginInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceMask",
          name: "device_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceGroupSubmitInfo",
      name: "DeviceGroupSubmitInfo",
      extends: [
        "VkSubmitInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "waitSemaphoreCount",
          name: "wait_semaphore_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pWaitSemaphoreDeviceIndices",
          name: "wait_semaphore_device_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("waitSemaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "commandBufferCount",
          name: "command_buffer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCommandBufferDeviceMasks",
          name: "command_buffer_device_masks",
          ty: Slice(Const, Native(UInt(4)), Variable("commandBufferCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "signalSemaphoreCount",
          name: "signal_semaphore_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSignalSemaphoreDeviceIndices",
          name: "signal_semaphore_device_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("signalSemaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceGroupBindSparseInfo",
      name: "DeviceGroupBindSparseInfo",
      extends: [
        "VkBindSparseInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "resourceDeviceIndex",
          name: "resource_device_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryDeviceIndex",
          name: "memory_device_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceGroupPresentCapabilitiesKHR",
      name: "DeviceGroupPresentCapabilitiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "presentMask",
          name: "present_mask",
          ty: Array(Native(UInt(4)), Constant("VK_MAX_DEVICE_GROUP_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "modes",
          name: "modes",
          ty: Named("VkDeviceGroupPresentModeFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_device_group", 61, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageSwapchainCreateInfoKHR",
      name: "ImageSwapchainCreateInfoKHR",
      extends: [
        "VkImageCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "swapchain",
          name: "swapchain",
          ty: Named("VkSwapchainKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_device_group", 61, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBindImageMemorySwapchainInfoKHR",
      name: "BindImageMemorySwapchainInfoKHR",
      extends: [
        "VkBindImageMemoryInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "swapchain",
          name: "swapchain",
          ty: Named("VkSwapchainKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageIndex",
          name: "image_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_device_group", 61, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAcquireNextImageInfoKHR",
      name: "AcquireNextImageInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "swapchain",
          name: "swapchain",
          ty: Named("VkSwapchainKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "timeout",
          name: "timeout",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fence",
          name: "fence",
          ty: Named("VkFence"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceMask",
          name: "device_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_device_group", 61, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceGroupPresentInfoKHR",
      name: "DeviceGroupPresentInfoKHR",
      extends: [
        "VkPresentInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "swapchainCount",
          name: "swapchain_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDeviceMasks",
          name: "device_masks",
          ty: Slice(Const, Native(UInt(4)), Variable("swapchainCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mode",
          name: "mode",
          ty: Named("VkDeviceGroupPresentModeFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_device_group", 61, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceGroupDeviceCreateInfo",
      name: "DeviceGroupDeviceCreateInfo",
      extends: [
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "physicalDeviceCount",
          name: "physical_device_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPhysicalDevices",
          name: "physical_devices",
          ty: Slice(Const, Named("VkPhysicalDevice"), Variable("physicalDeviceCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceGroupSwapchainCreateInfoKHR",
      name: "DeviceGroupSwapchainCreateInfoKHR",
      extends: [
        "VkSwapchainCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "modes",
          name: "modes",
          ty: Named("VkDeviceGroupPresentModeFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_device_group", 61, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorUpdateTemplateEntry",
      name: "DescriptorUpdateTemplateEntry",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "dstBinding",
          name: "dst_binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstArrayElement",
          name: "dst_array_element",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorCount",
          name: "descriptor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorType",
          name: "descriptor_type",
          ty: Named("VkDescriptorType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stride",
          name: "stride",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorUpdateTemplateCreateInfo",
      name: "DescriptorUpdateTemplateCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDescriptorUpdateTemplateCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorUpdateEntryCount",
          name: "descriptor_update_entry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDescriptorUpdateEntries",
          name: "descriptor_update_entries",
          ty: Slice(Const, Named("VkDescriptorUpdateTemplateEntry"), Variable("descriptorUpdateEntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "templateType",
          name: "template_type",
          ty: Named("VkDescriptorUpdateTemplateType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorSetLayout",
          name: "descriptor_set_layout",
          ty: Named("VkDescriptorSetLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pipelineBindPoint",
          name: "pipeline_bind_point",
          ty: Named("VkPipelineBindPoint"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pipelineLayout",
          name: "pipeline_layout",
          ty: Named("VkPipelineLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "set",
          name: "set",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkXYColorEXT",
      name: "XyColorEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "x",
          name: "x",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "y",
          name: "y",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_hdr_metadata", 106, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePresentIdFeaturesKHR",
      name: "PhysicalDevicePresentIdFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "presentId",
          name: "present_id",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_present_id", 295, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPresentIdKHR",
      name: "PresentIdKHR",
      extends: [
        "VkPresentInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PRESENT_ID_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "swapchainCount",
          name: "swapchain_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPresentIds",
          name: "present_ids",
          ty: Slice(Const, Native(UInt(8)), Variable("swapchainCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_present_id", 295, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePresentWaitFeaturesKHR",
      name: "PhysicalDevicePresentWaitFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "presentWait",
          name: "present_wait",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_present_wait", 249, false),
      extended: [],
    ),
    Struct(
      original_name: "VkHdrMetadataEXT",
      name: "HdrMetadataEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_HDR_METADATA_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "displayPrimaryRed",
          name: "display_primary_red",
          ty: Named("VkXYColorEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "displayPrimaryGreen",
          name: "display_primary_green",
          ty: Named("VkXYColorEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "displayPrimaryBlue",
          name: "display_primary_blue",
          ty: Named("VkXYColorEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "whitePoint",
          name: "white_point",
          ty: Named("VkXYColorEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "maxLuminance",
          name: "max_luminance",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "minLuminance",
          name: "min_luminance",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "maxContentLightLevel",
          name: "max_content_light_level",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "maxFrameAverageLightLevel",
          name: "max_frame_average_light_level",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_hdr_metadata", 106, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayNativeHdrSurfaceCapabilitiesAMD",
      name: "DisplayNativeHdrSurfaceCapabilitiesAMD",
      extends: [
        "VkSurfaceCapabilities2KHR",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "localDimmingSupport",
          name: "local_dimming_support",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_display_native_hdr", 214, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSwapchainDisplayNativeHdrCreateInfoAMD",
      name: "SwapchainDisplayNativeHdrCreateInfoAMD",
      extends: [
        "VkSwapchainCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "localDimmingEnable",
          name: "local_dimming_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_display_native_hdr", 214, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRefreshCycleDurationGOOGLE",
      name: "RefreshCycleDurationGOOGLE",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "refreshDuration",
          name: "refresh_duration",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPastPresentationTimingGOOGLE",
      name: "PastPresentationTimingGOOGLE",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "presentID",
          name: "present_id",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "desiredPresentTime",
          name: "desired_present_time",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "actualPresentTime",
          name: "actual_present_time",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "earliestPresentTime",
          name: "earliest_present_time",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "presentMargin",
          name: "present_margin",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPresentTimesInfoGOOGLE",
      name: "PresentTimesInfoGOOGLE",
      extends: [
        "VkPresentInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "swapchainCount",
          name: "swapchain_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pTimes",
          name: "times",
          ty: Slice(Const, Named("VkPresentTimeGOOGLE"), Variable("swapchainCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPresentTimeGOOGLE",
      name: "PresentTimeGOOGLE",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "presentID",
          name: "present_id",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "desiredPresentTime",
          name: "desired_present_time",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
      extended: [],
    ),
    Struct(
      original_name: "VkIOSSurfaceCreateInfoMVK",
      name: "IosSurfaceCreateInfoMVK",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkIOSSurfaceCreateFlagsMVK"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pView",
          name: "view",
          ty: Pointer(Const, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_MVK_ios_surface", 123, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMacOSSurfaceCreateInfoMVK",
      name: "MacOsSurfaceCreateInfoMVK",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkMacOSSurfaceCreateFlagsMVK"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pView",
          name: "view",
          ty: Pointer(Const, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_MVK_macos_surface", 124, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMetalSurfaceCreateInfoEXT",
      name: "MetalSurfaceCreateInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkMetalSurfaceCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pLayer",
          name: "layer",
          ty: Pointer(Const, Named("CAMetalLayer")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_metal_surface", 218, false),
      extended: [],
    ),
    Struct(
      original_name: "VkViewportWScalingNV",
      name: "ViewportWScalingNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "xcoeff",
          name: "xcoeff",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ycoeff",
          name: "ycoeff",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_clip_space_w_scaling", 88, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineViewportWScalingStateCreateInfoNV",
      name: "PipelineViewportWScalingStateCreateInfoNV",
      extends: [
        "VkPipelineViewportStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportWScalingEnable",
          name: "viewport_w_scaling_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportCount",
          name: "viewport_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pViewportWScalings",
          name: "viewport_w_scalings",
          ty: Slice(Const, Named("VkViewportWScalingNV"), Variable("viewportCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_clip_space_w_scaling", 88, false),
      extended: [],
    ),
    Struct(
      original_name: "VkViewportSwizzleNV",
      name: "ViewportSwizzleNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "x",
          name: "x",
          ty: Named("VkViewportCoordinateSwizzleNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "y",
          name: "y",
          ty: Named("VkViewportCoordinateSwizzleNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "z",
          name: "z",
          ty: Named("VkViewportCoordinateSwizzleNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "w",
          name: "w",
          ty: Named("VkViewportCoordinateSwizzleNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_viewport_swizzle", 99, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineViewportSwizzleStateCreateInfoNV",
      name: "PipelineViewportSwizzleStateCreateInfoNV",
      extends: [
        "VkPipelineViewportStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineViewportSwizzleStateCreateFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportCount",
          name: "viewport_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pViewportSwizzles",
          name: "viewport_swizzles",
          ty: Slice(Const, Named("VkViewportSwizzleNV"), Variable("viewportCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_viewport_swizzle", 99, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDiscardRectanglePropertiesEXT",
      name: "PhysicalDeviceDiscardRectanglePropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDiscardRectangles",
          name: "max_discard_rectangles",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_discard_rectangles", 100, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineDiscardRectangleStateCreateInfoEXT",
      name: "PipelineDiscardRectangleStateCreateInfoEXT",
      extends: [
        "VkGraphicsPipelineCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineDiscardRectangleStateCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "discardRectangleMode",
          name: "discard_rectangle_mode",
          ty: Named("VkDiscardRectangleModeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "discardRectangleCount",
          name: "discard_rectangle_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDiscardRectangles",
          name: "discard_rectangles",
          ty: Slice(Const, Named("VkRect2D"), Variable("discardRectangleCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_discard_rectangles", 100, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMultiviewPerViewAttributesPropertiesNVX",
      name: "PhysicalDeviceMultiviewPerViewAttributesPropertiesNVX",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "perViewPositionAllComponents",
          name: "per_view_position_all_components",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NVX_multiview_per_view_attributes", 98, false),
      extended: [],
    ),
    Struct(
      original_name: "VkInputAttachmentAspectReference",
      name: "InputAttachmentAspectReference",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "subpass",
          name: "subpass",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inputAttachmentIndex",
          name: "input_attachment_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "aspectMask",
          name: "aspect_mask",
          ty: Named("VkImageAspectFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkRenderPassInputAttachmentAspectCreateInfo",
      name: "RenderPassInputAttachmentAspectCreateInfo",
      extends: [
        "VkRenderPassCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "aspectReferenceCount",
          name: "aspect_reference_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAspectReferences",
          name: "aspect_references",
          ty: Slice(Const, Named("VkInputAttachmentAspectReference"), Variable("aspectReferenceCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSurfaceInfo2KHR",
      name: "PhysicalDeviceSurfaceInfo2KHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "surface",
          name: "surface",
          ty: Named("VkSurfaceKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
      extended: [
        "VkSurfaceFullScreenExclusiveInfoEXT",
        "VkSurfaceFullScreenExclusiveWin32InfoEXT",
      ],
    ),
    Struct(
      original_name: "VkSurfaceCapabilities2KHR",
      name: "SurfaceCapabilities2KHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "surfaceCapabilities",
          name: "surface_capabilities",
          ty: Named("VkSurfaceCapabilitiesKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
      extended: [
        "VkDisplayNativeHdrSurfaceCapabilitiesAMD",
        "VkSharedPresentSurfaceCapabilitiesKHR",
        "VkSurfaceProtectedCapabilitiesKHR",
        "VkSurfaceCapabilitiesFullScreenExclusiveEXT",
      ],
    ),
    Struct(
      original_name: "VkSurfaceFormat2KHR",
      name: "SurfaceFormat2KHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "surfaceFormat",
          name: "surface_format",
          ty: Named("VkSurfaceFormatKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayProperties2KHR",
      name: "DisplayProperties2KHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "displayProperties",
          name: "display_properties",
          ty: Named("VkDisplayPropertiesKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayPlaneProperties2KHR",
      name: "DisplayPlaneProperties2KHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "displayPlaneProperties",
          name: "display_plane_properties",
          ty: Named("VkDisplayPlanePropertiesKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayModeProperties2KHR",
      name: "DisplayModeProperties2KHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "displayModeProperties",
          name: "display_mode_properties",
          ty: Named("VkDisplayModePropertiesKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayPlaneInfo2KHR",
      name: "DisplayPlaneInfo2KHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mode",
          name: "mode",
          ty: Named("VkDisplayModeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: Yes,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "planeIndex",
          name: "plane_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDisplayPlaneCapabilities2KHR",
      name: "DisplayPlaneCapabilities2KHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "capabilities",
          name: "capabilities",
          ty: Named("VkDisplayPlaneCapabilitiesKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSharedPresentSurfaceCapabilitiesKHR",
      name: "SharedPresentSurfaceCapabilitiesKHR",
      extends: [
        "VkSurfaceCapabilities2KHR",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sharedPresentSupportedUsageFlags",
          name: "shared_present_supported_usage_flags",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_shared_presentable_image", 112, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevice16BitStorageFeatures",
      name: "PhysicalDevice16BitStorageFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageBuffer16BitAccess",
          name: "storage_buffer16_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformAndStorageBuffer16BitAccess",
          name: "uniform_and_storage_buffer16_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storagePushConstant16",
          name: "storage_push_constant16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageInputOutput16",
          name: "storage_input_output16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSubgroupProperties",
      name: "PhysicalDeviceSubgroupProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subgroupSize",
          name: "subgroup_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "supportedStages",
          name: "supported_stages",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "supportedOperations",
          name: "supported_operations",
          ty: Named("VkSubgroupFeatureFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "quadOperationsInAllStages",
          name: "quad_operations_in_all_stages",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderSubgroupExtendedTypesFeatures",
      name: "PhysicalDeviceShaderSubgroupExtendedTypesFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSubgroupExtendedTypes",
          name: "shader_subgroup_extended_types",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkBufferMemoryRequirementsInfo2",
      name: "BufferMemoryRequirementsInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceBufferMemoryRequirements",
      name: "DeviceBufferMemoryRequirements",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCreateInfo",
          name: "create_info",
          ty: Pointer(Const, Named("VkBufferCreateInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkImageMemoryRequirementsInfo2",
      name: "ImageMemoryRequirementsInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkImagePlaneMemoryRequirementsInfo",
      ],
    ),
    Struct(
      original_name: "VkImageSparseMemoryRequirementsInfo2",
      name: "ImageSparseMemoryRequirementsInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceImageMemoryRequirements",
      name: "DeviceImageMemoryRequirements",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCreateInfo",
          name: "create_info",
          ty: Pointer(Const, Named("VkImageCreateInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "planeAspect",
          name: "plane_aspect",
          ty: Named("VkImageAspectFlagBits"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryRequirements2",
      name: "MemoryRequirements2",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryRequirements",
          name: "memory_requirements",
          ty: Named("VkMemoryRequirements"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkMemoryDedicatedRequirements",
      ],
    ),
    Struct(
      original_name: "VkSparseImageMemoryRequirements2",
      name: "SparseImageMemoryRequirements2",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryRequirements",
          name: "memory_requirements",
          ty: Named("VkSparseImageMemoryRequirements"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePointClippingProperties",
      name: "PhysicalDevicePointClippingProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pointClippingBehavior",
          name: "point_clipping_behavior",
          ty: Named("VkPointClippingBehavior"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryDedicatedRequirements",
      name: "MemoryDedicatedRequirements",
      extends: [
        "VkMemoryRequirements2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "prefersDedicatedAllocation",
          name: "prefers_dedicated_allocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "requiresDedicatedAllocation",
          name: "requires_dedicated_allocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryDedicatedAllocateInfo",
      name: "MemoryDedicatedAllocateInfo",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkImageViewUsageCreateInfo",
      name: "ImageViewUsageCreateInfo",
      extends: [
        "VkImageViewCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineTessellationDomainOriginStateCreateInfo",
      name: "PipelineTessellationDomainOriginStateCreateInfo",
      extends: [
        "VkPipelineTessellationStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "domainOrigin",
          name: "domain_origin",
          ty: Named("VkTessellationDomainOrigin"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkSamplerYcbcrConversionInfo",
      name: "SamplerYcbcrConversionInfo",
      extends: [
        "VkSamplerCreateInfo",
        "VkImageViewCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "conversion",
          name: "conversion",
          ty: Named("VkSamplerYcbcrConversion"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkSamplerYcbcrConversionCreateInfo",
      name: "SamplerYcbcrConversionCreateInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ycbcrModel",
          name: "ycbcr_model",
          ty: Named("VkSamplerYcbcrModelConversion"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ycbcrRange",
          name: "ycbcr_range",
          ty: Named("VkSamplerYcbcrRange"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "components",
          name: "components",
          ty: Named("VkComponentMapping"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "xChromaOffset",
          name: "x_chroma_offset",
          ty: Named("VkChromaLocation"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "yChromaOffset",
          name: "y_chroma_offset",
          ty: Named("VkChromaLocation"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "chromaFilter",
          name: "chroma_filter",
          ty: Named("VkFilter"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "forceExplicitReconstruction",
          name: "force_explicit_reconstruction",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkExternalFormatANDROID",
      ],
    ),
    Struct(
      original_name: "VkBindImagePlaneMemoryInfo",
      name: "BindImagePlaneMemoryInfo",
      extends: [
        "VkBindImageMemoryInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "planeAspect",
          name: "plane_aspect",
          ty: Named("VkImageAspectFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkImagePlaneMemoryRequirementsInfo",
      name: "ImagePlaneMemoryRequirementsInfo",
      extends: [
        "VkImageMemoryRequirementsInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "planeAspect",
          name: "plane_aspect",
          ty: Named("VkImageAspectFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSamplerYcbcrConversionFeatures",
      name: "PhysicalDeviceSamplerYcbcrConversionFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerYcbcrConversion",
          name: "sampler_ycbcr_conversion",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkSamplerYcbcrConversionImageFormatProperties",
      name: "SamplerYcbcrConversionImageFormatProperties",
      extends: [
        "VkImageFormatProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "combinedImageSamplerDescriptorCount",
          name: "combined_image_sampler_descriptor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkTextureLODGatherFormatPropertiesAMD",
      name: "TextureLodGatherFormatPropertiesAMD",
      extends: [
        "VkImageFormatProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportsTextureGatherLODBiasAMD",
          name: "supports_texture_gather_lod_bias_amd",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_texture_gather_bias_lod", 42, false),
      extended: [],
    ),
    Struct(
      original_name: "VkConditionalRenderingBeginInfoEXT",
      name: "ConditionalRenderingBeginInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkConditionalRenderingFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_conditional_rendering", 82, false),
      extended: [],
    ),
    Struct(
      original_name: "VkProtectedSubmitInfo",
      name: "ProtectedSubmitInfo",
      extends: [
        "VkSubmitInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "protectedSubmit",
          name: "protected_submit",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceProtectedMemoryFeatures",
      name: "PhysicalDeviceProtectedMemoryFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "protectedMemory",
          name: "protected_memory",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceProtectedMemoryProperties",
      name: "PhysicalDeviceProtectedMemoryProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "protectedNoFault",
          name: "protected_no_fault",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceQueueInfo2",
      name: "DeviceQueueInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDeviceQueueCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueIndex",
          name: "queue_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineCoverageToColorStateCreateInfoNV",
      name: "PipelineCoverageToColorStateCreateInfoNV",
      extends: [
        "VkPipelineMultisampleStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCoverageToColorStateCreateFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "coverageToColorEnable",
          name: "coverage_to_color_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "coverageToColorLocation",
          name: "coverage_to_color_location",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_fragment_coverage_to_color", 150, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSamplerFilterMinmaxProperties",
      name: "PhysicalDeviceSamplerFilterMinmaxProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "filterMinmaxSingleComponentFormats",
          name: "filter_minmax_single_component_formats",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "filterMinmaxImageComponentMapping",
          name: "filter_minmax_image_component_mapping",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkSampleLocationEXT",
      name: "SampleLocationEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "x",
          name: "x",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "y",
          name: "y",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_sample_locations", 144, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSampleLocationsInfoEXT",
      name: "SampleLocationsInfoEXT",
      extends: [
        "VkImageMemoryBarrier",
        "VkImageMemoryBarrier2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationsPerPixel",
          name: "sample_locations_per_pixel",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "sampleLocationGridSize",
          name: "sample_location_grid_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationsCount",
          name: "sample_locations_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSampleLocations",
          name: "sample_locations",
          ty: Slice(Const, Named("VkSampleLocationEXT"), Variable("sampleLocationsCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_sample_locations", 144, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAttachmentSampleLocationsEXT",
      name: "AttachmentSampleLocationsEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "attachmentIndex",
          name: "attachment_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationsInfo",
          name: "sample_locations_info",
          ty: Named("VkSampleLocationsInfoEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_sample_locations", 144, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSubpassSampleLocationsEXT",
      name: "SubpassSampleLocationsEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "subpassIndex",
          name: "subpass_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationsInfo",
          name: "sample_locations_info",
          ty: Named("VkSampleLocationsInfoEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_sample_locations", 144, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRenderPassSampleLocationsBeginInfoEXT",
      name: "RenderPassSampleLocationsBeginInfoEXT",
      extends: [
        "VkRenderPassBeginInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachmentInitialSampleLocationsCount",
          name: "attachment_initial_sample_locations_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttachmentInitialSampleLocations",
          name: "attachment_initial_sample_locations",
          ty: Slice(Const, Named("VkAttachmentSampleLocationsEXT"), Variable("attachmentInitialSampleLocationsCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "postSubpassSampleLocationsCount",
          name: "post_subpass_sample_locations_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPostSubpassSampleLocations",
          name: "post_subpass_sample_locations",
          ty: Slice(Const, Named("VkSubpassSampleLocationsEXT"), Variable("postSubpassSampleLocationsCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_sample_locations", 144, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineSampleLocationsStateCreateInfoEXT",
      name: "PipelineSampleLocationsStateCreateInfoEXT",
      extends: [
        "VkPipelineMultisampleStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationsEnable",
          name: "sample_locations_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationsInfo",
          name: "sample_locations_info",
          ty: Named("VkSampleLocationsInfoEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_sample_locations", 144, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSampleLocationsPropertiesEXT",
      name: "PhysicalDeviceSampleLocationsPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationSampleCounts",
          name: "sample_location_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSampleLocationGridSize",
          name: "max_sample_location_grid_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationCoordinateRange",
          name: "sample_location_coordinate_range",
          ty: Array(Native(Float), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationSubPixelBits",
          name: "sample_location_sub_pixel_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "variableSampleLocations",
          name: "variable_sample_locations",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_sample_locations", 144, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMultisamplePropertiesEXT",
      name: "MultisamplePropertiesEXT",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSampleLocationGridSize",
          name: "max_sample_location_grid_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_sample_locations", 144, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSamplerReductionModeCreateInfo",
      name: "SamplerReductionModeCreateInfo",
      extends: [
        "VkSamplerCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "reductionMode",
          name: "reduction_mode",
          ty: Named("VkSamplerReductionMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceBlendOperationAdvancedFeaturesEXT",
      name: "PhysicalDeviceBlendOperationAdvancedFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "advancedBlendCoherentOperations",
          name: "advanced_blend_coherent_operations",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMultiDrawFeaturesEXT",
      name: "PhysicalDeviceMultiDrawFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "multiDraw",
          name: "multi_draw",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_multi_draw", 393, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceBlendOperationAdvancedPropertiesEXT",
      name: "PhysicalDeviceBlendOperationAdvancedPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "advancedBlendMaxColorAttachments",
          name: "advanced_blend_max_color_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "advancedBlendIndependentBlend",
          name: "advanced_blend_independent_blend",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "advancedBlendNonPremultipliedSrcColor",
          name: "advanced_blend_non_premultiplied_src_color",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "advancedBlendNonPremultipliedDstColor",
          name: "advanced_blend_non_premultiplied_dst_color",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "advancedBlendCorrelatedOverlap",
          name: "advanced_blend_correlated_overlap",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "advancedBlendAllOperations",
          name: "advanced_blend_all_operations",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineColorBlendAdvancedStateCreateInfoEXT",
      name: "PipelineColorBlendAdvancedStateCreateInfoEXT",
      extends: [
        "VkPipelineColorBlendStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcPremultiplied",
          name: "src_premultiplied",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstPremultiplied",
          name: "dst_premultiplied",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "blendOverlap",
          name: "blend_overlap",
          ty: Named("VkBlendOverlapEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceInlineUniformBlockFeatures",
      name: "PhysicalDeviceInlineUniformBlockFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inlineUniformBlock",
          name: "inline_uniform_block",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingInlineUniformBlockUpdateAfterBind",
          name: "descriptor_binding_inline_uniform_block_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceInlineUniformBlockProperties",
      name: "PhysicalDeviceInlineUniformBlockProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxInlineUniformBlockSize",
          name: "max_inline_uniform_block_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorInlineUniformBlocks",
          name: "max_per_stage_descriptor_inline_uniform_blocks",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks",
          name: "max_per_stage_descriptor_update_after_bind_inline_uniform_blocks",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetInlineUniformBlocks",
          name: "max_descriptor_set_inline_uniform_blocks",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindInlineUniformBlocks",
          name: "max_descriptor_set_update_after_bind_inline_uniform_blocks",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkWriteDescriptorSetInlineUniformBlock",
      name: "WriteDescriptorSetInlineUniformBlock",
      extends: [
        "VkWriteDescriptorSet",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dataSize",
          name: "data_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pData",
          name: "data",
          ty: Slice(Const, Native(Void), Variable("dataSize")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorPoolInlineUniformBlockCreateInfo",
      name: "DescriptorPoolInlineUniformBlockCreateInfo",
      extends: [
        "VkDescriptorPoolCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxInlineUniformBlockBindings",
          name: "max_inline_uniform_block_bindings",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineCoverageModulationStateCreateInfoNV",
      name: "PipelineCoverageModulationStateCreateInfoNV",
      extends: [
        "VkPipelineMultisampleStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCoverageModulationStateCreateFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "coverageModulationMode",
          name: "coverage_modulation_mode",
          ty: Named("VkCoverageModulationModeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "coverageModulationTableEnable",
          name: "coverage_modulation_table_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "coverageModulationTableCount",
          name: "coverage_modulation_table_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCoverageModulationTable",
          name: "coverage_modulation_table",
          ty: Slice(Const, Native(Float), Variable("coverageModulationTableCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageFormatListCreateInfo",
      name: "ImageFormatListCreateInfo",
      extends: [
        "VkImageCreateInfo",
        "VkSwapchainCreateInfoKHR",
        "VkPhysicalDeviceImageFormatInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewFormatCount",
          name: "view_format_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pViewFormats",
          name: "view_formats",
          ty: Slice(Const, Named("VkFormat"), Variable("viewFormatCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkValidationCacheCreateInfoEXT",
      name: "ValidationCacheCreateInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkValidationCacheCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "initialDataSize",
          name: "initial_data_size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pInitialData",
          name: "initial_data",
          ty: Slice(Const, Native(Void), Variable("initialDataSize")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_validation_cache", 161, false),
      extended: [],
    ),
    Struct(
      original_name: "VkShaderModuleValidationCacheCreateInfoEXT",
      name: "ShaderModuleValidationCacheCreateInfoEXT",
      extends: [
        "VkShaderModuleCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "validationCache",
          name: "validation_cache",
          ty: Named("VkValidationCacheEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_validation_cache", 161, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMaintenance3Properties",
      name: "PhysicalDeviceMaintenance3Properties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerSetDescriptors",
          name: "max_per_set_descriptors",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMemoryAllocationSize",
          name: "max_memory_allocation_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMaintenance4Features",
      name: "PhysicalDeviceMaintenance4Features",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maintenance4",
          name: "maintenance4",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMaintenance4Properties",
      name: "PhysicalDeviceMaintenance4Properties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBufferSize",
          name: "max_buffer_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorSetLayoutSupport",
      name: "DescriptorSetLayoutSupport",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supported",
          name: "supported",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [
        "VkDescriptorSetVariableDescriptorCountLayoutSupport",
      ],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderDrawParametersFeatures",
      name: "PhysicalDeviceShaderDrawParametersFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDrawParameters",
          name: "shader_draw_parameters",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_1,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderFloat16Int8Features",
      name: "PhysicalDeviceShaderFloat16Int8Features",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderFloat16",
          name: "shader_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInt8",
          name: "shader_int8",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFloatControlsProperties",
      name: "PhysicalDeviceFloatControlsProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "denormBehaviorIndependence",
          name: "denorm_behavior_independence",
          ty: Named("VkShaderFloatControlsIndependence"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "roundingModeIndependence",
          name: "rounding_mode_independence",
          ty: Named("VkShaderFloatControlsIndependence"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSignedZeroInfNanPreserveFloat16",
          name: "shader_signed_zero_inf_nan_preserve_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSignedZeroInfNanPreserveFloat32",
          name: "shader_signed_zero_inf_nan_preserve_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSignedZeroInfNanPreserveFloat64",
          name: "shader_signed_zero_inf_nan_preserve_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormPreserveFloat16",
          name: "shader_denorm_preserve_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormPreserveFloat32",
          name: "shader_denorm_preserve_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormPreserveFloat64",
          name: "shader_denorm_preserve_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormFlushToZeroFloat16",
          name: "shader_denorm_flush_to_zero_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormFlushToZeroFloat32",
          name: "shader_denorm_flush_to_zero_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormFlushToZeroFloat64",
          name: "shader_denorm_flush_to_zero_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTEFloat16",
          name: "shader_rounding_mode_rte_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTEFloat32",
          name: "shader_rounding_mode_rte_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTEFloat64",
          name: "shader_rounding_mode_rte_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTZFloat16",
          name: "shader_rounding_mode_rtz_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTZFloat32",
          name: "shader_rounding_mode_rtz_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTZFloat64",
          name: "shader_rounding_mode_rtz_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceHostQueryResetFeatures",
      name: "PhysicalDeviceHostQueryResetFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "hostQueryReset",
          name: "host_query_reset",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkNativeBufferUsage2ANDROID",
      name: "NativeBufferUsage2ANDROID",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "consumer",
          name: "consumer",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "producer",
          name: "producer",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      extended: [],
    ),
    Struct(
      original_name: "VkNativeBufferANDROID",
      name: "NativeBufferANDROID",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handle",
          name: "handle",
          ty: Pointer(Const, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stride",
          name: "stride",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage2",
          name: "usage2",
          ty: Named("VkNativeBufferUsage2ANDROID"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      extended: [],
    ),
    Struct(
      original_name: "VkSwapchainImageCreateInfoANDROID",
      name: "SwapchainImageCreateInfoANDROID",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Named("VkSwapchainImageUsageFlagsANDROID"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePresentationPropertiesANDROID",
      name: "PhysicalDevicePresentationPropertiesANDROID",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sharedImage",
          name: "shared_image",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      extended: [],
    ),
    Struct(
      original_name: "VkShaderResourceUsageAMD",
      name: "ShaderResourceUsageAMD",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "numUsedVgprs",
          name: "num_used_vgprs",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "numUsedSgprs",
          name: "num_used_sgprs",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ldsSizePerLocalWorkGroup",
          name: "lds_size_per_local_work_group",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ldsUsageSizeInBytes",
          name: "lds_usage_size_in_bytes",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "scratchMemUsageInBytes",
          name: "scratch_mem_usage_in_bytes",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_shader_info", 43, false),
      extended: [],
    ),
    Struct(
      original_name: "VkShaderStatisticsInfoAMD",
      name: "ShaderStatisticsInfoAMD",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "shaderStageMask",
          name: "shader_stage_mask",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "resourceUsage",
          name: "resource_usage",
          ty: Named("VkShaderResourceUsageAMD"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "numPhysicalVgprs",
          name: "num_physical_vgprs",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "numPhysicalSgprs",
          name: "num_physical_sgprs",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "numAvailableVgprs",
          name: "num_available_vgprs",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "numAvailableSgprs",
          name: "num_available_sgprs",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "computeWorkGroupSize",
          name: "compute_work_group_size",
          ty: Array(Native(UInt(4)), ConstantInt(3)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_shader_info", 43, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceQueueGlobalPriorityCreateInfoKHR",
      name: "DeviceQueueGlobalPriorityCreateInfoKHR",
      extends: [
        "VkDeviceQueueCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "globalPriority",
          name: "global_priority",
          ty: Named("VkQueueGlobalPriorityKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_global_priority", 189, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceGlobalPriorityQueryFeaturesKHR",
      name: "PhysicalDeviceGlobalPriorityQueryFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "globalPriorityQuery",
          name: "global_priority_query",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_global_priority", 189, false),
      extended: [],
    ),
    Struct(
      original_name: "VkQueueFamilyGlobalPriorityPropertiesKHR",
      name: "QueueFamilyGlobalPriorityPropertiesKHR",
      extends: [
        "VkQueueFamilyProperties2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "priorityCount",
          name: "priority_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "priorities",
          name: "priorities",
          ty: Array(Named("VkQueueGlobalPriorityKHR"), Constant("VK_MAX_GLOBAL_PRIORITY_SIZE_KHR")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_global_priority", 189, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDebugUtilsObjectNameInfoEXT",
      name: "DebugUtilsObjectNameInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectType",
          name: "object_type",
          ty: Named("VkObjectType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectHandle",
          name: "object_handle",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pObjectName",
          name: "object_name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_utils", 129, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDebugUtilsObjectTagInfoEXT",
      name: "DebugUtilsObjectTagInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectType",
          name: "object_type",
          ty: Named("VkObjectType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectHandle",
          name: "object_handle",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tagName",
          name: "tag_name",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tagSize",
          name: "tag_size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pTag",
          name: "tag",
          ty: Slice(Const, Native(Void), Variable("tagSize")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_utils", 129, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDebugUtilsLabelEXT",
      name: "DebugUtilsLabelEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pLabelName",
          name: "label_name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "color",
          name: "color",
          ty: Array(Native(Float), ConstantInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_utils", 129, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDebugUtilsMessengerCreateInfoEXT",
      name: "DebugUtilsMessengerCreateInfoEXT",
      extends: [
        "VkInstanceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDebugUtilsMessengerCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "messageSeverity",
          name: "message_severity",
          ty: Named("VkDebugUtilsMessageSeverityFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "messageType",
          name: "message_type",
          ty: Named("VkDebugUtilsMessageTypeFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pfnUserCallback",
          name: "pfn_user_callback",
          ty: Named("PFN_vkDebugUtilsMessengerCallbackEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pUserData",
          name: "user_data",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_utils", 129, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDebugUtilsMessengerCallbackDataEXT",
      name: "DebugUtilsMessengerCallbackDataEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDebugUtilsMessengerCallbackDataFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMessageIdName",
          name: "message_id_name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "messageIdNumber",
          name: "message_id_number",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMessage",
          name: "message",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueLabelCount",
          name: "queue_label_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pQueueLabels",
          name: "queue_labels",
          ty: Slice(Const, Named("VkDebugUtilsLabelEXT"), Variable("queueLabelCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "cmdBufLabelCount",
          name: "cmd_buf_label_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCmdBufLabels",
          name: "cmd_buf_labels",
          ty: Slice(Const, Named("VkDebugUtilsLabelEXT"), Variable("cmdBufLabelCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectCount",
          name: "object_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pObjects",
          name: "objects",
          ty: Slice(Const, Named("VkDebugUtilsObjectNameInfoEXT"), Variable("objectCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_debug_utils", 129, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDeviceMemoryReportFeaturesEXT",
      name: "PhysicalDeviceDeviceMemoryReportFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceMemoryReport",
          name: "device_memory_report",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_device_memory_report", 285, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceDeviceMemoryReportCreateInfoEXT",
      name: "DeviceDeviceMemoryReportCreateInfoEXT",
      extends: [
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDeviceMemoryReportFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pfnUserCallback",
          name: "pfn_user_callback",
          ty: Named("PFN_vkDeviceMemoryReportCallbackEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pUserData",
          name: "user_data",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_device_memory_report", 285, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceMemoryReportCallbackDataEXT",
      name: "DeviceMemoryReportCallbackDataEXT",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDeviceMemoryReportFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkDeviceMemoryReportEventTypeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryObjectId",
          name: "memory_object_id",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectType",
          name: "object_type",
          ty: Named("VkObjectType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "objectHandle",
          name: "object_handle",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "heapIndex",
          name: "heap_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_device_memory_report", 285, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportMemoryHostPointerInfoEXT",
      name: "ImportMemoryHostPointerInfoEXT",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pHostPointer",
          name: "host_pointer",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_external_memory_host", 179, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryHostPointerPropertiesEXT",
      name: "MemoryHostPointerPropertiesEXT",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypeBits",
          name: "memory_type_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_external_memory_host", 179, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExternalMemoryHostPropertiesEXT",
      name: "PhysicalDeviceExternalMemoryHostPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minImportedHostPointerAlignment",
          name: "min_imported_host_pointer_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_external_memory_host", 179, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceConservativeRasterizationPropertiesEXT",
      name: "PhysicalDeviceConservativeRasterizationPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primitiveOverestimationSize",
          name: "primitive_overestimation_size",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxExtraPrimitiveOverestimationSize",
          name: "max_extra_primitive_overestimation_size",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extraPrimitiveOverestimationSizeGranularity",
          name: "extra_primitive_overestimation_size_granularity",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primitiveUnderestimation",
          name: "primitive_underestimation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "conservativePointAndLineRasterization",
          name: "conservative_point_and_line_rasterization",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "degenerateTrianglesRasterized",
          name: "degenerate_triangles_rasterized",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "degenerateLinesRasterized",
          name: "degenerate_lines_rasterized",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fullyCoveredFragmentShaderInputVariable",
          name: "fully_covered_fragment_shader_input_variable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "conservativeRasterizationPostDepthCoverage",
          name: "conservative_rasterization_post_depth_coverage",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_conservative_rasterization", 102, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCalibratedTimestampInfoEXT",
      name: "CalibratedTimestampInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "timeDomain",
          name: "time_domain",
          ty: Named("VkTimeDomainEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderCorePropertiesAMD",
      name: "PhysicalDeviceShaderCorePropertiesAMD",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderEngineCount",
          name: "shader_engine_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderArraysPerEngineCount",
          name: "shader_arrays_per_engine_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "computeUnitsPerShaderArray",
          name: "compute_units_per_shader_array",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "simdPerComputeUnit",
          name: "simd_per_compute_unit",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "wavefrontsPerSimd",
          name: "wavefronts_per_simd",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "wavefrontSize",
          name: "wavefront_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sgprsPerSimd",
          name: "sgprs_per_simd",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minSgprAllocation",
          name: "min_sgpr_allocation",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSgprAllocation",
          name: "max_sgpr_allocation",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sgprAllocationGranularity",
          name: "sgpr_allocation_granularity",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vgprsPerSimd",
          name: "vgprs_per_simd",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minVgprAllocation",
          name: "min_vgpr_allocation",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVgprAllocation",
          name: "max_vgpr_allocation",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vgprAllocationGranularity",
          name: "vgpr_allocation_granularity",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_shader_core_properties", 186, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderCoreProperties2AMD",
      name: "PhysicalDeviceShaderCoreProperties2AMD",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderCoreFeatures",
          name: "shader_core_features",
          ty: Named("VkShaderCorePropertiesFlagsAMD"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "activeComputeUnitCount",
          name: "active_compute_unit_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_shader_core_properties2", 228, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineRasterizationConservativeStateCreateInfoEXT",
      name: "PipelineRasterizationConservativeStateCreateInfoEXT",
      extends: [
        "VkPipelineRasterizationStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineRasterizationConservativeStateCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "conservativeRasterizationMode",
          name: "conservative_rasterization_mode",
          ty: Named("VkConservativeRasterizationModeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extraPrimitiveOverestimationSize",
          name: "extra_primitive_overestimation_size",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_conservative_rasterization", 102, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDescriptorIndexingFeatures",
      name: "PhysicalDeviceDescriptorIndexingFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInputAttachmentArrayDynamicIndexing",
          name: "shader_input_attachment_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformTexelBufferArrayDynamicIndexing",
          name: "shader_uniform_texel_buffer_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageTexelBufferArrayDynamicIndexing",
          name: "shader_storage_texel_buffer_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformBufferArrayNonUniformIndexing",
          name: "shader_uniform_buffer_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSampledImageArrayNonUniformIndexing",
          name: "shader_sampled_image_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageBufferArrayNonUniformIndexing",
          name: "shader_storage_buffer_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageArrayNonUniformIndexing",
          name: "shader_storage_image_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInputAttachmentArrayNonUniformIndexing",
          name: "shader_input_attachment_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformTexelBufferArrayNonUniformIndexing",
          name: "shader_uniform_texel_buffer_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageTexelBufferArrayNonUniformIndexing",
          name: "shader_storage_texel_buffer_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingUniformBufferUpdateAfterBind",
          name: "descriptor_binding_uniform_buffer_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingSampledImageUpdateAfterBind",
          name: "descriptor_binding_sampled_image_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingStorageImageUpdateAfterBind",
          name: "descriptor_binding_storage_image_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingStorageBufferUpdateAfterBind",
          name: "descriptor_binding_storage_buffer_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingUniformTexelBufferUpdateAfterBind",
          name: "descriptor_binding_uniform_texel_buffer_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingStorageTexelBufferUpdateAfterBind",
          name: "descriptor_binding_storage_texel_buffer_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingUpdateUnusedWhilePending",
          name: "descriptor_binding_update_unused_while_pending",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingPartiallyBound",
          name: "descriptor_binding_partially_bound",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingVariableDescriptorCount",
          name: "descriptor_binding_variable_descriptor_count",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "runtimeDescriptorArray",
          name: "runtime_descriptor_array",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDescriptorIndexingProperties",
      name: "PhysicalDeviceDescriptorIndexingProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxUpdateAfterBindDescriptorsInAllPools",
          name: "max_update_after_bind_descriptors_in_all_pools",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformBufferArrayNonUniformIndexingNative",
          name: "shader_uniform_buffer_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSampledImageArrayNonUniformIndexingNative",
          name: "shader_sampled_image_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageBufferArrayNonUniformIndexingNative",
          name: "shader_storage_buffer_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageArrayNonUniformIndexingNative",
          name: "shader_storage_image_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInputAttachmentArrayNonUniformIndexingNative",
          name: "shader_input_attachment_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "robustBufferAccessUpdateAfterBind",
          name: "robust_buffer_access_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "quadDivergentImplicitLod",
          name: "quad_divergent_implicit_lod",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindSamplers",
          name: "max_per_stage_descriptor_update_after_bind_samplers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindUniformBuffers",
          name: "max_per_stage_descriptor_update_after_bind_uniform_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindStorageBuffers",
          name: "max_per_stage_descriptor_update_after_bind_storage_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindSampledImages",
          name: "max_per_stage_descriptor_update_after_bind_sampled_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindStorageImages",
          name: "max_per_stage_descriptor_update_after_bind_storage_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindInputAttachments",
          name: "max_per_stage_descriptor_update_after_bind_input_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageUpdateAfterBindResources",
          name: "max_per_stage_update_after_bind_resources",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindSamplers",
          name: "max_descriptor_set_update_after_bind_samplers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindUniformBuffers",
          name: "max_descriptor_set_update_after_bind_uniform_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic",
          name: "max_descriptor_set_update_after_bind_uniform_buffers_dynamic",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindStorageBuffers",
          name: "max_descriptor_set_update_after_bind_storage_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic",
          name: "max_descriptor_set_update_after_bind_storage_buffers_dynamic",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindSampledImages",
          name: "max_descriptor_set_update_after_bind_sampled_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindStorageImages",
          name: "max_descriptor_set_update_after_bind_storage_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindInputAttachments",
          name: "max_descriptor_set_update_after_bind_input_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorSetLayoutBindingFlagsCreateInfo",
      name: "DescriptorSetLayoutBindingFlagsCreateInfo",
      extends: [
        "VkDescriptorSetLayoutCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bindingCount",
          name: "binding_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pBindingFlags",
          name: "binding_flags",
          ty: Slice(Const, Named("VkDescriptorBindingFlags"), Variable("bindingCount")),
          selector: None,
          selection: None,
          optional: Sometimes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorSetVariableDescriptorCountAllocateInfo",
      name: "DescriptorSetVariableDescriptorCountAllocateInfo",
      extends: [
        "VkDescriptorSetAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorSetCount",
          name: "descriptor_set_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDescriptorCounts",
          name: "descriptor_counts",
          ty: Slice(Const, Native(UInt(4)), Variable("descriptorSetCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorSetVariableDescriptorCountLayoutSupport",
      name: "DescriptorSetVariableDescriptorCountLayoutSupport",
      extends: [
        "VkDescriptorSetLayoutSupport",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVariableDescriptorCount",
          name: "max_variable_descriptor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkAttachmentDescription2",
      name: "AttachmentDescription2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkAttachmentDescriptionFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samples",
          name: "samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "loadOp",
          name: "load_op",
          ty: Named("VkAttachmentLoadOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storeOp",
          name: "store_op",
          ty: Named("VkAttachmentStoreOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilLoadOp",
          name: "stencil_load_op",
          ty: Named("VkAttachmentLoadOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilStoreOp",
          name: "stencil_store_op",
          ty: Named("VkAttachmentStoreOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "initialLayout",
          name: "initial_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "finalLayout",
          name: "final_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [
        "VkAttachmentDescriptionStencilLayout",
      ],
    ),
    Struct(
      original_name: "VkAttachmentReference2",
      name: "AttachmentReference2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachment",
          name: "attachment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layout",
          name: "layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "aspectMask",
          name: "aspect_mask",
          ty: Named("VkImageAspectFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [
        "VkAttachmentReferenceStencilLayout",
      ],
    ),
    Struct(
      original_name: "VkSubpassDescription2",
      name: "SubpassDescription2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSubpassDescriptionFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineBindPoint",
          name: "pipeline_bind_point",
          ty: Named("VkPipelineBindPoint"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewMask",
          name: "view_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inputAttachmentCount",
          name: "input_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pInputAttachments",
          name: "input_attachments",
          ty: Slice(Const, Named("VkAttachmentReference2"), Variable("inputAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorAttachmentCount",
          name: "color_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pColorAttachments",
          name: "color_attachments",
          ty: Slice(Const, Named("VkAttachmentReference2"), Variable("colorAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pResolveAttachments",
          name: "resolve_attachments",
          ty: Slice(Const, Named("VkAttachmentReference2"), Variable("colorAttachmentCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDepthStencilAttachment",
          name: "depth_stencil_attachment",
          ty: Pointer(Const, Named("VkAttachmentReference2")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "preserveAttachmentCount",
          name: "preserve_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPreserveAttachments",
          name: "preserve_attachments",
          ty: Slice(Const, Native(UInt(4)), Variable("preserveAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [
        "VkSubpassDescriptionDepthStencilResolve",
        "VkFragmentShadingRateAttachmentInfoKHR",
      ],
    ),
    Struct(
      original_name: "VkSubpassDependency2",
      name: "SubpassDependency2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcSubpass",
          name: "src_subpass",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSubpass",
          name: "dst_subpass",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcStageMask",
          name: "src_stage_mask",
          ty: Named("VkPipelineStageFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstStageMask",
          name: "dst_stage_mask",
          ty: Named("VkPipelineStageFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAccessMask",
          name: "src_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstAccessMask",
          name: "dst_access_mask",
          ty: Named("VkAccessFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dependencyFlags",
          name: "dependency_flags",
          ty: Named("VkDependencyFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewOffset",
          name: "view_offset",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [
        "VkMemoryBarrier2",
      ],
    ),
    Struct(
      original_name: "VkRenderPassCreateInfo2",
      name: "RenderPassCreateInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkRenderPassCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachmentCount",
          name: "attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttachments",
          name: "attachments",
          ty: Slice(Const, Named("VkAttachmentDescription2"), Variable("attachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subpassCount",
          name: "subpass_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSubpasses",
          name: "subpasses",
          ty: Slice(Const, Named("VkSubpassDescription2"), Variable("subpassCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dependencyCount",
          name: "dependency_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDependencies",
          name: "dependencies",
          ty: Slice(Const, Named("VkSubpassDependency2"), Variable("dependencyCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "correlatedViewMaskCount",
          name: "correlated_view_mask_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCorrelatedViewMasks",
          name: "correlated_view_masks",
          ty: Slice(Const, Native(UInt(4)), Variable("correlatedViewMaskCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [
        "VkRenderPassFragmentDensityMapCreateInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkSubpassBeginInfo",
      name: "SubpassBeginInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "contents",
          name: "contents",
          ty: Named("VkSubpassContents"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkSubpassEndInfo",
      name: "SubpassEndInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBPASS_END_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceTimelineSemaphoreFeatures",
      name: "PhysicalDeviceTimelineSemaphoreFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "timelineSemaphore",
          name: "timeline_semaphore",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceTimelineSemaphoreProperties",
      name: "PhysicalDeviceTimelineSemaphoreProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTimelineSemaphoreValueDifference",
          name: "max_timeline_semaphore_value_difference",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkSemaphoreTypeCreateInfo",
      name: "SemaphoreTypeCreateInfo",
      extends: [
        "VkSemaphoreCreateInfo",
        "VkPhysicalDeviceExternalSemaphoreInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphoreType",
          name: "semaphore_type",
          ty: Named("VkSemaphoreType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "initialValue",
          name: "initial_value",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkTimelineSemaphoreSubmitInfo",
      name: "TimelineSemaphoreSubmitInfo",
      extends: [
        "VkSubmitInfo",
        "VkBindSparseInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "waitSemaphoreValueCount",
          name: "wait_semaphore_value_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pWaitSemaphoreValues",
          name: "wait_semaphore_values",
          ty: Slice(Const, Native(UInt(8)), Variable("waitSemaphoreValueCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "signalSemaphoreValueCount",
          name: "signal_semaphore_value_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSignalSemaphoreValues",
          name: "signal_semaphore_values",
          ty: Slice(Const, Native(UInt(8)), Variable("signalSemaphoreValueCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkSemaphoreWaitInfo",
      name: "SemaphoreWaitInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSemaphoreWaitFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphoreCount",
          name: "semaphore_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSemaphores",
          name: "semaphores",
          ty: Slice(Const, Named("VkSemaphore"), Variable("semaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pValues",
          name: "values",
          ty: Slice(Const, Native(UInt(8)), Variable("semaphoreCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkSemaphoreSignalInfo",
      name: "SemaphoreSignalInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "value",
          name: "value",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkVertexInputBindingDivisorDescriptionEXT",
      name: "VertexInputBindingDivisorDescriptionEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "binding",
          name: "binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "divisor",
          name: "divisor",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineVertexInputDivisorStateCreateInfoEXT",
      name: "PipelineVertexInputDivisorStateCreateInfoEXT",
      extends: [
        "VkPipelineVertexInputStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexBindingDivisorCount",
          name: "vertex_binding_divisor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVertexBindingDivisors",
          name: "vertex_binding_divisors",
          ty: Slice(Const, Named("VkVertexInputBindingDivisorDescriptionEXT"), Variable("vertexBindingDivisorCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT",
      name: "PhysicalDeviceVertexAttributeDivisorPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVertexAttribDivisor",
          name: "max_vertex_attrib_divisor",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePCIBusInfoPropertiesEXT",
      name: "PhysicalDevicePciBusInfoPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pciDomain",
          name: "pci_domain",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pciBus",
          name: "pci_bus",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pciDevice",
          name: "pci_device",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pciFunction",
          name: "pci_function",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_pci_bus_info", 213, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportAndroidHardwareBufferInfoANDROID",
      name: "ImportAndroidHardwareBufferInfoANDROID",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Pointer(Mutable, Named("AHardwareBuffer")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAndroidHardwareBufferUsageANDROID",
      name: "AndroidHardwareBufferUsageANDROID",
      extends: [
        "VkImageFormatProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "androidHardwareBufferUsage",
          name: "android_hardware_buffer_usage",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAndroidHardwareBufferPropertiesANDROID",
      name: "AndroidHardwareBufferPropertiesANDROID",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "allocationSize",
          name: "allocation_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypeBits",
          name: "memory_type_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      extended: [
        "VkAndroidHardwareBufferFormatPropertiesANDROID",
        "VkAndroidHardwareBufferFormatProperties2ANDROID",
      ],
    ),
    Struct(
      original_name: "VkMemoryGetAndroidHardwareBufferInfoANDROID",
      name: "MemoryGetAndroidHardwareBufferInfoANDROID",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAndroidHardwareBufferFormatPropertiesANDROID",
      name: "AndroidHardwareBufferFormatPropertiesANDROID",
      extends: [
        "VkAndroidHardwareBufferPropertiesANDROID",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "externalFormat",
          name: "external_format",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "formatFeatures",
          name: "format_features",
          ty: Named("VkFormatFeatureFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerYcbcrConversionComponents",
          name: "sampler_ycbcr_conversion_components",
          ty: Named("VkComponentMapping"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYcbcrModel",
          name: "suggested_ycbcr_model",
          ty: Named("VkSamplerYcbcrModelConversion"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYcbcrRange",
          name: "suggested_ycbcr_range",
          ty: Named("VkSamplerYcbcrRange"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedXChromaOffset",
          name: "suggested_x_chroma_offset",
          ty: Named("VkChromaLocation"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYChromaOffset",
          name: "suggested_y_chroma_offset",
          ty: Named("VkChromaLocation"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCommandBufferInheritanceConditionalRenderingInfoEXT",
      name: "CommandBufferInheritanceConditionalRenderingInfoEXT",
      extends: [
        "VkCommandBufferInheritanceInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "conditionalRenderingEnable",
          name: "conditional_rendering_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_conditional_rendering", 82, false),
      extended: [],
    ),
    Struct(
      original_name: "VkExternalFormatANDROID",
      name: "ExternalFormatANDROID",
      extends: [
        "VkImageCreateInfo",
        "VkSamplerYcbcrConversionCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "externalFormat",
          name: "external_format",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevice8BitStorageFeatures",
      name: "PhysicalDevice8BitStorageFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageBuffer8BitAccess",
          name: "storage_buffer8_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformAndStorageBuffer8BitAccess",
          name: "uniform_and_storage_buffer8_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storagePushConstant8",
          name: "storage_push_constant8",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceConditionalRenderingFeaturesEXT",
      name: "PhysicalDeviceConditionalRenderingFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "conditionalRendering",
          name: "conditional_rendering",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inheritedConditionalRendering",
          name: "inherited_conditional_rendering",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_conditional_rendering", 82, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVulkanMemoryModelFeatures",
      name: "PhysicalDeviceVulkanMemoryModelFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vulkanMemoryModel",
          name: "vulkan_memory_model",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vulkanMemoryModelDeviceScope",
          name: "vulkan_memory_model_device_scope",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vulkanMemoryModelAvailabilityVisibilityChains",
          name: "vulkan_memory_model_availability_visibility_chains",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderAtomicInt64Features",
      name: "PhysicalDeviceShaderAtomicInt64Features",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferInt64Atomics",
          name: "shader_buffer_int64_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedInt64Atomics",
          name: "shader_shared_int64_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderAtomicFloatFeaturesEXT",
      name: "PhysicalDeviceShaderAtomicFloatFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat32Atomics",
          name: "shader_buffer_float32_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat32AtomicAdd",
          name: "shader_buffer_float32_atomic_add",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat64Atomics",
          name: "shader_buffer_float64_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat64AtomicAdd",
          name: "shader_buffer_float64_atomic_add",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat32Atomics",
          name: "shader_shared_float32_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat32AtomicAdd",
          name: "shader_shared_float32_atomic_add",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat64Atomics",
          name: "shader_shared_float64_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat64AtomicAdd",
          name: "shader_shared_float64_atomic_add",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderImageFloat32Atomics",
          name: "shader_image_float32_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderImageFloat32AtomicAdd",
          name: "shader_image_float32_atomic_add",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseImageFloat32Atomics",
          name: "sparse_image_float32_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseImageFloat32AtomicAdd",
          name: "sparse_image_float32_atomic_add",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_shader_atomic_float", 261, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderAtomicFloat2FeaturesEXT",
      name: "PhysicalDeviceShaderAtomicFloat2FeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat16Atomics",
          name: "shader_buffer_float16_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat16AtomicAdd",
          name: "shader_buffer_float16_atomic_add",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat16AtomicMinMax",
          name: "shader_buffer_float16_atomic_min_max",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat32AtomicMinMax",
          name: "shader_buffer_float32_atomic_min_max",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferFloat64AtomicMinMax",
          name: "shader_buffer_float64_atomic_min_max",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat16Atomics",
          name: "shader_shared_float16_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat16AtomicAdd",
          name: "shader_shared_float16_atomic_add",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat16AtomicMinMax",
          name: "shader_shared_float16_atomic_min_max",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat32AtomicMinMax",
          name: "shader_shared_float32_atomic_min_max",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedFloat64AtomicMinMax",
          name: "shader_shared_float64_atomic_min_max",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderImageFloat32AtomicMinMax",
          name: "shader_image_float32_atomic_min_max",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseImageFloat32AtomicMinMax",
          name: "sparse_image_float32_atomic_min_max",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_shader_atomic_float2", 274, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT",
      name: "PhysicalDeviceVertexAttributeDivisorFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexAttributeInstanceRateDivisor",
          name: "vertex_attribute_instance_rate_divisor",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexAttributeInstanceRateZeroDivisor",
          name: "vertex_attribute_instance_rate_zero_divisor",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
      extended: [],
    ),
    Struct(
      original_name: "VkQueueFamilyCheckpointPropertiesNV",
      name: "QueueFamilyCheckpointPropertiesNV",
      extends: [
        "VkQueueFamilyProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "checkpointExecutionStageMask",
          name: "checkpoint_execution_stage_mask",
          ty: Named("VkPipelineStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCheckpointDataNV",
      name: "CheckpointDataNV",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stage",
          name: "stage",
          ty: Named("VkPipelineStageFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCheckpointMarker",
          name: "checkpoint_marker",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDepthStencilResolveProperties",
      name: "PhysicalDeviceDepthStencilResolveProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedDepthResolveModes",
          name: "supported_depth_resolve_modes",
          ty: Named("VkResolveModeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedStencilResolveModes",
          name: "supported_stencil_resolve_modes",
          ty: Named("VkResolveModeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "independentResolveNone",
          name: "independent_resolve_none",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "independentResolve",
          name: "independent_resolve",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkSubpassDescriptionDepthStencilResolve",
      name: "SubpassDescriptionDepthStencilResolve",
      extends: [
        "VkSubpassDescription2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthResolveMode",
          name: "depth_resolve_mode",
          ty: Named("VkResolveModeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "stencilResolveMode",
          name: "stencil_resolve_mode",
          ty: Named("VkResolveModeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pDepthStencilResolveAttachment",
          name: "depth_stencil_resolve_attachment",
          ty: Pointer(Const, Named("VkAttachmentReference2")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkImageViewASTCDecodeModeEXT",
      name: "ImageViewAstcDecodeModeEXT",
      extends: [
        "VkImageViewCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "decodeMode",
          name: "decode_mode",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_astc_decode_mode", 68, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceASTCDecodeFeaturesEXT",
      name: "PhysicalDeviceAstcDecodeFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "decodeModeSharedExponent",
          name: "decode_mode_shared_exponent",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_astc_decode_mode", 68, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceTransformFeedbackFeaturesEXT",
      name: "PhysicalDeviceTransformFeedbackFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformFeedback",
          name: "transform_feedback",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "geometryStreams",
          name: "geometry_streams",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_transform_feedback", 29, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceTransformFeedbackPropertiesEXT",
      name: "PhysicalDeviceTransformFeedbackPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTransformFeedbackStreams",
          name: "max_transform_feedback_streams",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTransformFeedbackBuffers",
          name: "max_transform_feedback_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTransformFeedbackBufferSize",
          name: "max_transform_feedback_buffer_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTransformFeedbackStreamDataSize",
          name: "max_transform_feedback_stream_data_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTransformFeedbackBufferDataSize",
          name: "max_transform_feedback_buffer_data_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTransformFeedbackBufferDataStride",
          name: "max_transform_feedback_buffer_data_stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformFeedbackQueries",
          name: "transform_feedback_queries",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformFeedbackStreamsLinesTriangles",
          name: "transform_feedback_streams_lines_triangles",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformFeedbackRasterizationStreamSelect",
          name: "transform_feedback_rasterization_stream_select",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformFeedbackDraw",
          name: "transform_feedback_draw",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_transform_feedback", 29, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineRasterizationStateStreamCreateInfoEXT",
      name: "PipelineRasterizationStateStreamCreateInfoEXT",
      extends: [
        "VkPipelineRasterizationStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineRasterizationStateStreamCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizationStream",
          name: "rasterization_stream",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_transform_feedback", 29, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRepresentativeFragmentTestFeaturesNV",
      name: "PhysicalDeviceRepresentativeFragmentTestFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "representativeFragmentTest",
          name: "representative_fragment_test",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_representative_fragment_test", 167, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineRepresentativeFragmentTestStateCreateInfoNV",
      name: "PipelineRepresentativeFragmentTestStateCreateInfoNV",
      extends: [
        "VkGraphicsPipelineCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "representativeFragmentTestEnable",
          name: "representative_fragment_test_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_representative_fragment_test", 167, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExclusiveScissorFeaturesNV",
      name: "PhysicalDeviceExclusiveScissorFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "exclusiveScissor",
          name: "exclusive_scissor",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_scissor_exclusive", 206, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineViewportExclusiveScissorStateCreateInfoNV",
      name: "PipelineViewportExclusiveScissorStateCreateInfoNV",
      extends: [
        "VkPipelineViewportStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "exclusiveScissorCount",
          name: "exclusive_scissor_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pExclusiveScissors",
          name: "exclusive_scissors",
          ty: Slice(Const, Named("VkRect2D"), Variable("exclusiveScissorCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_scissor_exclusive", 206, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceCornerSampledImageFeaturesNV",
      name: "PhysicalDeviceCornerSampledImageFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "cornerSampledImage",
          name: "corner_sampled_image",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_corner_sampled_image", 51, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceComputeShaderDerivativesFeaturesNV",
      name: "PhysicalDeviceComputeShaderDerivativesFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "computeDerivativeGroupQuads",
          name: "compute_derivative_group_quads",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "computeDerivativeGroupLinear",
          name: "compute_derivative_group_linear",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_compute_shader_derivatives", 202, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentShaderBarycentricFeaturesNV",
      name: "PhysicalDeviceFragmentShaderBarycentricFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShaderBarycentric",
          name: "fragment_shader_barycentric",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_fragment_shader_barycentric", 204, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderImageFootprintFeaturesNV",
      name: "PhysicalDeviceShaderImageFootprintFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageFootprint",
          name: "image_footprint",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shader_image_footprint", 205, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
      name: "PhysicalDeviceDedicatedAllocationImageAliasingFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dedicatedAllocationImageAliasing",
          name: "dedicated_allocation_image_aliasing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_dedicated_allocation_image_aliasing", 241, false),
      extended: [],
    ),
    Struct(
      original_name: "VkShadingRatePaletteNV",
      name: "ShadingRatePaletteNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "shadingRatePaletteEntryCount",
          name: "shading_rate_palette_entry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pShadingRatePaletteEntries",
          name: "shading_rate_palette_entries",
          ty: Slice(Const, Named("VkShadingRatePaletteEntryNV"), Variable("shadingRatePaletteEntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineViewportShadingRateImageStateCreateInfoNV",
      name: "PipelineViewportShadingRateImageStateCreateInfoNV",
      extends: [
        "VkPipelineViewportStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRateImageEnable",
          name: "shading_rate_image_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportCount",
          name: "viewport_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pShadingRatePalettes",
          name: "shading_rate_palettes",
          ty: Slice(Const, Named("VkShadingRatePaletteNV"), Variable("viewportCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShadingRateImageFeaturesNV",
      name: "PhysicalDeviceShadingRateImageFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRateImage",
          name: "shading_rate_image",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRateCoarseSampleOrder",
          name: "shading_rate_coarse_sample_order",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShadingRateImagePropertiesNV",
      name: "PhysicalDeviceShadingRateImagePropertiesNV",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRateTexelSize",
          name: "shading_rate_texel_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRatePaletteSize",
          name: "shading_rate_palette_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRateMaxCoarseSamples",
          name: "shading_rate_max_coarse_samples",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceInvocationMaskFeaturesHUAWEI",
      name: "PhysicalDeviceInvocationMaskFeaturesHUAWEI",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "invocationMask",
          name: "invocation_mask",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCoarseSampleLocationNV",
      name: "CoarseSampleLocationNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "pixelX",
          name: "pixel_x",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pixelY",
          name: "pixel_y",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sample",
          name: "sample",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCoarseSampleOrderCustomNV",
      name: "CoarseSampleOrderCustomNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "shadingRate",
          name: "shading_rate",
          ty: Named("VkShadingRatePaletteEntryNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleCount",
          name: "sample_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleLocationCount",
          name: "sample_location_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSampleLocations",
          name: "sample_locations",
          ty: Slice(Const, Named("VkCoarseSampleLocationNV"), Variable("sampleLocationCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineViewportCoarseSampleOrderStateCreateInfoNV",
      name: "PipelineViewportCoarseSampleOrderStateCreateInfoNV",
      extends: [
        "VkPipelineViewportStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleOrderType",
          name: "sample_order_type",
          ty: Named("VkCoarseSampleOrderTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "customSampleOrderCount",
          name: "custom_sample_order_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCustomSampleOrders",
          name: "custom_sample_orders",
          ty: Slice(Const, Named("VkCoarseSampleOrderCustomNV"), Variable("customSampleOrderCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMeshShaderFeaturesNV",
      name: "PhysicalDeviceMeshShaderFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "taskShader",
          name: "task_shader",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "meshShader",
          name: "mesh_shader",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_mesh_shader", 203, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMeshShaderPropertiesNV",
      name: "PhysicalDeviceMeshShaderPropertiesNV",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDrawMeshTasksCount",
          name: "max_draw_mesh_tasks_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTaskWorkGroupInvocations",
          name: "max_task_work_group_invocations",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTaskWorkGroupSize",
          name: "max_task_work_group_size",
          ty: Array(Native(UInt(4)), ConstantInt(3)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTaskTotalMemorySize",
          name: "max_task_total_memory_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTaskOutputCount",
          name: "max_task_output_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMeshWorkGroupInvocations",
          name: "max_mesh_work_group_invocations",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMeshWorkGroupSize",
          name: "max_mesh_work_group_size",
          ty: Array(Native(UInt(4)), ConstantInt(3)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMeshTotalMemorySize",
          name: "max_mesh_total_memory_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMeshOutputVertices",
          name: "max_mesh_output_vertices",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMeshOutputPrimitives",
          name: "max_mesh_output_primitives",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMeshMultiviewViewCount",
          name: "max_mesh_multiview_view_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "meshOutputPerVertexGranularity",
          name: "mesh_output_per_vertex_granularity",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "meshOutputPerPrimitiveGranularity",
          name: "mesh_output_per_primitive_granularity",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_mesh_shader", 203, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDrawMeshTasksIndirectCommandNV",
      name: "DrawMeshTasksIndirectCommandNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "taskCount",
          name: "task_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "firstTask",
          name: "first_task",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_mesh_shader", 203, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRayTracingShaderGroupCreateInfoNV",
      name: "RayTracingShaderGroupCreateInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkRayTracingShaderGroupTypeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "generalShader",
          name: "general_shader",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "closestHitShader",
          name: "closest_hit_shader",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "anyHitShader",
          name: "any_hit_shader",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "intersectionShader",
          name: "intersection_shader",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRayTracingShaderGroupCreateInfoKHR",
      name: "RayTracingShaderGroupCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkRayTracingShaderGroupTypeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "generalShader",
          name: "general_shader",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "closestHitShader",
          name: "closest_hit_shader",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "anyHitShader",
          name: "any_hit_shader",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "intersectionShader",
          name: "intersection_shader",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pShaderGroupCaptureReplayHandle",
          name: "shader_group_capture_replay_handle",
          ty: Pointer(Const, Native(Void)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRayTracingPipelineCreateInfoNV",
      name: "RayTracingPipelineCreateInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stageCount",
          name: "stage_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStages",
          name: "stages",
          ty: Slice(Const, Named("VkPipelineShaderStageCreateInfo"), Variable("stageCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "groupCount",
          name: "group_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pGroups",
          name: "groups",
          ty: Slice(Const, Named("VkRayTracingShaderGroupCreateInfoNV"), Variable("groupCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxRecursionDepth",
          name: "max_recursion_depth",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layout",
          name: "layout",
          ty: Named("VkPipelineLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "basePipelineHandle",
          name: "base_pipeline_handle",
          ty: Named("VkPipeline"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "basePipelineIndex",
          name: "base_pipeline_index",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [
        "VkPipelineCreationFeedbackCreateInfo",
      ],
    ),
    Struct(
      original_name: "VkRayTracingPipelineCreateInfoKHR",
      name: "RayTracingPipelineCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stageCount",
          name: "stage_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStages",
          name: "stages",
          ty: Slice(Const, Named("VkPipelineShaderStageCreateInfo"), Variable("stageCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "groupCount",
          name: "group_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pGroups",
          name: "groups",
          ty: Slice(Const, Named("VkRayTracingShaderGroupCreateInfoKHR"), Variable("groupCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPipelineRayRecursionDepth",
          name: "max_pipeline_ray_recursion_depth",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pLibraryInfo",
          name: "library_info",
          ty: Pointer(Const, Named("VkPipelineLibraryCreateInfoKHR")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pLibraryInterface",
          name: "library_interface",
          ty: Pointer(Const, Named("VkRayTracingPipelineInterfaceCreateInfoKHR")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDynamicState",
          name: "dynamic_state",
          ty: Pointer(Const, Named("VkPipelineDynamicStateCreateInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layout",
          name: "layout",
          ty: Named("VkPipelineLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "basePipelineHandle",
          name: "base_pipeline_handle",
          ty: Named("VkPipeline"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "basePipelineIndex",
          name: "base_pipeline_index",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      extended: [
        "VkPipelineCreationFeedbackCreateInfo",
      ],
    ),
    Struct(
      original_name: "VkGeometryTrianglesNV",
      name: "GeometryTrianglesNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexData",
          name: "vertex_data",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexOffset",
          name: "vertex_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexCount",
          name: "vertex_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexStride",
          name: "vertex_stride",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexFormat",
          name: "vertex_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexData",
          name: "index_data",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexOffset",
          name: "index_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexCount",
          name: "index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexType",
          name: "index_type",
          ty: Named("VkIndexType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformData",
          name: "transform_data",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformOffset",
          name: "transform_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkGeometryAABBNV",
      name: "GeometryAabbNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "aabbData",
          name: "aabb_data",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "numAABBs",
          name: "num_aab_bs",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stride",
          name: "stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkGeometryDataNV",
      name: "GeometryDataNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "triangles",
          name: "triangles",
          ty: Named("VkGeometryTrianglesNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "aabbs",
          name: "aabbs",
          ty: Named("VkGeometryAABBNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkGeometryNV",
      name: "GeometryNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_GEOMETRY_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "geometryType",
          name: "geometry_type",
          ty: Named("VkGeometryTypeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "geometry",
          name: "geometry",
          ty: Named("VkGeometryDataNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkGeometryFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureInfoNV",
      name: "AccelerationStructureInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkAccelerationStructureTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkBuildAccelerationStructureFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceCount",
          name: "instance_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "geometryCount",
          name: "geometry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pGeometries",
          name: "geometries",
          ty: Slice(Const, Named("VkGeometryNV"), Variable("geometryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureCreateInfoNV",
      name: "AccelerationStructureCreateInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compactedSize",
          name: "compacted_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "info",
          name: "info",
          ty: Named("VkAccelerationStructureInfoNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBindAccelerationStructureMemoryInfoNV",
      name: "BindAccelerationStructureMemoryInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructure",
          name: "acceleration_structure",
          ty: Named("VkAccelerationStructureNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryOffset",
          name: "memory_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceIndexCount",
          name: "device_index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDeviceIndices",
          name: "device_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("deviceIndexCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkWriteDescriptorSetAccelerationStructureKHR",
      name: "WriteDescriptorSetAccelerationStructureKHR",
      extends: [
        "VkWriteDescriptorSet",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureCount",
          name: "acceleration_structure_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAccelerationStructures",
          name: "acceleration_structures",
          ty: Slice(Const, Named("VkAccelerationStructureKHR"), Variable("accelerationStructureCount")),
          selector: None,
          selection: None,
          optional: Sometimes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkWriteDescriptorSetAccelerationStructureNV",
      name: "WriteDescriptorSetAccelerationStructureNV",
      extends: [
        "VkWriteDescriptorSet",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureCount",
          name: "acceleration_structure_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAccelerationStructures",
          name: "acceleration_structures",
          ty: Slice(Const, Named("VkAccelerationStructureNV"), Variable("accelerationStructureCount")),
          selector: None,
          selection: None,
          optional: Sometimes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureMemoryRequirementsInfoNV",
      name: "AccelerationStructureMemoryRequirementsInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkAccelerationStructureMemoryRequirementsTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructure",
          name: "acceleration_structure",
          ty: Named("VkAccelerationStructureNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceAccelerationStructureFeaturesKHR",
      name: "PhysicalDeviceAccelerationStructureFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructure",
          name: "acceleration_structure",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureCaptureReplay",
          name: "acceleration_structure_capture_replay",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureIndirectBuild",
          name: "acceleration_structure_indirect_build",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureHostCommands",
          name: "acceleration_structure_host_commands",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingAccelerationStructureUpdateAfterBind",
          name: "descriptor_binding_acceleration_structure_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRayTracingPipelineFeaturesKHR",
      name: "PhysicalDeviceRayTracingPipelineFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rayTracingPipeline",
          name: "ray_tracing_pipeline",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rayTracingPipelineShaderGroupHandleCaptureReplay",
          name: "ray_tracing_pipeline_shader_group_handle_capture_replay",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rayTracingPipelineShaderGroupHandleCaptureReplayMixed",
          name: "ray_tracing_pipeline_shader_group_handle_capture_replay_mixed",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rayTracingPipelineTraceRaysIndirect",
          name: "ray_tracing_pipeline_trace_rays_indirect",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rayTraversalPrimitiveCulling",
          name: "ray_traversal_primitive_culling",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRayQueryFeaturesKHR",
      name: "PhysicalDeviceRayQueryFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rayQuery",
          name: "ray_query",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_ray_query", 349, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceAccelerationStructurePropertiesKHR",
      name: "PhysicalDeviceAccelerationStructurePropertiesKHR",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxGeometryCount",
          name: "max_geometry_count",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxInstanceCount",
          name: "max_instance_count",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPrimitiveCount",
          name: "max_primitive_count",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorAccelerationStructures",
          name: "max_per_stage_descriptor_acceleration_structures",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindAccelerationStructures",
          name: "max_per_stage_descriptor_update_after_bind_acceleration_structures",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetAccelerationStructures",
          name: "max_descriptor_set_acceleration_structures",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindAccelerationStructures",
          name: "max_descriptor_set_update_after_bind_acceleration_structures",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minAccelerationStructureScratchOffsetAlignment",
          name: "min_acceleration_structure_scratch_offset_alignment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRayTracingPipelinePropertiesKHR",
      name: "PhysicalDeviceRayTracingPipelinePropertiesKHR",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderGroupHandleSize",
          name: "shader_group_handle_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxRayRecursionDepth",
          name: "max_ray_recursion_depth",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxShaderGroupStride",
          name: "max_shader_group_stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderGroupBaseAlignment",
          name: "shader_group_base_alignment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderGroupHandleCaptureReplaySize",
          name: "shader_group_handle_capture_replay_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxRayDispatchInvocationCount",
          name: "max_ray_dispatch_invocation_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderGroupHandleAlignment",
          name: "shader_group_handle_alignment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxRayHitAttributeSize",
          name: "max_ray_hit_attribute_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRayTracingPropertiesNV",
      name: "PhysicalDeviceRayTracingPropertiesNV",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderGroupHandleSize",
          name: "shader_group_handle_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxRecursionDepth",
          name: "max_recursion_depth",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxShaderGroupStride",
          name: "max_shader_group_stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderGroupBaseAlignment",
          name: "shader_group_base_alignment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxGeometryCount",
          name: "max_geometry_count",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxInstanceCount",
          name: "max_instance_count",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTriangleCount",
          name: "max_triangle_count",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetAccelerationStructures",
          name: "max_descriptor_set_acceleration_structures",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing", 166, false),
      extended: [],
    ),
    Struct(
      original_name: "VkStridedDeviceAddressRegionKHR",
      name: "StridedDeviceAddressRegionKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "deviceAddress",
          name: "device_address",
          ty: Named("VkDeviceAddress"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stride",
          name: "stride",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      extended: [],
    ),
    Struct(
      original_name: "VkTraceRaysIndirectCommandKHR",
      name: "TraceRaysIndirectCommandKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "width",
          name: "width",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "height",
          name: "height",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depth",
          name: "depth",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDrmFormatModifierPropertiesListEXT",
      name: "DrmFormatModifierPropertiesListEXT",
      extends: [
        "VkFormatProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifierCount",
          name: "drm_format_modifier_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDrmFormatModifierProperties",
          name: "drm_format_modifier_properties",
          ty: Slice(Mutable, Named("VkDrmFormatModifierPropertiesEXT"), Variable("drmFormatModifierCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDrmFormatModifierPropertiesEXT",
      name: "DrmFormatModifierPropertiesEXT",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "drmFormatModifier",
          name: "drm_format_modifier",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifierPlaneCount",
          name: "drm_format_modifier_plane_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifierTilingFeatures",
          name: "drm_format_modifier_tiling_features",
          ty: Named("VkFormatFeatureFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceImageDrmFormatModifierInfoEXT",
      name: "PhysicalDeviceImageDrmFormatModifierInfoEXT",
      extends: [
        "VkPhysicalDeviceImageFormatInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifier",
          name: "drm_format_modifier",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sharingMode",
          name: "sharing_mode",
          ty: Named("VkSharingMode"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndexCount",
          name: "queue_family_index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pQueueFamilyIndices",
          name: "queue_family_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("queueFamilyIndexCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageDrmFormatModifierListCreateInfoEXT",
      name: "ImageDrmFormatModifierListCreateInfoEXT",
      extends: [
        "VkImageCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifierCount",
          name: "drm_format_modifier_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDrmFormatModifiers",
          name: "drm_format_modifiers",
          ty: Slice(Const, Native(UInt(8)), Variable("drmFormatModifierCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageDrmFormatModifierExplicitCreateInfoEXT",
      name: "ImageDrmFormatModifierExplicitCreateInfoEXT",
      extends: [
        "VkImageCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifier",
          name: "drm_format_modifier",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifierPlaneCount",
          name: "drm_format_modifier_plane_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPlaneLayouts",
          name: "plane_layouts",
          ty: Slice(Const, Named("VkSubresourceLayout"), Variable("drmFormatModifierPlaneCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageDrmFormatModifierPropertiesEXT",
      name: "ImageDrmFormatModifierPropertiesEXT",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifier",
          name: "drm_format_modifier",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageStencilUsageCreateInfo",
      name: "ImageStencilUsageCreateInfo",
      extends: [
        "VkImageCreateInfo",
        "VkPhysicalDeviceImageFormatInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilUsage",
          name: "stencil_usage",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceMemoryOverallocationCreateInfoAMD",
      name: "DeviceMemoryOverallocationCreateInfoAMD",
      extends: [
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "overallocationBehavior",
          name: "overallocation_behavior",
          ty: Named("VkMemoryOverallocationBehaviorAMD"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentDensityMapFeaturesEXT",
      name: "PhysicalDeviceFragmentDensityMapFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityMap",
          name: "fragment_density_map",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityMapDynamic",
          name: "fragment_density_map_dynamic",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityMapNonSubsampledImages",
          name: "fragment_density_map_non_subsampled_images",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_fragment_density_map", 219, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentDensityMap2FeaturesEXT",
      name: "PhysicalDeviceFragmentDensityMap2FeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityMapDeferred",
          name: "fragment_density_map_deferred",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_fragment_density_map2", 333, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM",
      name: "PhysicalDeviceFragmentDensityMapOffsetFeaturesQCOM",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityMapOffset",
          name: "fragment_density_map_offset",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentDensityMapPropertiesEXT",
      name: "PhysicalDeviceFragmentDensityMapPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minFragmentDensityTexelSize",
          name: "min_fragment_density_texel_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentDensityTexelSize",
          name: "max_fragment_density_texel_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityInvocations",
          name: "fragment_density_invocations",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_fragment_density_map", 219, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentDensityMap2PropertiesEXT",
      name: "PhysicalDeviceFragmentDensityMap2PropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subsampledLoads",
          name: "subsampled_loads",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subsampledCoarseReconstructionEarlyAccess",
          name: "subsampled_coarse_reconstruction_early_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSubsampledArrayLayers",
          name: "max_subsampled_array_layers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetSubsampledSamplers",
          name: "max_descriptor_set_subsampled_samplers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_fragment_density_map2", 333, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM",
      name: "PhysicalDeviceFragmentDensityMapOffsetPropertiesQCOM",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityOffsetGranularity",
          name: "fragment_density_offset_granularity",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
      extended: [],
    ),
    Struct(
      original_name: "VkRenderPassFragmentDensityMapCreateInfoEXT",
      name: "RenderPassFragmentDensityMapCreateInfoEXT",
      extends: [
        "VkRenderPassCreateInfo",
        "VkRenderPassCreateInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityMapAttachment",
          name: "fragment_density_map_attachment",
          ty: Named("VkAttachmentReference"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_fragment_density_map", 219, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSubpassFragmentDensityMapOffsetEndInfoQCOM",
      name: "SubpassFragmentDensityMapOffsetEndInfoQCOM",
      extends: [
        "VkSubpassEndInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentDensityOffsetCount",
          name: "fragment_density_offset_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pFragmentDensityOffsets",
          name: "fragment_density_offsets",
          ty: Slice(Const, Named("VkOffset2D"), Variable("fragmentDensityOffsetCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceScalarBlockLayoutFeatures",
      name: "PhysicalDeviceScalarBlockLayoutFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "scalarBlockLayout",
          name: "scalar_block_layout",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkSurfaceProtectedCapabilitiesKHR",
      name: "SurfaceProtectedCapabilitiesKHR",
      extends: [
        "VkSurfaceCapabilities2KHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportsProtected",
          name: "supports_protected",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_surface_protected_capabilities", 240, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceUniformBufferStandardLayoutFeatures",
      name: "PhysicalDeviceUniformBufferStandardLayoutFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformBufferStandardLayout",
          name: "uniform_buffer_standard_layout",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDepthClipEnableFeaturesEXT",
      name: "PhysicalDeviceDepthClipEnableFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthClipEnable",
          name: "depth_clip_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_depth_clip_enable", 103, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineRasterizationDepthClipStateCreateInfoEXT",
      name: "PipelineRasterizationDepthClipStateCreateInfoEXT",
      extends: [
        "VkPipelineRasterizationStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineRasterizationDepthClipStateCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthClipEnable",
          name: "depth_clip_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_depth_clip_enable", 103, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMemoryBudgetPropertiesEXT",
      name: "PhysicalDeviceMemoryBudgetPropertiesEXT",
      extends: [
        "VkPhysicalDeviceMemoryProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "heapBudget",
          name: "heap_budget",
          ty: Array(Named("VkDeviceSize"), Constant("VK_MAX_MEMORY_HEAPS")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "heapUsage",
          name: "heap_usage",
          ty: Array(Named("VkDeviceSize"), Constant("VK_MAX_MEMORY_HEAPS")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_memory_budget", 238, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMemoryPriorityFeaturesEXT",
      name: "PhysicalDeviceMemoryPriorityFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryPriority",
          name: "memory_priority",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_memory_priority", 239, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryPriorityAllocateInfoEXT",
      name: "MemoryPriorityAllocateInfoEXT",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "priority",
          name: "priority",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_memory_priority", 239, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePageableDeviceLocalMemoryFeaturesEXT",
      name: "PhysicalDevicePageableDeviceLocalMemoryFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pageableDeviceLocalMemory",
          name: "pageable_device_local_memory",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_pageable_device_local_memory", 413, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceBufferDeviceAddressFeatures",
      name: "PhysicalDeviceBufferDeviceAddressFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddress",
          name: "buffer_device_address",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddressCaptureReplay",
          name: "buffer_device_address_capture_replay",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddressMultiDevice",
          name: "buffer_device_address_multi_device",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceBufferDeviceAddressFeaturesEXT",
      name: "PhysicalDeviceBufferDeviceAddressFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddress",
          name: "buffer_device_address",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddressCaptureReplay",
          name: "buffer_device_address_capture_replay",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddressMultiDevice",
          name: "buffer_device_address_multi_device",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_buffer_device_address", 245, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBufferDeviceAddressInfo",
      name: "BufferDeviceAddressInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkBufferOpaqueCaptureAddressCreateInfo",
      name: "BufferOpaqueCaptureAddressCreateInfo",
      extends: [
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "opaqueCaptureAddress",
          name: "opaque_capture_address",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkBufferDeviceAddressCreateInfoEXT",
      name: "BufferDeviceAddressCreateInfoEXT",
      extends: [
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceAddress",
          name: "device_address",
          ty: Named("VkDeviceAddress"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_buffer_device_address", 245, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceImageViewImageFormatInfoEXT",
      name: "PhysicalDeviceImageViewImageFormatInfoEXT",
      extends: [
        "VkPhysicalDeviceImageFormatInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageViewType",
          name: "image_view_type",
          ty: Named("VkImageViewType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_filter_cubic", 171, false),
      extended: [],
    ),
    Struct(
      original_name: "VkFilterCubicImageViewImageFormatPropertiesEXT",
      name: "FilterCubicImageViewImageFormatPropertiesEXT",
      extends: [
        "VkImageFormatProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "filterCubic",
          name: "filter_cubic",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "filterCubicMinmax",
          name: "filter_cubic_minmax",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_filter_cubic", 171, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceImagelessFramebufferFeatures",
      name: "PhysicalDeviceImagelessFramebufferFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imagelessFramebuffer",
          name: "imageless_framebuffer",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkFramebufferAttachmentsCreateInfo",
      name: "FramebufferAttachmentsCreateInfo",
      extends: [
        "VkFramebufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachmentImageInfoCount",
          name: "attachment_image_info_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttachmentImageInfos",
          name: "attachment_image_infos",
          ty: Slice(Const, Named("VkFramebufferAttachmentImageInfo"), Variable("attachmentImageInfoCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkFramebufferAttachmentImageInfo",
      name: "FramebufferAttachmentImageInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkImageCreateFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "usage",
          name: "usage",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "width",
          name: "width",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "height",
          name: "height",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layerCount",
          name: "layer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewFormatCount",
          name: "view_format_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pViewFormats",
          name: "view_formats",
          ty: Slice(Const, Named("VkFormat"), Variable("viewFormatCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkRenderPassAttachmentBeginInfo",
      name: "RenderPassAttachmentBeginInfo",
      extends: [
        "VkRenderPassBeginInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachmentCount",
          name: "attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pAttachments",
          name: "attachments",
          ty: Slice(Const, Named("VkImageView"), Variable("attachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceTextureCompressionASTCHDRFeatures",
      name: "PhysicalDeviceTextureCompressionAstchdrFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "textureCompressionASTC_HDR",
          name: "texture_compression_astc_hdr",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceCooperativeMatrixFeaturesNV",
      name: "PhysicalDeviceCooperativeMatrixFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "cooperativeMatrix",
          name: "cooperative_matrix",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "cooperativeMatrixRobustBufferAccess",
          name: "cooperative_matrix_robust_buffer_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceCooperativeMatrixPropertiesNV",
      name: "PhysicalDeviceCooperativeMatrixPropertiesNV",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "cooperativeMatrixSupportedStages",
          name: "cooperative_matrix_supported_stages",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCooperativeMatrixPropertiesNV",
      name: "CooperativeMatrixPropertiesNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "MSize",
          name: "m_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "NSize",
          name: "n_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "KSize",
          name: "k_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "AType",
          name: "a_type",
          ty: Named("VkComponentTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "BType",
          name: "b_type",
          ty: Named("VkComponentTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "CType",
          name: "c_type",
          ty: Named("VkComponentTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "DType",
          name: "d_type",
          ty: Named("VkComponentTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "scope",
          name: "scope",
          ty: Named("VkScopeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceYcbcrImageArraysFeaturesEXT",
      name: "PhysicalDeviceYcbcrImageArraysFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ycbcrImageArrays",
          name: "ycbcr_image_arrays",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_ycbcr_image_arrays", 253, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageViewHandleInfoNVX",
      name: "ImageViewHandleInfoNVX",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageView",
          name: "image_view",
          ty: Named("VkImageView"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorType",
          name: "descriptor_type",
          ty: Named("VkDescriptorType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampler",
          name: "sampler",
          ty: Named("VkSampler"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NVX_image_view_handle", 31, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageViewAddressPropertiesNVX",
      name: "ImageViewAddressPropertiesNVX",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceAddress",
          name: "device_address",
          ty: Named("VkDeviceAddress"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NVX_image_view_handle", 31, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPresentFrameTokenGGP",
      name: "PresentFrameTokenGGP",
      extends: [
        "VkPresentInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "frameToken",
          name: "frame_token",
          ty: Named("GgpFrameToken"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_GGP_frame_token", 192, true),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineCreationFeedback",
      name: "PipelineCreationFeedback",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCreationFeedbackFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "duration",
          name: "duration",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineCreationFeedbackCreateInfo",
      name: "PipelineCreationFeedbackCreateInfo",
      extends: [
        "VkGraphicsPipelineCreateInfo",
        "VkComputePipelineCreateInfo",
        "VkRayTracingPipelineCreateInfoNV",
        "VkRayTracingPipelineCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPipelineCreationFeedback",
          name: "pipeline_creation_feedback",
          ty: Pointer(Mutable, Named("VkPipelineCreationFeedback")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineStageCreationFeedbackCount",
          name: "pipeline_stage_creation_feedback_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPipelineStageCreationFeedbacks",
          name: "pipeline_stage_creation_feedbacks",
          ty: Slice(Mutable, Named("VkPipelineCreationFeedback"), Variable("pipelineStageCreationFeedbackCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkSurfaceFullScreenExclusiveInfoEXT",
      name: "SurfaceFullScreenExclusiveInfoEXT",
      extends: [
        "VkPhysicalDeviceSurfaceInfo2KHR",
        "VkSwapchainCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fullScreenExclusive",
          name: "full_screen_exclusive",
          ty: Named("VkFullScreenExclusiveEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSurfaceFullScreenExclusiveWin32InfoEXT",
      name: "SurfaceFullScreenExclusiveWin32InfoEXT",
      extends: [
        "VkPhysicalDeviceSurfaceInfo2KHR",
        "VkSwapchainCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "hmonitor",
          name: "hmonitor",
          ty: Named("HMONITOR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSurfaceCapabilitiesFullScreenExclusiveEXT",
      name: "SurfaceCapabilitiesFullScreenExclusiveEXT",
      extends: [
        "VkSurfaceCapabilities2KHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fullScreenExclusiveSupported",
          name: "full_screen_exclusive_supported",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePerformanceQueryFeaturesKHR",
      name: "PhysicalDevicePerformanceQueryFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "performanceCounterQueryPools",
          name: "performance_counter_query_pools",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "performanceCounterMultipleQueryPools",
          name: "performance_counter_multiple_query_pools",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_performance_query", 117, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePerformanceQueryPropertiesKHR",
      name: "PhysicalDevicePerformanceQueryPropertiesKHR",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "allowCommandBufferQueryCopies",
          name: "allow_command_buffer_query_copies",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_performance_query", 117, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPerformanceCounterKHR",
      name: "PerformanceCounterKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "unit",
          name: "unit",
          ty: Named("VkPerformanceCounterUnitKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "scope",
          name: "scope",
          ty: Named("VkPerformanceCounterScopeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storage",
          name: "storage",
          ty: Named("VkPerformanceCounterStorageKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uuid",
          name: "uuid",
          ty: Array(Native(UInt(1)), Constant("VK_UUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_performance_query", 117, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPerformanceCounterDescriptionKHR",
      name: "PerformanceCounterDescriptionKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPerformanceCounterDescriptionFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "category",
          name: "category",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "description",
          name: "description",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_performance_query", 117, false),
      extended: [],
    ),
    Struct(
      original_name: "VkQueryPoolPerformanceCreateInfoKHR",
      name: "QueryPoolPerformanceCreateInfoKHR",
      extends: [
        "VkQueryPoolCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "counterIndexCount",
          name: "counter_index_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCounterIndices",
          name: "counter_indices",
          ty: Slice(Const, Native(UInt(4)), Variable("counterIndexCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_performance_query", 117, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAcquireProfilingLockInfoKHR",
      name: "AcquireProfilingLockInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkAcquireProfilingLockFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "timeout",
          name: "timeout",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_performance_query", 117, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPerformanceQuerySubmitInfoKHR",
      name: "PerformanceQuerySubmitInfoKHR",
      extends: [
        "VkSubmitInfo",
        "VkSubmitInfo2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "counterPassIndex",
          name: "counter_pass_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_performance_query", 117, false),
      extended: [],
    ),
    Struct(
      original_name: "VkHeadlessSurfaceCreateInfoEXT",
      name: "HeadlessSurfaceCreateInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkHeadlessSurfaceCreateFlagsEXT"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_headless_surface", 257, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceCoverageReductionModeFeaturesNV",
      name: "PhysicalDeviceCoverageReductionModeFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "coverageReductionMode",
          name: "coverage_reduction_mode",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineCoverageReductionStateCreateInfoNV",
      name: "PipelineCoverageReductionStateCreateInfoNV",
      extends: [
        "VkPipelineMultisampleStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkPipelineCoverageReductionStateCreateFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "coverageReductionMode",
          name: "coverage_reduction_mode",
          ty: Named("VkCoverageReductionModeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
      extended: [],
    ),
    Struct(
      original_name: "VkFramebufferMixedSamplesCombinationNV",
      name: "FramebufferMixedSamplesCombinationNV",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "coverageReductionMode",
          name: "coverage_reduction_mode",
          ty: Named("VkCoverageReductionModeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizationSamples",
          name: "rasterization_samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthStencilSamples",
          name: "depth_stencil_samples",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorSamples",
          name: "color_samples",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
      name: "PhysicalDeviceShaderIntegerFunctions2FeaturesINTEL",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderIntegerFunctions2",
          name: "shader_integer_functions2",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_shader_integer_functions2", 210, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPerformanceValueINTEL",
      name: "PerformanceValueINTEL",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkPerformanceValueTypeINTEL"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "data",
          name: "data",
          ty: Named("VkPerformanceValueDataINTEL"),
          selector: Some("type"),
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_performance_query", 211, false),
      extended: [],
    ),
    Struct(
      original_name: "VkInitializePerformanceApiInfoINTEL",
      name: "InitializePerformanceApiInfoINTEL",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pUserData",
          name: "user_data",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_performance_query", 211, false),
      extended: [],
    ),
    Struct(
      original_name: "VkQueryPoolPerformanceQueryCreateInfoINTEL",
      name: "QueryPoolPerformanceQueryCreateInfoINTEL",
      extends: [
        "VkQueryPoolCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "performanceCountersSampling",
          name: "performance_counters_sampling",
          ty: Named("VkQueryPoolSamplingModeINTEL"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_performance_query", 211, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPerformanceMarkerInfoINTEL",
      name: "PerformanceMarkerInfoINTEL",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "marker",
          name: "marker",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_performance_query", 211, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPerformanceStreamMarkerInfoINTEL",
      name: "PerformanceStreamMarkerInfoINTEL",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "marker",
          name: "marker",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_performance_query", 211, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPerformanceOverrideInfoINTEL",
      name: "PerformanceOverrideInfoINTEL",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkPerformanceOverrideTypeINTEL"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "enable",
          name: "enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "parameter",
          name: "parameter",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_performance_query", 211, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPerformanceConfigurationAcquireInfoINTEL",
      name: "PerformanceConfigurationAcquireInfoINTEL",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkPerformanceConfigurationTypeINTEL"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_performance_query", 211, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderClockFeaturesKHR",
      name: "PhysicalDeviceShaderClockFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSubgroupClock",
          name: "shader_subgroup_clock",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDeviceClock",
          name: "shader_device_clock",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_shader_clock", 182, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceIndexTypeUint8FeaturesEXT",
      name: "PhysicalDeviceIndexTypeUint8FeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexTypeUint8",
          name: "index_type_uint8",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_index_type_uint8", 266, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderSMBuiltinsPropertiesNV",
      name: "PhysicalDeviceShaderSmBuiltinsPropertiesNV",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSMCount",
          name: "shader_sm_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderWarpsPerSM",
          name: "shader_warps_per_sm",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shader_sm_builtins", 155, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderSMBuiltinsFeaturesNV",
      name: "PhysicalDeviceShaderSmBuiltinsFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSMBuiltins",
          name: "shader_sm_builtins",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_shader_sm_builtins", 155, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentShaderInterlockFeaturesEXT",
      name: "PhysicalDeviceFragmentShaderInterlockFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShaderSampleInterlock",
          name: "fragment_shader_sample_interlock",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShaderPixelInterlock",
          name: "fragment_shader_pixel_interlock",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShaderShadingRateInterlock",
          name: "fragment_shader_shading_rate_interlock",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_fragment_shader_interlock", 252, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSeparateDepthStencilLayoutsFeatures",
      name: "PhysicalDeviceSeparateDepthStencilLayoutsFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "separateDepthStencilLayouts",
          name: "separate_depth_stencil_layouts",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkAttachmentReferenceStencilLayout",
      name: "AttachmentReferenceStencilLayout",
      extends: [
        "VkAttachmentReference2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilLayout",
          name: "stencil_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePrimitiveTopologyListRestartFeaturesEXT",
      name: "PhysicalDevicePrimitiveTopologyListRestartFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primitiveTopologyListRestart",
          name: "primitive_topology_list_restart",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primitiveTopologyPatchListRestart",
          name: "primitive_topology_patch_list_restart",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_primitive_topology_list_restart", 357, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAttachmentDescriptionStencilLayout",
      name: "AttachmentDescriptionStencilLayout",
      extends: [
        "VkAttachmentDescription2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilInitialLayout",
          name: "stencil_initial_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilFinalLayout",
          name: "stencil_final_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
      name: "PhysicalDevicePipelineExecutablePropertiesFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineExecutableInfo",
          name: "pipeline_executable_info",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineInfoKHR",
      name: "PipelineInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipeline",
          name: "pipeline",
          ty: Named("VkPipeline"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineExecutablePropertiesKHR",
      name: "PipelineExecutablePropertiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stages",
          name: "stages",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "description",
          name: "description",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subgroupSize",
          name: "subgroup_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineExecutableInfoKHR",
      name: "PipelineExecutableInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipeline",
          name: "pipeline",
          ty: Named("VkPipeline"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "executableIndex",
          name: "executable_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineExecutableStatisticKHR",
      name: "PipelineExecutableStatisticKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "description",
          name: "description",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkPipelineExecutableStatisticFormatKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "value",
          name: "value",
          ty: Named("VkPipelineExecutableStatisticValueKHR"),
          selector: Some("format"),
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineExecutableInternalRepresentationKHR",
      name: "PipelineExecutableInternalRepresentationKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "description",
          name: "description",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "isText",
          name: "is_text",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dataSize",
          name: "data_size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pData",
          name: "data",
          ty: Slice(Mutable, Native(Void), Variable("dataSize")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderDemoteToHelperInvocationFeatures",
      name: "PhysicalDeviceShaderDemoteToHelperInvocationFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDemoteToHelperInvocation",
          name: "shader_demote_to_helper_invocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceTexelBufferAlignmentFeaturesEXT",
      name: "PhysicalDeviceTexelBufferAlignmentFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "texelBufferAlignment",
          name: "texel_buffer_alignment",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_texel_buffer_alignment", 282, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceTexelBufferAlignmentProperties",
      name: "PhysicalDeviceTexelBufferAlignmentProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageTexelBufferOffsetAlignmentBytes",
          name: "storage_texel_buffer_offset_alignment_bytes",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageTexelBufferOffsetSingleTexelAlignment",
          name: "storage_texel_buffer_offset_single_texel_alignment",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformTexelBufferOffsetAlignmentBytes",
          name: "uniform_texel_buffer_offset_alignment_bytes",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformTexelBufferOffsetSingleTexelAlignment",
          name: "uniform_texel_buffer_offset_single_texel_alignment",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSubgroupSizeControlFeatures",
      name: "PhysicalDeviceSubgroupSizeControlFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subgroupSizeControl",
          name: "subgroup_size_control",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "computeFullSubgroups",
          name: "compute_full_subgroups",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSubgroupSizeControlProperties",
      name: "PhysicalDeviceSubgroupSizeControlProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minSubgroupSize",
          name: "min_subgroup_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "maxSubgroupSize",
          name: "max_subgroup_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "maxComputeWorkgroupSubgroups",
          name: "max_compute_workgroup_subgroups",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "requiredSubgroupSizeStages",
          name: "required_subgroup_size_stages",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineShaderStageRequiredSubgroupSizeCreateInfo",
      name: "PipelineShaderStageRequiredSubgroupSizeCreateInfo",
      extends: [
        "VkPipelineShaderStageCreateInfo",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "requiredSubgroupSize",
          name: "required_subgroup_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkSubpassShadingPipelineCreateInfoHUAWEI",
      name: "SubpassShadingPipelineCreateInfoHUAWEI",
      extends: [
        "VkComputePipelineCreateInfo",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderPass",
          name: "render_pass",
          ty: Named("VkRenderPass"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subpass",
          name: "subpass",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSubpassShadingPropertiesHUAWEI",
      name: "PhysicalDeviceSubpassShadingPropertiesHUAWEI",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSubpassShadingWorkgroupSizeAspectRatio",
          name: "max_subpass_shading_workgroup_size_aspect_ratio",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryOpaqueCaptureAddressAllocateInfo",
      name: "MemoryOpaqueCaptureAddressAllocateInfo",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "opaqueCaptureAddress",
          name: "opaque_capture_address",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceMemoryOpaqueCaptureAddressInfo",
      name: "DeviceMemoryOpaqueCaptureAddressInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceLineRasterizationFeaturesEXT",
      name: "PhysicalDeviceLineRasterizationFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rectangularLines",
          name: "rectangular_lines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bresenhamLines",
          name: "bresenham_lines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "smoothLines",
          name: "smooth_lines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stippledRectangularLines",
          name: "stippled_rectangular_lines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stippledBresenhamLines",
          name: "stippled_bresenham_lines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stippledSmoothLines",
          name: "stippled_smooth_lines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_line_rasterization", 260, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceLineRasterizationPropertiesEXT",
      name: "PhysicalDeviceLineRasterizationPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "lineSubPixelPrecisionBits",
          name: "line_sub_pixel_precision_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_line_rasterization", 260, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineRasterizationLineStateCreateInfoEXT",
      name: "PipelineRasterizationLineStateCreateInfoEXT",
      extends: [
        "VkPipelineRasterizationStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "lineRasterizationMode",
          name: "line_rasterization_mode",
          ty: Named("VkLineRasterizationModeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stippledLineEnable",
          name: "stippled_line_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "lineStippleFactor",
          name: "line_stipple_factor",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "lineStipplePattern",
          name: "line_stipple_pattern",
          ty: Native(UInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_line_rasterization", 260, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePipelineCreationCacheControlFeatures",
      name: "PhysicalDevicePipelineCreationCacheControlFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineCreationCacheControl",
          name: "pipeline_creation_cache_control",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVulkan11Features",
      name: "PhysicalDeviceVulkan11Features",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageBuffer16BitAccess",
          name: "storage_buffer16_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformAndStorageBuffer16BitAccess",
          name: "uniform_and_storage_buffer16_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storagePushConstant16",
          name: "storage_push_constant16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageInputOutput16",
          name: "storage_input_output16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multiview",
          name: "multiview",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multiviewGeometryShader",
          name: "multiview_geometry_shader",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multiviewTessellationShader",
          name: "multiview_tessellation_shader",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "variablePointersStorageBuffer",
          name: "variable_pointers_storage_buffer",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "variablePointers",
          name: "variable_pointers",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "protectedMemory",
          name: "protected_memory",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerYcbcrConversion",
          name: "sampler_ycbcr_conversion",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDrawParameters",
          name: "shader_draw_parameters",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVulkan11Properties",
      name: "PhysicalDeviceVulkan11Properties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceUUID",
          name: "device_uuid",
          ty: Array(Native(UInt(1)), Constant("VK_UUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverUUID",
          name: "driver_uuid",
          ty: Array(Native(UInt(1)), Constant("VK_UUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceLUID",
          name: "device_luid",
          ty: Array(Native(UInt(1)), Constant("VK_LUID_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceNodeMask",
          name: "device_node_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceLUIDValid",
          name: "device_luid_valid",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subgroupSize",
          name: "subgroup_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "subgroupSupportedStages",
          name: "subgroup_supported_stages",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "subgroupSupportedOperations",
          name: "subgroup_supported_operations",
          ty: Named("VkSubgroupFeatureFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "subgroupQuadOperationsInAllStages",
          name: "subgroup_quad_operations_in_all_stages",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pointClippingBehavior",
          name: "point_clipping_behavior",
          ty: Named("VkPointClippingBehavior"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMultiviewViewCount",
          name: "max_multiview_view_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMultiviewInstanceIndex",
          name: "max_multiview_instance_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "protectedNoFault",
          name: "protected_no_fault",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerSetDescriptors",
          name: "max_per_set_descriptors",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMemoryAllocationSize",
          name: "max_memory_allocation_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVulkan12Features",
      name: "PhysicalDeviceVulkan12Features",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerMirrorClampToEdge",
          name: "sampler_mirror_clamp_to_edge",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drawIndirectCount",
          name: "draw_indirect_count",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageBuffer8BitAccess",
          name: "storage_buffer8_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformAndStorageBuffer8BitAccess",
          name: "uniform_and_storage_buffer8_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storagePushConstant8",
          name: "storage_push_constant8",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderBufferInt64Atomics",
          name: "shader_buffer_int64_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSharedInt64Atomics",
          name: "shader_shared_int64_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderFloat16",
          name: "shader_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInt8",
          name: "shader_int8",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorIndexing",
          name: "descriptor_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInputAttachmentArrayDynamicIndexing",
          name: "shader_input_attachment_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformTexelBufferArrayDynamicIndexing",
          name: "shader_uniform_texel_buffer_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageTexelBufferArrayDynamicIndexing",
          name: "shader_storage_texel_buffer_array_dynamic_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformBufferArrayNonUniformIndexing",
          name: "shader_uniform_buffer_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSampledImageArrayNonUniformIndexing",
          name: "shader_sampled_image_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageBufferArrayNonUniformIndexing",
          name: "shader_storage_buffer_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageArrayNonUniformIndexing",
          name: "shader_storage_image_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInputAttachmentArrayNonUniformIndexing",
          name: "shader_input_attachment_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformTexelBufferArrayNonUniformIndexing",
          name: "shader_uniform_texel_buffer_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageTexelBufferArrayNonUniformIndexing",
          name: "shader_storage_texel_buffer_array_non_uniform_indexing",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingUniformBufferUpdateAfterBind",
          name: "descriptor_binding_uniform_buffer_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingSampledImageUpdateAfterBind",
          name: "descriptor_binding_sampled_image_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingStorageImageUpdateAfterBind",
          name: "descriptor_binding_storage_image_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingStorageBufferUpdateAfterBind",
          name: "descriptor_binding_storage_buffer_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingUniformTexelBufferUpdateAfterBind",
          name: "descriptor_binding_uniform_texel_buffer_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingStorageTexelBufferUpdateAfterBind",
          name: "descriptor_binding_storage_texel_buffer_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingUpdateUnusedWhilePending",
          name: "descriptor_binding_update_unused_while_pending",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingPartiallyBound",
          name: "descriptor_binding_partially_bound",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingVariableDescriptorCount",
          name: "descriptor_binding_variable_descriptor_count",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "runtimeDescriptorArray",
          name: "runtime_descriptor_array",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerFilterMinmax",
          name: "sampler_filter_minmax",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "scalarBlockLayout",
          name: "scalar_block_layout",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imagelessFramebuffer",
          name: "imageless_framebuffer",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformBufferStandardLayout",
          name: "uniform_buffer_standard_layout",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSubgroupExtendedTypes",
          name: "shader_subgroup_extended_types",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "separateDepthStencilLayouts",
          name: "separate_depth_stencil_layouts",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "hostQueryReset",
          name: "host_query_reset",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "timelineSemaphore",
          name: "timeline_semaphore",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddress",
          name: "buffer_device_address",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddressCaptureReplay",
          name: "buffer_device_address_capture_replay",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferDeviceAddressMultiDevice",
          name: "buffer_device_address_multi_device",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vulkanMemoryModel",
          name: "vulkan_memory_model",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vulkanMemoryModelDeviceScope",
          name: "vulkan_memory_model_device_scope",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vulkanMemoryModelAvailabilityVisibilityChains",
          name: "vulkan_memory_model_availability_visibility_chains",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderOutputViewportIndex",
          name: "shader_output_viewport_index",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderOutputLayer",
          name: "shader_output_layer",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subgroupBroadcastDynamicId",
          name: "subgroup_broadcast_dynamic_id",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVulkan12Properties",
      name: "PhysicalDeviceVulkan12Properties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverID",
          name: "driver_id",
          ty: Named("VkDriverId"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverName",
          name: "driver_name",
          ty: Array(Native(Char), Constant("VK_MAX_DRIVER_NAME_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "driverInfo",
          name: "driver_info",
          ty: Array(Native(Char), Constant("VK_MAX_DRIVER_INFO_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "conformanceVersion",
          name: "conformance_version",
          ty: Named("VkConformanceVersion"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "denormBehaviorIndependence",
          name: "denorm_behavior_independence",
          ty: Named("VkShaderFloatControlsIndependence"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "roundingModeIndependence",
          name: "rounding_mode_independence",
          ty: Named("VkShaderFloatControlsIndependence"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSignedZeroInfNanPreserveFloat16",
          name: "shader_signed_zero_inf_nan_preserve_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSignedZeroInfNanPreserveFloat32",
          name: "shader_signed_zero_inf_nan_preserve_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSignedZeroInfNanPreserveFloat64",
          name: "shader_signed_zero_inf_nan_preserve_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormPreserveFloat16",
          name: "shader_denorm_preserve_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormPreserveFloat32",
          name: "shader_denorm_preserve_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormPreserveFloat64",
          name: "shader_denorm_preserve_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormFlushToZeroFloat16",
          name: "shader_denorm_flush_to_zero_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormFlushToZeroFloat32",
          name: "shader_denorm_flush_to_zero_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDenormFlushToZeroFloat64",
          name: "shader_denorm_flush_to_zero_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTEFloat16",
          name: "shader_rounding_mode_rte_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTEFloat32",
          name: "shader_rounding_mode_rte_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTEFloat64",
          name: "shader_rounding_mode_rte_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTZFloat16",
          name: "shader_rounding_mode_rtz_float16",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTZFloat32",
          name: "shader_rounding_mode_rtz_float32",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderRoundingModeRTZFloat64",
          name: "shader_rounding_mode_rtz_float64",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxUpdateAfterBindDescriptorsInAllPools",
          name: "max_update_after_bind_descriptors_in_all_pools",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderUniformBufferArrayNonUniformIndexingNative",
          name: "shader_uniform_buffer_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSampledImageArrayNonUniformIndexingNative",
          name: "shader_sampled_image_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageBufferArrayNonUniformIndexingNative",
          name: "shader_storage_buffer_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderStorageImageArrayNonUniformIndexingNative",
          name: "shader_storage_image_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderInputAttachmentArrayNonUniformIndexingNative",
          name: "shader_input_attachment_array_non_uniform_indexing_native",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "robustBufferAccessUpdateAfterBind",
          name: "robust_buffer_access_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "quadDivergentImplicitLod",
          name: "quad_divergent_implicit_lod",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindSamplers",
          name: "max_per_stage_descriptor_update_after_bind_samplers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindUniformBuffers",
          name: "max_per_stage_descriptor_update_after_bind_uniform_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindStorageBuffers",
          name: "max_per_stage_descriptor_update_after_bind_storage_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindSampledImages",
          name: "max_per_stage_descriptor_update_after_bind_sampled_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindStorageImages",
          name: "max_per_stage_descriptor_update_after_bind_storage_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindInputAttachments",
          name: "max_per_stage_descriptor_update_after_bind_input_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageUpdateAfterBindResources",
          name: "max_per_stage_update_after_bind_resources",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindSamplers",
          name: "max_descriptor_set_update_after_bind_samplers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindUniformBuffers",
          name: "max_descriptor_set_update_after_bind_uniform_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindUniformBuffersDynamic",
          name: "max_descriptor_set_update_after_bind_uniform_buffers_dynamic",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindStorageBuffers",
          name: "max_descriptor_set_update_after_bind_storage_buffers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindStorageBuffersDynamic",
          name: "max_descriptor_set_update_after_bind_storage_buffers_dynamic",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindSampledImages",
          name: "max_descriptor_set_update_after_bind_sampled_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindStorageImages",
          name: "max_descriptor_set_update_after_bind_storage_images",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindInputAttachments",
          name: "max_descriptor_set_update_after_bind_input_attachments",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedDepthResolveModes",
          name: "supported_depth_resolve_modes",
          ty: Named("VkResolveModeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supportedStencilResolveModes",
          name: "supported_stencil_resolve_modes",
          ty: Named("VkResolveModeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "independentResolveNone",
          name: "independent_resolve_none",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "independentResolve",
          name: "independent_resolve",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "filterMinmaxSingleComponentFormats",
          name: "filter_minmax_single_component_formats",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "filterMinmaxImageComponentMapping",
          name: "filter_minmax_image_component_mapping",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxTimelineSemaphoreValueDifference",
          name: "max_timeline_semaphore_value_difference",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "framebufferIntegerColorSampleCounts",
          name: "framebuffer_integer_color_sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_2,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVulkan13Features",
      name: "PhysicalDeviceVulkan13Features",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "robustImageAccess",
          name: "robust_image_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inlineUniformBlock",
          name: "inline_uniform_block",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorBindingInlineUniformBlockUpdateAfterBind",
          name: "descriptor_binding_inline_uniform_block_update_after_bind",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineCreationCacheControl",
          name: "pipeline_creation_cache_control",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "privateData",
          name: "private_data",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderDemoteToHelperInvocation",
          name: "shader_demote_to_helper_invocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderTerminateInvocation",
          name: "shader_terminate_invocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subgroupSizeControl",
          name: "subgroup_size_control",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "computeFullSubgroups",
          name: "compute_full_subgroups",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "synchronization2",
          name: "synchronization2",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "textureCompressionASTC_HDR",
          name: "texture_compression_astc_hdr",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderZeroInitializeWorkgroupMemory",
          name: "shader_zero_initialize_workgroup_memory",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dynamicRendering",
          name: "dynamic_rendering",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderIntegerDotProduct",
          name: "shader_integer_dot_product",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maintenance4",
          name: "maintenance4",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVulkan13Properties",
      name: "PhysicalDeviceVulkan13Properties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minSubgroupSize",
          name: "min_subgroup_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "maxSubgroupSize",
          name: "max_subgroup_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "maxComputeWorkgroupSubgroups",
          name: "max_compute_workgroup_subgroups",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "requiredSubgroupSizeStages",
          name: "required_subgroup_size_stages",
          ty: Named("VkShaderStageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxInlineUniformBlockSize",
          name: "max_inline_uniform_block_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorInlineUniformBlocks",
          name: "max_per_stage_descriptor_inline_uniform_blocks",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPerStageDescriptorUpdateAfterBindInlineUniformBlocks",
          name: "max_per_stage_descriptor_update_after_bind_inline_uniform_blocks",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetInlineUniformBlocks",
          name: "max_descriptor_set_inline_uniform_blocks",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDescriptorSetUpdateAfterBindInlineUniformBlocks",
          name: "max_descriptor_set_update_after_bind_inline_uniform_blocks",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxInlineUniformTotalSize",
          name: "max_inline_uniform_total_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct8BitUnsignedAccelerated",
          name: "integer_dot_product8_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct8BitSignedAccelerated",
          name: "integer_dot_product8_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct8BitMixedSignednessAccelerated",
          name: "integer_dot_product8_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct4x8BitPackedUnsignedAccelerated",
          name: "integer_dot_product4x8_bit_packed_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct4x8BitPackedSignedAccelerated",
          name: "integer_dot_product4x8_bit_packed_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct4x8BitPackedMixedSignednessAccelerated",
          name: "integer_dot_product4x8_bit_packed_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct16BitUnsignedAccelerated",
          name: "integer_dot_product16_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct16BitSignedAccelerated",
          name: "integer_dot_product16_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct16BitMixedSignednessAccelerated",
          name: "integer_dot_product16_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct32BitUnsignedAccelerated",
          name: "integer_dot_product32_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct32BitSignedAccelerated",
          name: "integer_dot_product32_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct32BitMixedSignednessAccelerated",
          name: "integer_dot_product32_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct64BitUnsignedAccelerated",
          name: "integer_dot_product64_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct64BitSignedAccelerated",
          name: "integer_dot_product64_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct64BitMixedSignednessAccelerated",
          name: "integer_dot_product64_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating8BitUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating8_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating8BitSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating8_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating8_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating4x8_bit_packed_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating4x8_bit_packed_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating4x8_bit_packed_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating16BitUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating16_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating16BitSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating16_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating16_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating32BitUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating32_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating32BitSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating32_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating32_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating64BitUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating64_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating64BitSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating64_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating64_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageTexelBufferOffsetAlignmentBytes",
          name: "storage_texel_buffer_offset_alignment_bytes",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storageTexelBufferOffsetSingleTexelAlignment",
          name: "storage_texel_buffer_offset_single_texel_alignment",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformTexelBufferOffsetAlignmentBytes",
          name: "uniform_texel_buffer_offset_alignment_bytes",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uniformTexelBufferOffsetSingleTexelAlignment",
          name: "uniform_texel_buffer_offset_single_texel_alignment",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBufferSize",
          name: "max_buffer_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineCompilerControlCreateInfoAMD",
      name: "PipelineCompilerControlCreateInfoAMD",
      extends: [
        "VkGraphicsPipelineCreateInfo",
        "VkComputePipelineCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "compilerControlFlags",
          name: "compiler_control_flags",
          ty: Named("VkPipelineCompilerControlFlagsAMD"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_pipeline_compiler_control", 184, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceCoherentMemoryFeaturesAMD",
      name: "PhysicalDeviceCoherentMemoryFeaturesAMD",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceCoherentMemory",
          name: "device_coherent_memory",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_AMD_device_coherent_memory", 230, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceToolProperties",
      name: "PhysicalDeviceToolProperties",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "name",
          name: "name",
          ty: Array(Native(Char), Constant("VK_MAX_EXTENSION_NAME_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "version",
          name: "version",
          ty: Array(Native(Char), Constant("VK_MAX_EXTENSION_NAME_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "purposes",
          name: "purposes",
          ty: Named("VkToolPurposeFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "description",
          name: "description",
          ty: Array(Native(Char), Constant("VK_MAX_DESCRIPTION_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layer",
          name: "layer",
          ty: Array(Native(Char), Constant("VK_MAX_EXTENSION_NAME_SIZE")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkSamplerCustomBorderColorCreateInfoEXT",
      name: "SamplerCustomBorderColorCreateInfoEXT",
      extends: [
        "VkSamplerCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "customBorderColor",
          name: "custom_border_color",
          ty: Named("VkClearColorValue"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_custom_border_color", 288, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceCustomBorderColorPropertiesEXT",
      name: "PhysicalDeviceCustomBorderColorPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxCustomBorderColorSamplers",
          name: "max_custom_border_color_samplers",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_custom_border_color", 288, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceCustomBorderColorFeaturesEXT",
      name: "PhysicalDeviceCustomBorderColorFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "customBorderColors",
          name: "custom_border_colors",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "customBorderColorWithoutFormat",
          name: "custom_border_color_without_format",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_custom_border_color", 288, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSamplerBorderColorComponentMappingCreateInfoEXT",
      name: "SamplerBorderColorComponentMappingCreateInfoEXT",
      extends: [
        "VkSamplerCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "components",
          name: "components",
          ty: Named("VkComponentMapping"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srgb",
          name: "srgb",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_border_color_swizzle", 412, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceBorderColorSwizzleFeaturesEXT",
      name: "PhysicalDeviceBorderColorSwizzleFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "borderColorSwizzle",
          name: "border_color_swizzle",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "borderColorSwizzleFromImage",
          name: "border_color_swizzle_from_image",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_border_color_swizzle", 412, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureGeometryTrianglesDataKHR",
      name: "AccelerationStructureGeometryTrianglesDataKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexFormat",
          name: "vertex_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexData",
          name: "vertex_data",
          ty: Named("VkDeviceOrHostAddressConstKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "vertexStride",
          name: "vertex_stride",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVertex",
          name: "max_vertex",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexType",
          name: "index_type",
          ty: Named("VkIndexType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "indexData",
          name: "index_data",
          ty: Named("VkDeviceOrHostAddressConstKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "transformData",
          name: "transform_data",
          ty: Named("VkDeviceOrHostAddressConstKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [
        "VkAccelerationStructureGeometryMotionTrianglesDataNV",
      ],
    ),
    Struct(
      original_name: "VkAccelerationStructureGeometryAabbsDataKHR",
      name: "AccelerationStructureGeometryAabbsDataKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "data",
          name: "data",
          ty: Named("VkDeviceOrHostAddressConstKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "stride",
          name: "stride",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureGeometryInstancesDataKHR",
      name: "AccelerationStructureGeometryInstancesDataKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "arrayOfPointers",
          name: "array_of_pointers",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "data",
          name: "data",
          ty: Named("VkDeviceOrHostAddressConstKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureGeometryKHR",
      name: "AccelerationStructureGeometryKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "geometryType",
          name: "geometry_type",
          ty: Named("VkGeometryTypeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "geometry",
          name: "geometry",
          ty: Named("VkAccelerationStructureGeometryDataKHR"),
          selector: Some("geometryType"),
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkGeometryFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureBuildGeometryInfoKHR",
      name: "AccelerationStructureBuildGeometryInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkAccelerationStructureTypeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkBuildAccelerationStructureFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mode",
          name: "mode",
          ty: Named("VkBuildAccelerationStructureModeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "srcAccelerationStructure",
          name: "src_acceleration_structure",
          ty: Named("VkAccelerationStructureKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "dstAccelerationStructure",
          name: "dst_acceleration_structure",
          ty: Named("VkAccelerationStructureKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "geometryCount",
          name: "geometry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pGeometries",
          name: "geometries",
          ty: Slice(Const, Named("VkAccelerationStructureGeometryKHR"), Variable("geometryCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppGeometries",
          name: "pp_geometries",
          ty: Slice(Const, Slice(Const, Named("VkAccelerationStructureGeometryKHR"), ConstantInt(1)), Variable("geometryCount")),
          selector: None,
          selection: None,
          optional: Sometimes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "scratchData",
          name: "scratch_data",
          ty: Named("VkDeviceOrHostAddressKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureBuildRangeInfoKHR",
      name: "AccelerationStructureBuildRangeInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "primitiveCount",
          name: "primitive_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primitiveOffset",
          name: "primitive_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "firstVertex",
          name: "first_vertex",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformOffset",
          name: "transform_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureCreateInfoKHR",
      name: "AccelerationStructureCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "createFlags",
          name: "create_flags",
          ty: Named("VkAccelerationStructureCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkAccelerationStructureTypeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceAddress",
          name: "device_address",
          ty: Named("VkDeviceAddress"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [
        "VkAccelerationStructureMotionInfoNV",
      ],
    ),
    Struct(
      original_name: "VkAabbPositionsKHR",
      name: "AabbPositionsKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "minX",
          name: "min_x",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minY",
          name: "min_y",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minZ",
          name: "min_z",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxX",
          name: "max_x",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxY",
          name: "max_y",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxZ",
          name: "max_z",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkTransformMatrixKHR",
      name: "TransformMatrixKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "matrix",
          name: "matrix",
          ty: Array(Native(Float), ConstantInt(3)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureInstanceKHR",
      name: "AccelerationStructureInstanceKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "transform",
          name: "transform",
          ty: Named("VkTransformMatrixKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceCustomIndex",
          name: "instance_custom_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mask",
          name: "mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceShaderBindingTableRecordOffset",
          name: "instance_shader_binding_table_record_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkGeometryInstanceFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureReference",
          name: "acceleration_structure_reference",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureDeviceAddressInfoKHR",
      name: "AccelerationStructureDeviceAddressInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructure",
          name: "acceleration_structure",
          ty: Named("VkAccelerationStructureKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureVersionInfoKHR",
      name: "AccelerationStructureVersionInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVersionData",
          name: "version_data",
          ty: Slice(Const, Native(UInt(1)), Multiply(ConstantInt(2), Constant("VK_UUID_SIZE"))),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCopyAccelerationStructureInfoKHR",
      name: "CopyAccelerationStructureInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "src",
          name: "src",
          ty: Named("VkAccelerationStructureKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dst",
          name: "dst",
          ty: Named("VkAccelerationStructureKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mode",
          name: "mode",
          ty: Named("VkCopyAccelerationStructureModeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCopyAccelerationStructureToMemoryInfoKHR",
      name: "CopyAccelerationStructureToMemoryInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "src",
          name: "src",
          ty: Named("VkAccelerationStructureKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dst",
          name: "dst",
          ty: Named("VkDeviceOrHostAddressKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "mode",
          name: "mode",
          ty: Named("VkCopyAccelerationStructureModeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCopyMemoryToAccelerationStructureInfoKHR",
      name: "CopyMemoryToAccelerationStructureInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "src",
          name: "src",
          ty: Named("VkDeviceOrHostAddressConstKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "dst",
          name: "dst",
          ty: Named("VkAccelerationStructureKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mode",
          name: "mode",
          ty: Named("VkCopyAccelerationStructureModeKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRayTracingPipelineInterfaceCreateInfoKHR",
      name: "RayTracingPipelineInterfaceCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPipelineRayPayloadSize",
          name: "max_pipeline_ray_payload_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPipelineRayHitAttributeSize",
          name: "max_pipeline_ray_hit_attribute_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineLibraryCreateInfoKHR",
      name: "PipelineLibraryCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "libraryCount",
          name: "library_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pLibraries",
          name: "libraries",
          ty: Slice(Const, Named("VkPipeline"), Variable("libraryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_pipeline_library", 291, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExtendedDynamicStateFeaturesEXT",
      name: "PhysicalDeviceExtendedDynamicStateFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extendedDynamicState",
          name: "extended_dynamic_state",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExtendedDynamicState2FeaturesEXT",
      name: "PhysicalDeviceExtendedDynamicState2FeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extendedDynamicState2",
          name: "extended_dynamic_state2",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extendedDynamicState2LogicOp",
          name: "extended_dynamic_state2_logic_op",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extendedDynamicState2PatchControlPoints",
          name: "extended_dynamic_state2_patch_control_points",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRenderPassTransformBeginInfoQCOM",
      name: "RenderPassTransformBeginInfoQCOM",
      extends: [
        "VkRenderPassBeginInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transform",
          name: "transform",
          ty: Named("VkSurfaceTransformFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_QCOM_render_pass_transform", 283, true),
      extended: [],
    ),
    Struct(
      original_name: "VkCopyCommandTransformInfoQCOM",
      name: "CopyCommandTransformInfoQCOM",
      extends: [
        "VkBufferImageCopy2",
        "VkImageBlit2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "transform",
          name: "transform",
          ty: Named("VkSurfaceTransformFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_QCOM_rotated_copy_commands", 334, true),
      extended: [],
    ),
    Struct(
      original_name: "VkCommandBufferInheritanceRenderPassTransformInfoQCOM",
      name: "CommandBufferInheritanceRenderPassTransformInfoQCOM",
      extends: [
        "VkCommandBufferInheritanceInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transform",
          name: "transform",
          ty: Named("VkSurfaceTransformFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "renderArea",
          name: "render_area",
          ty: Named("VkRect2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_QCOM_render_pass_transform", 283, true),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDiagnosticsConfigFeaturesNV",
      name: "PhysicalDeviceDiagnosticsConfigFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "diagnosticsConfig",
          name: "diagnostics_config",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_diagnostics_config", 301, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDeviceDiagnosticsConfigCreateInfoNV",
      name: "DeviceDiagnosticsConfigCreateInfoNV",
      extends: [
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDeviceDiagnosticsConfigFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_device_diagnostics_config", 301, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceZeroInitializeWorkgroupMemoryFeatures",
      name: "PhysicalDeviceZeroInitializeWorkgroupMemoryFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderZeroInitializeWorkgroupMemory",
          name: "shader_zero_initialize_workgroup_memory",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR",
      name: "PhysicalDeviceShaderSubgroupUniformControlFlowFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSubgroupUniformControlFlow",
          name: "shader_subgroup_uniform_control_flow",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_shader_subgroup_uniform_control_flow", 324, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRobustness2FeaturesEXT",
      name: "PhysicalDeviceRobustness2FeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "robustBufferAccess2",
          name: "robust_buffer_access2",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "robustImageAccess2",
          name: "robust_image_access2",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "nullDescriptor",
          name: "null_descriptor",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_robustness2", 287, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRobustness2PropertiesEXT",
      name: "PhysicalDeviceRobustness2PropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "robustStorageBufferAccessSizeAlignment",
          name: "robust_storage_buffer_access_size_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "robustUniformBufferAccessSizeAlignment",
          name: "robust_uniform_buffer_access_size_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_robustness2", 287, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceImageRobustnessFeatures",
      name: "PhysicalDeviceImageRobustnessFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "robustImageAccess",
          name: "robust_image_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR",
      name: "PhysicalDeviceWorkgroupMemoryExplicitLayoutFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "workgroupMemoryExplicitLayout",
          name: "workgroup_memory_explicit_layout",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "workgroupMemoryExplicitLayoutScalarBlockLayout",
          name: "workgroup_memory_explicit_layout_scalar_block_layout",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "workgroupMemoryExplicitLayout8BitAccess",
          name: "workgroup_memory_explicit_layout8_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "workgroupMemoryExplicitLayout16BitAccess",
          name: "workgroup_memory_explicit_layout16_bit_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_workgroup_memory_explicit_layout", 337, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePortabilitySubsetFeaturesKHR",
      name: "PhysicalDevicePortabilitySubsetFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "constantAlphaColorBlendFactors",
          name: "constant_alpha_color_blend_factors",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "events",
          name: "events",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageViewFormatReinterpretation",
          name: "image_view_format_reinterpretation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageViewFormatSwizzle",
          name: "image_view_format_swizzle",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageView2DOn3DImage",
          name: "image_view2_d_on3_d_image",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "multisampleArrayImage",
          name: "multisample_array_image",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mutableComparisonSamplers",
          name: "mutable_comparison_samplers",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pointPolygons",
          name: "point_polygons",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerMipLodBias",
          name: "sampler_mip_lod_bias",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "separateStencilMaskRef",
          name: "separate_stencil_mask_ref",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderSampleRateInterpolationFunctions",
          name: "shader_sample_rate_interpolation_functions",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tessellationIsolines",
          name: "tessellation_isolines",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tessellationPointMode",
          name: "tessellation_point_mode",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "triangleFans",
          name: "triangle_fans",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexAttributeAccessBeyondStride",
          name: "vertex_attribute_access_beyond_stride",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_portability_subset", 164, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevicePortabilitySubsetPropertiesKHR",
      name: "PhysicalDevicePortabilitySubsetPropertiesKHR",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minVertexInputBindingStrideAlignment",
          name: "min_vertex_input_binding_stride_alignment",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_portability_subset", 164, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDevice4444FormatsFeaturesEXT",
      name: "PhysicalDevice4444FormatsFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "formatA4R4G4B4",
          name: "format_a4r4g4b4",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "formatA4B4G4R4",
          name: "format_a4b4g4r4",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_4444_formats", 341, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSubpassShadingFeaturesHUAWEI",
      name: "PhysicalDeviceSubpassShadingFeaturesHUAWEI",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subpassShading",
          name: "subpass_shading",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBufferCopy2",
      name: "BufferCopy2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_COPY_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcOffset",
          name: "src_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstOffset",
          name: "dst_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkImageCopy2",
      name: "ImageCopy2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_COPY_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcSubresource",
          name: "src_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcOffset",
          name: "src_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSubresource",
          name: "dst_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstOffset",
          name: "dst_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extent",
          name: "extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkImageBlit2",
      name: "ImageBlit2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_BLIT_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcSubresource",
          name: "src_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcOffsets",
          name: "src_offsets",
          ty: Array(Named("VkOffset3D"), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSubresource",
          name: "dst_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstOffsets",
          name: "dst_offsets",
          ty: Array(Named("VkOffset3D"), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkBufferImageCopy2",
      name: "BufferImageCopy2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferOffset",
          name: "buffer_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferRowLength",
          name: "buffer_row_length",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferImageHeight",
          name: "buffer_image_height",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageSubresource",
          name: "image_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageOffset",
          name: "image_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageExtent",
          name: "image_extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkImageResolve2",
      name: "ImageResolve2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcSubresource",
          name: "src_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcOffset",
          name: "src_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstSubresource",
          name: "dst_subresource",
          ty: Named("VkImageSubresourceLayers"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstOffset",
          name: "dst_offset",
          ty: Named("VkOffset3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extent",
          name: "extent",
          ty: Named("VkExtent3D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkCopyBufferInfo2",
      name: "CopyBufferInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcBuffer",
          name: "src_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstBuffer",
          name: "dst_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "regionCount",
          name: "region_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pRegions",
          name: "regions",
          ty: Slice(Const, Named("VkBufferCopy2"), Variable("regionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkCopyImageInfo2",
      name: "CopyImageInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcImage",
          name: "src_image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcImageLayout",
          name: "src_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstImage",
          name: "dst_image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstImageLayout",
          name: "dst_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "regionCount",
          name: "region_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pRegions",
          name: "regions",
          ty: Slice(Const, Named("VkImageCopy2"), Variable("regionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkBlitImageInfo2",
      name: "BlitImageInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcImage",
          name: "src_image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcImageLayout",
          name: "src_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstImage",
          name: "dst_image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstImageLayout",
          name: "dst_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "regionCount",
          name: "region_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pRegions",
          name: "regions",
          ty: Slice(Const, Named("VkImageBlit2"), Variable("regionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "filter",
          name: "filter",
          ty: Named("VkFilter"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkCopyBufferToImageInfo2",
      name: "CopyBufferToImageInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcBuffer",
          name: "src_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstImage",
          name: "dst_image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstImageLayout",
          name: "dst_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "regionCount",
          name: "region_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pRegions",
          name: "regions",
          ty: Slice(Const, Named("VkBufferImageCopy2"), Variable("regionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkCopyImageToBufferInfo2",
      name: "CopyImageToBufferInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcImage",
          name: "src_image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcImageLayout",
          name: "src_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstBuffer",
          name: "dst_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "regionCount",
          name: "region_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pRegions",
          name: "regions",
          ty: Slice(Const, Named("VkBufferImageCopy2"), Variable("regionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkResolveImageInfo2",
      name: "ResolveImageInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcImage",
          name: "src_image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcImageLayout",
          name: "src_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstImage",
          name: "dst_image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstImageLayout",
          name: "dst_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "regionCount",
          name: "region_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pRegions",
          name: "regions",
          ty: Slice(Const, Named("VkImageResolve2"), Variable("regionCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderImageAtomicInt64FeaturesEXT",
      name: "PhysicalDeviceShaderImageAtomicInt64FeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderImageInt64Atomics",
          name: "shader_image_int64_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sparseImageInt64Atomics",
          name: "sparse_image_int64_atomics",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_shader_image_atomic_int64", 235, false),
      extended: [],
    ),
    Struct(
      original_name: "VkFragmentShadingRateAttachmentInfoKHR",
      name: "FragmentShadingRateAttachmentInfoKHR",
      extends: [
        "VkSubpassDescription2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pFragmentShadingRateAttachment",
          name: "fragment_shading_rate_attachment",
          ty: Pointer(Const, Named("VkAttachmentReference2")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRateAttachmentTexelSize",
          name: "shading_rate_attachment_texel_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineFragmentShadingRateStateCreateInfoKHR",
      name: "PipelineFragmentShadingRateStateCreateInfoKHR",
      extends: [
        "VkGraphicsPipelineCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentSize",
          name: "fragment_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "combinerOps",
          name: "combiner_ops",
          ty: Array(Named("VkFragmentShadingRateCombinerOpKHR"), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentShadingRateFeaturesKHR",
      name: "PhysicalDeviceFragmentShadingRateFeaturesKHR",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pipelineFragmentShadingRate",
          name: "pipeline_fragment_shading_rate",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primitiveFragmentShadingRate",
          name: "primitive_fragment_shading_rate",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachmentFragmentShadingRate",
          name: "attachment_fragment_shading_rate",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentShadingRatePropertiesKHR",
      name: "PhysicalDeviceFragmentShadingRatePropertiesKHR",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minFragmentShadingRateAttachmentTexelSize",
          name: "min_fragment_shading_rate_attachment_texel_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentShadingRateAttachmentTexelSize",
          name: "max_fragment_shading_rate_attachment_texel_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentShadingRateAttachmentTexelSizeAspectRatio",
          name: "max_fragment_shading_rate_attachment_texel_size_aspect_ratio",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primitiveFragmentShadingRateWithMultipleViewports",
          name: "primitive_fragment_shading_rate_with_multiple_viewports",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layeredShadingRateAttachments",
          name: "layered_shading_rate_attachments",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateNonTrivialCombinerOps",
          name: "fragment_shading_rate_non_trivial_combiner_ops",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentSize",
          name: "max_fragment_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentSizeAspectRatio",
          name: "max_fragment_size_aspect_ratio",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentShadingRateCoverageSamples",
          name: "max_fragment_shading_rate_coverage_samples",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentShadingRateRasterizationSamples",
          name: "max_fragment_shading_rate_rasterization_samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateWithShaderDepthStencilWrites",
          name: "fragment_shading_rate_with_shader_depth_stencil_writes",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateWithSampleMask",
          name: "fragment_shading_rate_with_sample_mask",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateWithShaderSampleMask",
          name: "fragment_shading_rate_with_shader_sample_mask",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateWithConservativeRasterization",
          name: "fragment_shading_rate_with_conservative_rasterization",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateWithFragmentShaderInterlock",
          name: "fragment_shading_rate_with_fragment_shader_interlock",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateWithCustomSampleLocations",
          name: "fragment_shading_rate_with_custom_sample_locations",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateStrictMultiplyCombiner",
          name: "fragment_shading_rate_strict_multiply_combiner",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentShadingRateKHR",
      name: "PhysicalDeviceFragmentShadingRateKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sampleCounts",
          name: "sample_counts",
          ty: Named("VkSampleCountFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentSize",
          name: "fragment_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderTerminateInvocationFeatures",
      name: "PhysicalDeviceShaderTerminateInvocationFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "shaderTerminateInvocation",
          name: "shader_terminate_invocation",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentShadingRateEnumsFeaturesNV",
      name: "PhysicalDeviceFragmentShadingRateEnumsFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fragmentShadingRateEnums",
          name: "fragment_shading_rate_enums",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supersampleFragmentShadingRates",
          name: "supersample_fragment_shading_rates",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "noInvocationFragmentShadingRates",
          name: "no_invocation_fragment_shading_rates",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceFragmentShadingRateEnumsPropertiesNV",
      name: "PhysicalDeviceFragmentShadingRateEnumsPropertiesNV",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFragmentShadingRateInvocationCount",
          name: "max_fragment_shading_rate_invocation_count",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineFragmentShadingRateEnumStateCreateInfoNV",
      name: "PipelineFragmentShadingRateEnumStateCreateInfoNV",
      extends: [
        "VkGraphicsPipelineCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRateType",
          name: "shading_rate_type",
          ty: Named("VkFragmentShadingRateTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRate",
          name: "shading_rate",
          ty: Named("VkFragmentShadingRateNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "combinerOps",
          name: "combiner_ops",
          ty: Array(Named("VkFragmentShadingRateCombinerOpKHR"), ConstantInt(2)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureBuildSizesInfoKHR",
      name: "AccelerationStructureBuildSizesInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureSize",
          name: "acceleration_structure_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "updateScratchSize",
          name: "update_scratch_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buildScratchSize",
          name: "build_scratch_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceMutableDescriptorTypeFeaturesVALVE",
      name: "PhysicalDeviceMutableDescriptorTypeFeaturesVALVE",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "mutableDescriptorType",
          name: "mutable_descriptor_type",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMutableDescriptorTypeListVALVE",
      name: "MutableDescriptorTypeListVALVE",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "descriptorTypeCount",
          name: "descriptor_type_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDescriptorTypes",
          name: "descriptor_types",
          ty: Slice(Const, Named("VkDescriptorType"), Variable("descriptorTypeCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMutableDescriptorTypeCreateInfoVALVE",
      name: "MutableDescriptorTypeCreateInfoVALVE",
      extends: [
        "VkDescriptorSetLayoutCreateInfo",
        "VkDescriptorPoolCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mutableDescriptorTypeListCount",
          name: "mutable_descriptor_type_list_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMutableDescriptorTypeLists",
          name: "mutable_descriptor_type_lists",
          ty: Slice(Const, Named("VkMutableDescriptorTypeListVALVE"), Variable("mutableDescriptorTypeListCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDepthClipControlFeaturesEXT",
      name: "PhysicalDeviceDepthClipControlFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "depthClipControl",
          name: "depth_clip_control",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_depth_clip_control", 356, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineViewportDepthClipControlCreateInfoEXT",
      name: "PipelineViewportDepthClipControlCreateInfoEXT",
      extends: [
        "VkPipelineViewportStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "negativeOneToOne",
          name: "negative_one_to_one",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_depth_clip_control", 356, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVertexInputDynamicStateFeaturesEXT",
      name: "PhysicalDeviceVertexInputDynamicStateFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "vertexInputDynamicState",
          name: "vertex_input_dynamic_state",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceExternalMemoryRDMAFeaturesNV",
      name: "PhysicalDeviceExternalMemoryRdmaFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "externalMemoryRDMA",
          name: "external_memory_rdma",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_external_memory_rdma", 372, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVertexInputBindingDescription2EXT",
      name: "VertexInputBindingDescription2EXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "binding",
          name: "binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stride",
          name: "stride",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inputRate",
          name: "input_rate",
          ty: Named("VkVertexInputRate"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "divisor",
          name: "divisor",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVertexInputAttributeDescription2EXT",
      name: "VertexInputAttributeDescription2EXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "location",
          name: "location",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "binding",
          name: "binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceColorWriteEnableFeaturesEXT",
      name: "PhysicalDeviceColorWriteEnableFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorWriteEnable",
          name: "color_write_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_color_write_enable", 382, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineColorWriteCreateInfoEXT",
      name: "PipelineColorWriteCreateInfoEXT",
      extends: [
        "VkPipelineColorBlendStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "attachmentCount",
          name: "attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pColorWriteEnables",
          name: "color_write_enables",
          ty: Slice(Const, Named("VkBool32"), Variable("attachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_color_write_enable", 382, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryBarrier2",
      name: "MemoryBarrier2",
      extends: [
        "VkSubpassDependency2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_BARRIER_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcStageMask",
          name: "src_stage_mask",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAccessMask",
          name: "src_access_mask",
          ty: Named("VkAccessFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstStageMask",
          name: "dst_stage_mask",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstAccessMask",
          name: "dst_access_mask",
          ty: Named("VkAccessFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkImageMemoryBarrier2",
      name: "ImageMemoryBarrier2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcStageMask",
          name: "src_stage_mask",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAccessMask",
          name: "src_access_mask",
          ty: Named("VkAccessFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstStageMask",
          name: "dst_stage_mask",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstAccessMask",
          name: "dst_access_mask",
          ty: Named("VkAccessFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "oldLayout",
          name: "old_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "newLayout",
          name: "new_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcQueueFamilyIndex",
          name: "src_queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstQueueFamilyIndex",
          name: "dst_queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "image",
          name: "image",
          ty: Named("VkImage"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subresourceRange",
          name: "subresource_range",
          ty: Named("VkImageSubresourceRange"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [
        "VkSampleLocationsInfoEXT",
      ],
    ),
    Struct(
      original_name: "VkBufferMemoryBarrier2",
      name: "BufferMemoryBarrier2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcStageMask",
          name: "src_stage_mask",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcAccessMask",
          name: "src_access_mask",
          ty: Named("VkAccessFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstStageMask",
          name: "dst_stage_mask",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstAccessMask",
          name: "dst_access_mask",
          ty: Named("VkAccessFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcQueueFamilyIndex",
          name: "src_queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstQueueFamilyIndex",
          name: "dst_queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "buffer",
          name: "buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "offset",
          name: "offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "size",
          name: "size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkDependencyInfo",
      name: "DependencyInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DEPENDENCY_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dependencyFlags",
          name: "dependency_flags",
          ty: Named("VkDependencyFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryBarrierCount",
          name: "memory_barrier_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMemoryBarriers",
          name: "memory_barriers",
          ty: Slice(Const, Named("VkMemoryBarrier2"), Variable("memoryBarrierCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferMemoryBarrierCount",
          name: "buffer_memory_barrier_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pBufferMemoryBarriers",
          name: "buffer_memory_barriers",
          ty: Slice(Const, Named("VkBufferMemoryBarrier2"), Variable("bufferMemoryBarrierCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageMemoryBarrierCount",
          name: "image_memory_barrier_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pImageMemoryBarriers",
          name: "image_memory_barriers",
          ty: Slice(Const, Named("VkImageMemoryBarrier2"), Variable("imageMemoryBarrierCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkSemaphoreSubmitInfo",
      name: "SemaphoreSubmitInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "semaphore",
          name: "semaphore",
          ty: Named("VkSemaphore"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "value",
          name: "value",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stageMask",
          name: "stage_mask",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceIndex",
          name: "device_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkCommandBufferSubmitInfo",
      name: "CommandBufferSubmitInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "commandBuffer",
          name: "command_buffer",
          ty: Named("VkCommandBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "deviceMask",
          name: "device_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkSubmitInfo2",
      name: "SubmitInfo2",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SUBMIT_INFO_2"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkSubmitFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "waitSemaphoreInfoCount",
          name: "wait_semaphore_info_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pWaitSemaphoreInfos",
          name: "wait_semaphore_infos",
          ty: Slice(Const, Named("VkSemaphoreSubmitInfo"), Variable("waitSemaphoreInfoCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "commandBufferInfoCount",
          name: "command_buffer_info_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCommandBufferInfos",
          name: "command_buffer_infos",
          ty: Slice(Const, Named("VkCommandBufferSubmitInfo"), Variable("commandBufferInfoCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "signalSemaphoreInfoCount",
          name: "signal_semaphore_info_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSignalSemaphoreInfos",
          name: "signal_semaphore_infos",
          ty: Slice(Const, Named("VkSemaphoreSubmitInfo"), Variable("signalSemaphoreInfoCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [
        "VkWin32KeyedMutexAcquireReleaseInfoNV",
        "VkWin32KeyedMutexAcquireReleaseInfoKHR",
        "VkPerformanceQuerySubmitInfoKHR",
      ],
    ),
    Struct(
      original_name: "VkQueueFamilyCheckpointProperties2NV",
      name: "QueueFamilyCheckpointProperties2NV",
      extends: [
        "VkQueueFamilyProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "checkpointExecutionStageMask",
          name: "checkpoint_execution_stage_mask",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_synchronization2", 315, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCheckpointData2NV",
      name: "CheckpointData2NV",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stage",
          name: "stage",
          ty: Named("VkPipelineStageFlags2"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCheckpointMarker",
          name: "checkpoint_marker",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_synchronization2", 315, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceSynchronization2Features",
      name: "PhysicalDeviceSynchronization2Features",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "synchronization2",
          name: "synchronization2",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkVideoQueueFamilyProperties2KHR",
      name: "VideoQueueFamilyProperties2KHR",
      extends: [
        "VkQueueFamilyProperties2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_QUEUE_FAMILY_PROPERTIES_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "videoCodecOperations",
          name: "video_codec_operations",
          ty: Named("VkVideoCodecOperationFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkQueueFamilyQueryResultStatusProperties2KHR",
      name: "QueueFamilyQueryResultStatusProperties2KHR",
      extends: [
        "VkQueueFamilyProperties2",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_2_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "supported",
          name: "supported",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoProfilesKHR",
      name: "VideoProfilesKHR",
      extends: [
        "VkFormatProperties2",
        "VkImageCreateInfo",
        "VkImageViewCreateInfo",
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_PROFILES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "profileCount",
          name: "profile_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pProfiles",
          name: "profiles",
          ty: Slice(Const, Named("VkVideoProfileKHR"), Variable("profileCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceVideoFormatInfoKHR",
      name: "PhysicalDeviceVideoFormatInfoKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageUsage",
          name: "image_usage",
          ty: Named("VkImageUsageFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVideoProfiles",
          name: "video_profiles",
          ty: Pointer(Const, Named("VkVideoProfilesKHR")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoFormatPropertiesKHR",
      name: "VideoFormatPropertiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoProfileKHR",
      name: "VideoProfileKHR",
      extends: [
        "VkQueryPoolCreateInfo",
        "VkFormatProperties2",
        "VkImageCreateInfo",
        "VkImageViewCreateInfo",
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_PROFILE_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "videoCodecOperation",
          name: "video_codec_operation",
          ty: Named("VkVideoCodecOperationFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "chromaSubsampling",
          name: "chroma_subsampling",
          ty: Named("VkVideoChromaSubsamplingFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "lumaBitDepth",
          name: "luma_bit_depth",
          ty: Named("VkVideoComponentBitDepthFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "chromaBitDepth",
          name: "chroma_bit_depth",
          ty: Named("VkVideoComponentBitDepthFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoCapabilitiesKHR",
      name: "VideoCapabilitiesKHR",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "capabilityFlags",
          name: "capability_flags",
          ty: Named("VkVideoCapabilityFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minBitstreamBufferOffsetAlignment",
          name: "min_bitstream_buffer_offset_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minBitstreamBufferSizeAlignment",
          name: "min_bitstream_buffer_size_alignment",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "videoPictureExtentGranularity",
          name: "video_picture_extent_granularity",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minExtent",
          name: "min_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxExtent",
          name: "max_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxReferencePicturesSlotsCount",
          name: "max_reference_pictures_slots_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxReferencePicturesActiveCount",
          name: "max_reference_pictures_active_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stdHeaderVersion",
          name: "std_header_version",
          ty: Named("VkExtensionProperties"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [
        "VkVideoDecodeCapabilitiesKHR",
        "VkVideoEncodeCapabilitiesKHR",
      ],
    ),
    Struct(
      original_name: "VkVideoGetMemoryPropertiesKHR",
      name: "VideoGetMemoryPropertiesKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_GET_MEMORY_PROPERTIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryBindIndex",
          name: "memory_bind_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMemoryRequirements",
          name: "memory_requirements",
          ty: Pointer(Mutable, Named("VkMemoryRequirements2")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoBindMemoryKHR",
      name: "VideoBindMemoryKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_BIND_MEMORY_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryBindIndex",
          name: "memory_bind_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryOffset",
          name: "memory_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memorySize",
          name: "memory_size",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoPictureResourceKHR",
      name: "VideoPictureResourceKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "codedOffset",
          name: "coded_offset",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "codedExtent",
          name: "coded_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "baseArrayLayer",
          name: "base_array_layer",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageViewBinding",
          name: "image_view_binding",
          ty: Named("VkImageView"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoReferenceSlotKHR",
      name: "VideoReferenceSlotKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "slotIndex",
          name: "slot_index",
          ty: Native(Int(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPictureResource",
          name: "picture_resource",
          ty: Pointer(Const, Named("VkVideoPictureResourceKHR")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeCapabilitiesKHR",
      name: "VideoDecodeCapabilitiesKHR",
      extends: [
        "VkVideoCapabilitiesKHR",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoDecodeCapabilityFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeInfoKHR",
      name: "VideoDecodeInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoDecodeFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "codedOffset",
          name: "coded_offset",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "codedExtent",
          name: "coded_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcBuffer",
          name: "src_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcBufferOffset",
          name: "src_buffer_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcBufferRange",
          name: "src_buffer_range",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstPictureResource",
          name: "dst_picture_resource",
          ty: Named("VkVideoPictureResourceKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSetupReferenceSlot",
          name: "setup_reference_slot",
          ty: Pointer(Const, Named("VkVideoReferenceSlotKHR")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "referenceSlotCount",
          name: "reference_slot_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceSlots",
          name: "reference_slots",
          ty: Slice(Const, Named("VkVideoReferenceSlotKHR"), Variable("referenceSlotCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH264ProfileEXT",
      name: "VideoDecodeH264ProfileEXT",
      extends: [
        "VkVideoProfileKHR",
        "VkQueryPoolCreateInfo",
        "VkFormatProperties2",
        "VkImageCreateInfo",
        "VkImageViewCreateInfo",
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stdProfileIdc",
          name: "std_profile_idc",
          ty: Named("StdVideoH264ProfileIdc"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pictureLayout",
          name: "picture_layout",
          ty: Named("VkVideoDecodeH264PictureLayoutFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH264CapabilitiesEXT",
      name: "VideoDecodeH264CapabilitiesEXT",
      extends: [
        "VkVideoDecodeCapabilitiesKHR",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxLevel",
          name: "max_level",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "fieldOffsetGranularity",
          name: "field_offset_granularity",
          ty: Named("VkOffset2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH264SessionParametersAddInfoEXT",
      name: "VideoDecodeH264SessionParametersAddInfoEXT",
      extends: [
        "VkVideoSessionParametersUpdateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "spsStdCount",
          name: "sps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSpsStd",
          name: "sps_std",
          ty: Slice(Const, Named("StdVideoH264SequenceParameterSet"), Variable("spsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppsStdCount",
          name: "pps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPpsStd",
          name: "pps_std",
          ty: Slice(Const, Named("StdVideoH264PictureParameterSet"), Variable("ppsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH264SessionParametersCreateInfoEXT",
      name: "VideoDecodeH264SessionParametersCreateInfoEXT",
      extends: [
        "VkVideoSessionParametersCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSpsStdCount",
          name: "max_sps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPpsStdCount",
          name: "max_pps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pParametersAddInfo",
          name: "parameters_add_info",
          ty: Pointer(Const, Named("VkVideoDecodeH264SessionParametersAddInfoEXT")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH264PictureInfoEXT",
      name: "VideoDecodeH264PictureInfoEXT",
      extends: [
        "VkVideoDecodeInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pStdPictureInfo",
          name: "std_picture_info",
          ty: Pointer(Const, Named("StdVideoDecodeH264PictureInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "slicesCount",
          name: "slices_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSlicesDataOffsets",
          name: "slices_data_offsets",
          ty: Slice(Const, Native(UInt(4)), Variable("slicesCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH264DpbSlotInfoEXT",
      name: "VideoDecodeH264DpbSlotInfoEXT",
      extends: [
        "VkVideoReferenceSlotKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStdReferenceInfo",
          name: "std_reference_info",
          ty: Pointer(Const, Named("StdVideoDecodeH264ReferenceInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH264MvcEXT",
      name: "VideoDecodeH264MvcEXT",
      extends: [
        "VkVideoDecodeH264PictureInfoEXT",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_MVC_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "pStdMvc",
          name: "std_mvc",
          ty: Pointer(Const, Named("StdVideoDecodeH264Mvc")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH265ProfileEXT",
      name: "VideoDecodeH265ProfileEXT",
      extends: [
        "VkVideoProfileKHR",
        "VkQueryPoolCreateInfo",
        "VkFormatProperties2",
        "VkImageCreateInfo",
        "VkImageViewCreateInfo",
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stdProfileIdc",
          name: "std_profile_idc",
          ty: Named("StdVideoH265ProfileIdc"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH265CapabilitiesEXT",
      name: "VideoDecodeH265CapabilitiesEXT",
      extends: [
        "VkVideoDecodeCapabilitiesKHR",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxLevel",
          name: "max_level",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH265SessionParametersAddInfoEXT",
      name: "VideoDecodeH265SessionParametersAddInfoEXT",
      extends: [
        "VkVideoSessionParametersUpdateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vpsStdCount",
          name: "vps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVpsStd",
          name: "vps_std",
          ty: Slice(Const, Named("StdVideoH265VideoParameterSet"), Variable("vpsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "spsStdCount",
          name: "sps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSpsStd",
          name: "sps_std",
          ty: Slice(Const, Named("StdVideoH265SequenceParameterSet"), Variable("spsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppsStdCount",
          name: "pps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPpsStd",
          name: "pps_std",
          ty: Slice(Const, Named("StdVideoH265PictureParameterSet"), Variable("ppsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH265SessionParametersCreateInfoEXT",
      name: "VideoDecodeH265SessionParametersCreateInfoEXT",
      extends: [
        "VkVideoSessionParametersCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVpsStdCount",
          name: "max_vps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSpsStdCount",
          name: "max_sps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPpsStdCount",
          name: "max_pps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pParametersAddInfo",
          name: "parameters_add_info",
          ty: Pointer(Const, Named("VkVideoDecodeH265SessionParametersAddInfoEXT")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH265PictureInfoEXT",
      name: "VideoDecodeH265PictureInfoEXT",
      extends: [
        "VkVideoDecodeInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStdPictureInfo",
          name: "std_picture_info",
          ty: Pointer(Mutable, Named("StdVideoDecodeH265PictureInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "slicesCount",
          name: "slices_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSlicesDataOffsets",
          name: "slices_data_offsets",
          ty: Slice(Const, Native(UInt(4)), Variable("slicesCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoDecodeH265DpbSlotInfoEXT",
      name: "VideoDecodeH265DpbSlotInfoEXT",
      extends: [
        "VkVideoReferenceSlotKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStdReferenceInfo",
          name: "std_reference_info",
          ty: Pointer(Const, Named("StdVideoDecodeH265ReferenceInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoSessionCreateInfoKHR",
      name: "VideoSessionCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoSessionCreateFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVideoProfile",
          name: "video_profile",
          ty: Pointer(Const, Named("VkVideoProfileKHR")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pictureFormat",
          name: "picture_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxCodedExtent",
          name: "max_coded_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "referencePicturesFormat",
          name: "reference_pictures_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxReferencePicturesSlotsCount",
          name: "max_reference_pictures_slots_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxReferencePicturesActiveCount",
          name: "max_reference_pictures_active_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStdHeaderVersion",
          name: "std_header_version",
          ty: Pointer(Const, Named("VkExtensionProperties")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoSessionParametersCreateInfoKHR",
      name: "VideoSessionParametersCreateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "videoSessionParametersTemplate",
          name: "video_session_parameters_template",
          ty: Named("VkVideoSessionParametersKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "videoSession",
          name: "video_session",
          ty: Named("VkVideoSessionKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoSessionParametersUpdateInfoKHR",
      name: "VideoSessionParametersUpdateInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "updateSequenceCount",
          name: "update_sequence_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoBeginCodingInfoKHR",
      name: "VideoBeginCodingInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoBeginCodingFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "codecQualityPreset",
          name: "codec_quality_preset",
          ty: Named("VkVideoCodingQualityPresetFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "videoSession",
          name: "video_session",
          ty: Named("VkVideoSessionKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "videoSessionParameters",
          name: "video_session_parameters",
          ty: Named("VkVideoSessionParametersKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "referenceSlotCount",
          name: "reference_slot_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceSlots",
          name: "reference_slots",
          ty: Slice(Const, Named("VkVideoReferenceSlotKHR"), Variable("referenceSlotCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEndCodingInfoKHR",
      name: "VideoEndCodingInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoEndCodingFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoCodingControlInfoKHR",
      name: "VideoCodingControlInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoCodingControlFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_queue", 24, false),
      extended: [
        "VkVideoEncodeRateControlInfoKHR",
        "VkVideoEncodeRateControlLayerInfoKHR",
      ],
    ),
    Struct(
      original_name: "VkVideoEncodeInfoKHR",
      name: "VideoEncodeInfoKHR",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoEncodeFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "qualityLevel",
          name: "quality_level",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "codedExtent",
          name: "coded_extent",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstBitstreamBuffer",
          name: "dst_bitstream_buffer",
          ty: Named("VkBuffer"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstBitstreamBufferOffset",
          name: "dst_bitstream_buffer_offset",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dstBitstreamBufferMaxRange",
          name: "dst_bitstream_buffer_max_range",
          ty: Named("VkDeviceSize"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srcPictureResource",
          name: "src_picture_resource",
          ty: Named("VkVideoPictureResourceKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSetupReferenceSlot",
          name: "setup_reference_slot",
          ty: Pointer(Const, Named("VkVideoReferenceSlotKHR")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "referenceSlotCount",
          name: "reference_slot_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceSlots",
          name: "reference_slots",
          ty: Slice(Const, Named("VkVideoReferenceSlotKHR"), Variable("referenceSlotCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "precedingExternallyEncodedBytes",
          name: "preceding_externally_encoded_bytes",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeRateControlInfoKHR",
      name: "VideoEncodeRateControlInfoKHR",
      extends: [
        "VkVideoCodingControlInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoEncodeRateControlFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "rateControlMode",
          name: "rate_control_mode",
          ty: Named("VkVideoEncodeRateControlModeFlagBitsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layerCount",
          name: "layer_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pLayerConfigs",
          name: "layer_configs",
          ty: Slice(Const, Named("VkVideoEncodeRateControlLayerInfoKHR"), Variable("layerCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeRateControlLayerInfoKHR",
      name: "VideoEncodeRateControlLayerInfoKHR",
      extends: [
        "VkVideoCodingControlInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "averageBitrate",
          name: "average_bitrate",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBitrate",
          name: "max_bitrate",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "frameRateNumerator",
          name: "frame_rate_numerator",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "frameRateDenominator",
          name: "frame_rate_denominator",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "virtualBufferSizeInMs",
          name: "virtual_buffer_size_in_ms",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "initialVirtualBufferSizeInMs",
          name: "initial_virtual_buffer_size_in_ms",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeCapabilitiesKHR",
      name: "VideoEncodeCapabilitiesKHR",
      extends: [
        "VkVideoCapabilitiesKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoEncodeCapabilityFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "rateControlModes",
          name: "rate_control_modes",
          ty: Named("VkVideoEncodeRateControlModeFlagsKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rateControlLayerCount",
          name: "rate_control_layer_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "qualityLevelCount",
          name: "quality_level_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inputImageDataFillAlignment",
          name: "input_image_data_fill_alignment",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264CapabilitiesEXT",
      name: "VideoEncodeH264CapabilitiesEXT",
      extends: [
        "VkVideoEncodeCapabilitiesKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoEncodeH264CapabilityFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "inputModeFlags",
          name: "input_mode_flags",
          ty: Named("VkVideoEncodeH264InputModeFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "outputModeFlags",
          name: "output_mode_flags",
          ty: Named("VkVideoEncodeH264OutputModeFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPPictureL0ReferenceCount",
          name: "max_p_picture_l0_reference_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBPictureL0ReferenceCount",
          name: "max_b_picture_l0_reference_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxL1ReferenceCount",
          name: "max_l1_reference_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "motionVectorsOverPicBoundariesFlag",
          name: "motion_vectors_over_pic_boundaries_flag",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBytesPerPicDenom",
          name: "max_bytes_per_pic_denom",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBitsPerMbDenom",
          name: "max_bits_per_mb_denom",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "log2MaxMvLengthHorizontal",
          name: "log2_max_mv_length_horizontal",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "log2MaxMvLengthVertical",
          name: "log2_max_mv_length_vertical",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264SessionParametersAddInfoEXT",
      name: "VideoEncodeH264SessionParametersAddInfoEXT",
      extends: [
        "VkVideoSessionParametersUpdateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "spsStdCount",
          name: "sps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSpsStd",
          name: "sps_std",
          ty: Slice(Const, Named("StdVideoH264SequenceParameterSet"), Variable("spsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppsStdCount",
          name: "pps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPpsStd",
          name: "pps_std",
          ty: Slice(Const, Named("StdVideoH264PictureParameterSet"), Variable("ppsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264SessionParametersCreateInfoEXT",
      name: "VideoEncodeH264SessionParametersCreateInfoEXT",
      extends: [
        "VkVideoSessionParametersCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSpsStdCount",
          name: "max_sps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPpsStdCount",
          name: "max_pps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pParametersAddInfo",
          name: "parameters_add_info",
          ty: Pointer(Const, Named("VkVideoEncodeH264SessionParametersAddInfoEXT")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264DpbSlotInfoEXT",
      name: "VideoEncodeH264DpbSlotInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "slotIndex",
          name: "slot_index",
          ty: Native(Int(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStdReferenceInfo",
          name: "std_reference_info",
          ty: Pointer(Const, Named("StdVideoEncodeH264ReferenceInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264VclFrameInfoEXT",
      name: "VideoEncodeH264VclFrameInfoEXT",
      extends: [
        "VkVideoEncodeInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_VCL_FRAME_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceFinalLists",
          name: "reference_final_lists",
          ty: Pointer(Const, Named("VkVideoEncodeH264ReferenceListsEXT")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "naluSliceEntryCount",
          name: "nalu_slice_entry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pNaluSliceEntries",
          name: "nalu_slice_entries",
          ty: Slice(Const, Named("VkVideoEncodeH264NaluSliceEXT"), Variable("naluSliceEntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCurrentPictureInfo",
          name: "current_picture_info",
          ty: Pointer(Const, Named("StdVideoEncodeH264PictureInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264ReferenceListsEXT",
      name: "VideoEncodeH264ReferenceListsEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_REFERENCE_LISTS_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "referenceList0EntryCount",
          name: "reference_list0_entry_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceList0Entries",
          name: "reference_list0_entries",
          ty: Slice(Const, Named("VkVideoEncodeH264DpbSlotInfoEXT"), Variable("referenceList0EntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "referenceList1EntryCount",
          name: "reference_list1_entry_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceList1Entries",
          name: "reference_list1_entries",
          ty: Slice(Const, Named("VkVideoEncodeH264DpbSlotInfoEXT"), Variable("referenceList1EntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pMemMgmtCtrlOperations",
          name: "mem_mgmt_ctrl_operations",
          ty: Pointer(Const, Named("StdVideoEncodeH264RefMemMgmtCtrlOperations")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264EmitPictureParametersEXT",
      name: "VideoEncodeH264EmitPictureParametersEXT",
      extends: [
        "VkVideoEncodeInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_EMIT_PICTURE_PARAMETERS_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "spsId",
          name: "sps_id",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "emitSpsEnable",
          name: "emit_sps_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppsIdEntryCount",
          name: "pps_id_entry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppsIdEntries",
          name: "pps_id_entries",
          ty: Slice(Const, Native(UInt(1)), Variable("ppsIdEntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264ProfileEXT",
      name: "VideoEncodeH264ProfileEXT",
      extends: [
        "VkVideoProfileKHR",
        "VkQueryPoolCreateInfo",
        "VkFormatProperties2",
        "VkImageCreateInfo",
        "VkImageViewCreateInfo",
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stdProfileIdc",
          name: "std_profile_idc",
          ty: Named("StdVideoH264ProfileIdc"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264NaluSliceEXT",
      name: "VideoEncodeH264NaluSliceEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mbCount",
          name: "mb_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceFinalLists",
          name: "reference_final_lists",
          ty: Pointer(Const, Named("VkVideoEncodeH264ReferenceListsEXT")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSliceHeaderStd",
          name: "slice_header_std",
          ty: Pointer(Const, Named("StdVideoEncodeH264SliceHeader")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264RateControlInfoEXT",
      name: "VideoEncodeH264RateControlInfoEXT",
      extends: [
        "VkVideoEncodeRateControlInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "gopFrameCount",
          name: "gop_frame_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "idrPeriod",
          name: "idr_period",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "consecutiveBFrameCount",
          name: "consecutive_b_frame_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rateControlStructure",
          name: "rate_control_structure",
          ty: Named("VkVideoEncodeH264RateControlStructureFlagBitsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "temporalLayerCount",
          name: "temporal_layer_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264QpEXT",
      name: "VideoEncodeH264QpEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "qpI",
          name: "qp_i",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "qpP",
          name: "qp_p",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "qpB",
          name: "qp_b",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264FrameSizeEXT",
      name: "VideoEncodeH264FrameSizeEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "frameISize",
          name: "frame_i_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "framePSize",
          name: "frame_p_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "frameBSize",
          name: "frame_b_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH264RateControlLayerInfoEXT",
      name: "VideoEncodeH264RateControlLayerInfoEXT",
      extends: [
        "VkVideoEncodeRateControlLayerInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "temporalLayerId",
          name: "temporal_layer_id",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "useInitialRcQp",
          name: "use_initial_rc_qp",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "initialRcQp",
          name: "initial_rc_qp",
          ty: Named("VkVideoEncodeH264QpEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "useMinQp",
          name: "use_min_qp",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minQp",
          name: "min_qp",
          ty: Named("VkVideoEncodeH264QpEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "useMaxQp",
          name: "use_max_qp",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxQp",
          name: "max_qp",
          ty: Named("VkVideoEncodeH264QpEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "useMaxFrameSize",
          name: "use_max_frame_size",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFrameSize",
          name: "max_frame_size",
          ty: Named("VkVideoEncodeH264FrameSizeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265CapabilitiesEXT",
      name: "VideoEncodeH265CapabilitiesEXT",
      extends: [
        "VkVideoEncodeCapabilitiesKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkVideoEncodeH265CapabilityFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "inputModeFlags",
          name: "input_mode_flags",
          ty: Named("VkVideoEncodeH265InputModeFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "outputModeFlags",
          name: "output_mode_flags",
          ty: Named("VkVideoEncodeH265OutputModeFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ctbSizes",
          name: "ctb_sizes",
          ty: Named("VkVideoEncodeH265CtbSizeFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformBlockSizes",
          name: "transform_block_sizes",
          ty: Named("VkVideoEncodeH265TransformBlockSizeFlagsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPPictureL0ReferenceCount",
          name: "max_p_picture_l0_reference_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBPictureL0ReferenceCount",
          name: "max_b_picture_l0_reference_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxL1ReferenceCount",
          name: "max_l1_reference_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSubLayersCount",
          name: "max_sub_layers_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minLog2MinLumaCodingBlockSizeMinus3",
          name: "min_log2_min_luma_coding_block_size_minus3",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxLog2MinLumaCodingBlockSizeMinus3",
          name: "max_log2_min_luma_coding_block_size_minus3",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minLog2MinLumaTransformBlockSizeMinus2",
          name: "min_log2_min_luma_transform_block_size_minus2",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxLog2MinLumaTransformBlockSizeMinus2",
          name: "max_log2_min_luma_transform_block_size_minus2",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minMaxTransformHierarchyDepthInter",
          name: "min_max_transform_hierarchy_depth_inter",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMaxTransformHierarchyDepthInter",
          name: "max_max_transform_hierarchy_depth_inter",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minMaxTransformHierarchyDepthIntra",
          name: "min_max_transform_hierarchy_depth_intra",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMaxTransformHierarchyDepthIntra",
          name: "max_max_transform_hierarchy_depth_intra",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxDiffCuQpDeltaDepth",
          name: "max_diff_cu_qp_delta_depth",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minMaxNumMergeCand",
          name: "min_max_num_merge_cand",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxMaxNumMergeCand",
          name: "max_max_num_merge_cand",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265SessionParametersAddInfoEXT",
      name: "VideoEncodeH265SessionParametersAddInfoEXT",
      extends: [
        "VkVideoSessionParametersUpdateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vpsStdCount",
          name: "vps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pVpsStd",
          name: "vps_std",
          ty: Slice(Const, Named("StdVideoH265VideoParameterSet"), Variable("vpsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "spsStdCount",
          name: "sps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSpsStd",
          name: "sps_std",
          ty: Slice(Const, Named("StdVideoH265SequenceParameterSet"), Variable("spsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppsStdCount",
          name: "pps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pPpsStd",
          name: "pps_std",
          ty: Slice(Const, Named("StdVideoH265PictureParameterSet"), Variable("ppsStdCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265SessionParametersCreateInfoEXT",
      name: "VideoEncodeH265SessionParametersCreateInfoEXT",
      extends: [
        "VkVideoSessionParametersCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxVpsStdCount",
          name: "max_vps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxSpsStdCount",
          name: "max_sps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxPpsStdCount",
          name: "max_pps_std_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pParametersAddInfo",
          name: "parameters_add_info",
          ty: Pointer(Const, Named("VkVideoEncodeH265SessionParametersAddInfoEXT")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265VclFrameInfoEXT",
      name: "VideoEncodeH265VclFrameInfoEXT",
      extends: [
        "VkVideoEncodeInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_VCL_FRAME_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceFinalLists",
          name: "reference_final_lists",
          ty: Pointer(Const, Named("VkVideoEncodeH265ReferenceListsEXT")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "naluSliceSegmentEntryCount",
          name: "nalu_slice_segment_entry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pNaluSliceSegmentEntries",
          name: "nalu_slice_segment_entries",
          ty: Slice(Const, Named("VkVideoEncodeH265NaluSliceSegmentEXT"), Variable("naluSliceSegmentEntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pCurrentPictureInfo",
          name: "current_picture_info",
          ty: Pointer(Const, Named("StdVideoEncodeH265PictureInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265EmitPictureParametersEXT",
      name: "VideoEncodeH265EmitPictureParametersEXT",
      extends: [
        "VkVideoEncodeInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_EMIT_PICTURE_PARAMETERS_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vpsId",
          name: "vps_id",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "spsId",
          name: "sps_id",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "emitVpsEnable",
          name: "emit_vps_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "emitSpsEnable",
          name: "emit_sps_enable",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppsIdEntryCount",
          name: "pps_id_entry_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ppsIdEntries",
          name: "pps_id_entries",
          ty: Slice(Const, Native(UInt(1)), Variable("ppsIdEntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265NaluSliceSegmentEXT",
      name: "VideoEncodeH265NaluSliceSegmentEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ctbCount",
          name: "ctb_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceFinalLists",
          name: "reference_final_lists",
          ty: Pointer(Const, Named("VkVideoEncodeH265ReferenceListsEXT")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pSliceSegmentHeaderStd",
          name: "slice_segment_header_std",
          ty: Pointer(Const, Named("StdVideoEncodeH265SliceSegmentHeader")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265RateControlInfoEXT",
      name: "VideoEncodeH265RateControlInfoEXT",
      extends: [
        "VkVideoEncodeRateControlInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "gopFrameCount",
          name: "gop_frame_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "idrPeriod",
          name: "idr_period",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "consecutiveBFrameCount",
          name: "consecutive_b_frame_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rateControlStructure",
          name: "rate_control_structure",
          ty: Named("VkVideoEncodeH265RateControlStructureFlagBitsEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "subLayerCount",
          name: "sub_layer_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265QpEXT",
      name: "VideoEncodeH265QpEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "qpI",
          name: "qp_i",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "qpP",
          name: "qp_p",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "qpB",
          name: "qp_b",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265FrameSizeEXT",
      name: "VideoEncodeH265FrameSizeEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "frameISize",
          name: "frame_i_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "framePSize",
          name: "frame_p_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "frameBSize",
          name: "frame_b_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265RateControlLayerInfoEXT",
      name: "VideoEncodeH265RateControlLayerInfoEXT",
      extends: [
        "VkVideoEncodeRateControlLayerInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "temporalId",
          name: "temporal_id",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "useInitialRcQp",
          name: "use_initial_rc_qp",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "initialRcQp",
          name: "initial_rc_qp",
          ty: Named("VkVideoEncodeH265QpEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "useMinQp",
          name: "use_min_qp",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minQp",
          name: "min_qp",
          ty: Named("VkVideoEncodeH265QpEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "useMaxQp",
          name: "use_max_qp",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxQp",
          name: "max_qp",
          ty: Named("VkVideoEncodeH265QpEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "useMaxFrameSize",
          name: "use_max_frame_size",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxFrameSize",
          name: "max_frame_size",
          ty: Named("VkVideoEncodeH265FrameSizeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265ProfileEXT",
      name: "VideoEncodeH265ProfileEXT",
      extends: [
        "VkVideoProfileKHR",
        "VkQueryPoolCreateInfo",
        "VkFormatProperties2",
        "VkImageCreateInfo",
        "VkImageViewCreateInfo",
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stdProfileIdc",
          name: "std_profile_idc",
          ty: Named("StdVideoH265ProfileIdc"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265DpbSlotInfoEXT",
      name: "VideoEncodeH265DpbSlotInfoEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "slotIndex",
          name: "slot_index",
          ty: Native(Int(1)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStdReferenceInfo",
          name: "std_reference_info",
          ty: Pointer(Const, Named("StdVideoEncodeH265ReferenceInfo")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkVideoEncodeH265ReferenceListsEXT",
      name: "VideoEncodeH265ReferenceListsEXT",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_REFERENCE_LISTS_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "referenceList0EntryCount",
          name: "reference_list0_entry_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceList0Entries",
          name: "reference_list0_entries",
          ty: Slice(Const, Named("VkVideoEncodeH265DpbSlotInfoEXT"), Variable("referenceList0EntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "referenceList1EntryCount",
          name: "reference_list1_entry_count",
          ty: Native(UInt(1)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceList1Entries",
          name: "reference_list1_entries",
          ty: Slice(Const, Named("VkVideoEncodeH265DpbSlotInfoEXT"), Variable("referenceList1EntryCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pReferenceModifications",
          name: "reference_modifications",
          ty: Pointer(Const, Named("StdVideoEncodeH265ReferenceModifications")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceInheritedViewportScissorFeaturesNV",
      name: "PhysicalDeviceInheritedViewportScissorFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "inheritedViewportScissor2D",
          name: "inherited_viewport_scissor2_d",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_inherited_viewport_scissor", 279, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCommandBufferInheritanceViewportScissorInfoNV",
      name: "CommandBufferInheritanceViewportScissorInfoNV",
      extends: [
        "VkCommandBufferInheritanceInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportScissor2D",
          name: "viewport_scissor2_d",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewportDepthCount",
          name: "viewport_depth_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pViewportDepths",
          name: "viewport_depths",
          ty: Pointer(Const, Named("VkViewport")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_inherited_viewport_scissor", 279, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT",
      name: "PhysicalDeviceYcbcr2Plane444FormatsFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ycbcr2plane444Formats",
          name: "ycbcr2plane444_formats",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceProvokingVertexFeaturesEXT",
      name: "PhysicalDeviceProvokingVertexFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "provokingVertexLast",
          name: "provoking_vertex_last",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformFeedbackPreservesProvokingVertex",
          name: "transform_feedback_preserves_provoking_vertex",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_provoking_vertex", 255, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceProvokingVertexPropertiesEXT",
      name: "PhysicalDeviceProvokingVertexPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "provokingVertexModePerPipeline",
          name: "provoking_vertex_mode_per_pipeline",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformFeedbackPreservesTriangleFanProvokingVertex",
          name: "transform_feedback_preserves_triangle_fan_provoking_vertex",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_provoking_vertex", 255, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineRasterizationProvokingVertexStateCreateInfoEXT",
      name: "PipelineRasterizationProvokingVertexStateCreateInfoEXT",
      extends: [
        "VkPipelineRasterizationStateCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "provokingVertexMode",
          name: "provoking_vertex_mode",
          ty: Named("VkProvokingVertexModeEXT"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_provoking_vertex", 255, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCuModuleCreateInfoNVX",
      name: "CuModuleCreateInfoNVX",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "dataSize",
          name: "data_size",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pData",
          name: "data",
          ty: Slice(Const, Native(Void), Variable("dataSize")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NVX_binary_import", 30, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCuFunctionCreateInfoNVX",
      name: "CuFunctionCreateInfoNVX",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "module",
          name: "module",
          ty: Named("VkCuModuleNVX"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pName",
          name: "name",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NVX_binary_import", 30, false),
      extended: [],
    ),
    Struct(
      original_name: "VkCuLaunchInfoNVX",
      name: "CuLaunchInfoNVX",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "function",
          name: "function",
          ty: Named("VkCuFunctionNVX"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "gridDimX",
          name: "grid_dim_x",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "gridDimY",
          name: "grid_dim_y",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "gridDimZ",
          name: "grid_dim_z",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "blockDimX",
          name: "block_dim_x",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "blockDimY",
          name: "block_dim_y",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "blockDimZ",
          name: "block_dim_z",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sharedMemBytes",
          name: "shared_mem_bytes",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "paramCount",
          name: "param_count",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pParams",
          name: "params",
          ty: Slice(Const, Pointer(Const, Native(Void)), Variable("paramCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "extraCount",
          name: "extra_count",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pExtras",
          name: "extras",
          ty: Slice(Const, Pointer(Const, Native(Void)), Variable("extraCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NVX_binary_import", 30, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderIntegerDotProductFeatures",
      name: "PhysicalDeviceShaderIntegerDotProductFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shaderIntegerDotProduct",
          name: "shader_integer_dot_product",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceShaderIntegerDotProductProperties",
      name: "PhysicalDeviceShaderIntegerDotProductProperties",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct8BitUnsignedAccelerated",
          name: "integer_dot_product8_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct8BitSignedAccelerated",
          name: "integer_dot_product8_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct8BitMixedSignednessAccelerated",
          name: "integer_dot_product8_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct4x8BitPackedUnsignedAccelerated",
          name: "integer_dot_product4x8_bit_packed_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct4x8BitPackedSignedAccelerated",
          name: "integer_dot_product4x8_bit_packed_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct4x8BitPackedMixedSignednessAccelerated",
          name: "integer_dot_product4x8_bit_packed_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct16BitUnsignedAccelerated",
          name: "integer_dot_product16_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct16BitSignedAccelerated",
          name: "integer_dot_product16_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct16BitMixedSignednessAccelerated",
          name: "integer_dot_product16_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct32BitUnsignedAccelerated",
          name: "integer_dot_product32_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct32BitSignedAccelerated",
          name: "integer_dot_product32_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct32BitMixedSignednessAccelerated",
          name: "integer_dot_product32_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct64BitUnsignedAccelerated",
          name: "integer_dot_product64_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct64BitSignedAccelerated",
          name: "integer_dot_product64_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProduct64BitMixedSignednessAccelerated",
          name: "integer_dot_product64_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating8BitUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating8_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating8BitSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating8_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating8BitMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating8_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating4x8BitPackedUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating4x8_bit_packed_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating4x8BitPackedSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating4x8_bit_packed_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating4x8BitPackedMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating4x8_bit_packed_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating16BitUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating16_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating16BitSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating16_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating16BitMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating16_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating32BitUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating32_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating32BitSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating32_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating32BitMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating32_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating64BitUnsignedAccelerated",
          name: "integer_dot_product_accumulating_saturating64_bit_unsigned_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating64BitSignedAccelerated",
          name: "integer_dot_product_accumulating_saturating64_bit_signed_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "integerDotProductAccumulatingSaturating64BitMixedSignednessAccelerated",
          name: "integer_dot_product_accumulating_saturating64_bit_mixed_signedness_accelerated",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDrmPropertiesEXT",
      name: "PhysicalDeviceDrmPropertiesEXT",
      extends: [
        "VkPhysicalDeviceProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "hasPrimary",
          name: "has_primary",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "hasRender",
          name: "has_render",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primaryMajor",
          name: "primary_major",
          ty: Native(Int(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "primaryMinor",
          name: "primary_minor",
          ty: Native(Int(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderMajor",
          name: "render_major",
          ty: Native(Int(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderMinor",
          name: "render_minor",
          ty: Native(Int(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_physical_device_drm", 354, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRayTracingMotionBlurFeaturesNV",
      name: "PhysicalDeviceRayTracingMotionBlurFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "rayTracingMotionBlur",
          name: "ray_tracing_motion_blur",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rayTracingMotionBlurPipelineTraceRaysIndirect",
          name: "ray_tracing_motion_blur_pipeline_trace_rays_indirect",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureGeometryMotionTrianglesDataNV",
      name: "AccelerationStructureGeometryMotionTrianglesDataNV",
      extends: [
        "VkAccelerationStructureGeometryTrianglesDataKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "vertexData",
          name: "vertex_data",
          ty: Named("VkDeviceOrHostAddressConstKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureMotionInfoNV",
      name: "AccelerationStructureMotionInfoNV",
      extends: [
        "VkAccelerationStructureCreateInfoKHR",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxInstances",
          name: "max_instances",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkAccelerationStructureMotionInfoFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSRTDataNV",
      name: "SrtDataNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sx",
          name: "sx",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "a",
          name: "a",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "b",
          name: "b",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pvx",
          name: "pvx",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sy",
          name: "sy",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "c",
          name: "c",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pvy",
          name: "pvy",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sz",
          name: "sz",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pvz",
          name: "pvz",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "qx",
          name: "qx",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "qy",
          name: "qy",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "qz",
          name: "qz",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "qw",
          name: "qw",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tx",
          name: "tx",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "ty",
          name: "ty",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "tz",
          name: "tz",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureSRTMotionInstanceNV",
      name: "AccelerationStructureSrtMotionInstanceNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "transformT0",
          name: "transform_t0",
          ty: Named("VkSRTDataNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformT1",
          name: "transform_t1",
          ty: Named("VkSRTDataNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceCustomIndex",
          name: "instance_custom_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mask",
          name: "mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceShaderBindingTableRecordOffset",
          name: "instance_shader_binding_table_record_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkGeometryInstanceFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureReference",
          name: "acceleration_structure_reference",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureMatrixMotionInstanceNV",
      name: "AccelerationStructureMatrixMotionInstanceNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "transformT0",
          name: "transform_t0",
          ty: Named("VkTransformMatrixKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "transformT1",
          name: "transform_t1",
          ty: Named("VkTransformMatrixKHR"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceCustomIndex",
          name: "instance_custom_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "mask",
          name: "mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instanceShaderBindingTableRecordOffset",
          name: "instance_shader_binding_table_record_offset",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkGeometryInstanceFlagsKHR"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "accelerationStructureReference",
          name: "acceleration_structure_reference",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAccelerationStructureMotionInstanceNV",
      name: "AccelerationStructureMotionInstanceNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "type",
          name: "type_",
          ty: Named("VkAccelerationStructureMotionInstanceTypeNV"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkAccelerationStructureMotionInstanceFlagsNV"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "data",
          name: "data",
          ty: Named("VkAccelerationStructureMotionInstanceDataNV"),
          selector: Some("type"),
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMemoryGetRemoteAddressInfoNV",
      name: "MemoryGetRemoteAddressInfoNV",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memory",
          name: "memory",
          ty: Named("VkDeviceMemory"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "handleType",
          name: "handle_type",
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_external_memory_rdma", 372, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImportMemoryBufferCollectionFUCHSIA",
      name: "ImportMemoryBufferCollectionFUCHSIA",
      extends: [
        "VkMemoryAllocateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "collection",
          name: "collection",
          ty: Named("VkBufferCollectionFUCHSIA"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "index",
          name: "index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBufferCollectionImageCreateInfoFUCHSIA",
      name: "BufferCollectionImageCreateInfoFUCHSIA",
      extends: [
        "VkImageCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "collection",
          name: "collection",
          ty: Named("VkBufferCollectionFUCHSIA"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "index",
          name: "index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBufferCollectionBufferCreateInfoFUCHSIA",
      name: "BufferCollectionBufferCreateInfoFUCHSIA",
      extends: [
        "VkBufferCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "collection",
          name: "collection",
          ty: Named("VkBufferCollectionFUCHSIA"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "index",
          name: "index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBufferCollectionCreateInfoFUCHSIA",
      name: "BufferCollectionCreateInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "collectionToken",
          name: "collection_token",
          ty: Named("zx_handle_t"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBufferCollectionPropertiesFUCHSIA",
      name: "BufferCollectionPropertiesFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "memoryTypeBits",
          name: "memory_type_bits",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferCount",
          name: "buffer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "createInfoIndex",
          name: "create_info_index",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sysmemPixelFormat",
          name: "sysmem_pixel_format",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "formatFeatures",
          name: "format_features",
          ty: Named("VkFormatFeatureFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sysmemColorSpaceIndex",
          name: "sysmem_color_space_index",
          ty: Named("VkSysmemColorSpaceFUCHSIA"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerYcbcrConversionComponents",
          name: "sampler_ycbcr_conversion_components",
          ty: Named("VkComponentMapping"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYcbcrModel",
          name: "suggested_ycbcr_model",
          ty: Named("VkSamplerYcbcrModelConversion"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYcbcrRange",
          name: "suggested_ycbcr_range",
          ty: Named("VkSamplerYcbcrRange"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedXChromaOffset",
          name: "suggested_x_chroma_offset",
          ty: Named("VkChromaLocation"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYChromaOffset",
          name: "suggested_y_chroma_offset",
          ty: Named("VkChromaLocation"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBufferConstraintsInfoFUCHSIA",
      name: "BufferConstraintsInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "createInfo",
          name: "create_info",
          ty: Named("VkBufferCreateInfo"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "requiredFormatFeatures",
          name: "required_format_features",
          ty: Named("VkFormatFeatureFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferCollectionConstraints",
          name: "buffer_collection_constraints",
          ty: Named("VkBufferCollectionConstraintsInfoFUCHSIA"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkSysmemColorSpaceFUCHSIA",
      name: "SysmemColorSpaceFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorSpace",
          name: "color_space",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageFormatConstraintsInfoFUCHSIA",
      name: "ImageFormatConstraintsInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageCreateInfo",
          name: "image_create_info",
          ty: Named("VkImageCreateInfo"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "requiredFormatFeatures",
          name: "required_format_features",
          ty: Named("VkFormatFeatureFlags"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkImageFormatConstraintsFlagsFUCHSIA"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "sysmemPixelFormat",
          name: "sysmem_pixel_format",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorSpaceCount",
          name: "color_space_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pColorSpaces",
          name: "color_spaces",
          ty: Slice(Const, Named("VkSysmemColorSpaceFUCHSIA"), Variable("colorSpaceCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageConstraintsInfoFUCHSIA",
      name: "ImageConstraintsInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "formatConstraintsCount",
          name: "format_constraints_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pFormatConstraints",
          name: "format_constraints",
          ty: Slice(Const, Named("VkImageFormatConstraintsInfoFUCHSIA"), Variable("formatConstraintsCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferCollectionConstraints",
          name: "buffer_collection_constraints",
          ty: Named("VkBufferCollectionConstraintsInfoFUCHSIA"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkImageConstraintsInfoFlagsFUCHSIA"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkBufferCollectionConstraintsInfoFUCHSIA",
      name: "BufferCollectionConstraintsInfoFUCHSIA",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minBufferCount",
          name: "min_buffer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "maxBufferCount",
          name: "max_buffer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minBufferCountForCamping",
          name: "min_buffer_count_for_camping",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minBufferCountForDedicatedSlack",
          name: "min_buffer_count_for_dedicated_slack",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minBufferCountForSharedSlack",
          name: "min_buffer_count_for_shared_slack",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRGBA10X6FormatsFeaturesEXT",
      name: "PhysicalDeviceRgba10x6FormatsFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "formatRgba10x6WithoutYCbCrSampler",
          name: "format_rgba10x6_without_y_cb_cr_sampler",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_rgba10x6_formats", 345, false),
      extended: [],
    ),
    Struct(
      original_name: "VkFormatProperties3",
      name: "FormatProperties3",
      extends: [
        "VkFormatProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "linearTilingFeatures",
          name: "linear_tiling_features",
          ty: Named("VkFormatFeatureFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "optimalTilingFeatures",
          name: "optimal_tiling_features",
          ty: Named("VkFormatFeatureFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "bufferFeatures",
          name: "buffer_features",
          ty: Named("VkFormatFeatureFlags2"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkDrmFormatModifierPropertiesList2EXT",
      name: "DrmFormatModifierPropertiesList2EXT",
      extends: [
        "VkFormatProperties2",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifierCount",
          name: "drm_format_modifier_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDrmFormatModifierProperties",
          name: "drm_format_modifier_properties",
          ty: Slice(Mutable, Named("VkDrmFormatModifierProperties2EXT"), Variable("drmFormatModifierCount")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      extended: [],
    ),
    Struct(
      original_name: "VkDrmFormatModifierProperties2EXT",
      name: "DrmFormatModifierProperties2EXT",
      extends: [],
      always_returned: true,
      fields: [
        Field(
          original_name: "drmFormatModifier",
          name: "drm_format_modifier",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifierPlaneCount",
          name: "drm_format_modifier_plane_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "drmFormatModifierTilingFeatures",
          name: "drm_format_modifier_tiling_features",
          ty: Named("VkFormatFeatureFlags2"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      extended: [],
    ),
    Struct(
      original_name: "VkAndroidHardwareBufferFormatProperties2ANDROID",
      name: "AndroidHardwareBufferFormatProperties2ANDROID",
      extends: [
        "VkAndroidHardwareBufferPropertiesANDROID",
      ],
      always_returned: true,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "format",
          name: "format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "externalFormat",
          name: "external_format",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "formatFeatures",
          name: "format_features",
          ty: Named("VkFormatFeatureFlags2"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "samplerYcbcrConversionComponents",
          name: "sampler_ycbcr_conversion_components",
          ty: Named("VkComponentMapping"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYcbcrModel",
          name: "suggested_ycbcr_model",
          ty: Named("VkSamplerYcbcrModelConversion"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYcbcrRange",
          name: "suggested_ycbcr_range",
          ty: Named("VkSamplerYcbcrRange"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedXChromaOffset",
          name: "suggested_x_chroma_offset",
          ty: Named("VkChromaLocation"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "suggestedYChromaOffset",
          name: "suggested_y_chroma_offset",
          ty: Named("VkChromaLocation"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPipelineRenderingCreateInfo",
      name: "PipelineRenderingCreateInfo",
      extends: [
        "VkGraphicsPipelineCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewMask",
          name: "view_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorAttachmentCount",
          name: "color_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pColorAttachmentFormats",
          name: "color_attachment_formats",
          ty: Slice(Const, Named("VkFormat"), Variable("colorAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthAttachmentFormat",
          name: "depth_attachment_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilAttachmentFormat",
          name: "stencil_attachment_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkRenderingInfo",
      name: "RenderingInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDERING_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkRenderingFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "renderArea",
          name: "render_area",
          ty: Named("VkRect2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "layerCount",
          name: "layer_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewMask",
          name: "view_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorAttachmentCount",
          name: "color_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pColorAttachments",
          name: "color_attachments",
          ty: Slice(Const, Named("VkRenderingAttachmentInfo"), Variable("colorAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pDepthAttachment",
          name: "depth_attachment",
          ty: Pointer(Const, Named("VkRenderingAttachmentInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pStencilAttachment",
          name: "stencil_attachment",
          ty: Pointer(Const, Named("VkRenderingAttachmentInfo")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [
        "VkDeviceGroupRenderPassBeginInfo",
        "VkRenderingFragmentShadingRateAttachmentInfoKHR",
        "VkRenderingFragmentDensityMapAttachmentInfoEXT",
        "VkMultiviewPerViewAttributesInfoNVX",
      ],
    ),
    Struct(
      original_name: "VkRenderingAttachmentInfo",
      name: "RenderingAttachmentInfo",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageView",
          name: "image_view",
          ty: Named("VkImageView"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageLayout",
          name: "image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "resolveMode",
          name: "resolve_mode",
          ty: Named("VkResolveModeFlagBits"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "resolveImageView",
          name: "resolve_image_view",
          ty: Named("VkImageView"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "resolveImageLayout",
          name: "resolve_image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "loadOp",
          name: "load_op",
          ty: Named("VkAttachmentLoadOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "storeOp",
          name: "store_op",
          ty: Named("VkAttachmentStoreOp"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "clearValue",
          name: "clear_value",
          ty: Named("VkClearValue"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkRenderingFragmentShadingRateAttachmentInfoKHR",
      name: "RenderingFragmentShadingRateAttachmentInfoKHR",
      extends: [
        "VkRenderingInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageView",
          name: "image_view",
          ty: Named("VkImageView"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageLayout",
          name: "image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "shadingRateAttachmentTexelSize",
          name: "shading_rate_attachment_texel_size",
          ty: Named("VkExtent2D"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      extended: [],
    ),
    Struct(
      original_name: "VkRenderingFragmentDensityMapAttachmentInfoEXT",
      name: "RenderingFragmentDensityMapAttachmentInfoEXT",
      extends: [
        "VkRenderingInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageView",
          name: "image_view",
          ty: Named("VkImageView"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "imageLayout",
          name: "image_layout",
          ty: Named("VkImageLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDynamicRenderingFeatures",
      name: "PhysicalDeviceDynamicRenderingFeatures",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "dynamicRendering",
          name: "dynamic_rendering",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkCommandBufferInheritanceRenderingInfo",
      name: "CommandBufferInheritanceRenderingInfo",
      extends: [
        "VkCommandBufferInheritanceInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "flags",
          name: "flags",
          ty: Named("VkRenderingFlags"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "viewMask",
          name: "view_mask",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorAttachmentCount",
          name: "color_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pColorAttachmentFormats",
          name: "color_attachment_formats",
          ty: Slice(Const, Named("VkFormat"), Variable("colorAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthAttachmentFormat",
          name: "depth_attachment_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "stencilAttachmentFormat",
          name: "stencil_attachment_format",
          ty: Named("VkFormat"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizationSamples",
          name: "rasterization_samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_3,
      extended: [],
    ),
    Struct(
      original_name: "VkAttachmentSampleCountInfoAMD",
      name: "AttachmentSampleCountInfoAMD",
      extends: [
        "VkCommandBufferInheritanceInfo",
        "VkGraphicsPipelineCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "colorAttachmentCount",
          name: "color_attachment_count",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "pColorAttachmentSamples",
          name: "color_attachment_samples",
          ty: Slice(Const, Named("VkSampleCountFlagBits"), Variable("colorAttachmentCount")),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "depthStencilAttachmentSamples",
          name: "depth_stencil_attachment_samples",
          ty: Named("VkSampleCountFlagBits"),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      extended: [],
    ),
    Struct(
      original_name: "VkMultiviewPerViewAttributesInfoNVX",
      name: "MultiviewPerViewAttributesInfoNVX",
      extends: [
        "VkCommandBufferInheritanceInfo",
        "VkGraphicsPipelineCreateInfo",
        "VkRenderingInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "perViewAttributes",
          name: "per_view_attributes",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "perViewAttributesPositionXOnly",
          name: "per_view_attributes_position_x_only",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceImageViewMinLodFeaturesEXT",
      name: "PhysicalDeviceImageViewMinLodFeaturesEXT",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "minLod",
          name: "min_lod",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_view_min_lod", 392, false),
      extended: [],
    ),
    Struct(
      original_name: "VkImageViewMinLodCreateInfoEXT",
      name: "ImageViewMinLodCreateInfoEXT",
      extends: [
        "VkImageViewCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "minLod",
          name: "min_lod",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_EXT_image_view_min_lod", 392, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM",
      name: "PhysicalDeviceRasterizationOrderAttachmentAccessFeaturesARM",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizationOrderColorAttachmentAccess",
          name: "rasterization_order_color_attachment_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizationOrderDepthAttachmentAccess",
          name: "rasterization_order_depth_attachment_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "rasterizationOrderStencilAttachmentAccess",
          name: "rasterization_order_stencil_attachment_access",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceLinearColorAttachmentFeaturesNV",
      name: "PhysicalDeviceLinearColorAttachmentFeaturesNV",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "linearColorAttachment",
          name: "linear_color_attachment",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_linear_color_attachment", 431, false),
      extended: [],
    ),
    Struct(
      original_name: "VkPhysicalDeviceDescriptorSetHostMappingFeaturesVALVE",
      name: "PhysicalDeviceDescriptorSetHostMappingFeaturesVALVE",
      extends: [
        "VkPhysicalDeviceFeatures2",
        "VkDeviceCreateInfo",
      ],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "descriptorSetHostMapping",
          name: "descriptor_set_host_mapping",
          ty: Named("VkBool32"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorSetBindingReferenceVALVE",
      name: "DescriptorSetBindingReferenceVALVE",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Const, Named("VkBaseInStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorSetLayout",
          name: "descriptor_set_layout",
          ty: Named("VkDescriptorSetLayout"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "binding",
          name: "binding",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
      extended: [],
    ),
    Struct(
      original_name: "VkDescriptorSetLayoutHostMappingInfoVALVE",
      name: "DescriptorSetLayoutHostMappingInfoVALVE",
      extends: [],
      always_returned: false,
      fields: [
        Field(
          original_name: "sType",
          name: "s_type",
          ty: Named("VkStructureType"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: Some("VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE"),
        ),
        Field(
          original_name: "pNext",
          name: "p_next",
          ty: Pointer(Mutable, Named("VkBaseOutStructure")),
          selector: None,
          selection: None,
          optional: Yes,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorOffset",
          name: "descriptor_offset",
          ty: Native(USize),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "descriptorSize",
          name: "descriptor_size",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
      extended: [],
    ),
  ],
  unions: [
    Union(
      original_name: "VkClearColorValue",
      name: "ClearColorValue",
      fields: [
        Field(
          original_name: "float32",
          name: "float32",
          ty: Array(Native(Float), ConstantInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "int32",
          name: "int32",
          ty: Array(Native(Int(4)), ConstantInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uint32",
          name: "uint32",
          ty: Array(Native(UInt(4)), ConstantInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
    ),
    Union(
      original_name: "VkClearValue",
      name: "ClearValue",
      fields: [
        Field(
          original_name: "color",
          name: "color",
          ty: Named("VkClearColorValue"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "depthStencil",
          name: "depth_stencil",
          ty: Named("VkClearDepthStencilValue"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Vulkan1_0,
    ),
    Union(
      original_name: "VkPerformanceCounterResultKHR",
      name: "PerformanceCounterResultKHR",
      fields: [
        Field(
          original_name: "int32",
          name: "int32",
          ty: Native(Int(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "int64",
          name: "int64",
          ty: Native(Int(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uint32",
          name: "uint32",
          ty: Native(UInt(4)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "uint64",
          name: "uint64",
          ty: Native(UInt(8)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "float32",
          name: "float32",
          ty: Native(Float),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "float64",
          name: "float64",
          ty: Native(Double),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_performance_query", 117, false),
    ),
    Union(
      original_name: "VkPerformanceValueDataINTEL",
      name: "PerformanceValueDataINTEL",
      fields: [
        Field(
          original_name: "value32",
          name: "value32",
          ty: Native(UInt(4)),
          selector: None,
          selection: Some("VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "value64",
          name: "value64",
          ty: Native(UInt(8)),
          selector: None,
          selection: Some("VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "valueFloat",
          name: "value_float",
          ty: Native(Float),
          selector: None,
          selection: Some("VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "valueBool",
          name: "value_bool",
          ty: Named("VkBool32"),
          selector: None,
          selection: Some("VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "valueString",
          name: "value_string",
          ty: NullTerminatedString(Const),
          selector: None,
          selection: Some("VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_INTEL_performance_query", 211, false),
    ),
    Union(
      original_name: "VkPipelineExecutableStatisticValueKHR",
      name: "PipelineExecutableStatisticValueKHR",
      fields: [
        Field(
          original_name: "b32",
          name: "b32",
          ty: Named("VkBool32"),
          selector: None,
          selection: Some("VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "i64",
          name: "i64",
          ty: Native(Int(8)),
          selector: None,
          selection: Some("VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "u64",
          name: "u64",
          ty: Native(UInt(8)),
          selector: None,
          selection: Some("VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "f64",
          name: "f64",
          ty: Native(Double),
          selector: None,
          selection: Some("VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
    ),
    Union(
      original_name: "VkDeviceOrHostAddressKHR",
      name: "DeviceOrHostAddressKHR",
      fields: [
        Field(
          original_name: "deviceAddress",
          name: "device_address",
          ty: Named("VkDeviceAddress"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "hostAddress",
          name: "host_address",
          ty: Pointer(Mutable, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
    ),
    Union(
      original_name: "VkDeviceOrHostAddressConstKHR",
      name: "DeviceOrHostAddressConstKHR",
      fields: [
        Field(
          original_name: "deviceAddress",
          name: "device_address",
          ty: Named("VkDeviceAddress"),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
        Field(
          original_name: "hostAddress",
          name: "host_address",
          ty: Pointer(Const, Native(Void)),
          selector: None,
          selection: None,
          optional: No,
          externally_synchronized: No,
          must_be_valid: true,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
    ),
    Union(
      original_name: "VkAccelerationStructureGeometryDataKHR",
      name: "AccelerationStructureGeometryDataKHR",
      fields: [
        Field(
          original_name: "triangles",
          name: "triangles",
          ty: Named("VkAccelerationStructureGeometryTrianglesDataKHR"),
          selector: None,
          selection: Some("VK_GEOMETRY_TYPE_TRIANGLES_KHR"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "aabbs",
          name: "aabbs",
          ty: Named("VkAccelerationStructureGeometryAabbsDataKHR"),
          selector: None,
          selection: Some("VK_GEOMETRY_TYPE_AABBS_KHR"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "instances",
          name: "instances",
          ty: Named("VkAccelerationStructureGeometryInstancesDataKHR"),
          selector: None,
          selection: Some("VK_GEOMETRY_TYPE_INSTANCES_KHR"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
    ),
    Union(
      original_name: "VkAccelerationStructureMotionInstanceDataNV",
      name: "AccelerationStructureMotionInstanceDataNV",
      fields: [
        Field(
          original_name: "staticInstance",
          name: "static_instance",
          ty: Named("VkAccelerationStructureInstanceKHR"),
          selector: None,
          selection: Some("VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "matrixMotionInstance",
          name: "matrix_motion_instance",
          ty: Named("VkAccelerationStructureMatrixMotionInstanceNV"),
          selector: None,
          selection: Some("VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
        Field(
          original_name: "srtMotionInstance",
          name: "srt_motion_instance",
          ty: Named("VkAccelerationStructureSRTMotionInstanceNV"),
          selector: None,
          selection: Some("VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV"),
          optional: No,
          externally_synchronized: No,
          must_be_valid: false,
          value: None,
        ),
      ],
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
    ),
  ],
  handles: [
    Handle(
      original_name: "VkInstance",
      rename: None,
      name: "Instance",
      parent: None,
      dispatchable: true,
      origin: Vulkan1_0,
      functions: [
        "vkDestroyInstance",
        "vkEnumeratePhysicalDevices",
        "vkGetInstanceProcAddr",
        "vkCreateAndroidSurfaceKHR",
        "vkCreateDisplayPlaneSurfaceKHR",
        "vkDestroySurfaceKHR",
        "vkCreateViSurfaceNN",
        "vkCreateWaylandSurfaceKHR",
        "vkCreateWin32SurfaceKHR",
        "vkCreateXlibSurfaceKHR",
        "vkCreateXcbSurfaceKHR",
        "vkCreateDirectFBSurfaceEXT",
        "vkCreateImagePipeSurfaceFUCHSIA",
        "vkCreateDebugReportCallbackEXT",
        "vkDestroyDebugReportCallbackEXT",
        "vkDebugReportMessageEXT",
        "vkEnumeratePhysicalDeviceGroups",
        "vkCreateIOSSurfaceMVK",
        "vkCreateMacOSSurfaceMVK",
        "vkCreateMetalSurfaceEXT",
        "vkCreateDebugUtilsMessengerEXT",
        "vkDestroyDebugUtilsMessengerEXT",
        "vkSubmitDebugUtilsMessageEXT",
        "vkCreateHeadlessSurfaceEXT",
      ],
      destroyer: None,
    ),
    Handle(
      original_name: "VkPhysicalDevice",
      rename: None,
      name: "PhysicalDevice",
      parent: Some("VkInstance"),
      dispatchable: true,
      origin: Vulkan1_0,
      functions: [
        "vkGetPhysicalDeviceProperties",
        "vkGetPhysicalDeviceQueueFamilyProperties",
        "vkGetPhysicalDeviceMemoryProperties",
        "vkGetPhysicalDeviceFeatures",
        "vkGetPhysicalDeviceFormatProperties",
        "vkGetPhysicalDeviceImageFormatProperties",
        "vkCreateDevice",
        "vkEnumerateDeviceLayerProperties",
        "vkEnumerateDeviceExtensionProperties",
        "vkGetPhysicalDeviceSparseImageFormatProperties",
        "vkGetPhysicalDeviceDisplayPropertiesKHR",
        "vkGetPhysicalDeviceDisplayPlanePropertiesKHR",
        "vkGetDisplayPlaneSupportedDisplaysKHR",
        "vkGetDisplayModePropertiesKHR",
        "vkCreateDisplayModeKHR",
        "vkGetDisplayPlaneCapabilitiesKHR",
        "vkGetPhysicalDeviceSurfaceSupportKHR",
        "vkGetPhysicalDeviceSurfaceCapabilitiesKHR",
        "vkGetPhysicalDeviceSurfaceFormatsKHR",
        "vkGetPhysicalDeviceSurfacePresentModesKHR",
        "vkGetPhysicalDeviceWaylandPresentationSupportKHR",
        "vkGetPhysicalDeviceWin32PresentationSupportKHR",
        "vkGetPhysicalDeviceXlibPresentationSupportKHR",
        "vkGetPhysicalDeviceXcbPresentationSupportKHR",
        "vkGetPhysicalDeviceDirectFBPresentationSupportEXT",
        "vkGetPhysicalDeviceExternalImageFormatPropertiesNV",
        "vkGetPhysicalDeviceFeatures2",
        "vkGetPhysicalDeviceProperties2",
        "vkGetPhysicalDeviceFormatProperties2",
        "vkGetPhysicalDeviceImageFormatProperties2",
        "vkGetPhysicalDeviceQueueFamilyProperties2",
        "vkGetPhysicalDeviceMemoryProperties2",
        "vkGetPhysicalDeviceSparseImageFormatProperties2",
        "vkGetPhysicalDeviceExternalBufferProperties",
        "vkGetPhysicalDeviceExternalSemaphoreProperties",
        "vkGetPhysicalDeviceExternalFenceProperties",
        "vkReleaseDisplayEXT",
        "vkAcquireXlibDisplayEXT",
        "vkGetRandROutputDisplayEXT",
        "vkAcquireWinrtDisplayNV",
        "vkGetWinrtDisplayNV",
        "vkGetPhysicalDeviceSurfaceCapabilities2EXT",
        "vkGetPhysicalDevicePresentRectanglesKHR",
        "vkGetPhysicalDeviceMultisamplePropertiesEXT",
        "vkGetPhysicalDeviceSurfaceCapabilities2KHR",
        "vkGetPhysicalDeviceSurfaceFormats2KHR",
        "vkGetPhysicalDeviceDisplayProperties2KHR",
        "vkGetPhysicalDeviceDisplayPlaneProperties2KHR",
        "vkGetDisplayModeProperties2KHR",
        "vkGetDisplayPlaneCapabilities2KHR",
        "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT",
        "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV",
        "vkGetPhysicalDeviceSurfacePresentModes2EXT",
        "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR",
        "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR",
        "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV",
        "vkGetPhysicalDeviceToolProperties",
        "vkGetPhysicalDeviceFragmentShadingRatesKHR",
        "vkGetPhysicalDeviceVideoCapabilitiesKHR",
        "vkGetPhysicalDeviceVideoFormatPropertiesKHR",
        "vkAcquireDrmDisplayEXT",
        "vkGetDrmDisplayEXT",
      ],
      destroyer: None,
    ),
    Handle(
      original_name: "VkDevice",
      rename: None,
      name: "Device",
      parent: Some("VkPhysicalDevice"),
      dispatchable: true,
      origin: Vulkan1_0,
      functions: [
        "vkGetDeviceProcAddr",
        "vkDestroyDevice",
        "vkGetDeviceQueue",
        "vkDeviceWaitIdle",
        "vkAllocateMemory",
        "vkFreeMemory",
        "vkMapMemory",
        "vkUnmapMemory",
        "vkFlushMappedMemoryRanges",
        "vkInvalidateMappedMemoryRanges",
        "vkGetDeviceMemoryCommitment",
        "vkGetBufferMemoryRequirements",
        "vkBindBufferMemory",
        "vkGetImageMemoryRequirements",
        "vkBindImageMemory",
        "vkGetImageSparseMemoryRequirements",
        "vkCreateFence",
        "vkDestroyFence",
        "vkResetFences",
        "vkGetFenceStatus",
        "vkWaitForFences",
        "vkCreateSemaphore",
        "vkDestroySemaphore",
        "vkCreateEvent",
        "vkDestroyEvent",
        "vkGetEventStatus",
        "vkSetEvent",
        "vkResetEvent",
        "vkCreateQueryPool",
        "vkDestroyQueryPool",
        "vkGetQueryPoolResults",
        "vkResetQueryPool",
        "vkCreateBuffer",
        "vkDestroyBuffer",
        "vkCreateBufferView",
        "vkDestroyBufferView",
        "vkCreateImage",
        "vkDestroyImage",
        "vkGetImageSubresourceLayout",
        "vkCreateImageView",
        "vkDestroyImageView",
        "vkCreateShaderModule",
        "vkDestroyShaderModule",
        "vkCreatePipelineCache",
        "vkDestroyPipelineCache",
        "vkGetPipelineCacheData",
        "vkMergePipelineCaches",
        "vkCreateGraphicsPipelines",
        "vkCreateComputePipelines",
        "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI",
        "vkDestroyPipeline",
        "vkCreatePipelineLayout",
        "vkDestroyPipelineLayout",
        "vkCreateSampler",
        "vkDestroySampler",
        "vkCreateDescriptorSetLayout",
        "vkDestroyDescriptorSetLayout",
        "vkCreateDescriptorPool",
        "vkDestroyDescriptorPool",
        "vkResetDescriptorPool",
        "vkAllocateDescriptorSets",
        "vkFreeDescriptorSets",
        "vkUpdateDescriptorSets",
        "vkCreateFramebuffer",
        "vkDestroyFramebuffer",
        "vkCreateRenderPass",
        "vkDestroyRenderPass",
        "vkGetRenderAreaGranularity",
        "vkCreateCommandPool",
        "vkDestroyCommandPool",
        "vkResetCommandPool",
        "vkAllocateCommandBuffers",
        "vkFreeCommandBuffers",
        "vkCreateSharedSwapchainsKHR",
        "vkCreateSwapchainKHR",
        "vkDestroySwapchainKHR",
        "vkGetSwapchainImagesKHR",
        "vkAcquireNextImageKHR",
        "vkDebugMarkerSetObjectNameEXT",
        "vkDebugMarkerSetObjectTagEXT",
        "vkGetMemoryWin32HandleNV",
        "vkGetGeneratedCommandsMemoryRequirementsNV",
        "vkCreateIndirectCommandsLayoutNV",
        "vkDestroyIndirectCommandsLayoutNV",
        "vkTrimCommandPool",
        "vkGetMemoryWin32HandleKHR",
        "vkGetMemoryWin32HandlePropertiesKHR",
        "vkGetMemoryFdKHR",
        "vkGetMemoryFdPropertiesKHR",
        "vkGetMemoryZirconHandleFUCHSIA",
        "vkGetMemoryZirconHandlePropertiesFUCHSIA",
        "vkGetMemoryRemoteAddressNV",
        "vkGetSemaphoreWin32HandleKHR",
        "vkImportSemaphoreWin32HandleKHR",
        "vkGetSemaphoreFdKHR",
        "vkImportSemaphoreFdKHR",
        "vkGetSemaphoreZirconHandleFUCHSIA",
        "vkImportSemaphoreZirconHandleFUCHSIA",
        "vkGetFenceWin32HandleKHR",
        "vkImportFenceWin32HandleKHR",
        "vkGetFenceFdKHR",
        "vkImportFenceFdKHR",
        "vkDisplayPowerControlEXT",
        "vkRegisterDeviceEventEXT",
        "vkRegisterDisplayEventEXT",
        "vkGetSwapchainCounterEXT",
        "vkGetDeviceGroupPeerMemoryFeatures",
        "vkBindBufferMemory2",
        "vkBindImageMemory2",
        "vkGetDeviceGroupPresentCapabilitiesKHR",
        "vkGetDeviceGroupSurfacePresentModesKHR",
        "vkAcquireNextImage2KHR",
        "vkCreateDescriptorUpdateTemplate",
        "vkDestroyDescriptorUpdateTemplate",
        "vkUpdateDescriptorSetWithTemplate",
        "vkSetHdrMetadataEXT",
        "vkGetSwapchainStatusKHR",
        "vkGetRefreshCycleDurationGOOGLE",
        "vkGetPastPresentationTimingGOOGLE",
        "vkGetBufferMemoryRequirements2",
        "vkGetImageMemoryRequirements2",
        "vkGetImageSparseMemoryRequirements2",
        "vkGetDeviceBufferMemoryRequirements",
        "vkGetDeviceImageMemoryRequirements",
        "vkGetDeviceImageSparseMemoryRequirements",
        "vkCreateSamplerYcbcrConversion",
        "vkDestroySamplerYcbcrConversion",
        "vkGetDeviceQueue2",
        "vkCreateValidationCacheEXT",
        "vkDestroyValidationCacheEXT",
        "vkGetValidationCacheDataEXT",
        "vkMergeValidationCachesEXT",
        "vkGetDescriptorSetLayoutSupport",
        "vkGetShaderInfoAMD",
        "vkSetLocalDimmingAMD",
        "vkGetCalibratedTimestampsEXT",
        "vkSetDebugUtilsObjectNameEXT",
        "vkSetDebugUtilsObjectTagEXT",
        "vkGetMemoryHostPointerPropertiesEXT",
        "vkCreateRenderPass2",
        "vkGetSemaphoreCounterValue",
        "vkWaitSemaphores",
        "vkSignalSemaphore",
        "vkGetAndroidHardwareBufferPropertiesANDROID",
        "vkGetMemoryAndroidHardwareBufferANDROID",
        "vkCompileDeferredNV",
        "vkCreateAccelerationStructureNV",
        "vkDestroyAccelerationStructureKHR",
        "vkDestroyAccelerationStructureNV",
        "vkGetAccelerationStructureMemoryRequirementsNV",
        "vkBindAccelerationStructureMemoryNV",
        "vkCopyAccelerationStructureKHR",
        "vkCopyAccelerationStructureToMemoryKHR",
        "vkCopyMemoryToAccelerationStructureKHR",
        "vkWriteAccelerationStructuresPropertiesKHR",
        "vkGetRayTracingShaderGroupHandlesKHR",
        "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR",
        "vkGetAccelerationStructureHandleNV",
        "vkCreateRayTracingPipelinesNV",
        "vkCreateRayTracingPipelinesKHR",
        "vkGetDeviceAccelerationStructureCompatibilityKHR",
        "vkGetRayTracingShaderGroupStackSizeKHR",
        "vkGetImageViewHandleNVX",
        "vkGetImageViewAddressNVX",
        "vkGetDeviceGroupSurfacePresentModes2EXT",
        "vkAcquireFullScreenExclusiveModeEXT",
        "vkReleaseFullScreenExclusiveModeEXT",
        "vkAcquireProfilingLockKHR",
        "vkReleaseProfilingLockKHR",
        "vkGetImageDrmFormatModifierPropertiesEXT",
        "vkGetBufferOpaqueCaptureAddress",
        "vkGetBufferDeviceAddress",
        "vkInitializePerformanceApiINTEL",
        "vkUninitializePerformanceApiINTEL",
        "vkAcquirePerformanceConfigurationINTEL",
        "vkReleasePerformanceConfigurationINTEL",
        "vkGetPerformanceParameterINTEL",
        "vkGetDeviceMemoryOpaqueCaptureAddress",
        "vkGetPipelineExecutablePropertiesKHR",
        "vkGetPipelineExecutableStatisticsKHR",
        "vkGetPipelineExecutableInternalRepresentationsKHR",
        "vkCreateAccelerationStructureKHR",
        "vkBuildAccelerationStructuresKHR",
        "vkGetAccelerationStructureDeviceAddressKHR",
        "vkCreateDeferredOperationKHR",
        "vkDestroyDeferredOperationKHR",
        "vkGetDeferredOperationMaxConcurrencyKHR",
        "vkGetDeferredOperationResultKHR",
        "vkDeferredOperationJoinKHR",
        "vkCreatePrivateDataSlot",
        "vkDestroyPrivateDataSlot",
        "vkSetPrivateData",
        "vkGetPrivateData",
        "vkGetAccelerationStructureBuildSizesKHR",
        "vkCreateVideoSessionKHR",
        "vkDestroyVideoSessionKHR",
        "vkCreateVideoSessionParametersKHR",
        "vkUpdateVideoSessionParametersKHR",
        "vkDestroyVideoSessionParametersKHR",
        "vkGetVideoSessionMemoryRequirementsKHR",
        "vkBindVideoSessionMemoryKHR",
        "vkCreateCuModuleNVX",
        "vkCreateCuFunctionNVX",
        "vkDestroyCuModuleNVX",
        "vkDestroyCuFunctionNVX",
        "vkSetDeviceMemoryPriorityEXT",
        "vkWaitForPresentKHR",
        "vkCreateBufferCollectionFUCHSIA",
        "vkSetBufferCollectionBufferConstraintsFUCHSIA",
        "vkSetBufferCollectionImageConstraintsFUCHSIA",
        "vkDestroyBufferCollectionFUCHSIA",
        "vkGetBufferCollectionPropertiesFUCHSIA",
      ],
      destroyer: Some("vkReleaseProfilingLockKHR"),
    ),
    Handle(
      original_name: "VkQueue",
      rename: None,
      name: "Queue",
      parent: Some("VkDevice"),
      dispatchable: true,
      origin: Vulkan1_0,
      functions: [
        "vkQueueSubmit",
        "vkQueueWaitIdle",
        "vkQueueBindSparse",
        "vkQueuePresentKHR",
        "vkQueueBeginDebugUtilsLabelEXT",
        "vkQueueEndDebugUtilsLabelEXT",
        "vkQueueInsertDebugUtilsLabelEXT",
        "vkGetQueueCheckpointDataNV",
        "vkQueueSetPerformanceConfigurationINTEL",
        "vkQueueSubmit2",
        "vkGetQueueCheckpointData2NV",
      ],
      destroyer: None,
    ),
    Handle(
      original_name: "VkCommandBuffer",
      rename: None,
      name: "CommandBuffer",
      parent: Some("VkCommandPool"),
      dispatchable: true,
      origin: Vulkan1_0,
      functions: [
        "vkBeginCommandBuffer",
        "vkEndCommandBuffer",
        "vkResetCommandBuffer",
        "vkCmdBindPipeline",
        "vkCmdSetViewport",
        "vkCmdSetScissor",
        "vkCmdSetLineWidth",
        "vkCmdSetDepthBias",
        "vkCmdSetBlendConstants",
        "vkCmdSetDepthBounds",
        "vkCmdSetStencilCompareMask",
        "vkCmdSetStencilWriteMask",
        "vkCmdSetStencilReference",
        "vkCmdBindDescriptorSets",
        "vkCmdBindIndexBuffer",
        "vkCmdBindVertexBuffers",
        "vkCmdDraw",
        "vkCmdDrawIndexed",
        "vkCmdDrawMultiEXT",
        "vkCmdDrawMultiIndexedEXT",
        "vkCmdDrawIndirect",
        "vkCmdDrawIndexedIndirect",
        "vkCmdDispatch",
        "vkCmdDispatchIndirect",
        "vkCmdSubpassShadingHUAWEI",
        "vkCmdCopyBuffer",
        "vkCmdCopyImage",
        "vkCmdBlitImage",
        "vkCmdCopyBufferToImage",
        "vkCmdCopyImageToBuffer",
        "vkCmdUpdateBuffer",
        "vkCmdFillBuffer",
        "vkCmdClearColorImage",
        "vkCmdClearDepthStencilImage",
        "vkCmdClearAttachments",
        "vkCmdResolveImage",
        "vkCmdSetEvent",
        "vkCmdResetEvent",
        "vkCmdWaitEvents",
        "vkCmdPipelineBarrier",
        "vkCmdBeginQuery",
        "vkCmdEndQuery",
        "vkCmdBeginConditionalRenderingEXT",
        "vkCmdEndConditionalRenderingEXT",
        "vkCmdResetQueryPool",
        "vkCmdWriteTimestamp",
        "vkCmdCopyQueryPoolResults",
        "vkCmdPushConstants",
        "vkCmdBeginRenderPass",
        "vkCmdNextSubpass",
        "vkCmdEndRenderPass",
        "vkCmdExecuteCommands",
        "vkCmdDebugMarkerBeginEXT",
        "vkCmdDebugMarkerEndEXT",
        "vkCmdDebugMarkerInsertEXT",
        "vkCmdExecuteGeneratedCommandsNV",
        "vkCmdPreprocessGeneratedCommandsNV",
        "vkCmdBindPipelineShaderGroupNV",
        "vkCmdPushDescriptorSetKHR",
        "vkCmdSetDeviceMask",
        "vkCmdDispatchBase",
        "vkCmdPushDescriptorSetWithTemplateKHR",
        "vkCmdSetViewportWScalingNV",
        "vkCmdSetDiscardRectangleEXT",
        "vkCmdSetSampleLocationsEXT",
        "vkCmdBeginDebugUtilsLabelEXT",
        "vkCmdEndDebugUtilsLabelEXT",
        "vkCmdInsertDebugUtilsLabelEXT",
        "vkCmdWriteBufferMarkerAMD",
        "vkCmdBeginRenderPass2",
        "vkCmdNextSubpass2",
        "vkCmdEndRenderPass2",
        "vkCmdDrawIndirectCount",
        "vkCmdDrawIndexedIndirectCount",
        "vkCmdSetCheckpointNV",
        "vkCmdBindTransformFeedbackBuffersEXT",
        "vkCmdBeginTransformFeedbackEXT",
        "vkCmdEndTransformFeedbackEXT",
        "vkCmdBeginQueryIndexedEXT",
        "vkCmdEndQueryIndexedEXT",
        "vkCmdDrawIndirectByteCountEXT",
        "vkCmdSetExclusiveScissorNV",
        "vkCmdBindShadingRateImageNV",
        "vkCmdSetViewportShadingRatePaletteNV",
        "vkCmdSetCoarseSampleOrderNV",
        "vkCmdDrawMeshTasksNV",
        "vkCmdDrawMeshTasksIndirectNV",
        "vkCmdDrawMeshTasksIndirectCountNV",
        "vkCmdBindInvocationMaskHUAWEI",
        "vkCmdCopyAccelerationStructureNV",
        "vkCmdCopyAccelerationStructureKHR",
        "vkCmdCopyAccelerationStructureToMemoryKHR",
        "vkCmdCopyMemoryToAccelerationStructureKHR",
        "vkCmdWriteAccelerationStructuresPropertiesKHR",
        "vkCmdWriteAccelerationStructuresPropertiesNV",
        "vkCmdBuildAccelerationStructureNV",
        "vkCmdTraceRaysKHR",
        "vkCmdTraceRaysNV",
        "vkCmdTraceRaysIndirectKHR",
        "vkCmdSetRayTracingPipelineStackSizeKHR",
        "vkCmdSetPerformanceMarkerINTEL",
        "vkCmdSetPerformanceStreamMarkerINTEL",
        "vkCmdSetPerformanceOverrideINTEL",
        "vkCmdSetLineStippleEXT",
        "vkCmdBuildAccelerationStructuresKHR",
        "vkCmdBuildAccelerationStructuresIndirectKHR",
        "vkCmdSetCullMode",
        "vkCmdSetFrontFace",
        "vkCmdSetPrimitiveTopology",
        "vkCmdSetViewportWithCount",
        "vkCmdSetScissorWithCount",
        "vkCmdBindVertexBuffers2",
        "vkCmdSetDepthTestEnable",
        "vkCmdSetDepthWriteEnable",
        "vkCmdSetDepthCompareOp",
        "vkCmdSetDepthBoundsTestEnable",
        "vkCmdSetStencilTestEnable",
        "vkCmdSetStencilOp",
        "vkCmdSetPatchControlPointsEXT",
        "vkCmdSetRasterizerDiscardEnable",
        "vkCmdSetDepthBiasEnable",
        "vkCmdSetLogicOpEXT",
        "vkCmdSetPrimitiveRestartEnable",
        "vkCmdCopyBuffer2",
        "vkCmdCopyImage2",
        "vkCmdBlitImage2",
        "vkCmdCopyBufferToImage2",
        "vkCmdCopyImageToBuffer2",
        "vkCmdResolveImage2",
        "vkCmdSetFragmentShadingRateKHR",
        "vkCmdSetFragmentShadingRateEnumNV",
        "vkCmdSetVertexInputEXT",
        "vkCmdSetColorWriteEnableEXT",
        "vkCmdSetEvent2",
        "vkCmdResetEvent2",
        "vkCmdWaitEvents2",
        "vkCmdPipelineBarrier2",
        "vkCmdWriteTimestamp2",
        "vkCmdWriteBufferMarker2AMD",
        "vkCmdDecodeVideoKHR",
        "vkCmdBeginVideoCodingKHR",
        "vkCmdControlVideoCodingKHR",
        "vkCmdEndVideoCodingKHR",
        "vkCmdEncodeVideoKHR",
        "vkCmdCuLaunchKernelNVX",
        "vkCmdBeginRendering",
        "vkCmdEndRendering",
      ],
      destroyer: Some("vkFreeCommandBuffers"),
    ),
    Handle(
      original_name: "VkDeviceMemory",
      rename: None,
      name: "DeviceMemory",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkCommandPool",
      rename: None,
      name: "CommandPool",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkBuffer",
      rename: None,
      name: "Buffer",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkBufferView",
      rename: None,
      name: "BufferView",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkImage",
      rename: None,
      name: "Image",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkImageView",
      rename: None,
      name: "ImageView",
      parent: Some("VkImage"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkShaderModule",
      rename: None,
      name: "ShaderModule",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkPipeline",
      rename: None,
      name: "Pipeline",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkPipelineLayout",
      rename: None,
      name: "PipelineLayout",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkSampler",
      rename: None,
      name: "Sampler",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkDescriptorSet",
      rename: None,
      name: "DescriptorSet",
      parent: Some("VkDescriptorPool"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: Some("vkFreeDescriptorSets"),
    ),
    Handle(
      original_name: "VkDescriptorSetLayout",
      rename: None,
      name: "DescriptorSetLayout",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkDescriptorPool",
      rename: None,
      name: "DescriptorPool",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkFence",
      rename: None,
      name: "Fence",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkSemaphore",
      rename: None,
      name: "Semaphore",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkEvent",
      rename: None,
      name: "Event",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkQueryPool",
      rename: None,
      name: "QueryPool",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkFramebuffer",
      rename: None,
      name: "Framebuffer",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkRenderPass",
      rename: None,
      name: "RenderPass",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkPipelineCache",
      rename: None,
      name: "PipelineCache",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_0,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkIndirectCommandsLayoutNV",
      rename: None,
      name: "IndirectCommandsLayoutNV",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkDescriptorUpdateTemplate",
      rename: None,
      name: "DescriptorUpdateTemplate",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_1,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkSamplerYcbcrConversion",
      rename: None,
      name: "SamplerYcbcrConversion",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_1,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkValidationCacheEXT",
      rename: None,
      name: "ValidationCacheEXT",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_EXT_validation_cache", 161, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkAccelerationStructureKHR",
      rename: None,
      name: "AccelerationStructureKHR",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkAccelerationStructureNV",
      rename: None,
      name: "AccelerationStructureNV",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_NV_ray_tracing", 166, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkPerformanceConfigurationINTEL",
      rename: None,
      name: "PerformanceConfigurationINTEL",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_INTEL_performance_query", 211, false),
      functions: [],
      destroyer: Some("vkReleasePerformanceConfigurationINTEL"),
    ),
    Handle(
      original_name: "VkBufferCollectionFUCHSIA",
      rename: None,
      name: "BufferCollectionFUCHSIA",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkDeferredOperationKHR",
      rename: None,
      name: "DeferredOperationKHR",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkPrivateDataSlot",
      rename: None,
      name: "PrivateDataSlot",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Vulkan1_3,
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkCuModuleNVX",
      rename: None,
      name: "CuModuleNVX",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_NVX_binary_import", 30, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkCuFunctionNVX",
      rename: None,
      name: "CuFunctionNVX",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_NVX_binary_import", 30, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkDisplayKHR",
      rename: None,
      name: "DisplayKHR",
      parent: Some("VkPhysicalDevice"),
      dispatchable: false,
      origin: Extension("VK_KHR_display", 3, false),
      functions: [],
      destroyer: Some("vkReleaseDisplayEXT"),
    ),
    Handle(
      original_name: "VkDisplayModeKHR",
      rename: None,
      name: "DisplayModeKHR",
      parent: Some("VkDisplayKHR"),
      dispatchable: false,
      origin: Extension("VK_KHR_display", 3, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkSurfaceKHR",
      rename: None,
      name: "SurfaceKHR",
      parent: Some("VkInstance"),
      dispatchable: false,
      origin: Extension("VK_KHR_surface", 1, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkSwapchainKHR",
      rename: None,
      name: "SwapchainKHR",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_KHR_swapchain", 2, false),
      functions: [],
      destroyer: Some("vkReleaseFullScreenExclusiveModeEXT"),
    ),
    Handle(
      original_name: "VkDebugReportCallbackEXT",
      rename: None,
      name: "DebugReportCallbackEXT",
      parent: Some("VkInstance"),
      dispatchable: false,
      origin: Extension("VK_EXT_debug_report", 12, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkDebugUtilsMessengerEXT",
      rename: None,
      name: "DebugUtilsMessengerEXT",
      parent: Some("VkInstance"),
      dispatchable: false,
      origin: Extension("VK_EXT_debug_utils", 129, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkVideoSessionKHR",
      rename: None,
      name: "VideoSessionKHR",
      parent: Some("VkDevice"),
      dispatchable: false,
      origin: Extension("VK_KHR_video_queue", 24, false),
      functions: [],
      destroyer: None,
    ),
    Handle(
      original_name: "VkVideoSessionParametersKHR",
      rename: None,
      name: "VideoSessionParametersKHR",
      parent: Some("VkVideoSessionKHR"),
      dispatchable: false,
      origin: Extension("VK_KHR_video_queue", 24, false),
      functions: [],
      destroyer: None,
    ),
  ],
  funcpointers: [
    FunctionPointer(
      original_name: "PFN_vkInternalAllocationNotification",
      name: "PFNInternalAllocationNotification",
      arguments: [
        FunctionPointerArgument(
          original_name: "pUserData",
          name: "p_user_data",
          ty: Pointer(Mutable, Native(Void)),
        ),
        FunctionPointerArgument(
          original_name: "size",
          name: "size",
          ty: Native(USize),
        ),
        FunctionPointerArgument(
          original_name: "allocationType",
          name: "allocation_type",
          ty: Named("VkInternalAllocationType"),
        ),
        FunctionPointerArgument(
          original_name: "allocationScope",
          name: "allocation_scope",
          ty: Named("VkSystemAllocationScope"),
        ),
      ],
      return_type: None,
      origin: Vulkan1_0,
    ),
    FunctionPointer(
      original_name: "PFN_vkInternalFreeNotification",
      name: "PFNInternalFreeNotification",
      arguments: [
        FunctionPointerArgument(
          original_name: "pUserData",
          name: "p_user_data",
          ty: Pointer(Mutable, Native(Void)),
        ),
        FunctionPointerArgument(
          original_name: "size",
          name: "size",
          ty: Native(USize),
        ),
        FunctionPointerArgument(
          original_name: "allocationType",
          name: "allocation_type",
          ty: Named("VkInternalAllocationType"),
        ),
        FunctionPointerArgument(
          original_name: "allocationScope",
          name: "allocation_scope",
          ty: Named("VkSystemAllocationScope"),
        ),
      ],
      return_type: None,
      origin: Vulkan1_0,
    ),
    FunctionPointer(
      original_name: "PFN_vkReallocationFunction",
      name: "PFNReallocationFunction",
      arguments: [
        FunctionPointerArgument(
          original_name: "pUserData",
          name: "p_user_data",
          ty: Pointer(Mutable, Native(Void)),
        ),
        FunctionPointerArgument(
          original_name: "pOriginal",
          name: "p_original",
          ty: Pointer(Mutable, Native(Void)),
        ),
        FunctionPointerArgument(
          original_name: "size",
          name: "size",
          ty: Native(USize),
        ),
        FunctionPointerArgument(
          original_name: "alignment",
          name: "alignment",
          ty: Native(USize),
        ),
        FunctionPointerArgument(
          original_name: "allocationScope",
          name: "allocation_scope",
          ty: Named("VkSystemAllocationScope"),
        ),
      ],
      return_type: Some(Pointer(Mutable, Native(Void))),
      origin: Vulkan1_0,
    ),
    FunctionPointer(
      original_name: "PFN_vkAllocationFunction",
      name: "PFNAllocationFunction",
      arguments: [
        FunctionPointerArgument(
          original_name: "pUserData",
          name: "p_user_data",
          ty: Pointer(Mutable, Native(Void)),
        ),
        FunctionPointerArgument(
          original_name: "size",
          name: "size",
          ty: Native(USize),
        ),
        FunctionPointerArgument(
          original_name: "alignment",
          name: "alignment",
          ty: Native(USize),
        ),
        FunctionPointerArgument(
          original_name: "allocationScope",
          name: "allocation_scope",
          ty: Named("VkSystemAllocationScope"),
        ),
      ],
      return_type: Some(Pointer(Mutable, Native(Void))),
      origin: Vulkan1_0,
    ),
    FunctionPointer(
      original_name: "PFN_vkFreeFunction",
      name: "PFNFreeFunction",
      arguments: [
        FunctionPointerArgument(
          original_name: "pUserData",
          name: "p_user_data",
          ty: Pointer(Mutable, Native(Void)),
        ),
        FunctionPointerArgument(
          original_name: "pMemory",
          name: "p_memory",
          ty: Pointer(Mutable, Native(Void)),
        ),
      ],
      return_type: None,
      origin: Vulkan1_0,
    ),
    FunctionPointer(
      original_name: "PFN_vkVoidFunction",
      name: "PFNVoidFunction",
      arguments: [],
      return_type: None,
      origin: Vulkan1_0,
    ),
    FunctionPointer(
      original_name: "PFN_vkDebugReportCallbackEXT",
      name: "PFNDebugReportCallbackEXT",
      arguments: [
        FunctionPointerArgument(
          original_name: "flags",
          name: "flags",
          ty: Named("VkDebugReportFlagsEXT"),
        ),
        FunctionPointerArgument(
          original_name: "objectType",
          name: "object_type",
          ty: Named("VkDebugReportObjectTypeEXT"),
        ),
        FunctionPointerArgument(
          original_name: "object",
          name: "object",
          ty: Native(UInt(8)),
        ),
        FunctionPointerArgument(
          original_name: "location",
          name: "location",
          ty: Native(USize),
        ),
        FunctionPointerArgument(
          original_name: "messageCode",
          name: "message_code",
          ty: Native(Int(4)),
        ),
        FunctionPointerArgument(
          original_name: "pLayerPrefix",
          name: "p_layer_prefix",
          ty: Pointer(Const, Native(Char)),
        ),
        FunctionPointerArgument(
          original_name: "pMessage",
          name: "p_message",
          ty: Pointer(Const, Native(Char)),
        ),
        FunctionPointerArgument(
          original_name: "pUserData",
          name: "p_user_data",
          ty: Pointer(Mutable, Native(Void)),
        ),
      ],
      return_type: Some(Named("VkBool32")),
      origin: Extension("VK_EXT_debug_report", 12, false),
    ),
    FunctionPointer(
      original_name: "PFN_vkDebugUtilsMessengerCallbackEXT",
      name: "PFNDebugUtilsMessengerCallbackEXT",
      arguments: [
        FunctionPointerArgument(
          original_name: "messageSeverity",
          name: "message_severity",
          ty: Named("VkDebugUtilsMessageSeverityFlagBitsEXT"),
        ),
        FunctionPointerArgument(
          original_name: "messageTypes",
          name: "message_types",
          ty: Named("VkDebugUtilsMessageTypeFlagsEXT"),
        ),
        FunctionPointerArgument(
          original_name: "pCallbackData",
          name: "p_callback_data",
          ty: Pointer(Const, Named("VkDebugUtilsMessengerCallbackDataEXT")),
        ),
        FunctionPointerArgument(
          original_name: "pUserData",
          name: "p_user_data",
          ty: Pointer(Mutable, Native(Void)),
        ),
      ],
      return_type: Some(Named("VkBool32")),
      origin: Extension("VK_EXT_debug_utils", 129, false),
    ),
    FunctionPointer(
      original_name: "PFN_vkDeviceMemoryReportCallbackEXT",
      name: "PFNDeviceMemoryReportCallbackEXT",
      arguments: [
        FunctionPointerArgument(
          original_name: "pCallbackData",
          name: "p_callback_data",
          ty: Pointer(Const, Named("VkDeviceMemoryReportCallbackDataEXT")),
        ),
        FunctionPointerArgument(
          original_name: "pUserData",
          name: "p_user_data",
          ty: Pointer(Mutable, Native(Void)),
        ),
      ],
      return_type: None,
      origin: Extension("VK_EXT_device_memory_report", 285, false),
    ),
  ],
  basetypes: [
    Basetype(
      original_name: "ANativeWindow",
      name: "ANativeWindow",
      origin: Extension("VK_KHR_android_surface", 9, false),
      of: Native(Void),
    ),
    Basetype(
      original_name: "AHardwareBuffer",
      name: "AHardwareBuffer",
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      of: Native(Void),
    ),
    Basetype(
      original_name: "CAMetalLayer",
      name: "CaMetalLayer",
      origin: Extension("VK_EXT_metal_surface", 218, false),
      of: Native(Void),
    ),
    Basetype(
      original_name: "VkSampleMask",
      name: "SampleMask",
      origin: Vulkan1_0,
      of: Native(UInt(4)),
    ),
    Basetype(
      original_name: "VkBool32",
      name: "Bool32",
      origin: Vulkan1_0,
      of: Native(UInt(4)),
    ),
    Basetype(
      original_name: "VkFlags",
      name: "Flags",
      origin: Vulkan1_0,
      of: Native(UInt(4)),
    ),
    Basetype(
      original_name: "VkFlags64",
      name: "Flags64",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: Native(UInt(8)),
    ),
    Basetype(
      original_name: "VkDeviceSize",
      name: "DeviceSize",
      origin: Vulkan1_0,
      of: Native(UInt(8)),
    ),
    Basetype(
      original_name: "VkDeviceAddress",
      name: "DeviceAddress",
      origin: Vulkan1_0,
      of: Native(UInt(8)),
    ),
    Basetype(
      original_name: "VkRemoteAddressNV",
      name: "RemoteAddressNV",
      origin: Extension("VK_NV_external_memory_rdma", 372, false),
      of: Native(Void),
    ),
  ],
  bitmasks: [
    Bitmask(
      original_name: "VkFramebufferCreateFlags",
      name: "FramebufferCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkFramebufferCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkQueryPoolCreateFlags",
      name: "QueryPoolCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkRenderPassCreateFlags",
      name: "RenderPassCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkRenderPassCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkSamplerCreateFlags",
      name: "SamplerCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkSamplerCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkPipelineLayoutCreateFlags",
      name: "PipelineLayoutCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineCacheCreateFlags",
      name: "PipelineCacheCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkPipelineCacheCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkPipelineDepthStencilStateCreateFlags",
      name: "PipelineDepthStencilStateCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkPipelineDepthStencilStateCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkPipelineDynamicStateCreateFlags",
      name: "PipelineDynamicStateCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineColorBlendStateCreateFlags",
      name: "PipelineColorBlendStateCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkPipelineColorBlendStateCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkPipelineMultisampleStateCreateFlags",
      name: "PipelineMultisampleStateCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineRasterizationStateCreateFlags",
      name: "PipelineRasterizationStateCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineViewportStateCreateFlags",
      name: "PipelineViewportStateCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineTessellationStateCreateFlags",
      name: "PipelineTessellationStateCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineInputAssemblyStateCreateFlags",
      name: "PipelineInputAssemblyStateCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineVertexInputStateCreateFlags",
      name: "PipelineVertexInputStateCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineShaderStageCreateFlags",
      name: "PipelineShaderStageCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkPipelineShaderStageCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkDescriptorSetLayoutCreateFlags",
      name: "DescriptorSetLayoutCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkDescriptorSetLayoutCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkBufferViewCreateFlags",
      name: "BufferViewCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkInstanceCreateFlags",
      name: "InstanceCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkInstanceCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkDeviceCreateFlags",
      name: "DeviceCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkDeviceQueueCreateFlags",
      name: "DeviceQueueCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkDeviceQueueCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkQueueFlags",
      name: "QueueFlags",
      origin: Vulkan1_0,
      bits: Some("VkQueueFlagBits"),
    ),
    Bitmask(
      original_name: "VkMemoryPropertyFlags",
      name: "MemoryPropertyFlags",
      origin: Vulkan1_0,
      bits: Some("VkMemoryPropertyFlagBits"),
    ),
    Bitmask(
      original_name: "VkMemoryHeapFlags",
      name: "MemoryHeapFlags",
      origin: Vulkan1_0,
      bits: Some("VkMemoryHeapFlagBits"),
    ),
    Bitmask(
      original_name: "VkAccessFlags",
      name: "AccessFlags",
      origin: Vulkan1_0,
      bits: Some("VkAccessFlagBits"),
    ),
    Bitmask(
      original_name: "VkBufferUsageFlags",
      name: "BufferUsageFlags",
      origin: Vulkan1_0,
      bits: Some("VkBufferUsageFlagBits"),
    ),
    Bitmask(
      original_name: "VkBufferCreateFlags",
      name: "BufferCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkBufferCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkShaderStageFlags",
      name: "ShaderStageFlags",
      origin: Vulkan1_0,
      bits: Some("VkShaderStageFlagBits"),
    ),
    Bitmask(
      original_name: "VkImageUsageFlags",
      name: "ImageUsageFlags",
      origin: Vulkan1_0,
      bits: Some("VkImageUsageFlagBits"),
    ),
    Bitmask(
      original_name: "VkImageCreateFlags",
      name: "ImageCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkImageCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkImageViewCreateFlags",
      name: "ImageViewCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkImageViewCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkPipelineCreateFlags",
      name: "PipelineCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkPipelineCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkColorComponentFlags",
      name: "ColorComponentFlags",
      origin: Vulkan1_0,
      bits: Some("VkColorComponentFlagBits"),
    ),
    Bitmask(
      original_name: "VkFenceCreateFlags",
      name: "FenceCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkFenceCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkSemaphoreCreateFlags",
      name: "SemaphoreCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkFormatFeatureFlags",
      name: "FormatFeatureFlags",
      origin: Vulkan1_0,
      bits: Some("VkFormatFeatureFlagBits"),
    ),
    Bitmask(
      original_name: "VkQueryControlFlags",
      name: "QueryControlFlags",
      origin: Vulkan1_0,
      bits: Some("VkQueryControlFlagBits"),
    ),
    Bitmask(
      original_name: "VkQueryResultFlags",
      name: "QueryResultFlags",
      origin: Vulkan1_0,
      bits: Some("VkQueryResultFlagBits"),
    ),
    Bitmask(
      original_name: "VkShaderModuleCreateFlags",
      name: "ShaderModuleCreateFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkEventCreateFlags",
      name: "EventCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkEventCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkCommandPoolCreateFlags",
      name: "CommandPoolCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkCommandPoolCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkCommandPoolResetFlags",
      name: "CommandPoolResetFlags",
      origin: Vulkan1_0,
      bits: Some("VkCommandPoolResetFlagBits"),
    ),
    Bitmask(
      original_name: "VkCommandBufferResetFlags",
      name: "CommandBufferResetFlags",
      origin: Vulkan1_0,
      bits: Some("VkCommandBufferResetFlagBits"),
    ),
    Bitmask(
      original_name: "VkCommandBufferUsageFlags",
      name: "CommandBufferUsageFlags",
      origin: Vulkan1_0,
      bits: Some("VkCommandBufferUsageFlagBits"),
    ),
    Bitmask(
      original_name: "VkQueryPipelineStatisticFlags",
      name: "QueryPipelineStatisticFlags",
      origin: Vulkan1_0,
      bits: Some("VkQueryPipelineStatisticFlagBits"),
    ),
    Bitmask(
      original_name: "VkMemoryMapFlags",
      name: "MemoryMapFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkImageAspectFlags",
      name: "ImageAspectFlags",
      origin: Vulkan1_0,
      bits: Some("VkImageAspectFlagBits"),
    ),
    Bitmask(
      original_name: "VkSparseMemoryBindFlags",
      name: "SparseMemoryBindFlags",
      origin: Vulkan1_0,
      bits: Some("VkSparseMemoryBindFlagBits"),
    ),
    Bitmask(
      original_name: "VkSparseImageFormatFlags",
      name: "SparseImageFormatFlags",
      origin: Vulkan1_0,
      bits: Some("VkSparseImageFormatFlagBits"),
    ),
    Bitmask(
      original_name: "VkSubpassDescriptionFlags",
      name: "SubpassDescriptionFlags",
      origin: Vulkan1_0,
      bits: Some("VkSubpassDescriptionFlagBits"),
    ),
    Bitmask(
      original_name: "VkPipelineStageFlags",
      name: "PipelineStageFlags",
      origin: Vulkan1_0,
      bits: Some("VkPipelineStageFlagBits"),
    ),
    Bitmask(
      original_name: "VkSampleCountFlags",
      name: "SampleCountFlags",
      origin: Vulkan1_0,
      bits: Some("VkSampleCountFlagBits"),
    ),
    Bitmask(
      original_name: "VkAttachmentDescriptionFlags",
      name: "AttachmentDescriptionFlags",
      origin: Vulkan1_0,
      bits: Some("VkAttachmentDescriptionFlagBits"),
    ),
    Bitmask(
      original_name: "VkStencilFaceFlags",
      name: "StencilFaceFlags",
      origin: Vulkan1_0,
      bits: Some("VkStencilFaceFlagBits"),
    ),
    Bitmask(
      original_name: "VkCullModeFlags",
      name: "CullModeFlags",
      origin: Vulkan1_0,
      bits: Some("VkCullModeFlagBits"),
    ),
    Bitmask(
      original_name: "VkDescriptorPoolCreateFlags",
      name: "DescriptorPoolCreateFlags",
      origin: Vulkan1_0,
      bits: Some("VkDescriptorPoolCreateFlagBits"),
    ),
    Bitmask(
      original_name: "VkDescriptorPoolResetFlags",
      name: "DescriptorPoolResetFlags",
      origin: Vulkan1_0,
      bits: None,
    ),
    Bitmask(
      original_name: "VkDependencyFlags",
      name: "DependencyFlags",
      origin: Vulkan1_0,
      bits: Some("VkDependencyFlagBits"),
    ),
    Bitmask(
      original_name: "VkSubgroupFeatureFlags",
      name: "SubgroupFeatureFlags",
      origin: Vulkan1_1,
      bits: Some("VkSubgroupFeatureFlagBits"),
    ),
    Bitmask(
      original_name: "VkIndirectCommandsLayoutUsageFlagsNV",
      name: "IndirectCommandsLayoutUsageFlagsNV",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      bits: Some("VkIndirectCommandsLayoutUsageFlagBitsNV"),
    ),
    Bitmask(
      original_name: "VkIndirectStateFlagsNV",
      name: "IndirectStateFlagsNV",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      bits: Some("VkIndirectStateFlagBitsNV"),
    ),
    Bitmask(
      original_name: "VkGeometryFlagsKHR",
      name: "GeometryFlagsKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      bits: Some("VkGeometryFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkGeometryInstanceFlagsKHR",
      name: "GeometryInstanceFlagsKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      bits: Some("VkGeometryInstanceFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkBuildAccelerationStructureFlagsKHR",
      name: "BuildAccelerationStructureFlagsKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      bits: Some("VkBuildAccelerationStructureFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkPrivateDataSlotCreateFlags",
      name: "PrivateDataSlotCreateFlags",
      origin: Vulkan1_3,
      bits: None,
    ),
    Bitmask(
      original_name: "VkAccelerationStructureCreateFlagsKHR",
      name: "AccelerationStructureCreateFlagsKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      bits: Some("VkAccelerationStructureCreateFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkDescriptorUpdateTemplateCreateFlags",
      name: "DescriptorUpdateTemplateCreateFlags",
      origin: Vulkan1_1,
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineCreationFeedbackFlags",
      name: "PipelineCreationFeedbackFlags",
      origin: Vulkan1_3,
      bits: Some("VkPipelineCreationFeedbackFlagBits"),
    ),
    Bitmask(
      original_name: "VkPerformanceCounterDescriptionFlagsKHR",
      name: "PerformanceCounterDescriptionFlagsKHR",
      origin: Extension("VK_KHR_performance_query", 117, false),
      bits: Some("VkPerformanceCounterDescriptionFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkAcquireProfilingLockFlagsKHR",
      name: "AcquireProfilingLockFlagsKHR",
      origin: Extension("VK_KHR_performance_query", 117, false),
      bits: Some("VkAcquireProfilingLockFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkSemaphoreWaitFlags",
      name: "SemaphoreWaitFlags",
      origin: Vulkan1_2,
      bits: Some("VkSemaphoreWaitFlagBits"),
    ),
    Bitmask(
      original_name: "VkPipelineCompilerControlFlagsAMD",
      name: "PipelineCompilerControlFlagsAMD",
      origin: Extension("VK_AMD_pipeline_compiler_control", 184, false),
      bits: Some("VkPipelineCompilerControlFlagBitsAMD"),
    ),
    Bitmask(
      original_name: "VkShaderCorePropertiesFlagsAMD",
      name: "ShaderCorePropertiesFlagsAMD",
      origin: Extension("VK_AMD_shader_core_properties2", 228, false),
      bits: Some("VkShaderCorePropertiesFlagBitsAMD"),
    ),
    Bitmask(
      original_name: "VkDeviceDiagnosticsConfigFlagsNV",
      name: "DeviceDiagnosticsConfigFlagsNV",
      origin: Extension("VK_NV_device_diagnostics_config", 301, false),
      bits: Some("VkDeviceDiagnosticsConfigFlagBitsNV"),
    ),
    Bitmask(
      original_name: "VkAccessFlags2",
      name: "AccessFlags2",
      origin: Vulkan1_3,
      bits: Some("VkAccessFlagBits2"),
    ),
    Bitmask(
      original_name: "VkPipelineStageFlags2",
      name: "PipelineStageFlags2",
      origin: Vulkan1_3,
      bits: Some("VkPipelineStageFlagBits2"),
    ),
    Bitmask(
      original_name: "VkAccelerationStructureMotionInfoFlagsNV",
      name: "AccelerationStructureMotionInfoFlagsNV",
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkAccelerationStructureMotionInstanceFlagsNV",
      name: "AccelerationStructureMotionInstanceFlagsNV",
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkFormatFeatureFlags2",
      name: "FormatFeatureFlags2",
      origin: Vulkan1_3,
      bits: Some("VkFormatFeatureFlagBits2"),
    ),
    Bitmask(
      original_name: "VkRenderingFlags",
      name: "RenderingFlags",
      origin: Vulkan1_3,
      bits: Some("VkRenderingFlagBits"),
    ),
    Bitmask(
      original_name: "VkCompositeAlphaFlagsKHR",
      name: "CompositeAlphaFlagsKHR",
      origin: Extension("VK_KHR_surface", 1, false),
      bits: Some("VkCompositeAlphaFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkDisplayPlaneAlphaFlagsKHR",
      name: "DisplayPlaneAlphaFlagsKHR",
      origin: Extension("VK_KHR_display", 3, false),
      bits: Some("VkDisplayPlaneAlphaFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkSurfaceTransformFlagsKHR",
      name: "SurfaceTransformFlagsKHR",
      origin: Extension("VK_KHR_display", 3, false),
      bits: Some("VkSurfaceTransformFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkSwapchainCreateFlagsKHR",
      name: "SwapchainCreateFlagsKHR",
      origin: Extension("VK_KHR_swapchain", 2, false),
      bits: Some("VkSwapchainCreateFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkDisplayModeCreateFlagsKHR",
      name: "DisplayModeCreateFlagsKHR",
      origin: Extension("VK_KHR_display", 3, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkDisplaySurfaceCreateFlagsKHR",
      name: "DisplaySurfaceCreateFlagsKHR",
      origin: Extension("VK_KHR_display", 3, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkAndroidSurfaceCreateFlagsKHR",
      name: "AndroidSurfaceCreateFlagsKHR",
      origin: Extension("VK_KHR_android_surface", 9, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkViSurfaceCreateFlagsNN",
      name: "ViSurfaceCreateFlagsNN",
      origin: Extension("VK_NN_vi_surface", 63, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkWaylandSurfaceCreateFlagsKHR",
      name: "WaylandSurfaceCreateFlagsKHR",
      origin: Extension("VK_KHR_wayland_surface", 7, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkWin32SurfaceCreateFlagsKHR",
      name: "Win32SurfaceCreateFlagsKHR",
      origin: Extension("VK_KHR_win32_surface", 10, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkXlibSurfaceCreateFlagsKHR",
      name: "XlibSurfaceCreateFlagsKHR",
      origin: Extension("VK_KHR_xlib_surface", 5, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkXcbSurfaceCreateFlagsKHR",
      name: "XcbSurfaceCreateFlagsKHR",
      origin: Extension("VK_KHR_xcb_surface", 6, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkDirectFBSurfaceCreateFlagsEXT",
      name: "DirectFBSurfaceCreateFlagsEXT",
      origin: Extension("VK_EXT_directfb_surface", 347, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkIOSSurfaceCreateFlagsMVK",
      name: "IosSurfaceCreateFlagsMVK",
      origin: Extension("VK_MVK_ios_surface", 123, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkMacOSSurfaceCreateFlagsMVK",
      name: "MacOsSurfaceCreateFlagsMVK",
      origin: Extension("VK_MVK_macos_surface", 124, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkMetalSurfaceCreateFlagsEXT",
      name: "MetalSurfaceCreateFlagsEXT",
      origin: Extension("VK_EXT_metal_surface", 218, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkImagePipeSurfaceCreateFlagsFUCHSIA",
      name: "ImagePipeSurfaceCreateFlagsFUCHSIA",
      origin: Extension("VK_FUCHSIA_imagepipe_surface", 215, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkStreamDescriptorSurfaceCreateFlagsGGP",
      name: "StreamDescriptorSurfaceCreateFlagsGGP",
      origin: Extension("VK_GGP_stream_descriptor_surface", 50, true),
      bits: None,
    ),
    Bitmask(
      original_name: "VkHeadlessSurfaceCreateFlagsEXT",
      name: "HeadlessSurfaceCreateFlagsEXT",
      origin: Extension("VK_EXT_headless_surface", 257, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkScreenSurfaceCreateFlagsQNX",
      name: "ScreenSurfaceCreateFlagsQNX",
      origin: Extension("VK_QNX_screen_surface", 379, true),
      bits: None,
    ),
    Bitmask(
      original_name: "VkPeerMemoryFeatureFlags",
      name: "PeerMemoryFeatureFlags",
      origin: Vulkan1_1,
      bits: Some("VkPeerMemoryFeatureFlagBits"),
    ),
    Bitmask(
      original_name: "VkMemoryAllocateFlags",
      name: "MemoryAllocateFlags",
      origin: Vulkan1_1,
      bits: Some("VkMemoryAllocateFlagBits"),
    ),
    Bitmask(
      original_name: "VkDeviceGroupPresentModeFlagsKHR",
      name: "DeviceGroupPresentModeFlagsKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      bits: Some("VkDeviceGroupPresentModeFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkDebugReportFlagsEXT",
      name: "DebugReportFlagsEXT",
      origin: Extension("VK_EXT_debug_report", 12, false),
      bits: Some("VkDebugReportFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkCommandPoolTrimFlags",
      name: "CommandPoolTrimFlags",
      origin: Vulkan1_1,
      bits: None,
    ),
    Bitmask(
      original_name: "VkExternalMemoryHandleTypeFlagsNV",
      name: "ExternalMemoryHandleTypeFlagsNV",
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
      bits: Some("VkExternalMemoryHandleTypeFlagBitsNV"),
    ),
    Bitmask(
      original_name: "VkExternalMemoryFeatureFlagsNV",
      name: "ExternalMemoryFeatureFlagsNV",
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
      bits: Some("VkExternalMemoryFeatureFlagBitsNV"),
    ),
    Bitmask(
      original_name: "VkExternalMemoryHandleTypeFlags",
      name: "ExternalMemoryHandleTypeFlags",
      origin: Vulkan1_1,
      bits: Some("VkExternalMemoryHandleTypeFlagBits"),
    ),
    Bitmask(
      original_name: "VkExternalMemoryFeatureFlags",
      name: "ExternalMemoryFeatureFlags",
      origin: Vulkan1_1,
      bits: Some("VkExternalMemoryFeatureFlagBits"),
    ),
    Bitmask(
      original_name: "VkExternalSemaphoreHandleTypeFlags",
      name: "ExternalSemaphoreHandleTypeFlags",
      origin: Vulkan1_1,
      bits: Some("VkExternalSemaphoreHandleTypeFlagBits"),
    ),
    Bitmask(
      original_name: "VkExternalSemaphoreFeatureFlags",
      name: "ExternalSemaphoreFeatureFlags",
      origin: Vulkan1_1,
      bits: Some("VkExternalSemaphoreFeatureFlagBits"),
    ),
    Bitmask(
      original_name: "VkSemaphoreImportFlags",
      name: "SemaphoreImportFlags",
      origin: Vulkan1_1,
      bits: Some("VkSemaphoreImportFlagBits"),
    ),
    Bitmask(
      original_name: "VkExternalFenceHandleTypeFlags",
      name: "ExternalFenceHandleTypeFlags",
      origin: Vulkan1_1,
      bits: Some("VkExternalFenceHandleTypeFlagBits"),
    ),
    Bitmask(
      original_name: "VkExternalFenceFeatureFlags",
      name: "ExternalFenceFeatureFlags",
      origin: Vulkan1_1,
      bits: Some("VkExternalFenceFeatureFlagBits"),
    ),
    Bitmask(
      original_name: "VkFenceImportFlags",
      name: "FenceImportFlags",
      origin: Vulkan1_1,
      bits: Some("VkFenceImportFlagBits"),
    ),
    Bitmask(
      original_name: "VkSurfaceCounterFlagsEXT",
      name: "SurfaceCounterFlagsEXT",
      origin: Extension("VK_EXT_display_surface_counter", 91, false),
      bits: Some("VkSurfaceCounterFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkPipelineViewportSwizzleStateCreateFlagsNV",
      name: "PipelineViewportSwizzleStateCreateFlagsNV",
      origin: Extension("VK_NV_viewport_swizzle", 99, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineDiscardRectangleStateCreateFlagsEXT",
      name: "PipelineDiscardRectangleStateCreateFlagsEXT",
      origin: Extension("VK_EXT_discard_rectangles", 100, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineCoverageToColorStateCreateFlagsNV",
      name: "PipelineCoverageToColorStateCreateFlagsNV",
      origin: Extension("VK_NV_fragment_coverage_to_color", 150, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineCoverageModulationStateCreateFlagsNV",
      name: "PipelineCoverageModulationStateCreateFlagsNV",
      origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineCoverageReductionStateCreateFlagsNV",
      name: "PipelineCoverageReductionStateCreateFlagsNV",
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkValidationCacheCreateFlagsEXT",
      name: "ValidationCacheCreateFlagsEXT",
      origin: Extension("VK_EXT_validation_cache", 161, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkDebugUtilsMessageSeverityFlagsEXT",
      name: "DebugUtilsMessageSeverityFlagsEXT",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      bits: Some("VkDebugUtilsMessageSeverityFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkDebugUtilsMessageTypeFlagsEXT",
      name: "DebugUtilsMessageTypeFlagsEXT",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      bits: Some("VkDebugUtilsMessageTypeFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkDebugUtilsMessengerCreateFlagsEXT",
      name: "DebugUtilsMessengerCreateFlagsEXT",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkDebugUtilsMessengerCallbackDataFlagsEXT",
      name: "DebugUtilsMessengerCallbackDataFlagsEXT",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkDeviceMemoryReportFlagsEXT",
      name: "DeviceMemoryReportFlagsEXT",
      origin: Extension("VK_EXT_device_memory_report", 285, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineRasterizationConservativeStateCreateFlagsEXT",
      name: "PipelineRasterizationConservativeStateCreateFlagsEXT",
      origin: Extension("VK_EXT_conservative_rasterization", 102, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkDescriptorBindingFlags",
      name: "DescriptorBindingFlags",
      origin: Vulkan1_2,
      bits: Some("VkDescriptorBindingFlagBits"),
    ),
    Bitmask(
      original_name: "VkConditionalRenderingFlagsEXT",
      name: "ConditionalRenderingFlagsEXT",
      origin: Extension("VK_EXT_conditional_rendering", 82, false),
      bits: Some("VkConditionalRenderingFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkResolveModeFlags",
      name: "ResolveModeFlags",
      origin: Vulkan1_2,
      bits: Some("VkResolveModeFlagBits"),
    ),
    Bitmask(
      original_name: "VkPipelineRasterizationStateStreamCreateFlagsEXT",
      name: "PipelineRasterizationStateStreamCreateFlagsEXT",
      origin: Extension("VK_EXT_transform_feedback", 29, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkPipelineRasterizationDepthClipStateCreateFlagsEXT",
      name: "PipelineRasterizationDepthClipStateCreateFlagsEXT",
      origin: Extension("VK_EXT_depth_clip_enable", 103, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkSwapchainImageUsageFlagsANDROID",
      name: "SwapchainImageUsageFlagsANDROID",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      bits: Some("VkSwapchainImageUsageFlagBitsANDROID"),
    ),
    Bitmask(
      original_name: "VkToolPurposeFlags",
      name: "ToolPurposeFlags",
      origin: Vulkan1_3,
      bits: Some("VkToolPurposeFlagBits"),
    ),
    Bitmask(
      original_name: "VkSubmitFlags",
      name: "SubmitFlags",
      origin: Vulkan1_3,
      bits: Some("VkSubmitFlagBits"),
    ),
    Bitmask(
      original_name: "VkImageFormatConstraintsFlagsFUCHSIA",
      name: "ImageFormatConstraintsFlagsFUCHSIA",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkImageConstraintsInfoFlagsFUCHSIA",
      name: "ImageConstraintsInfoFlagsFUCHSIA",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      bits: Some("VkImageConstraintsInfoFlagBitsFUCHSIA"),
    ),
    Bitmask(
      original_name: "VkVideoCodecOperationFlagsKHR",
      name: "VideoCodecOperationFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: Some("VkVideoCodecOperationFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoCapabilityFlagsKHR",
      name: "VideoCapabilityFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: Some("VkVideoCapabilityFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoSessionCreateFlagsKHR",
      name: "VideoSessionCreateFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: Some("VkVideoSessionCreateFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoBeginCodingFlagsKHR",
      name: "VideoBeginCodingFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkVideoEndCodingFlagsKHR",
      name: "VideoEndCodingFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: None,
    ),
    Bitmask(
      original_name: "VkVideoCodingQualityPresetFlagsKHR",
      name: "VideoCodingQualityPresetFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: Some("VkVideoCodingQualityPresetFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoCodingControlFlagsKHR",
      name: "VideoCodingControlFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: Some("VkVideoCodingControlFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoDecodeCapabilityFlagsKHR",
      name: "VideoDecodeCapabilityFlagsKHR",
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
      bits: Some("VkVideoDecodeCapabilityFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoDecodeFlagsKHR",
      name: "VideoDecodeFlagsKHR",
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
      bits: Some("VkVideoDecodeFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoDecodeH264PictureLayoutFlagsEXT",
      name: "VideoDecodeH264PictureLayoutFlagsEXT",
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      bits: Some("VkVideoDecodeH264PictureLayoutFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeFlagsKHR",
      name: "VideoEncodeFlagsKHR",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      bits: Some("VkVideoEncodeFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeCapabilityFlagsKHR",
      name: "VideoEncodeCapabilityFlagsKHR",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      bits: Some("VkVideoEncodeCapabilityFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeRateControlFlagsKHR",
      name: "VideoEncodeRateControlFlagsKHR",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      bits: Some("VkVideoEncodeRateControlFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeRateControlModeFlagsKHR",
      name: "VideoEncodeRateControlModeFlagsKHR",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      bits: Some("VkVideoEncodeRateControlModeFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoChromaSubsamplingFlagsKHR",
      name: "VideoChromaSubsamplingFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: Some("VkVideoChromaSubsamplingFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoComponentBitDepthFlagsKHR",
      name: "VideoComponentBitDepthFlagsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      bits: Some("VkVideoComponentBitDepthFlagBitsKHR"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH264CapabilityFlagsEXT",
      name: "VideoEncodeH264CapabilityFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      bits: Some("VkVideoEncodeH264CapabilityFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH264InputModeFlagsEXT",
      name: "VideoEncodeH264InputModeFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      bits: Some("VkVideoEncodeH264InputModeFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH264OutputModeFlagsEXT",
      name: "VideoEncodeH264OutputModeFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      bits: Some("VkVideoEncodeH264OutputModeFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH264RateControlStructureFlagsEXT",
      name: "VideoEncodeH264RateControlStructureFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      bits: Some("VkVideoEncodeH264RateControlStructureFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH265CapabilityFlagsEXT",
      name: "VideoEncodeH265CapabilityFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      bits: Some("VkVideoEncodeH265CapabilityFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH265InputModeFlagsEXT",
      name: "VideoEncodeH265InputModeFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      bits: Some("VkVideoEncodeH265InputModeFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH265OutputModeFlagsEXT",
      name: "VideoEncodeH265OutputModeFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      bits: Some("VkVideoEncodeH265OutputModeFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH265RateControlStructureFlagsEXT",
      name: "VideoEncodeH265RateControlStructureFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      bits: Some("VkVideoEncodeH265RateControlStructureFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH265CtbSizeFlagsEXT",
      name: "VideoEncodeH265CtbSizeFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      bits: Some("VkVideoEncodeH265CtbSizeFlagBitsEXT"),
    ),
    Bitmask(
      original_name: "VkVideoEncodeH265TransformBlockSizeFlagsEXT",
      name: "VideoEncodeH265TransformBlockSizeFlagsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      bits: Some("VkVideoEncodeH265TransformBlockSizeFlagBitsEXT"),
    ),
  ],
  constants: [
    Const(
      original_name: "VK_MAX_PHYSICAL_DEVICE_NAME_SIZE",
      name: "MAX_PHYSICAL_DEVICE_NAME_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(256),
    ),
    Const(
      original_name: "VK_UUID_SIZE",
      name: "UUID_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(16),
    ),
    Const(
      original_name: "VK_LUID_SIZE",
      name: "LUID_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(8),
    ),
    Const(
      original_name: "VK_MAX_EXTENSION_NAME_SIZE",
      name: "MAX_EXTENSION_NAME_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(256),
    ),
    Const(
      original_name: "VK_MAX_DESCRIPTION_SIZE",
      name: "MAX_DESCRIPTION_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(256),
    ),
    Const(
      original_name: "VK_MAX_MEMORY_TYPES",
      name: "MAX_MEMORY_TYPES",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(32),
    ),
    Const(
      original_name: "VK_MAX_MEMORY_HEAPS",
      name: "MAX_MEMORY_HEAPS",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(16),
    ),
    Const(
      original_name: "VK_LOD_CLAMP_NONE",
      name: "LOD_CLAMP_NONE",
      origin: Vulkan1_0,
      ty: Native(Float),
      value: ConstantFloat(1000.0),
    ),
    Const(
      original_name: "VK_REMAINING_MIP_LEVELS",
      name: "REMAINING_MIP_LEVELS",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: BitwiseNot(ConstantInt(0)),
    ),
    Const(
      original_name: "VK_REMAINING_ARRAY_LAYERS",
      name: "REMAINING_ARRAY_LAYERS",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: BitwiseNot(ConstantInt(0)),
    ),
    Const(
      original_name: "VK_WHOLE_SIZE",
      name: "WHOLE_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(8)),
      value: BitwiseNot(ConstantInt(0)),
    ),
    Const(
      original_name: "VK_ATTACHMENT_UNUSED",
      name: "ATTACHMENT_UNUSED",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: BitwiseNot(ConstantInt(0)),
    ),
    Const(
      original_name: "VK_TRUE",
      name: "TRUE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_FALSE",
      name: "FALSE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QUEUE_FAMILY_IGNORED",
      name: "QUEUE_FAMILY_IGNORED",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: BitwiseNot(ConstantInt(0)),
    ),
    Const(
      original_name: "VK_QUEUE_FAMILY_EXTERNAL",
      name: "QUEUE_FAMILY_EXTERNAL",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: BitwiseNot(ConstantInt(1)),
    ),
    Const(
      original_name: "VK_QUEUE_FAMILY_FOREIGN_EXT",
      name: "QUEUE_FAMILY_FOREIGN_EXT",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: BitwiseNot(ConstantInt(2)),
    ),
    Const(
      original_name: "VK_SUBPASS_EXTERNAL",
      name: "SUBPASS_EXTERNAL",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: BitwiseNot(ConstantInt(0)),
    ),
    Const(
      original_name: "VK_MAX_DEVICE_GROUP_SIZE",
      name: "MAX_DEVICE_GROUP_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(32),
    ),
    Const(
      original_name: "VK_MAX_DRIVER_NAME_SIZE",
      name: "MAX_DRIVER_NAME_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(256),
    ),
    Const(
      original_name: "VK_MAX_DRIVER_INFO_SIZE",
      name: "MAX_DRIVER_INFO_SIZE",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(256),
    ),
    Const(
      original_name: "VK_SHADER_UNUSED_KHR",
      name: "SHADER_UNUSED_KHR",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: BitwiseNot(ConstantInt(0)),
    ),
    Const(
      original_name: "VK_MAX_GLOBAL_PRIORITY_SIZE_KHR",
      name: "MAX_GLOBAL_PRIORITY_SIZE_KHR",
      origin: Vulkan1_0,
      ty: Native(UInt(4)),
      value: ConstantInt(16),
    ),
    Const(
      original_name: "VK_KHR_SURFACE_SPEC_VERSION",
      name: "KHR_SURFACE_SPEC_VERSION",
      origin: Extension("VK_KHR_surface", 1, false),
      ty: Native(UInt(4)),
      value: ConstantInt(25),
    ),
    Const(
      original_name: "VK_KHR_SURFACE_EXTENSION_NAME",
      name: "KHR_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_KHR_surface", 1, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_surface"),
    ),
    Const(
      original_name: "VK_KHR_SWAPCHAIN_SPEC_VERSION",
      name: "KHR_SWAPCHAIN_SPEC_VERSION",
      origin: Extension("VK_KHR_swapchain", 2, false),
      ty: Native(UInt(4)),
      value: ConstantInt(70),
    ),
    Const(
      original_name: "VK_KHR_SWAPCHAIN_EXTENSION_NAME",
      name: "KHR_SWAPCHAIN_EXTENSION_NAME",
      origin: Extension("VK_KHR_swapchain", 2, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_swapchain"),
    ),
    Const(
      original_name: "VK_KHR_DISPLAY_SPEC_VERSION",
      name: "KHR_DISPLAY_SPEC_VERSION",
      origin: Extension("VK_KHR_display", 3, false),
      ty: Native(UInt(4)),
      value: ConstantInt(23),
    ),
    Const(
      original_name: "VK_KHR_DISPLAY_EXTENSION_NAME",
      name: "KHR_DISPLAY_EXTENSION_NAME",
      origin: Extension("VK_KHR_display", 3, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_display"),
    ),
    Const(
      original_name: "VK_KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION",
      name: "KHR_DISPLAY_SWAPCHAIN_SPEC_VERSION",
      origin: Extension("VK_KHR_display_swapchain", 4, false),
      ty: Native(UInt(4)),
      value: ConstantInt(10),
    ),
    Const(
      original_name: "VK_KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME",
      name: "KHR_DISPLAY_SWAPCHAIN_EXTENSION_NAME",
      origin: Extension("VK_KHR_display_swapchain", 4, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_display_swapchain"),
    ),
    Const(
      original_name: "VK_KHR_XLIB_SURFACE_SPEC_VERSION",
      name: "KHR_XLIB_SURFACE_SPEC_VERSION",
      origin: Extension("VK_KHR_xlib_surface", 5, false),
      ty: Native(UInt(4)),
      value: ConstantInt(6),
    ),
    Const(
      original_name: "VK_KHR_XLIB_SURFACE_EXTENSION_NAME",
      name: "KHR_XLIB_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_KHR_xlib_surface", 5, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_xlib_surface"),
    ),
    Const(
      original_name: "VK_KHR_XCB_SURFACE_SPEC_VERSION",
      name: "KHR_XCB_SURFACE_SPEC_VERSION",
      origin: Extension("VK_KHR_xcb_surface", 6, false),
      ty: Native(UInt(4)),
      value: ConstantInt(6),
    ),
    Const(
      original_name: "VK_KHR_XCB_SURFACE_EXTENSION_NAME",
      name: "KHR_XCB_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_KHR_xcb_surface", 6, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_xcb_surface"),
    ),
    Const(
      original_name: "VK_KHR_WAYLAND_SURFACE_SPEC_VERSION",
      name: "KHR_WAYLAND_SURFACE_SPEC_VERSION",
      origin: Extension("VK_KHR_wayland_surface", 7, false),
      ty: Native(UInt(4)),
      value: ConstantInt(6),
    ),
    Const(
      original_name: "VK_KHR_WAYLAND_SURFACE_EXTENSION_NAME",
      name: "KHR_WAYLAND_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_KHR_wayland_surface", 7, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_wayland_surface"),
    ),
    Const(
      original_name: "VK_KHR_MIR_SURFACE_SPEC_VERSION",
      name: "KHR_MIR_SURFACE_SPEC_VERSION",
      origin: Extension("VK_KHR_mir_surface", 8, true),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_KHR_MIR_SURFACE_EXTENSION_NAME",
      name: "KHR_MIR_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_KHR_mir_surface", 8, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_mir_surface"),
    ),
    Const(
      original_name: "VK_KHR_ANDROID_SURFACE_SPEC_VERSION",
      name: "KHR_ANDROID_SURFACE_SPEC_VERSION",
      origin: Extension("VK_KHR_android_surface", 9, false),
      ty: Native(UInt(4)),
      value: ConstantInt(6),
    ),
    Const(
      original_name: "VK_KHR_ANDROID_SURFACE_EXTENSION_NAME",
      name: "KHR_ANDROID_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_KHR_android_surface", 9, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_android_surface"),
    ),
    Const(
      original_name: "VK_KHR_WIN32_SURFACE_SPEC_VERSION",
      name: "KHR_WIN32_SURFACE_SPEC_VERSION",
      origin: Extension("VK_KHR_win32_surface", 10, false),
      ty: Native(UInt(4)),
      value: ConstantInt(6),
    ),
    Const(
      original_name: "VK_KHR_WIN32_SURFACE_EXTENSION_NAME",
      name: "KHR_WIN32_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_KHR_win32_surface", 10, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_win32_surface"),
    ),
    Const(
      original_name: "VK_ANDROID_NATIVE_BUFFER_SPEC_VERSION",
      name: "ANDROID_NATIVE_BUFFER_SPEC_VERSION",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      ty: Native(UInt(4)),
      value: ConstantInt(8),
    ),
    Const(
      original_name: "VK_ANDROID_NATIVE_BUFFER_NUMBER",
      name: "ANDROID_NATIVE_BUFFER_NUMBER",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      ty: Native(UInt(4)),
      value: ConstantInt(11),
    ),
    Const(
      original_name: "VK_ANDROID_NATIVE_BUFFER_EXTENSION_NAME",
      name: "ANDROID_NATIVE_BUFFER_EXTENSION_NAME",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ANDROID_native_buffer"),
    ),
    Const(
      original_name: "VK_EXT_DEBUG_REPORT_SPEC_VERSION",
      name: "EXT_DEBUG_REPORT_SPEC_VERSION",
      origin: Extension("VK_EXT_debug_report", 12, false),
      ty: Native(UInt(4)),
      value: ConstantInt(10),
    ),
    Const(
      original_name: "VK_EXT_DEBUG_REPORT_EXTENSION_NAME",
      name: "EXT_DEBUG_REPORT_EXTENSION_NAME",
      origin: Extension("VK_EXT_debug_report", 12, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_debug_report"),
    ),
    Const(
      original_name: "VK_NV_GLSL_SHADER_SPEC_VERSION",
      name: "NV_GLSL_SHADER_SPEC_VERSION",
      origin: Extension("VK_NV_glsl_shader", 13, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_GLSL_SHADER_EXTENSION_NAME",
      name: "NV_GLSL_SHADER_EXTENSION_NAME",
      origin: Extension("VK_NV_glsl_shader", 13, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_glsl_shader"),
    ),
    Const(
      original_name: "VK_EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION",
      name: "EXT_DEPTH_RANGE_UNRESTRICTED_SPEC_VERSION",
      origin: Extension("VK_EXT_depth_range_unrestricted", 14, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME",
      name: "EXT_DEPTH_RANGE_UNRESTRICTED_EXTENSION_NAME",
      origin: Extension("VK_EXT_depth_range_unrestricted", 14, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_depth_range_unrestricted"),
    ),
    Const(
      original_name: "VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION",
      name: "KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_SPEC_VERSION",
      origin: Extension("VK_KHR_sampler_mirror_clamp_to_edge", 15, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME",
      name: "KHR_SAMPLER_MIRROR_CLAMP_TO_EDGE_EXTENSION_NAME",
      origin: Extension("VK_KHR_sampler_mirror_clamp_to_edge", 15, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_sampler_mirror_clamp_to_edge"),
    ),
    Const(
      original_name: "VK_IMG_FILTER_CUBIC_SPEC_VERSION",
      name: "IMG_FILTER_CUBIC_SPEC_VERSION",
      origin: Extension("VK_IMG_filter_cubic", 16, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_IMG_FILTER_CUBIC_EXTENSION_NAME",
      name: "IMG_FILTER_CUBIC_EXTENSION_NAME",
      origin: Extension("VK_IMG_filter_cubic", 16, false),
      ty: NullTerminatedString(Const),
      value: String("VK_IMG_filter_cubic"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_17_SPEC_VERSION",
      name: "AMD_EXTENSION_17_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_17", 17, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_17_EXTENSION_NAME",
      name: "AMD_EXTENSION_17_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_17", 17, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_17"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_18_SPEC_VERSION",
      name: "AMD_EXTENSION_18_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_18", 18, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_18_EXTENSION_NAME",
      name: "AMD_EXTENSION_18_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_18", 18, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_18"),
    ),
    Const(
      original_name: "VK_AMD_RASTERIZATION_ORDER_SPEC_VERSION",
      name: "AMD_RASTERIZATION_ORDER_SPEC_VERSION",
      origin: Extension("VK_AMD_rasterization_order", 19, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_RASTERIZATION_ORDER_EXTENSION_NAME",
      name: "AMD_RASTERIZATION_ORDER_EXTENSION_NAME",
      origin: Extension("VK_AMD_rasterization_order", 19, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_rasterization_order"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_20_SPEC_VERSION",
      name: "AMD_EXTENSION_20_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_20", 20, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_20_EXTENSION_NAME",
      name: "AMD_EXTENSION_20_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_20", 20, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_20"),
    ),
    Const(
      original_name: "VK_AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION",
      name: "AMD_SHADER_TRINARY_MINMAX_SPEC_VERSION",
      origin: Extension("VK_AMD_shader_trinary_minmax", 21, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME",
      name: "AMD_SHADER_TRINARY_MINMAX_EXTENSION_NAME",
      origin: Extension("VK_AMD_shader_trinary_minmax", 21, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_shader_trinary_minmax"),
    ),
    Const(
      original_name: "VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION",
      name: "AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_SPEC_VERSION",
      origin: Extension("VK_AMD_shader_explicit_vertex_parameter", 22, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME",
      name: "AMD_SHADER_EXPLICIT_VERTEX_PARAMETER_EXTENSION_NAME",
      origin: Extension("VK_AMD_shader_explicit_vertex_parameter", 22, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_shader_explicit_vertex_parameter"),
    ),
    Const(
      original_name: "VK_EXT_DEBUG_MARKER_SPEC_VERSION",
      name: "EXT_DEBUG_MARKER_SPEC_VERSION",
      origin: Extension("VK_EXT_debug_marker", 23, false),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_EXT_DEBUG_MARKER_EXTENSION_NAME",
      name: "EXT_DEBUG_MARKER_EXTENSION_NAME",
      origin: Extension("VK_EXT_debug_marker", 23, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_debug_marker"),
    ),
    Const(
      original_name: "VK_KHR_VIDEO_QUEUE_SPEC_VERSION",
      name: "KHR_VIDEO_QUEUE_SPEC_VERSION",
      origin: Extension("VK_KHR_video_queue", 24, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_KHR_VIDEO_QUEUE_EXTENSION_NAME",
      name: "KHR_VIDEO_QUEUE_EXTENSION_NAME",
      origin: Extension("VK_KHR_video_queue", 24, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_video_queue"),
    ),
    Const(
      original_name: "VK_KHR_VIDEO_DECODE_QUEUE_SPEC_VERSION",
      name: "KHR_VIDEO_DECODE_QUEUE_SPEC_VERSION",
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_KHR_VIDEO_DECODE_QUEUE_EXTENSION_NAME",
      name: "KHR_VIDEO_DECODE_QUEUE_EXTENSION_NAME",
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_video_decode_queue"),
    ),
    Const(
      original_name: "VK_AMD_GCN_SHADER_SPEC_VERSION",
      name: "AMD_GCN_SHADER_SPEC_VERSION",
      origin: Extension("VK_AMD_gcn_shader", 26, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_GCN_SHADER_EXTENSION_NAME",
      name: "AMD_GCN_SHADER_EXTENSION_NAME",
      origin: Extension("VK_AMD_gcn_shader", 26, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_gcn_shader"),
    ),
    Const(
      original_name: "VK_NV_DEDICATED_ALLOCATION_SPEC_VERSION",
      name: "NV_DEDICATED_ALLOCATION_SPEC_VERSION",
      origin: Extension("VK_NV_dedicated_allocation", 27, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_DEDICATED_ALLOCATION_EXTENSION_NAME",
      name: "NV_DEDICATED_ALLOCATION_EXTENSION_NAME",
      origin: Extension("VK_NV_dedicated_allocation", 27, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_dedicated_allocation"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_28_SPEC_VERSION",
      name: "EXT_EXTENSION_28_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_28", 28, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_28_EXTENSION_NAME",
      name: "EXT_EXTENSION_28_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_28", 28, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_28"),
    ),
    Const(
      original_name: "VK_EXT_TRANSFORM_FEEDBACK_SPEC_VERSION",
      name: "EXT_TRANSFORM_FEEDBACK_SPEC_VERSION",
      origin: Extension("VK_EXT_transform_feedback", 29, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME",
      name: "EXT_TRANSFORM_FEEDBACK_EXTENSION_NAME",
      origin: Extension("VK_EXT_transform_feedback", 29, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_transform_feedback"),
    ),
    Const(
      original_name: "VK_NVX_BINARY_IMPORT_SPEC_VERSION",
      name: "NVX_BINARY_IMPORT_SPEC_VERSION",
      origin: Extension("VK_NVX_binary_import", 30, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NVX_BINARY_IMPORT_EXTENSION_NAME",
      name: "NVX_BINARY_IMPORT_EXTENSION_NAME",
      origin: Extension("VK_NVX_binary_import", 30, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NVX_binary_import"),
    ),
    Const(
      original_name: "VK_NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION",
      name: "NVX_IMAGE_VIEW_HANDLE_SPEC_VERSION",
      origin: Extension("VK_NVX_image_view_handle", 31, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME",
      name: "NVX_IMAGE_VIEW_HANDLE_EXTENSION_NAME",
      origin: Extension("VK_NVX_image_view_handle", 31, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NVX_image_view_handle"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_32_SPEC_VERSION",
      name: "AMD_EXTENSION_32_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_32", 32, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_32_EXTENSION_NAME",
      name: "AMD_EXTENSION_32_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_32", 32, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_32"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_33_SPEC_VERSION",
      name: "AMD_EXTENSION_33_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_33", 33, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_33_EXTENSION_NAME",
      name: "AMD_EXTENSION_33_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_33", 33, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_33"),
    ),
    Const(
      original_name: "VK_AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION",
      name: "AMD_DRAW_INDIRECT_COUNT_SPEC_VERSION",
      origin: Extension("VK_AMD_draw_indirect_count", 34, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME",
      name: "AMD_DRAW_INDIRECT_COUNT_EXTENSION_NAME",
      origin: Extension("VK_AMD_draw_indirect_count", 34, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_draw_indirect_count"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_35_SPEC_VERSION",
      name: "AMD_EXTENSION_35_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_35", 35, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_35_EXTENSION_NAME",
      name: "AMD_EXTENSION_35_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_35", 35, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_35"),
    ),
    Const(
      original_name: "VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION",
      name: "AMD_NEGATIVE_VIEWPORT_HEIGHT_SPEC_VERSION",
      origin: Extension("VK_AMD_negative_viewport_height", 36, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME",
      name: "AMD_NEGATIVE_VIEWPORT_HEIGHT_EXTENSION_NAME",
      origin: Extension("VK_AMD_negative_viewport_height", 36, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_negative_viewport_height"),
    ),
    Const(
      original_name: "VK_AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION",
      name: "AMD_GPU_SHADER_HALF_FLOAT_SPEC_VERSION",
      origin: Extension("VK_AMD_gpu_shader_half_float", 37, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME",
      name: "AMD_GPU_SHADER_HALF_FLOAT_EXTENSION_NAME",
      origin: Extension("VK_AMD_gpu_shader_half_float", 37, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_gpu_shader_half_float"),
    ),
    Const(
      original_name: "VK_AMD_SHADER_BALLOT_SPEC_VERSION",
      name: "AMD_SHADER_BALLOT_SPEC_VERSION",
      origin: Extension("VK_AMD_shader_ballot", 38, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_SHADER_BALLOT_EXTENSION_NAME",
      name: "AMD_SHADER_BALLOT_EXTENSION_NAME",
      origin: Extension("VK_AMD_shader_ballot", 38, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_shader_ballot"),
    ),
    Const(
      original_name: "VK_EXT_VIDEO_ENCODE_H264_SPEC_VERSION",
      name: "EXT_VIDEO_ENCODE_H264_SPEC_VERSION",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      ty: Native(UInt(4)),
      value: ConstantInt(6),
    ),
    Const(
      original_name: "VK_EXT_VIDEO_ENCODE_H264_EXTENSION_NAME",
      name: "EXT_VIDEO_ENCODE_H264_EXTENSION_NAME",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_video_encode_h264"),
    ),
    Const(
      original_name: "VK_EXT_VIDEO_ENCODE_H265_SPEC_VERSION",
      name: "EXT_VIDEO_ENCODE_H265_SPEC_VERSION",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      ty: Native(UInt(4)),
      value: ConstantInt(6),
    ),
    Const(
      original_name: "VK_EXT_VIDEO_ENCODE_H265_EXTENSION_NAME",
      name: "EXT_VIDEO_ENCODE_H265_EXTENSION_NAME",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_video_encode_h265"),
    ),
    Const(
      original_name: "VK_EXT_VIDEO_DECODE_H264_SPEC_VERSION",
      name: "EXT_VIDEO_DECODE_H264_SPEC_VERSION",
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_EXT_VIDEO_DECODE_H264_EXTENSION_NAME",
      name: "EXT_VIDEO_DECODE_H264_EXTENSION_NAME",
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_video_decode_h264"),
    ),
    Const(
      original_name: "VK_AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION",
      name: "AMD_TEXTURE_GATHER_BIAS_LOD_SPEC_VERSION",
      origin: Extension("VK_AMD_texture_gather_bias_lod", 42, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME",
      name: "AMD_TEXTURE_GATHER_BIAS_LOD_EXTENSION_NAME",
      origin: Extension("VK_AMD_texture_gather_bias_lod", 42, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_texture_gather_bias_lod"),
    ),
    Const(
      original_name: "VK_AMD_SHADER_INFO_SPEC_VERSION",
      name: "AMD_SHADER_INFO_SPEC_VERSION",
      origin: Extension("VK_AMD_shader_info", 43, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_SHADER_INFO_EXTENSION_NAME",
      name: "AMD_SHADER_INFO_EXTENSION_NAME",
      origin: Extension("VK_AMD_shader_info", 43, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_shader_info"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_44_SPEC_VERSION",
      name: "AMD_EXTENSION_44_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_44", 44, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_44_EXTENSION_NAME",
      name: "AMD_EXTENSION_44_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_44", 44, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_44"),
    ),
    Const(
      original_name: "VK_KHR_DYNAMIC_RENDERING_SPEC_VERSION",
      name: "KHR_DYNAMIC_RENDERING_SPEC_VERSION",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_DYNAMIC_RENDERING_EXTENSION_NAME",
      name: "KHR_DYNAMIC_RENDERING_EXTENSION_NAME",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_dynamic_rendering"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_46_SPEC_VERSION",
      name: "AMD_EXTENSION_46_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_46", 46, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_46_EXTENSION_NAME",
      name: "AMD_EXTENSION_46_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_46", 46, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_46"),
    ),
    Const(
      original_name: "VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION",
      name: "AMD_SHADER_IMAGE_LOAD_STORE_LOD_SPEC_VERSION",
      origin: Extension("VK_AMD_shader_image_load_store_lod", 47, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME",
      name: "AMD_SHADER_IMAGE_LOAD_STORE_LOD_EXTENSION_NAME",
      origin: Extension("VK_AMD_shader_image_load_store_lod", 47, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_shader_image_load_store_lod"),
    ),
    Const(
      original_name: "VK_NVX_EXTENSION_48_SPEC_VERSION",
      name: "NVX_EXTENSION_48_SPEC_VERSION",
      origin: Extension("VK_NVX_extension_48", 48, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NVX_EXTENSION_48_EXTENSION_NAME",
      name: "NVX_EXTENSION_48_EXTENSION_NAME",
      origin: Extension("VK_NVX_extension_48", 48, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NVX_extension_48"),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_49_SPEC_VERSION",
      name: "GOOGLE_EXTENSION_49_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_extension_49", 49, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_49_EXTENSION_NAME",
      name: "GOOGLE_EXTENSION_49_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_extension_49", 49, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_extension_49"),
    ),
    Const(
      original_name: "VK_GGP_STREAM_DESCRIPTOR_SURFACE_SPEC_VERSION",
      name: "GGP_STREAM_DESCRIPTOR_SURFACE_SPEC_VERSION",
      origin: Extension("VK_GGP_stream_descriptor_surface", 50, true),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_GGP_STREAM_DESCRIPTOR_SURFACE_EXTENSION_NAME",
      name: "GGP_STREAM_DESCRIPTOR_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_GGP_stream_descriptor_surface", 50, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GGP_stream_descriptor_surface"),
    ),
    Const(
      original_name: "VK_NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION",
      name: "NV_CORNER_SAMPLED_IMAGE_SPEC_VERSION",
      origin: Extension("VK_NV_corner_sampled_image", 51, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME",
      name: "NV_CORNER_SAMPLED_IMAGE_EXTENSION_NAME",
      origin: Extension("VK_NV_corner_sampled_image", 51, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_corner_sampled_image"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_52_SPEC_VERSION",
      name: "NV_EXTENSION_52_SPEC_VERSION",
      origin: Extension("VK_NV_extension_52", 52, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_52_EXTENSION_NAME",
      name: "NV_EXTENSION_52_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_52", 52, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_52"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_53_SPEC_VERSION",
      name: "NV_EXTENSION_53_SPEC_VERSION",
      origin: Extension("VK_NV_extension_53", 53, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_53_EXTENSION_NAME",
      name: "NV_EXTENSION_53_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_53", 53, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_53"),
    ),
    Const(
      original_name: "VK_KHR_MULTIVIEW_SPEC_VERSION",
      name: "KHR_MULTIVIEW_SPEC_VERSION",
      origin: Extension("VK_KHR_multiview", 54, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_MULTIVIEW_EXTENSION_NAME",
      name: "KHR_MULTIVIEW_EXTENSION_NAME",
      origin: Extension("VK_KHR_multiview", 54, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_multiview"),
    ),
    Const(
      original_name: "VK_IMG_FORMAT_PVRTC_SPEC_VERSION",
      name: "IMG_FORMAT_PVRTC_SPEC_VERSION",
      origin: Extension("VK_IMG_format_pvrtc", 55, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_IMG_FORMAT_PVRTC_EXTENSION_NAME",
      name: "IMG_FORMAT_PVRTC_EXTENSION_NAME",
      origin: Extension("VK_IMG_format_pvrtc", 55, false),
      ty: NullTerminatedString(Const),
      value: String("VK_IMG_format_pvrtc"),
    ),
    Const(
      original_name: "VK_NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION",
      name: "NV_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION",
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME",
      name: "NV_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME",
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_external_memory_capabilities"),
    ),
    Const(
      original_name: "VK_NV_EXTERNAL_MEMORY_SPEC_VERSION",
      name: "NV_EXTERNAL_MEMORY_SPEC_VERSION",
      origin: Extension("VK_NV_external_memory", 57, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_EXTERNAL_MEMORY_EXTENSION_NAME",
      name: "NV_EXTERNAL_MEMORY_EXTENSION_NAME",
      origin: Extension("VK_NV_external_memory", 57, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_external_memory"),
    ),
    Const(
      original_name: "VK_NV_EXTERNAL_MEMORY_WIN32_SPEC_VERSION",
      name: "NV_EXTERNAL_MEMORY_WIN32_SPEC_VERSION",
      origin: Extension("VK_NV_external_memory_win32", 58, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME",
      name: "NV_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME",
      origin: Extension("VK_NV_external_memory_win32", 58, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_external_memory_win32"),
    ),
    Const(
      original_name: "VK_NV_WIN32_KEYED_MUTEX_SPEC_VERSION",
      name: "NV_WIN32_KEYED_MUTEX_SPEC_VERSION",
      origin: Extension("VK_NV_win32_keyed_mutex", 59, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_NV_WIN32_KEYED_MUTEX_EXTENSION_NAME",
      name: "NV_WIN32_KEYED_MUTEX_EXTENSION_NAME",
      origin: Extension("VK_NV_win32_keyed_mutex", 59, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_win32_keyed_mutex"),
    ),
    Const(
      original_name: "VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION",
      name: "KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_SPEC_VERSION",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME",
      name: "KHR_GET_PHYSICAL_DEVICE_PROPERTIES_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_get_physical_device_properties2"),
    ),
    Const(
      original_name: "VK_KHR_DEVICE_GROUP_SPEC_VERSION",
      name: "KHR_DEVICE_GROUP_SPEC_VERSION",
      origin: Extension("VK_KHR_device_group", 61, false),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_KHR_DEVICE_GROUP_EXTENSION_NAME",
      name: "KHR_DEVICE_GROUP_EXTENSION_NAME",
      origin: Extension("VK_KHR_device_group", 61, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_device_group"),
    ),
    Const(
      original_name: "VK_EXT_VALIDATION_FLAGS_SPEC_VERSION",
      name: "EXT_VALIDATION_FLAGS_SPEC_VERSION",
      origin: Extension("VK_EXT_validation_flags", 62, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_VALIDATION_FLAGS_EXTENSION_NAME",
      name: "EXT_VALIDATION_FLAGS_EXTENSION_NAME",
      origin: Extension("VK_EXT_validation_flags", 62, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_validation_flags"),
    ),
    Const(
      original_name: "VK_NN_VI_SURFACE_SPEC_VERSION",
      name: "NN_VI_SURFACE_SPEC_VERSION",
      origin: Extension("VK_NN_vi_surface", 63, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NN_VI_SURFACE_EXTENSION_NAME",
      name: "NN_VI_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_NN_vi_surface", 63, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NN_vi_surface"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION",
      name: "KHR_SHADER_DRAW_PARAMETERS_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_draw_parameters", 64, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME",
      name: "KHR_SHADER_DRAW_PARAMETERS_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_draw_parameters", 64, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_draw_parameters"),
    ),
    Const(
      original_name: "VK_EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION",
      name: "EXT_SHADER_SUBGROUP_BALLOT_SPEC_VERSION",
      origin: Extension("VK_EXT_shader_subgroup_ballot", 65, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME",
      name: "EXT_SHADER_SUBGROUP_BALLOT_EXTENSION_NAME",
      origin: Extension("VK_EXT_shader_subgroup_ballot", 65, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_shader_subgroup_ballot"),
    ),
    Const(
      original_name: "VK_EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION",
      name: "EXT_SHADER_SUBGROUP_VOTE_SPEC_VERSION",
      origin: Extension("VK_EXT_shader_subgroup_vote", 66, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME",
      name: "EXT_SHADER_SUBGROUP_VOTE_EXTENSION_NAME",
      origin: Extension("VK_EXT_shader_subgroup_vote", 66, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_shader_subgroup_vote"),
    ),
    Const(
      original_name: "VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION",
      name: "EXT_TEXTURE_COMPRESSION_ASTC_HDR_SPEC_VERSION",
      origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME",
      name: "EXT_TEXTURE_COMPRESSION_ASTC_HDR_EXTENSION_NAME",
      origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_texture_compression_astc_hdr"),
    ),
    Const(
      original_name: "VK_EXT_ASTC_DECODE_MODE_SPEC_VERSION",
      name: "EXT_ASTC_DECODE_MODE_SPEC_VERSION",
      origin: Extension("VK_EXT_astc_decode_mode", 68, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_ASTC_DECODE_MODE_EXTENSION_NAME",
      name: "EXT_ASTC_DECODE_MODE_EXTENSION_NAME",
      origin: Extension("VK_EXT_astc_decode_mode", 68, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_astc_decode_mode"),
    ),
    Const(
      original_name: "VK_IMG_EXTENSION_69_SPEC_VERSION",
      name: "IMG_EXTENSION_69_SPEC_VERSION",
      origin: Extension("VK_IMG_extension_69", 69, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_IMG_EXTENSION_69_EXTENSION_NAME",
      name: "IMG_EXTENSION_69_EXTENSION_NAME",
      origin: Extension("VK_IMG_extension_69", 69, true),
      ty: NullTerminatedString(Const),
      value: String("VK_IMG_extension_69"),
    ),
    Const(
      original_name: "VK_KHR_MAINTENANCE_1_SPEC_VERSION",
      name: "KHR_MAINTENANCE_1_SPEC_VERSION",
      origin: Extension("VK_KHR_maintenance1", 70, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_KHR_MAINTENANCE_1_EXTENSION_NAME",
      name: "KHR_MAINTENANCE_1_EXTENSION_NAME",
      origin: Extension("VK_KHR_maintenance1", 70, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_maintenance1"),
    ),
    Const(
      original_name: "VK_KHR_DEVICE_GROUP_CREATION_SPEC_VERSION",
      name: "KHR_DEVICE_GROUP_CREATION_SPEC_VERSION",
      origin: Extension("VK_KHR_device_group_creation", 71, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME",
      name: "KHR_DEVICE_GROUP_CREATION_EXTENSION_NAME",
      origin: Extension("VK_KHR_device_group_creation", 71, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_device_group_creation"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION",
      name: "KHR_EXTERNAL_MEMORY_CAPABILITIES_SPEC_VERSION",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME",
      name: "KHR_EXTERNAL_MEMORY_CAPABILITIES_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_memory_capabilities"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_MEMORY_SPEC_VERSION",
      name: "KHR_EXTERNAL_MEMORY_SPEC_VERSION",
      origin: Extension("VK_KHR_external_memory", 73, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_MEMORY_EXTENSION_NAME",
      name: "KHR_EXTERNAL_MEMORY_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_memory", 73, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_memory"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_MEMORY_WIN32_SPEC_VERSION",
      name: "KHR_EXTERNAL_MEMORY_WIN32_SPEC_VERSION",
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME",
      name: "KHR_EXTERNAL_MEMORY_WIN32_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_memory_win32"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION",
      name: "KHR_EXTERNAL_MEMORY_FD_SPEC_VERSION",
      origin: Extension("VK_KHR_external_memory_fd", 75, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME",
      name: "KHR_EXTERNAL_MEMORY_FD_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_memory_fd", 75, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_memory_fd"),
    ),
    Const(
      original_name: "VK_KHR_WIN32_KEYED_MUTEX_SPEC_VERSION",
      name: "KHR_WIN32_KEYED_MUTEX_SPEC_VERSION",
      origin: Extension("VK_KHR_win32_keyed_mutex", 76, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_WIN32_KEYED_MUTEX_EXTENSION_NAME",
      name: "KHR_WIN32_KEYED_MUTEX_EXTENSION_NAME",
      origin: Extension("VK_KHR_win32_keyed_mutex", 76, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_win32_keyed_mutex"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION",
      name: "KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_SPEC_VERSION",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME",
      name: "KHR_EXTERNAL_SEMAPHORE_CAPABILITIES_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_semaphore_capabilities"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION",
      name: "KHR_EXTERNAL_SEMAPHORE_SPEC_VERSION",
      origin: Extension("VK_KHR_external_semaphore", 78, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME",
      name: "KHR_EXTERNAL_SEMAPHORE_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_semaphore", 78, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_semaphore"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_SEMAPHORE_WIN32_SPEC_VERSION",
      name: "KHR_EXTERNAL_SEMAPHORE_WIN32_SPEC_VERSION",
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_SEMAPHORE_WIN32_EXTENSION_NAME",
      name: "KHR_EXTERNAL_SEMAPHORE_WIN32_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_semaphore_win32"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION",
      name: "KHR_EXTERNAL_SEMAPHORE_FD_SPEC_VERSION",
      origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME",
      name: "KHR_EXTERNAL_SEMAPHORE_FD_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_semaphore_fd"),
    ),
    Const(
      original_name: "VK_KHR_PUSH_DESCRIPTOR_SPEC_VERSION",
      name: "KHR_PUSH_DESCRIPTOR_SPEC_VERSION",
      origin: Extension("VK_KHR_push_descriptor", 81, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_KHR_PUSH_DESCRIPTOR_EXTENSION_NAME",
      name: "KHR_PUSH_DESCRIPTOR_EXTENSION_NAME",
      origin: Extension("VK_KHR_push_descriptor", 81, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_push_descriptor"),
    ),
    Const(
      original_name: "VK_EXT_CONDITIONAL_RENDERING_SPEC_VERSION",
      name: "EXT_CONDITIONAL_RENDERING_SPEC_VERSION",
      origin: Extension("VK_EXT_conditional_rendering", 82, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_CONDITIONAL_RENDERING_EXTENSION_NAME",
      name: "EXT_CONDITIONAL_RENDERING_EXTENSION_NAME",
      origin: Extension("VK_EXT_conditional_rendering", 82, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_conditional_rendering"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_FLOAT16_INT8_SPEC_VERSION",
      name: "KHR_SHADER_FLOAT16_INT8_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_float16_int8", 83, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME",
      name: "KHR_SHADER_FLOAT16_INT8_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_float16_int8", 83, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_float16_int8"),
    ),
    Const(
      original_name: "VK_KHR_16BIT_STORAGE_SPEC_VERSION",
      name: "KHR_16BIT_STORAGE_SPEC_VERSION",
      origin: Extension("VK_KHR_16bit_storage", 84, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_16BIT_STORAGE_EXTENSION_NAME",
      name: "KHR_16BIT_STORAGE_EXTENSION_NAME",
      origin: Extension("VK_KHR_16bit_storage", 84, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_16bit_storage"),
    ),
    Const(
      original_name: "VK_KHR_INCREMENTAL_PRESENT_SPEC_VERSION",
      name: "KHR_INCREMENTAL_PRESENT_SPEC_VERSION",
      origin: Extension("VK_KHR_incremental_present", 85, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_KHR_INCREMENTAL_PRESENT_EXTENSION_NAME",
      name: "KHR_INCREMENTAL_PRESENT_EXTENSION_NAME",
      origin: Extension("VK_KHR_incremental_present", 85, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_incremental_present"),
    ),
    Const(
      original_name: "VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION",
      name: "KHR_DESCRIPTOR_UPDATE_TEMPLATE_SPEC_VERSION",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME",
      name: "KHR_DESCRIPTOR_UPDATE_TEMPLATE_EXTENSION_NAME",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_descriptor_update_template"),
    ),
    Const(
      original_name: "VK_NVX_DEVICE_GENERATED_COMMANDS_SPEC_VERSION",
      name: "NVX_DEVICE_GENERATED_COMMANDS_SPEC_VERSION",
      origin: Extension("VK_NVX_device_generated_commands", 87, true),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_NVX_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME",
      name: "NVX_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME",
      origin: Extension("VK_NVX_device_generated_commands", 87, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NVX_device_generated_commands"),
    ),
    Const(
      original_name: "VK_NV_CLIP_SPACE_W_SCALING_SPEC_VERSION",
      name: "NV_CLIP_SPACE_W_SCALING_SPEC_VERSION",
      origin: Extension("VK_NV_clip_space_w_scaling", 88, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME",
      name: "NV_CLIP_SPACE_W_SCALING_EXTENSION_NAME",
      origin: Extension("VK_NV_clip_space_w_scaling", 88, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_clip_space_w_scaling"),
    ),
    Const(
      original_name: "VK_EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION",
      name: "EXT_DIRECT_MODE_DISPLAY_SPEC_VERSION",
      origin: Extension("VK_EXT_direct_mode_display", 89, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME",
      name: "EXT_DIRECT_MODE_DISPLAY_EXTENSION_NAME",
      origin: Extension("VK_EXT_direct_mode_display", 89, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_direct_mode_display"),
    ),
    Const(
      original_name: "VK_EXT_ACQUIRE_XLIB_DISPLAY_SPEC_VERSION",
      name: "EXT_ACQUIRE_XLIB_DISPLAY_SPEC_VERSION",
      origin: Extension("VK_EXT_acquire_xlib_display", 90, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_ACQUIRE_XLIB_DISPLAY_EXTENSION_NAME",
      name: "EXT_ACQUIRE_XLIB_DISPLAY_EXTENSION_NAME",
      origin: Extension("VK_EXT_acquire_xlib_display", 90, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_acquire_xlib_display"),
    ),
    Const(
      original_name: "VK_EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION",
      name: "EXT_DISPLAY_SURFACE_COUNTER_SPEC_VERSION",
      origin: Extension("VK_EXT_display_surface_counter", 91, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME",
      name: "EXT_DISPLAY_SURFACE_COUNTER_EXTENSION_NAME",
      origin: Extension("VK_EXT_display_surface_counter", 91, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_display_surface_counter"),
    ),
    Const(
      original_name: "VK_EXT_DISPLAY_CONTROL_SPEC_VERSION",
      name: "EXT_DISPLAY_CONTROL_SPEC_VERSION",
      origin: Extension("VK_EXT_display_control", 92, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_DISPLAY_CONTROL_EXTENSION_NAME",
      name: "EXT_DISPLAY_CONTROL_EXTENSION_NAME",
      origin: Extension("VK_EXT_display_control", 92, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_display_control"),
    ),
    Const(
      original_name: "VK_GOOGLE_DISPLAY_TIMING_SPEC_VERSION",
      name: "GOOGLE_DISPLAY_TIMING_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_GOOGLE_DISPLAY_TIMING_EXTENSION_NAME",
      name: "GOOGLE_DISPLAY_TIMING_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_display_timing"),
    ),
    Const(
      original_name: "VK_RESERVED_DO_NOT_USE_94_SPEC_VERSION",
      name: "RESERVED_DO_NOT_USE_94_SPEC_VERSION",
      origin: Extension("VK_RESERVED_do_not_use_94", 94, true),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_RESERVED_DO_NOT_USE_94_EXTENSION_NAME",
      name: "RESERVED_DO_NOT_USE_94_EXTENSION_NAME",
      origin: Extension("VK_RESERVED_do_not_use_94", 94, true),
      ty: NullTerminatedString(Const),
      value: String("VK_RESERVED_do_not_use_94"),
    ),
    Const(
      original_name: "VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION",
      name: "NV_SAMPLE_MASK_OVERRIDE_COVERAGE_SPEC_VERSION",
      origin: Extension("VK_NV_sample_mask_override_coverage", 95, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME",
      name: "NV_SAMPLE_MASK_OVERRIDE_COVERAGE_EXTENSION_NAME",
      origin: Extension("VK_NV_sample_mask_override_coverage", 95, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_sample_mask_override_coverage"),
    ),
    Const(
      original_name: "VK_NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION",
      name: "NV_GEOMETRY_SHADER_PASSTHROUGH_SPEC_VERSION",
      origin: Extension("VK_NV_geometry_shader_passthrough", 96, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME",
      name: "NV_GEOMETRY_SHADER_PASSTHROUGH_EXTENSION_NAME",
      origin: Extension("VK_NV_geometry_shader_passthrough", 96, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_geometry_shader_passthrough"),
    ),
    Const(
      original_name: "VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION",
      name: "NV_VIEWPORT_ARRAY_2_SPEC_VERSION",
      origin: Extension("VK_NV_viewport_array2", 97, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME",
      name: "NV_VIEWPORT_ARRAY_2_EXTENSION_NAME",
      origin: Extension("VK_NV_viewport_array2", 97, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_viewport_array2"),
    ),
    Const(
      original_name: "VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION",
      name: "NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_SPEC_VERSION",
      origin: Extension("VK_NVX_multiview_per_view_attributes", 98, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME",
      name: "NVX_MULTIVIEW_PER_VIEW_ATTRIBUTES_EXTENSION_NAME",
      origin: Extension("VK_NVX_multiview_per_view_attributes", 98, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NVX_multiview_per_view_attributes"),
    ),
    Const(
      original_name: "VK_NV_VIEWPORT_SWIZZLE_SPEC_VERSION",
      name: "NV_VIEWPORT_SWIZZLE_SPEC_VERSION",
      origin: Extension("VK_NV_viewport_swizzle", 99, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_VIEWPORT_SWIZZLE_EXTENSION_NAME",
      name: "NV_VIEWPORT_SWIZZLE_EXTENSION_NAME",
      origin: Extension("VK_NV_viewport_swizzle", 99, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_viewport_swizzle"),
    ),
    Const(
      original_name: "VK_EXT_DISCARD_RECTANGLES_SPEC_VERSION",
      name: "EXT_DISCARD_RECTANGLES_SPEC_VERSION",
      origin: Extension("VK_EXT_discard_rectangles", 100, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_DISCARD_RECTANGLES_EXTENSION_NAME",
      name: "EXT_DISCARD_RECTANGLES_EXTENSION_NAME",
      origin: Extension("VK_EXT_discard_rectangles", 100, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_discard_rectangles"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_101_SPEC_VERSION",
      name: "NV_EXTENSION_101_SPEC_VERSION",
      origin: Extension("VK_NV_extension_101", 101, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_101_EXTENSION_NAME",
      name: "NV_EXTENSION_101_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_101", 101, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_101"),
    ),
    Const(
      original_name: "VK_EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION",
      name: "EXT_CONSERVATIVE_RASTERIZATION_SPEC_VERSION",
      origin: Extension("VK_EXT_conservative_rasterization", 102, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME",
      name: "EXT_CONSERVATIVE_RASTERIZATION_EXTENSION_NAME",
      origin: Extension("VK_EXT_conservative_rasterization", 102, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_conservative_rasterization"),
    ),
    Const(
      original_name: "VK_EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION",
      name: "EXT_DEPTH_CLIP_ENABLE_SPEC_VERSION",
      origin: Extension("VK_EXT_depth_clip_enable", 103, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME",
      name: "EXT_DEPTH_CLIP_ENABLE_EXTENSION_NAME",
      origin: Extension("VK_EXT_depth_clip_enable", 103, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_depth_clip_enable"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_104_SPEC_VERSION",
      name: "NV_EXTENSION_104_SPEC_VERSION",
      origin: Extension("VK_NV_extension_104", 104, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_104_EXTENSION_NAME",
      name: "NV_EXTENSION_104_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_104", 104, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_104"),
    ),
    Const(
      original_name: "VK_EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION",
      name: "EXT_SWAPCHAIN_COLOR_SPACE_SPEC_VERSION",
      origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME",
      name: "EXT_SWAPCHAIN_COLOR_SPACE_EXTENSION_NAME",
      origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_swapchain_colorspace"),
    ),
    Const(
      original_name: "VK_EXT_HDR_METADATA_SPEC_VERSION",
      name: "EXT_HDR_METADATA_SPEC_VERSION",
      origin: Extension("VK_EXT_hdr_metadata", 106, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_HDR_METADATA_EXTENSION_NAME",
      name: "EXT_HDR_METADATA_EXTENSION_NAME",
      origin: Extension("VK_EXT_hdr_metadata", 106, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_hdr_metadata"),
    ),
    Const(
      original_name: "VK_IMG_EXTENSION_107_SPEC_VERSION",
      name: "IMG_EXTENSION_107_SPEC_VERSION",
      origin: Extension("VK_IMG_extension_107", 107, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_IMG_EXTENSION_107_EXTENSION_NAME",
      name: "IMG_EXTENSION_107_EXTENSION_NAME",
      origin: Extension("VK_IMG_extension_107", 107, true),
      ty: NullTerminatedString(Const),
      value: String("VK_IMG_extension_107"),
    ),
    Const(
      original_name: "VK_IMG_EXTENSION_108_SPEC_VERSION",
      name: "IMG_EXTENSION_108_SPEC_VERSION",
      origin: Extension("VK_IMG_extension_108", 108, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_IMG_EXTENSION_108_EXTENSION_NAME",
      name: "IMG_EXTENSION_108_EXTENSION_NAME",
      origin: Extension("VK_IMG_extension_108", 108, true),
      ty: NullTerminatedString(Const),
      value: String("VK_IMG_extension_108"),
    ),
    Const(
      original_name: "VK_KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION",
      name: "KHR_IMAGELESS_FRAMEBUFFER_SPEC_VERSION",
      origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME",
      name: "KHR_IMAGELESS_FRAMEBUFFER_EXTENSION_NAME",
      origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_imageless_framebuffer"),
    ),
    Const(
      original_name: "VK_KHR_CREATE_RENDERPASS_2_SPEC_VERSION",
      name: "KHR_CREATE_RENDERPASS_2_SPEC_VERSION",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_CREATE_RENDERPASS_2_EXTENSION_NAME",
      name: "KHR_CREATE_RENDERPASS_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_create_renderpass2"),
    ),
    Const(
      original_name: "VK_IMG_EXTENSION_111_SPEC_VERSION",
      name: "IMG_EXTENSION_111_SPEC_VERSION",
      origin: Extension("VK_IMG_extension_111", 111, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_IMG_EXTENSION_111_EXTENSION_NAME",
      name: "IMG_EXTENSION_111_EXTENSION_NAME",
      origin: Extension("VK_IMG_extension_111", 111, true),
      ty: NullTerminatedString(Const),
      value: String("VK_IMG_extension_111"),
    ),
    Const(
      original_name: "VK_KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION",
      name: "KHR_SHARED_PRESENTABLE_IMAGE_SPEC_VERSION",
      origin: Extension("VK_KHR_shared_presentable_image", 112, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME",
      name: "KHR_SHARED_PRESENTABLE_IMAGE_EXTENSION_NAME",
      origin: Extension("VK_KHR_shared_presentable_image", 112, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shared_presentable_image"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION",
      name: "KHR_EXTERNAL_FENCE_CAPABILITIES_SPEC_VERSION",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME",
      name: "KHR_EXTERNAL_FENCE_CAPABILITIES_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_fence_capabilities"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_FENCE_SPEC_VERSION",
      name: "KHR_EXTERNAL_FENCE_SPEC_VERSION",
      origin: Extension("VK_KHR_external_fence", 114, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_FENCE_EXTENSION_NAME",
      name: "KHR_EXTERNAL_FENCE_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_fence", 114, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_fence"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_FENCE_WIN32_SPEC_VERSION",
      name: "KHR_EXTERNAL_FENCE_WIN32_SPEC_VERSION",
      origin: Extension("VK_KHR_external_fence_win32", 115, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_FENCE_WIN32_EXTENSION_NAME",
      name: "KHR_EXTERNAL_FENCE_WIN32_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_fence_win32", 115, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_fence_win32"),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_FENCE_FD_SPEC_VERSION",
      name: "KHR_EXTERNAL_FENCE_FD_SPEC_VERSION",
      origin: Extension("VK_KHR_external_fence_fd", 116, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME",
      name: "KHR_EXTERNAL_FENCE_FD_EXTENSION_NAME",
      origin: Extension("VK_KHR_external_fence_fd", 116, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_external_fence_fd"),
    ),
    Const(
      original_name: "VK_KHR_PERFORMANCE_QUERY_SPEC_VERSION",
      name: "KHR_PERFORMANCE_QUERY_SPEC_VERSION",
      origin: Extension("VK_KHR_performance_query", 117, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_PERFORMANCE_QUERY_EXTENSION_NAME",
      name: "KHR_PERFORMANCE_QUERY_EXTENSION_NAME",
      origin: Extension("VK_KHR_performance_query", 117, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_performance_query"),
    ),
    Const(
      original_name: "VK_KHR_MAINTENANCE_2_SPEC_VERSION",
      name: "KHR_MAINTENANCE_2_SPEC_VERSION",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_MAINTENANCE_2_EXTENSION_NAME",
      name: "KHR_MAINTENANCE_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_maintenance2"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_119_SPEC_VERSION",
      name: "KHR_EXTENSION_119_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_119", 119, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_119_EXTENSION_NAME",
      name: "KHR_EXTENSION_119_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_119", 119, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_119"),
    ),
    Const(
      original_name: "VK_KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION",
      name: "KHR_GET_SURFACE_CAPABILITIES_2_SPEC_VERSION",
      origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME",
      name: "KHR_GET_SURFACE_CAPABILITIES_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_get_surface_capabilities2"),
    ),
    Const(
      original_name: "VK_KHR_VARIABLE_POINTERS_SPEC_VERSION",
      name: "KHR_VARIABLE_POINTERS_SPEC_VERSION",
      origin: Extension("VK_KHR_variable_pointers", 121, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_VARIABLE_POINTERS_EXTENSION_NAME",
      name: "KHR_VARIABLE_POINTERS_EXTENSION_NAME",
      origin: Extension("VK_KHR_variable_pointers", 121, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_variable_pointers"),
    ),
    Const(
      original_name: "VK_KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION",
      name: "KHR_GET_DISPLAY_PROPERTIES_2_SPEC_VERSION",
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME",
      name: "KHR_GET_DISPLAY_PROPERTIES_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_get_display_properties2"),
    ),
    Const(
      original_name: "VK_MVK_IOS_SURFACE_SPEC_VERSION",
      name: "MVK_IOS_SURFACE_SPEC_VERSION",
      origin: Extension("VK_MVK_ios_surface", 123, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_MVK_IOS_SURFACE_EXTENSION_NAME",
      name: "MVK_IOS_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_MVK_ios_surface", 123, false),
      ty: NullTerminatedString(Const),
      value: String("VK_MVK_ios_surface"),
    ),
    Const(
      original_name: "VK_MVK_MACOS_SURFACE_SPEC_VERSION",
      name: "MVK_MACOS_SURFACE_SPEC_VERSION",
      origin: Extension("VK_MVK_macos_surface", 124, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_MVK_MACOS_SURFACE_EXTENSION_NAME",
      name: "MVK_MACOS_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_MVK_macos_surface", 124, false),
      ty: NullTerminatedString(Const),
      value: String("VK_MVK_macos_surface"),
    ),
    Const(
      original_name: "VK_MVK_MOLTENVK_SPEC_VERSION",
      name: "MVK_MOLTENVK_SPEC_VERSION",
      origin: Extension("VK_MVK_moltenvk", 125, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_MVK_MOLTENVK_EXTENSION_NAME",
      name: "MVK_MOLTENVK_EXTENSION_NAME",
      origin: Extension("VK_MVK_moltenvk", 125, true),
      ty: NullTerminatedString(Const),
      value: String("VK_MVK_moltenvk"),
    ),
    Const(
      original_name: "VK_EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION",
      name: "EXT_EXTERNAL_MEMORY_DMA_BUF_SPEC_VERSION",
      origin: Extension("VK_EXT_external_memory_dma_buf", 126, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME",
      name: "EXT_EXTERNAL_MEMORY_DMA_BUF_EXTENSION_NAME",
      origin: Extension("VK_EXT_external_memory_dma_buf", 126, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_external_memory_dma_buf"),
    ),
    Const(
      original_name: "VK_EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION",
      name: "EXT_QUEUE_FAMILY_FOREIGN_SPEC_VERSION",
      origin: Extension("VK_EXT_queue_family_foreign", 127, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME",
      name: "EXT_QUEUE_FAMILY_FOREIGN_EXTENSION_NAME",
      origin: Extension("VK_EXT_queue_family_foreign", 127, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_queue_family_foreign"),
    ),
    Const(
      original_name: "VK_KHR_DEDICATED_ALLOCATION_SPEC_VERSION",
      name: "KHR_DEDICATED_ALLOCATION_SPEC_VERSION",
      origin: Extension("VK_KHR_dedicated_allocation", 128, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_KHR_DEDICATED_ALLOCATION_EXTENSION_NAME",
      name: "KHR_DEDICATED_ALLOCATION_EXTENSION_NAME",
      origin: Extension("VK_KHR_dedicated_allocation", 128, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_dedicated_allocation"),
    ),
    Const(
      original_name: "VK_EXT_DEBUG_UTILS_SPEC_VERSION",
      name: "EXT_DEBUG_UTILS_SPEC_VERSION",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_DEBUG_UTILS_EXTENSION_NAME",
      name: "EXT_DEBUG_UTILS_EXTENSION_NAME",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_debug_utils"),
    ),
    Const(
      original_name: "VK_ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_SPEC_VERSION",
      name: "ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_SPEC_VERSION",
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      ty: Native(UInt(4)),
      value: ConstantInt(5),
    ),
    Const(
      original_name: "VK_ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_EXTENSION_NAME",
      name: "ANDROID_EXTERNAL_MEMORY_ANDROID_HARDWARE_BUFFER_EXTENSION_NAME",
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      ty: NullTerminatedString(Const),
      value: String("VK_ANDROID_external_memory_android_hardware_buffer"),
    ),
    Const(
      original_name: "VK_EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION",
      name: "EXT_SAMPLER_FILTER_MINMAX_SPEC_VERSION",
      origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME",
      name: "EXT_SAMPLER_FILTER_MINMAX_EXTENSION_NAME",
      origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_sampler_filter_minmax"),
    ),
    Const(
      original_name: "VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION",
      name: "KHR_STORAGE_BUFFER_STORAGE_CLASS_SPEC_VERSION",
      origin: Extension("VK_KHR_storage_buffer_storage_class", 132, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME",
      name: "KHR_STORAGE_BUFFER_STORAGE_CLASS_EXTENSION_NAME",
      origin: Extension("VK_KHR_storage_buffer_storage_class", 132, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_storage_buffer_storage_class"),
    ),
    Const(
      original_name: "VK_AMD_GPU_SHADER_INT16_SPEC_VERSION",
      name: "AMD_GPU_SHADER_INT16_SPEC_VERSION",
      origin: Extension("VK_AMD_gpu_shader_int16", 133, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_AMD_GPU_SHADER_INT16_EXTENSION_NAME",
      name: "AMD_GPU_SHADER_INT16_EXTENSION_NAME",
      origin: Extension("VK_AMD_gpu_shader_int16", 133, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_gpu_shader_int16"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_134_SPEC_VERSION",
      name: "AMD_EXTENSION_134_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_134", 134, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_134_EXTENSION_NAME",
      name: "AMD_EXTENSION_134_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_134", 134, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_134"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_135_SPEC_VERSION",
      name: "AMD_EXTENSION_135_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_135", 135, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_135_EXTENSION_NAME",
      name: "AMD_EXTENSION_135_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_135", 135, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_135"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_136_SPEC_VERSION",
      name: "AMD_EXTENSION_136_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_136", 136, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_136_EXTENSION_NAME",
      name: "AMD_EXTENSION_136_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_136", 136, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_136"),
    ),
    Const(
      original_name: "VK_AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION",
      name: "AMD_MIXED_ATTACHMENT_SAMPLES_SPEC_VERSION",
      origin: Extension("VK_AMD_mixed_attachment_samples", 137, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME",
      name: "AMD_MIXED_ATTACHMENT_SAMPLES_EXTENSION_NAME",
      origin: Extension("VK_AMD_mixed_attachment_samples", 137, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_mixed_attachment_samples"),
    ),
    Const(
      original_name: "VK_AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION",
      name: "AMD_SHADER_FRAGMENT_MASK_SPEC_VERSION",
      origin: Extension("VK_AMD_shader_fragment_mask", 138, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME",
      name: "AMD_SHADER_FRAGMENT_MASK_EXTENSION_NAME",
      origin: Extension("VK_AMD_shader_fragment_mask", 138, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_shader_fragment_mask"),
    ),
    Const(
      original_name: "VK_EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION",
      name: "EXT_INLINE_UNIFORM_BLOCK_SPEC_VERSION",
      origin: Extension("VK_EXT_inline_uniform_block", 139, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME",
      name: "EXT_INLINE_UNIFORM_BLOCK_EXTENSION_NAME",
      origin: Extension("VK_EXT_inline_uniform_block", 139, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_inline_uniform_block"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_140_SPEC_VERSION",
      name: "AMD_EXTENSION_140_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_140", 140, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_140_EXTENSION_NAME",
      name: "AMD_EXTENSION_140_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_140", 140, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_140"),
    ),
    Const(
      original_name: "VK_EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION",
      name: "EXT_SHADER_STENCIL_EXPORT_SPEC_VERSION",
      origin: Extension("VK_EXT_shader_stencil_export", 141, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME",
      name: "EXT_SHADER_STENCIL_EXPORT_EXTENSION_NAME",
      origin: Extension("VK_EXT_shader_stencil_export", 141, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_shader_stencil_export"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_142_SPEC_VERSION",
      name: "AMD_EXTENSION_142_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_142", 142, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_142_EXTENSION_NAME",
      name: "AMD_EXTENSION_142_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_142", 142, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_142"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_143_SPEC_VERSION",
      name: "AMD_EXTENSION_143_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_143", 143, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_143_EXTENSION_NAME",
      name: "AMD_EXTENSION_143_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_143", 143, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_143"),
    ),
    Const(
      original_name: "VK_EXT_SAMPLE_LOCATIONS_SPEC_VERSION",
      name: "EXT_SAMPLE_LOCATIONS_SPEC_VERSION",
      origin: Extension("VK_EXT_sample_locations", 144, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SAMPLE_LOCATIONS_EXTENSION_NAME",
      name: "EXT_SAMPLE_LOCATIONS_EXTENSION_NAME",
      origin: Extension("VK_EXT_sample_locations", 144, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_sample_locations"),
    ),
    Const(
      original_name: "VK_KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION",
      name: "KHR_RELAXED_BLOCK_LAYOUT_SPEC_VERSION",
      origin: Extension("VK_KHR_relaxed_block_layout", 145, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME",
      name: "KHR_RELAXED_BLOCK_LAYOUT_EXTENSION_NAME",
      origin: Extension("VK_KHR_relaxed_block_layout", 145, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_relaxed_block_layout"),
    ),
    Const(
      original_name: "VK_RESERVED_DO_NOT_USE_146_SPEC_VERSION",
      name: "RESERVED_DO_NOT_USE_146_SPEC_VERSION",
      origin: Extension("VK_RESERVED_do_not_use_146", 146, true),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_RESERVED_DO_NOT_USE_146_EXTENSION_NAME",
      name: "RESERVED_DO_NOT_USE_146_EXTENSION_NAME",
      origin: Extension("VK_RESERVED_do_not_use_146", 146, true),
      ty: NullTerminatedString(Const),
      value: String("VK_RESERVED_do_not_use_146"),
    ),
    Const(
      original_name: "VK_KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION",
      name: "KHR_GET_MEMORY_REQUIREMENTS_2_SPEC_VERSION",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME",
      name: "KHR_GET_MEMORY_REQUIREMENTS_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_get_memory_requirements2"),
    ),
    Const(
      original_name: "VK_KHR_IMAGE_FORMAT_LIST_SPEC_VERSION",
      name: "KHR_IMAGE_FORMAT_LIST_SPEC_VERSION",
      origin: Extension("VK_KHR_image_format_list", 148, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME",
      name: "KHR_IMAGE_FORMAT_LIST_EXTENSION_NAME",
      origin: Extension("VK_KHR_image_format_list", 148, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_image_format_list"),
    ),
    Const(
      original_name: "VK_EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION",
      name: "EXT_BLEND_OPERATION_ADVANCED_SPEC_VERSION",
      origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME",
      name: "EXT_BLEND_OPERATION_ADVANCED_EXTENSION_NAME",
      origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_blend_operation_advanced"),
    ),
    Const(
      original_name: "VK_NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION",
      name: "NV_FRAGMENT_COVERAGE_TO_COLOR_SPEC_VERSION",
      origin: Extension("VK_NV_fragment_coverage_to_color", 150, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME",
      name: "NV_FRAGMENT_COVERAGE_TO_COLOR_EXTENSION_NAME",
      origin: Extension("VK_NV_fragment_coverage_to_color", 150, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_fragment_coverage_to_color"),
    ),
    Const(
      original_name: "VK_KHR_ACCELERATION_STRUCTURE_SPEC_VERSION",
      name: "KHR_ACCELERATION_STRUCTURE_SPEC_VERSION",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      ty: Native(UInt(4)),
      value: ConstantInt(13),
    ),
    Const(
      original_name: "VK_KHR_ACCELERATION_STRUCTURE_EXTENSION_NAME",
      name: "KHR_ACCELERATION_STRUCTURE_EXTENSION_NAME",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_acceleration_structure"),
    ),
    Const(
      original_name: "VK_KHR_RAY_TRACING_PIPELINE_SPEC_VERSION",
      name: "KHR_RAY_TRACING_PIPELINE_SPEC_VERSION",
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_RAY_TRACING_PIPELINE_EXTENSION_NAME",
      name: "KHR_RAY_TRACING_PIPELINE_EXTENSION_NAME",
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_ray_tracing_pipeline"),
    ),
    Const(
      original_name: "VK_KHR_RAY_QUERY_SPEC_VERSION",
      name: "KHR_RAY_QUERY_SPEC_VERSION",
      origin: Extension("VK_KHR_ray_query", 349, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_RAY_QUERY_EXTENSION_NAME",
      name: "KHR_RAY_QUERY_EXTENSION_NAME",
      origin: Extension("VK_KHR_ray_query", 349, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_ray_query"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_152_SPEC_VERSION",
      name: "NV_EXTENSION_152_SPEC_VERSION",
      origin: Extension("VK_NV_extension_152", 152, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_152_EXTENSION_NAME",
      name: "NV_EXTENSION_152_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_152", 152, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_152"),
    ),
    Const(
      original_name: "VK_NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION",
      name: "NV_FRAMEBUFFER_MIXED_SAMPLES_SPEC_VERSION",
      origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME",
      name: "NV_FRAMEBUFFER_MIXED_SAMPLES_EXTENSION_NAME",
      origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_framebuffer_mixed_samples"),
    ),
    Const(
      original_name: "VK_NV_FILL_RECTANGLE_SPEC_VERSION",
      name: "NV_FILL_RECTANGLE_SPEC_VERSION",
      origin: Extension("VK_NV_fill_rectangle", 154, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_FILL_RECTANGLE_EXTENSION_NAME",
      name: "NV_FILL_RECTANGLE_EXTENSION_NAME",
      origin: Extension("VK_NV_fill_rectangle", 154, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_fill_rectangle"),
    ),
    Const(
      original_name: "VK_NV_SHADER_SM_BUILTINS_SPEC_VERSION",
      name: "NV_SHADER_SM_BUILTINS_SPEC_VERSION",
      origin: Extension("VK_NV_shader_sm_builtins", 155, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_SHADER_SM_BUILTINS_EXTENSION_NAME",
      name: "NV_SHADER_SM_BUILTINS_EXTENSION_NAME",
      origin: Extension("VK_NV_shader_sm_builtins", 155, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_shader_sm_builtins"),
    ),
    Const(
      original_name: "VK_EXT_POST_DEPTH_COVERAGE_SPEC_VERSION",
      name: "EXT_POST_DEPTH_COVERAGE_SPEC_VERSION",
      origin: Extension("VK_EXT_post_depth_coverage", 156, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME",
      name: "EXT_POST_DEPTH_COVERAGE_EXTENSION_NAME",
      origin: Extension("VK_EXT_post_depth_coverage", 156, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_post_depth_coverage"),
    ),
    Const(
      original_name: "VK_KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION",
      name: "KHR_SAMPLER_YCBCR_CONVERSION_SPEC_VERSION",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      ty: Native(UInt(4)),
      value: ConstantInt(14),
    ),
    Const(
      original_name: "VK_KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME",
      name: "KHR_SAMPLER_YCBCR_CONVERSION_EXTENSION_NAME",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_sampler_ycbcr_conversion"),
    ),
    Const(
      original_name: "VK_KHR_BIND_MEMORY_2_SPEC_VERSION",
      name: "KHR_BIND_MEMORY_2_SPEC_VERSION",
      origin: Extension("VK_KHR_bind_memory2", 158, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_BIND_MEMORY_2_EXTENSION_NAME",
      name: "KHR_BIND_MEMORY_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_bind_memory2", 158, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_bind_memory2"),
    ),
    Const(
      original_name: "VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION",
      name: "EXT_IMAGE_DRM_FORMAT_MODIFIER_SPEC_VERSION",
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME",
      name: "EXT_IMAGE_DRM_FORMAT_MODIFIER_EXTENSION_NAME",
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_image_drm_format_modifier"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_160_SPEC_VERSION",
      name: "EXT_EXTENSION_160_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_160", 160, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_160_EXTENSION_NAME",
      name: "EXT_EXTENSION_160_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_160", 160, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_160"),
    ),
    Const(
      original_name: "VK_EXT_VALIDATION_CACHE_SPEC_VERSION",
      name: "EXT_VALIDATION_CACHE_SPEC_VERSION",
      origin: Extension("VK_EXT_validation_cache", 161, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_VALIDATION_CACHE_EXTENSION_NAME",
      name: "EXT_VALIDATION_CACHE_EXTENSION_NAME",
      origin: Extension("VK_EXT_validation_cache", 161, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_validation_cache"),
    ),
    Const(
      original_name: "VK_EXT_DESCRIPTOR_INDEXING_SPEC_VERSION",
      name: "EXT_DESCRIPTOR_INDEXING_SPEC_VERSION",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME",
      name: "EXT_DESCRIPTOR_INDEXING_EXTENSION_NAME",
      origin: Extension("VK_EXT_descriptor_indexing", 162, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_descriptor_indexing"),
    ),
    Const(
      original_name: "VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION",
      name: "EXT_SHADER_VIEWPORT_INDEX_LAYER_SPEC_VERSION",
      origin: Extension("VK_EXT_shader_viewport_index_layer", 163, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME",
      name: "EXT_SHADER_VIEWPORT_INDEX_LAYER_EXTENSION_NAME",
      origin: Extension("VK_EXT_shader_viewport_index_layer", 163, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_shader_viewport_index_layer"),
    ),
    Const(
      original_name: "VK_KHR_PORTABILITY_SUBSET_SPEC_VERSION",
      name: "KHR_PORTABILITY_SUBSET_SPEC_VERSION",
      origin: Extension("VK_KHR_portability_subset", 164, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_PORTABILITY_SUBSET_EXTENSION_NAME",
      name: "KHR_PORTABILITY_SUBSET_EXTENSION_NAME",
      origin: Extension("VK_KHR_portability_subset", 164, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_portability_subset"),
    ),
    Const(
      original_name: "VK_NV_SHADING_RATE_IMAGE_SPEC_VERSION",
      name: "NV_SHADING_RATE_IMAGE_SPEC_VERSION",
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_NV_SHADING_RATE_IMAGE_EXTENSION_NAME",
      name: "NV_SHADING_RATE_IMAGE_EXTENSION_NAME",
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_shading_rate_image"),
    ),
    Const(
      original_name: "VK_NV_RAY_TRACING_SPEC_VERSION",
      name: "NV_RAY_TRACING_SPEC_VERSION",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_NV_RAY_TRACING_EXTENSION_NAME",
      name: "NV_RAY_TRACING_EXTENSION_NAME",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_ray_tracing"),
    ),
    Const(
      original_name: "VK_NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION",
      name: "NV_REPRESENTATIVE_FRAGMENT_TEST_SPEC_VERSION",
      origin: Extension("VK_NV_representative_fragment_test", 167, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME",
      name: "NV_REPRESENTATIVE_FRAGMENT_TEST_EXTENSION_NAME",
      origin: Extension("VK_NV_representative_fragment_test", 167, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_representative_fragment_test"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_168_SPEC_VERSION",
      name: "NV_EXTENSION_168_SPEC_VERSION",
      origin: Extension("VK_NV_extension_168", 168, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_168_EXTENSION_NAME",
      name: "NV_EXTENSION_168_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_168", 168, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_168"),
    ),
    Const(
      original_name: "VK_KHR_MAINTENANCE_3_SPEC_VERSION",
      name: "KHR_MAINTENANCE_3_SPEC_VERSION",
      origin: Extension("VK_KHR_maintenance3", 169, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_MAINTENANCE_3_EXTENSION_NAME",
      name: "KHR_MAINTENANCE_3_EXTENSION_NAME",
      origin: Extension("VK_KHR_maintenance3", 169, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_maintenance3"),
    ),
    Const(
      original_name: "VK_KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION",
      name: "KHR_DRAW_INDIRECT_COUNT_SPEC_VERSION",
      origin: Extension("VK_KHR_draw_indirect_count", 170, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME",
      name: "KHR_DRAW_INDIRECT_COUNT_EXTENSION_NAME",
      origin: Extension("VK_KHR_draw_indirect_count", 170, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_draw_indirect_count"),
    ),
    Const(
      original_name: "VK_EXT_FILTER_CUBIC_SPEC_VERSION",
      name: "EXT_FILTER_CUBIC_SPEC_VERSION",
      origin: Extension("VK_EXT_filter_cubic", 171, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_EXT_FILTER_CUBIC_EXTENSION_NAME",
      name: "EXT_FILTER_CUBIC_EXTENSION_NAME",
      origin: Extension("VK_EXT_filter_cubic", 171, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_filter_cubic"),
    ),
    Const(
      original_name: "VK_QCOM_RENDER_PASS_SHADER_RESOLVE_SPEC_VERSION",
      name: "QCOM_RENDER_PASS_SHADER_RESOLVE_SPEC_VERSION",
      origin: Extension("VK_QCOM_render_pass_shader_resolve", 172, true),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_QCOM_RENDER_PASS_SHADER_RESOLVE_EXTENSION_NAME",
      name: "QCOM_RENDER_PASS_SHADER_RESOLVE_EXTENSION_NAME",
      origin: Extension("VK_QCOM_render_pass_shader_resolve", 172, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_render_pass_shader_resolve"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_173_SPEC_VERSION",
      name: "QCOM_EXTENSION_173_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_173", 173, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_173_EXTENSION_NAME",
      name: "QCOM_EXTENSION_173_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_173", 173, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_173"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_174_SPEC_VERSION",
      name: "QCOM_EXTENSION_174_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_174", 174, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_174_EXTENSION_NAME",
      name: "QCOM_EXTENSION_174_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_174", 174, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_174"),
    ),
    Const(
      original_name: "VK_EXT_GLOBAL_PRIORITY_SPEC_VERSION",
      name: "EXT_GLOBAL_PRIORITY_SPEC_VERSION",
      origin: Extension("VK_EXT_global_priority", 175, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_GLOBAL_PRIORITY_EXTENSION_NAME",
      name: "EXT_GLOBAL_PRIORITY_EXTENSION_NAME",
      origin: Extension("VK_EXT_global_priority", 175, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_global_priority"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION",
      name: "KHR_SHADER_SUBGROUP_EXTENDED_TYPES_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_subgroup_extended_types", 176, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME",
      name: "KHR_SHADER_SUBGROUP_EXTENDED_TYPES_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_subgroup_extended_types", 176, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_subgroup_extended_types"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_177_SPEC_VERSION",
      name: "EXT_EXTENSION_177_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_177", 177, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_177_EXTENSION_NAME",
      name: "EXT_EXTENSION_177_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_177", 177, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_177"),
    ),
    Const(
      original_name: "VK_KHR_8BIT_STORAGE_SPEC_VERSION",
      name: "KHR_8BIT_STORAGE_SPEC_VERSION",
      origin: Extension("VK_KHR_8bit_storage", 178, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_8BIT_STORAGE_EXTENSION_NAME",
      name: "KHR_8BIT_STORAGE_EXTENSION_NAME",
      origin: Extension("VK_KHR_8bit_storage", 178, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_8bit_storage"),
    ),
    Const(
      original_name: "VK_EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION",
      name: "EXT_EXTERNAL_MEMORY_HOST_SPEC_VERSION",
      origin: Extension("VK_EXT_external_memory_host", 179, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME",
      name: "EXT_EXTERNAL_MEMORY_HOST_EXTENSION_NAME",
      origin: Extension("VK_EXT_external_memory_host", 179, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_external_memory_host"),
    ),
    Const(
      original_name: "VK_AMD_BUFFER_MARKER_SPEC_VERSION",
      name: "AMD_BUFFER_MARKER_SPEC_VERSION",
      origin: Extension("VK_AMD_buffer_marker", 180, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_BUFFER_MARKER_EXTENSION_NAME",
      name: "AMD_BUFFER_MARKER_EXTENSION_NAME",
      origin: Extension("VK_AMD_buffer_marker", 180, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_buffer_marker"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_ATOMIC_INT64_SPEC_VERSION",
      name: "KHR_SHADER_ATOMIC_INT64_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_atomic_int64", 181, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME",
      name: "KHR_SHADER_ATOMIC_INT64_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_atomic_int64", 181, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_atomic_int64"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_CLOCK_SPEC_VERSION",
      name: "KHR_SHADER_CLOCK_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_clock", 182, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_CLOCK_EXTENSION_NAME",
      name: "KHR_SHADER_CLOCK_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_clock", 182, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_clock"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_183_SPEC_VERSION",
      name: "AMD_EXTENSION_183_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_183", 183, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_183_EXTENSION_NAME",
      name: "AMD_EXTENSION_183_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_183", 183, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_183"),
    ),
    Const(
      original_name: "VK_AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION",
      name: "AMD_PIPELINE_COMPILER_CONTROL_SPEC_VERSION",
      origin: Extension("VK_AMD_pipeline_compiler_control", 184, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME",
      name: "AMD_PIPELINE_COMPILER_CONTROL_EXTENSION_NAME",
      origin: Extension("VK_AMD_pipeline_compiler_control", 184, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_pipeline_compiler_control"),
    ),
    Const(
      original_name: "VK_EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION",
      name: "EXT_CALIBRATED_TIMESTAMPS_SPEC_VERSION",
      origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME",
      name: "EXT_CALIBRATED_TIMESTAMPS_EXTENSION_NAME",
      origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_calibrated_timestamps"),
    ),
    Const(
      original_name: "VK_AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION",
      name: "AMD_SHADER_CORE_PROPERTIES_SPEC_VERSION",
      origin: Extension("VK_AMD_shader_core_properties", 186, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME",
      name: "AMD_SHADER_CORE_PROPERTIES_EXTENSION_NAME",
      origin: Extension("VK_AMD_shader_core_properties", 186, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_shader_core_properties"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_187_SPEC_VERSION",
      name: "AMD_EXTENSION_187_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_187", 187, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_187_EXTENSION_NAME",
      name: "AMD_EXTENSION_187_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_187", 187, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_187"),
    ),
    Const(
      original_name: "VK_EXT_VIDEO_DECODE_H265_SPEC_VERSION",
      name: "EXT_VIDEO_DECODE_H265_SPEC_VERSION",
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_VIDEO_DECODE_H265_EXTENSION_NAME",
      name: "EXT_VIDEO_DECODE_H265_EXTENSION_NAME",
      origin: Extension("VK_EXT_video_decode_h265", 188, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_video_decode_h265"),
    ),
    Const(
      original_name: "VK_KHR_GLOBAL_PRIORITY_SPEC_VERSION",
      name: "KHR_GLOBAL_PRIORITY_SPEC_VERSION",
      origin: Extension("VK_KHR_global_priority", 189, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_GLOBAL_PRIORITY_EXTENSION_NAME",
      name: "KHR_GLOBAL_PRIORITY_EXTENSION_NAME",
      origin: Extension("VK_KHR_global_priority", 189, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_global_priority"),
    ),
    Const(
      original_name: "VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION",
      name: "AMD_MEMORY_OVERALLOCATION_BEHAVIOR_SPEC_VERSION",
      origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME",
      name: "AMD_MEMORY_OVERALLOCATION_BEHAVIOR_EXTENSION_NAME",
      origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_memory_overallocation_behavior"),
    ),
    Const(
      original_name: "VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION",
      name: "EXT_VERTEX_ATTRIBUTE_DIVISOR_SPEC_VERSION",
      origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME",
      name: "EXT_VERTEX_ATTRIBUTE_DIVISOR_EXTENSION_NAME",
      origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_vertex_attribute_divisor"),
    ),
    Const(
      original_name: "VK_GGP_FRAME_TOKEN_SPEC_VERSION",
      name: "GGP_FRAME_TOKEN_SPEC_VERSION",
      origin: Extension("VK_GGP_frame_token", 192, true),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_GGP_FRAME_TOKEN_EXTENSION_NAME",
      name: "GGP_FRAME_TOKEN_EXTENSION_NAME",
      origin: Extension("VK_GGP_frame_token", 192, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GGP_frame_token"),
    ),
    Const(
      original_name: "VK_EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION",
      name: "EXT_PIPELINE_CREATION_FEEDBACK_SPEC_VERSION",
      origin: Extension("VK_EXT_pipeline_creation_feedback", 193, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME",
      name: "EXT_PIPELINE_CREATION_FEEDBACK_EXTENSION_NAME",
      origin: Extension("VK_EXT_pipeline_creation_feedback", 193, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_pipeline_creation_feedback"),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_194_SPEC_VERSION",
      name: "GOOGLE_EXTENSION_194_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_extension_194", 194, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_194_EXTENSION_NAME",
      name: "GOOGLE_EXTENSION_194_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_extension_194", 194, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_extension_194"),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_195_SPEC_VERSION",
      name: "GOOGLE_EXTENSION_195_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_extension_195", 195, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_195_EXTENSION_NAME",
      name: "GOOGLE_EXTENSION_195_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_extension_195", 195, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_extension_195"),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_196_SPEC_VERSION",
      name: "GOOGLE_EXTENSION_196_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_extension_196", 196, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_196_EXTENSION_NAME",
      name: "GOOGLE_EXTENSION_196_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_extension_196", 196, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_extension_196"),
    ),
    Const(
      original_name: "VK_KHR_DRIVER_PROPERTIES_SPEC_VERSION",
      name: "KHR_DRIVER_PROPERTIES_SPEC_VERSION",
      origin: Extension("VK_KHR_driver_properties", 197, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_DRIVER_PROPERTIES_EXTENSION_NAME",
      name: "KHR_DRIVER_PROPERTIES_EXTENSION_NAME",
      origin: Extension("VK_KHR_driver_properties", 197, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_driver_properties"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION",
      name: "KHR_SHADER_FLOAT_CONTROLS_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_float_controls", 198, false),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME",
      name: "KHR_SHADER_FLOAT_CONTROLS_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_float_controls", 198, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_float_controls"),
    ),
    Const(
      original_name: "VK_NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION",
      name: "NV_SHADER_SUBGROUP_PARTITIONED_SPEC_VERSION",
      origin: Extension("VK_NV_shader_subgroup_partitioned", 199, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME",
      name: "NV_SHADER_SUBGROUP_PARTITIONED_EXTENSION_NAME",
      origin: Extension("VK_NV_shader_subgroup_partitioned", 199, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_shader_subgroup_partitioned"),
    ),
    Const(
      original_name: "VK_KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION",
      name: "KHR_DEPTH_STENCIL_RESOLVE_SPEC_VERSION",
      origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME",
      name: "KHR_DEPTH_STENCIL_RESOLVE_EXTENSION_NAME",
      origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_depth_stencil_resolve"),
    ),
    Const(
      original_name: "VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION",
      name: "KHR_SWAPCHAIN_MUTABLE_FORMAT_SPEC_VERSION",
      origin: Extension("VK_KHR_swapchain_mutable_format", 201, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME",
      name: "KHR_SWAPCHAIN_MUTABLE_FORMAT_EXTENSION_NAME",
      origin: Extension("VK_KHR_swapchain_mutable_format", 201, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_swapchain_mutable_format"),
    ),
    Const(
      original_name: "VK_NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION",
      name: "NV_COMPUTE_SHADER_DERIVATIVES_SPEC_VERSION",
      origin: Extension("VK_NV_compute_shader_derivatives", 202, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME",
      name: "NV_COMPUTE_SHADER_DERIVATIVES_EXTENSION_NAME",
      origin: Extension("VK_NV_compute_shader_derivatives", 202, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_compute_shader_derivatives"),
    ),
    Const(
      original_name: "VK_NV_MESH_SHADER_SPEC_VERSION",
      name: "NV_MESH_SHADER_SPEC_VERSION",
      origin: Extension("VK_NV_mesh_shader", 203, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_MESH_SHADER_EXTENSION_NAME",
      name: "NV_MESH_SHADER_EXTENSION_NAME",
      origin: Extension("VK_NV_mesh_shader", 203, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_mesh_shader"),
    ),
    Const(
      original_name: "VK_NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION",
      name: "NV_FRAGMENT_SHADER_BARYCENTRIC_SPEC_VERSION",
      origin: Extension("VK_NV_fragment_shader_barycentric", 204, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME",
      name: "NV_FRAGMENT_SHADER_BARYCENTRIC_EXTENSION_NAME",
      origin: Extension("VK_NV_fragment_shader_barycentric", 204, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_fragment_shader_barycentric"),
    ),
    Const(
      original_name: "VK_NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION",
      name: "NV_SHADER_IMAGE_FOOTPRINT_SPEC_VERSION",
      origin: Extension("VK_NV_shader_image_footprint", 205, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME",
      name: "NV_SHADER_IMAGE_FOOTPRINT_EXTENSION_NAME",
      origin: Extension("VK_NV_shader_image_footprint", 205, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_shader_image_footprint"),
    ),
    Const(
      original_name: "VK_NV_SCISSOR_EXCLUSIVE_SPEC_VERSION",
      name: "NV_SCISSOR_EXCLUSIVE_SPEC_VERSION",
      origin: Extension("VK_NV_scissor_exclusive", 206, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME",
      name: "NV_SCISSOR_EXCLUSIVE_EXTENSION_NAME",
      origin: Extension("VK_NV_scissor_exclusive", 206, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_scissor_exclusive"),
    ),
    Const(
      original_name: "VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION",
      name: "NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_SPEC_VERSION",
      origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME",
      name: "NV_DEVICE_DIAGNOSTIC_CHECKPOINTS_EXTENSION_NAME",
      origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_device_diagnostic_checkpoints"),
    ),
    Const(
      original_name: "VK_KHR_TIMELINE_SEMAPHORE_SPEC_VERSION",
      name: "KHR_TIMELINE_SEMAPHORE_SPEC_VERSION",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME",
      name: "KHR_TIMELINE_SEMAPHORE_EXTENSION_NAME",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_timeline_semaphore"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_209_SPEC_VERSION",
      name: "KHR_EXTENSION_209_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_209", 209, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_209_EXTENSION_NAME",
      name: "KHR_EXTENSION_209_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_209", 209, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_209"),
    ),
    Const(
      original_name: "VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION",
      name: "INTEL_SHADER_INTEGER_FUNCTIONS_2_SPEC_VERSION",
      origin: Extension("VK_INTEL_shader_integer_functions2", 210, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME",
      name: "INTEL_SHADER_INTEGER_FUNCTIONS_2_EXTENSION_NAME",
      origin: Extension("VK_INTEL_shader_integer_functions2", 210, false),
      ty: NullTerminatedString(Const),
      value: String("VK_INTEL_shader_integer_functions2"),
    ),
    Const(
      original_name: "VK_INTEL_PERFORMANCE_QUERY_SPEC_VERSION",
      name: "INTEL_PERFORMANCE_QUERY_SPEC_VERSION",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_INTEL_PERFORMANCE_QUERY_EXTENSION_NAME",
      name: "INTEL_PERFORMANCE_QUERY_EXTENSION_NAME",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      ty: NullTerminatedString(Const),
      value: String("VK_INTEL_performance_query"),
    ),
    Const(
      original_name: "VK_KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION",
      name: "KHR_VULKAN_MEMORY_MODEL_SPEC_VERSION",
      origin: Extension("VK_KHR_vulkan_memory_model", 212, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME",
      name: "KHR_VULKAN_MEMORY_MODEL_EXTENSION_NAME",
      origin: Extension("VK_KHR_vulkan_memory_model", 212, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_vulkan_memory_model"),
    ),
    Const(
      original_name: "VK_EXT_PCI_BUS_INFO_SPEC_VERSION",
      name: "EXT_PCI_BUS_INFO_SPEC_VERSION",
      origin: Extension("VK_EXT_pci_bus_info", 213, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_PCI_BUS_INFO_EXTENSION_NAME",
      name: "EXT_PCI_BUS_INFO_EXTENSION_NAME",
      origin: Extension("VK_EXT_pci_bus_info", 213, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_pci_bus_info"),
    ),
    Const(
      original_name: "VK_AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION",
      name: "AMD_DISPLAY_NATIVE_HDR_SPEC_VERSION",
      origin: Extension("VK_AMD_display_native_hdr", 214, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME",
      name: "AMD_DISPLAY_NATIVE_HDR_EXTENSION_NAME",
      origin: Extension("VK_AMD_display_native_hdr", 214, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_display_native_hdr"),
    ),
    Const(
      original_name: "VK_FUCHSIA_IMAGEPIPE_SURFACE_SPEC_VERSION",
      name: "FUCHSIA_IMAGEPIPE_SURFACE_SPEC_VERSION",
      origin: Extension("VK_FUCHSIA_imagepipe_surface", 215, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_FUCHSIA_IMAGEPIPE_SURFACE_EXTENSION_NAME",
      name: "FUCHSIA_IMAGEPIPE_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_FUCHSIA_imagepipe_surface", 215, false),
      ty: NullTerminatedString(Const),
      value: String("VK_FUCHSIA_imagepipe_surface"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_TERMINATE_INVOCATION_SPEC_VERSION",
      name: "KHR_SHADER_TERMINATE_INVOCATION_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_terminate_invocation", 216, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_TERMINATE_INVOCATION_EXTENSION_NAME",
      name: "KHR_SHADER_TERMINATE_INVOCATION_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_terminate_invocation", 216, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_terminate_invocation"),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_217_SPEC_VERSION",
      name: "GOOGLE_EXTENSION_217_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_extension_217", 217, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_217_EXTENSION_NAME",
      name: "GOOGLE_EXTENSION_217_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_extension_217", 217, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_extension_217"),
    ),
    Const(
      original_name: "VK_EXT_METAL_SURFACE_SPEC_VERSION",
      name: "EXT_METAL_SURFACE_SPEC_VERSION",
      origin: Extension("VK_EXT_metal_surface", 218, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_METAL_SURFACE_EXTENSION_NAME",
      name: "EXT_METAL_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_EXT_metal_surface", 218, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_metal_surface"),
    ),
    Const(
      original_name: "VK_EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION",
      name: "EXT_FRAGMENT_DENSITY_MAP_SPEC_VERSION",
      origin: Extension("VK_EXT_fragment_density_map", 219, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME",
      name: "EXT_FRAGMENT_DENSITY_MAP_EXTENSION_NAME",
      origin: Extension("VK_EXT_fragment_density_map", 219, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_fragment_density_map"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_220_SPEC_VERSION",
      name: "EXT_EXTENSION_220_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_220", 220, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_220_EXTENSION_NAME",
      name: "EXT_EXTENSION_220_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_220", 220, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_220"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_221_SPEC_VERSION",
      name: "KHR_EXTENSION_221_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_221", 221, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_221_EXTENSION_NAME",
      name: "KHR_EXTENSION_221_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_221", 221, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_221"),
    ),
    Const(
      original_name: "VK_EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION",
      name: "EXT_SCALAR_BLOCK_LAYOUT_SPEC_VERSION",
      origin: Extension("VK_EXT_scalar_block_layout", 222, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME",
      name: "EXT_SCALAR_BLOCK_LAYOUT_EXTENSION_NAME",
      origin: Extension("VK_EXT_scalar_block_layout", 222, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_scalar_block_layout"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_223_SPEC_VERSION",
      name: "EXT_EXTENSION_223_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_223", 223, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_223_EXTENSION_NAME",
      name: "EXT_EXTENSION_223_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_223", 223, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_223"),
    ),
    Const(
      original_name: "VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION",
      name: "GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_hlsl_functionality1", 224, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME",
      name: "GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_hlsl_functionality1", 224, false),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_hlsl_functionality1"),
    ),
    Const(
      original_name: "VK_GOOGLE_DECORATE_STRING_SPEC_VERSION",
      name: "GOOGLE_DECORATE_STRING_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_decorate_string", 225, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_GOOGLE_DECORATE_STRING_EXTENSION_NAME",
      name: "GOOGLE_DECORATE_STRING_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_decorate_string", 225, false),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_decorate_string"),
    ),
    Const(
      original_name: "VK_EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION",
      name: "EXT_SUBGROUP_SIZE_CONTROL_SPEC_VERSION",
      origin: Extension("VK_EXT_subgroup_size_control", 226, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME",
      name: "EXT_SUBGROUP_SIZE_CONTROL_EXTENSION_NAME",
      origin: Extension("VK_EXT_subgroup_size_control", 226, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_subgroup_size_control"),
    ),
    Const(
      original_name: "VK_KHR_FRAGMENT_SHADING_RATE_SPEC_VERSION",
      name: "KHR_FRAGMENT_SHADING_RATE_SPEC_VERSION",
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME",
      name: "KHR_FRAGMENT_SHADING_RATE_EXTENSION_NAME",
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_fragment_shading_rate"),
    ),
    Const(
      original_name: "VK_AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION",
      name: "AMD_SHADER_CORE_PROPERTIES_2_SPEC_VERSION",
      origin: Extension("VK_AMD_shader_core_properties2", 228, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME",
      name: "AMD_SHADER_CORE_PROPERTIES_2_EXTENSION_NAME",
      origin: Extension("VK_AMD_shader_core_properties2", 228, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_shader_core_properties2"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_229_SPEC_VERSION",
      name: "AMD_EXTENSION_229_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_229", 229, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_229_EXTENSION_NAME",
      name: "AMD_EXTENSION_229_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_229", 229, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_229"),
    ),
    Const(
      original_name: "VK_AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION",
      name: "AMD_DEVICE_COHERENT_MEMORY_SPEC_VERSION",
      origin: Extension("VK_AMD_device_coherent_memory", 230, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME",
      name: "AMD_DEVICE_COHERENT_MEMORY_EXTENSION_NAME",
      origin: Extension("VK_AMD_device_coherent_memory", 230, false),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_device_coherent_memory"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_231_SPEC_VERSION",
      name: "AMD_EXTENSION_231_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_231", 231, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_231_EXTENSION_NAME",
      name: "AMD_EXTENSION_231_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_231", 231, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_231"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_232_SPEC_VERSION",
      name: "AMD_EXTENSION_232_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_232", 232, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_232_EXTENSION_NAME",
      name: "AMD_EXTENSION_232_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_232", 232, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_232"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_233_SPEC_VERSION",
      name: "AMD_EXTENSION_233_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_233", 233, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_233_EXTENSION_NAME",
      name: "AMD_EXTENSION_233_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_233", 233, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_233"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_234_SPEC_VERSION",
      name: "AMD_EXTENSION_234_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_234", 234, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_234_EXTENSION_NAME",
      name: "AMD_EXTENSION_234_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_234", 234, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_234"),
    ),
    Const(
      original_name: "VK_EXT_SHADER_IMAGE_ATOMIC_INT64_SPEC_VERSION",
      name: "EXT_SHADER_IMAGE_ATOMIC_INT64_SPEC_VERSION",
      origin: Extension("VK_EXT_shader_image_atomic_int64", 235, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SHADER_IMAGE_ATOMIC_INT64_EXTENSION_NAME",
      name: "EXT_SHADER_IMAGE_ATOMIC_INT64_EXTENSION_NAME",
      origin: Extension("VK_EXT_shader_image_atomic_int64", 235, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_shader_image_atomic_int64"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_236_SPEC_VERSION",
      name: "AMD_EXTENSION_236_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_236", 236, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_236_EXTENSION_NAME",
      name: "AMD_EXTENSION_236_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_236", 236, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_236"),
    ),
    Const(
      original_name: "VK_KHR_SPIRV_1_4_SPEC_VERSION",
      name: "KHR_SPIRV_1_4_SPEC_VERSION",
      origin: Extension("VK_KHR_spirv_1_4", 237, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SPIRV_1_4_EXTENSION_NAME",
      name: "KHR_SPIRV_1_4_EXTENSION_NAME",
      origin: Extension("VK_KHR_spirv_1_4", 237, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_spirv_1_4"),
    ),
    Const(
      original_name: "VK_EXT_MEMORY_BUDGET_SPEC_VERSION",
      name: "EXT_MEMORY_BUDGET_SPEC_VERSION",
      origin: Extension("VK_EXT_memory_budget", 238, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_MEMORY_BUDGET_EXTENSION_NAME",
      name: "EXT_MEMORY_BUDGET_EXTENSION_NAME",
      origin: Extension("VK_EXT_memory_budget", 238, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_memory_budget"),
    ),
    Const(
      original_name: "VK_EXT_MEMORY_PRIORITY_SPEC_VERSION",
      name: "EXT_MEMORY_PRIORITY_SPEC_VERSION",
      origin: Extension("VK_EXT_memory_priority", 239, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_MEMORY_PRIORITY_EXTENSION_NAME",
      name: "EXT_MEMORY_PRIORITY_EXTENSION_NAME",
      origin: Extension("VK_EXT_memory_priority", 239, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_memory_priority"),
    ),
    Const(
      original_name: "VK_KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION",
      name: "KHR_SURFACE_PROTECTED_CAPABILITIES_SPEC_VERSION",
      origin: Extension("VK_KHR_surface_protected_capabilities", 240, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME",
      name: "KHR_SURFACE_PROTECTED_CAPABILITIES_EXTENSION_NAME",
      origin: Extension("VK_KHR_surface_protected_capabilities", 240, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_surface_protected_capabilities"),
    ),
    Const(
      original_name: "VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION",
      name: "NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_SPEC_VERSION",
      origin: Extension("VK_NV_dedicated_allocation_image_aliasing", 241, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME",
      name: "NV_DEDICATED_ALLOCATION_IMAGE_ALIASING_EXTENSION_NAME",
      origin: Extension("VK_NV_dedicated_allocation_image_aliasing", 241, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_dedicated_allocation_image_aliasing"),
    ),
    Const(
      original_name: "VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_SPEC_VERSION",
      name: "KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_SPEC_VERSION",
      origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_EXTENSION_NAME",
      name: "KHR_SEPARATE_DEPTH_STENCIL_LAYOUTS_EXTENSION_NAME",
      origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_separate_depth_stencil_layouts"),
    ),
    Const(
      original_name: "VK_INTEL_EXTENSION_243_SPEC_VERSION",
      name: "INTEL_EXTENSION_243_SPEC_VERSION",
      origin: Extension("VK_INTEL_extension_243", 243, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_INTEL_EXTENSION_243_EXTENSION_NAME",
      name: "INTEL_EXTENSION_243_EXTENSION_NAME",
      origin: Extension("VK_INTEL_extension_243", 243, true),
      ty: NullTerminatedString(Const),
      value: String("VK_INTEL_extension_243"),
    ),
    Const(
      original_name: "VK_MESA_EXTENSION_244_SPEC_VERSION",
      name: "MESA_EXTENSION_244_SPEC_VERSION",
      origin: Extension("VK_MESA_extension_244", 244, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_MESA_EXTENSION_244_EXTENSION_NAME",
      name: "MESA_EXTENSION_244_EXTENSION_NAME",
      origin: Extension("VK_MESA_extension_244", 244, true),
      ty: NullTerminatedString(Const),
      value: String("VK_MESA_extension_244"),
    ),
    Const(
      original_name: "VK_EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION",
      name: "EXT_BUFFER_DEVICE_ADDRESS_SPEC_VERSION",
      origin: Extension("VK_EXT_buffer_device_address", 245, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME",
      name: "EXT_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME",
      origin: Extension("VK_EXT_buffer_device_address", 245, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_buffer_device_address"),
    ),
    Const(
      original_name: "VK_EXT_TOOLING_INFO_SPEC_VERSION",
      name: "EXT_TOOLING_INFO_SPEC_VERSION",
      origin: Extension("VK_EXT_tooling_info", 246, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_TOOLING_INFO_EXTENSION_NAME",
      name: "EXT_TOOLING_INFO_EXTENSION_NAME",
      origin: Extension("VK_EXT_tooling_info", 246, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_tooling_info"),
    ),
    Const(
      original_name: "VK_EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION",
      name: "EXT_SEPARATE_STENCIL_USAGE_SPEC_VERSION",
      origin: Extension("VK_EXT_separate_stencil_usage", 247, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME",
      name: "EXT_SEPARATE_STENCIL_USAGE_EXTENSION_NAME",
      origin: Extension("VK_EXT_separate_stencil_usage", 247, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_separate_stencil_usage"),
    ),
    Const(
      original_name: "VK_EXT_VALIDATION_FEATURES_SPEC_VERSION",
      name: "EXT_VALIDATION_FEATURES_SPEC_VERSION",
      origin: Extension("VK_EXT_validation_features", 248, false),
      ty: Native(UInt(4)),
      value: ConstantInt(5),
    ),
    Const(
      original_name: "VK_EXT_VALIDATION_FEATURES_EXTENSION_NAME",
      name: "EXT_VALIDATION_FEATURES_EXTENSION_NAME",
      origin: Extension("VK_EXT_validation_features", 248, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_validation_features"),
    ),
    Const(
      original_name: "VK_KHR_PRESENT_WAIT_SPEC_VERSION",
      name: "KHR_PRESENT_WAIT_SPEC_VERSION",
      origin: Extension("VK_KHR_present_wait", 249, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_PRESENT_WAIT_EXTENSION_NAME",
      name: "KHR_PRESENT_WAIT_EXTENSION_NAME",
      origin: Extension("VK_KHR_present_wait", 249, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_present_wait"),
    ),
    Const(
      original_name: "VK_NV_COOPERATIVE_MATRIX_SPEC_VERSION",
      name: "NV_COOPERATIVE_MATRIX_SPEC_VERSION",
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_COOPERATIVE_MATRIX_EXTENSION_NAME",
      name: "NV_COOPERATIVE_MATRIX_EXTENSION_NAME",
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_cooperative_matrix"),
    ),
    Const(
      original_name: "VK_NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION",
      name: "NV_COVERAGE_REDUCTION_MODE_SPEC_VERSION",
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME",
      name: "NV_COVERAGE_REDUCTION_MODE_EXTENSION_NAME",
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_coverage_reduction_mode"),
    ),
    Const(
      original_name: "VK_EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION",
      name: "EXT_FRAGMENT_SHADER_INTERLOCK_SPEC_VERSION",
      origin: Extension("VK_EXT_fragment_shader_interlock", 252, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME",
      name: "EXT_FRAGMENT_SHADER_INTERLOCK_EXTENSION_NAME",
      origin: Extension("VK_EXT_fragment_shader_interlock", 252, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_fragment_shader_interlock"),
    ),
    Const(
      original_name: "VK_EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION",
      name: "EXT_YCBCR_IMAGE_ARRAYS_SPEC_VERSION",
      origin: Extension("VK_EXT_ycbcr_image_arrays", 253, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME",
      name: "EXT_YCBCR_IMAGE_ARRAYS_EXTENSION_NAME",
      origin: Extension("VK_EXT_ycbcr_image_arrays", 253, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_ycbcr_image_arrays"),
    ),
    Const(
      original_name: "VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION",
      name: "KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_SPEC_VERSION",
      origin: Extension("VK_KHR_uniform_buffer_standard_layout", 254, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME",
      name: "KHR_UNIFORM_BUFFER_STANDARD_LAYOUT_EXTENSION_NAME",
      origin: Extension("VK_KHR_uniform_buffer_standard_layout", 254, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_uniform_buffer_standard_layout"),
    ),
    Const(
      original_name: "VK_EXT_PROVOKING_VERTEX_SPEC_VERSION",
      name: "EXT_PROVOKING_VERTEX_SPEC_VERSION",
      origin: Extension("VK_EXT_provoking_vertex", 255, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_PROVOKING_VERTEX_EXTENSION_NAME",
      name: "EXT_PROVOKING_VERTEX_EXTENSION_NAME",
      origin: Extension("VK_EXT_provoking_vertex", 255, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_provoking_vertex"),
    ),
    Const(
      original_name: "VK_EXT_FULL_SCREEN_EXCLUSIVE_SPEC_VERSION",
      name: "EXT_FULL_SCREEN_EXCLUSIVE_SPEC_VERSION",
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_EXT_FULL_SCREEN_EXCLUSIVE_EXTENSION_NAME",
      name: "EXT_FULL_SCREEN_EXCLUSIVE_EXTENSION_NAME",
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_full_screen_exclusive"),
    ),
    Const(
      original_name: "VK_EXT_HEADLESS_SURFACE_SPEC_VERSION",
      name: "EXT_HEADLESS_SURFACE_SPEC_VERSION",
      origin: Extension("VK_EXT_headless_surface", 257, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_HEADLESS_SURFACE_EXTENSION_NAME",
      name: "EXT_HEADLESS_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_EXT_headless_surface", 257, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_headless_surface"),
    ),
    Const(
      original_name: "VK_KHR_BUFFER_DEVICE_ADDRESS_SPEC_VERSION",
      name: "KHR_BUFFER_DEVICE_ADDRESS_SPEC_VERSION",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME",
      name: "KHR_BUFFER_DEVICE_ADDRESS_EXTENSION_NAME",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_buffer_device_address"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_259_SPEC_VERSION",
      name: "EXT_EXTENSION_259_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_259", 259, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_259_EXTENSION_NAME",
      name: "EXT_EXTENSION_259_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_259", 259, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_259"),
    ),
    Const(
      original_name: "VK_EXT_LINE_RASTERIZATION_SPEC_VERSION",
      name: "EXT_LINE_RASTERIZATION_SPEC_VERSION",
      origin: Extension("VK_EXT_line_rasterization", 260, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_LINE_RASTERIZATION_EXTENSION_NAME",
      name: "EXT_LINE_RASTERIZATION_EXTENSION_NAME",
      origin: Extension("VK_EXT_line_rasterization", 260, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_line_rasterization"),
    ),
    Const(
      original_name: "VK_EXT_SHADER_ATOMIC_FLOAT_SPEC_VERSION",
      name: "EXT_SHADER_ATOMIC_FLOAT_SPEC_VERSION",
      origin: Extension("VK_EXT_shader_atomic_float", 261, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SHADER_ATOMIC_FLOAT_EXTENSION_NAME",
      name: "EXT_SHADER_ATOMIC_FLOAT_EXTENSION_NAME",
      origin: Extension("VK_EXT_shader_atomic_float", 261, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_shader_atomic_float"),
    ),
    Const(
      original_name: "VK_EXT_HOST_QUERY_RESET_SPEC_VERSION",
      name: "EXT_HOST_QUERY_RESET_SPEC_VERSION",
      origin: Extension("VK_EXT_host_query_reset", 262, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_HOST_QUERY_RESET_EXTENSION_NAME",
      name: "EXT_HOST_QUERY_RESET_EXTENSION_NAME",
      origin: Extension("VK_EXT_host_query_reset", 262, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_host_query_reset"),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_263_SPEC_VERSION",
      name: "GGP_EXTENSION_263_SPEC_VERSION",
      origin: Extension("VK_GGP_extension_263", 263, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_263_EXTENSION_NAME",
      name: "GGP_EXTENSION_263_EXTENSION_NAME",
      origin: Extension("VK_GGP_extension_263", 263, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GGP_extension_263"),
    ),
    Const(
      original_name: "VK_BRCM_EXTENSION_264_SPEC_VERSION",
      name: "BRCM_EXTENSION_264_SPEC_VERSION",
      origin: Extension("VK_BRCM_extension_264", 264, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_BRCM_EXTENSION_264_EXTENSION_NAME",
      name: "BRCM_EXTENSION_264_EXTENSION_NAME",
      origin: Extension("VK_BRCM_extension_264", 264, true),
      ty: NullTerminatedString(Const),
      value: String("VK_BRCM_extension_264"),
    ),
    Const(
      original_name: "VK_BRCM_EXTENSION_265_SPEC_VERSION",
      name: "BRCM_EXTENSION_265_SPEC_VERSION",
      origin: Extension("VK_BRCM_extension_265", 265, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_BRCM_EXTENSION_265_EXTENSION_NAME",
      name: "BRCM_EXTENSION_265_EXTENSION_NAME",
      origin: Extension("VK_BRCM_extension_265", 265, true),
      ty: NullTerminatedString(Const),
      value: String("VK_BRCM_extension_265"),
    ),
    Const(
      original_name: "VK_EXT_INDEX_TYPE_UINT8_SPEC_VERSION",
      name: "EXT_INDEX_TYPE_UINT8_SPEC_VERSION",
      origin: Extension("VK_EXT_index_type_uint8", 266, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_INDEX_TYPE_UINT8_EXTENSION_NAME",
      name: "EXT_INDEX_TYPE_UINT8_EXTENSION_NAME",
      origin: Extension("VK_EXT_index_type_uint8", 266, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_index_type_uint8"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_267_SPEC_VERSION",
      name: "EXT_EXTENSION_267_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_267", 267, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_267_EXTENSION_NAME",
      name: "EXT_EXTENSION_267_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_267", 267, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_267"),
    ),
    Const(
      original_name: "VK_EXT_EXTENDED_DYNAMIC_STATE_SPEC_VERSION",
      name: "EXT_EXTENDED_DYNAMIC_STATE_SPEC_VERSION",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_EXTENDED_DYNAMIC_STATE_EXTENSION_NAME",
      name: "EXT_EXTENDED_DYNAMIC_STATE_EXTENSION_NAME",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extended_dynamic_state"),
    ),
    Const(
      original_name: "VK_KHR_DEFERRED_HOST_OPERATIONS_SPEC_VERSION",
      name: "KHR_DEFERRED_HOST_OPERATIONS_SPEC_VERSION",
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_KHR_DEFERRED_HOST_OPERATIONS_EXTENSION_NAME",
      name: "KHR_DEFERRED_HOST_OPERATIONS_EXTENSION_NAME",
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_deferred_host_operations"),
    ),
    Const(
      original_name: "VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION",
      name: "KHR_PIPELINE_EXECUTABLE_PROPERTIES_SPEC_VERSION",
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME",
      name: "KHR_PIPELINE_EXECUTABLE_PROPERTIES_EXTENSION_NAME",
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_pipeline_executable_properties"),
    ),
    Const(
      original_name: "VK_INTEL_EXTENSION_271_SPEC_VERSION",
      name: "INTEL_EXTENSION_271_SPEC_VERSION",
      origin: Extension("VK_INTEL_extension_271", 271, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_INTEL_EXTENSION_271_EXTENSION_NAME",
      name: "INTEL_EXTENSION_271_EXTENSION_NAME",
      origin: Extension("VK_INTEL_extension_271", 271, true),
      ty: NullTerminatedString(Const),
      value: String("VK_INTEL_extension_271"),
    ),
    Const(
      original_name: "VK_INTEL_EXTENSION_272_SPEC_VERSION",
      name: "INTEL_EXTENSION_272_SPEC_VERSION",
      origin: Extension("VK_INTEL_extension_272", 272, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_INTEL_EXTENSION_272_EXTENSION_NAME",
      name: "INTEL_EXTENSION_272_EXTENSION_NAME",
      origin: Extension("VK_INTEL_extension_272", 272, true),
      ty: NullTerminatedString(Const),
      value: String("VK_INTEL_extension_272"),
    ),
    Const(
      original_name: "VK_INTEL_EXTENSION_273_SPEC_VERSION",
      name: "INTEL_EXTENSION_273_SPEC_VERSION",
      origin: Extension("VK_INTEL_extension_273", 273, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_INTEL_EXTENSION_273_EXTENSION_NAME",
      name: "INTEL_EXTENSION_273_EXTENSION_NAME",
      origin: Extension("VK_INTEL_extension_273", 273, true),
      ty: NullTerminatedString(Const),
      value: String("VK_INTEL_extension_273"),
    ),
    Const(
      original_name: "VK_EXT_SHADER_ATOMIC_FLOAT_2_SPEC_VERSION",
      name: "EXT_SHADER_ATOMIC_FLOAT_2_SPEC_VERSION",
      origin: Extension("VK_EXT_shader_atomic_float2", 274, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SHADER_ATOMIC_FLOAT_2_EXTENSION_NAME",
      name: "EXT_SHADER_ATOMIC_FLOAT_2_EXTENSION_NAME",
      origin: Extension("VK_EXT_shader_atomic_float2", 274, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_shader_atomic_float2"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_275_SPEC_VERSION",
      name: "KHR_EXTENSION_275_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_275", 275, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_275_EXTENSION_NAME",
      name: "KHR_EXTENSION_275_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_275", 275, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_275"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_276_SPEC_VERSION",
      name: "KHR_EXTENSION_276_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_276", 276, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_276_EXTENSION_NAME",
      name: "KHR_EXTENSION_276_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_276", 276, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_276"),
    ),
    Const(
      original_name: "VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION",
      name: "EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_SPEC_VERSION",
      origin: Extension("VK_EXT_shader_demote_to_helper_invocation", 277, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME",
      name: "EXT_SHADER_DEMOTE_TO_HELPER_INVOCATION_EXTENSION_NAME",
      origin: Extension("VK_EXT_shader_demote_to_helper_invocation", 277, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_shader_demote_to_helper_invocation"),
    ),
    Const(
      original_name: "VK_NV_DEVICE_GENERATED_COMMANDS_SPEC_VERSION",
      name: "NV_DEVICE_GENERATED_COMMANDS_SPEC_VERSION",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_NV_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME",
      name: "NV_DEVICE_GENERATED_COMMANDS_EXTENSION_NAME",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_device_generated_commands"),
    ),
    Const(
      original_name: "VK_NV_INHERITED_VIEWPORT_SCISSOR_SPEC_VERSION",
      name: "NV_INHERITED_VIEWPORT_SCISSOR_SPEC_VERSION",
      origin: Extension("VK_NV_inherited_viewport_scissor", 279, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_INHERITED_VIEWPORT_SCISSOR_EXTENSION_NAME",
      name: "NV_INHERITED_VIEWPORT_SCISSOR_EXTENSION_NAME",
      origin: Extension("VK_NV_inherited_viewport_scissor", 279, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_inherited_viewport_scissor"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_280_SPEC_VERSION",
      name: "KHR_EXTENSION_280_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_280", 280, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_280_EXTENSION_NAME",
      name: "KHR_EXTENSION_280_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_280", 280, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_280"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_INTEGER_DOT_PRODUCT_SPEC_VERSION",
      name: "KHR_SHADER_INTEGER_DOT_PRODUCT_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_integer_dot_product", 281, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_INTEGER_DOT_PRODUCT_EXTENSION_NAME",
      name: "KHR_SHADER_INTEGER_DOT_PRODUCT_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_integer_dot_product", 281, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_integer_dot_product"),
    ),
    Const(
      original_name: "VK_EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION",
      name: "EXT_TEXEL_BUFFER_ALIGNMENT_SPEC_VERSION",
      origin: Extension("VK_EXT_texel_buffer_alignment", 282, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME",
      name: "EXT_TEXEL_BUFFER_ALIGNMENT_EXTENSION_NAME",
      origin: Extension("VK_EXT_texel_buffer_alignment", 282, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_texel_buffer_alignment"),
    ),
    Const(
      original_name: "VK_QCOM_RENDER_PASS_TRANSFORM_SPEC_VERSION",
      name: "QCOM_RENDER_PASS_TRANSFORM_SPEC_VERSION",
      origin: Extension("VK_QCOM_render_pass_transform", 283, true),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME",
      name: "QCOM_RENDER_PASS_TRANSFORM_EXTENSION_NAME",
      origin: Extension("VK_QCOM_render_pass_transform", 283, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_render_pass_transform"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_284_SPEC_VERSION",
      name: "EXT_EXTENSION_284_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_284", 284, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_284_EXTENSION_NAME",
      name: "EXT_EXTENSION_284_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_284", 284, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_284"),
    ),
    Const(
      original_name: "VK_EXT_DEVICE_MEMORY_REPORT_SPEC_VERSION",
      name: "EXT_DEVICE_MEMORY_REPORT_SPEC_VERSION",
      origin: Extension("VK_EXT_device_memory_report", 285, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_DEVICE_MEMORY_REPORT_EXTENSION_NAME",
      name: "EXT_DEVICE_MEMORY_REPORT_EXTENSION_NAME",
      origin: Extension("VK_EXT_device_memory_report", 285, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_device_memory_report"),
    ),
    Const(
      original_name: "VK_EXT_ACQUIRE_DRM_DISPLAY_SPEC_VERSION",
      name: "EXT_ACQUIRE_DRM_DISPLAY_SPEC_VERSION",
      origin: Extension("VK_EXT_acquire_drm_display", 286, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_ACQUIRE_DRM_DISPLAY_EXTENSION_NAME",
      name: "EXT_ACQUIRE_DRM_DISPLAY_EXTENSION_NAME",
      origin: Extension("VK_EXT_acquire_drm_display", 286, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_acquire_drm_display"),
    ),
    Const(
      original_name: "VK_EXT_ROBUSTNESS_2_SPEC_VERSION",
      name: "EXT_ROBUSTNESS_2_SPEC_VERSION",
      origin: Extension("VK_EXT_robustness2", 287, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_ROBUSTNESS_2_EXTENSION_NAME",
      name: "EXT_ROBUSTNESS_2_EXTENSION_NAME",
      origin: Extension("VK_EXT_robustness2", 287, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_robustness2"),
    ),
    Const(
      original_name: "VK_EXT_CUSTOM_BORDER_COLOR_SPEC_VERSION",
      name: "EXT_CUSTOM_BORDER_COLOR_SPEC_VERSION",
      origin: Extension("VK_EXT_custom_border_color", 288, false),
      ty: Native(UInt(4)),
      value: ConstantInt(12),
    ),
    Const(
      original_name: "VK_EXT_CUSTOM_BORDER_COLOR_EXTENSION_NAME",
      name: "EXT_CUSTOM_BORDER_COLOR_EXTENSION_NAME",
      origin: Extension("VK_EXT_custom_border_color", 288, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_custom_border_color"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_289_SPEC_VERSION",
      name: "EXT_EXTENSION_289_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_289", 289, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_289_EXTENSION_NAME",
      name: "EXT_EXTENSION_289_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_289", 289, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_289"),
    ),
    Const(
      original_name: "VK_GOOGLE_USER_TYPE_SPEC_VERSION",
      name: "GOOGLE_USER_TYPE_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_user_type", 290, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_GOOGLE_USER_TYPE_EXTENSION_NAME",
      name: "GOOGLE_USER_TYPE_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_user_type", 290, false),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_user_type"),
    ),
    Const(
      original_name: "VK_KHR_PIPELINE_LIBRARY_SPEC_VERSION",
      name: "KHR_PIPELINE_LIBRARY_SPEC_VERSION",
      origin: Extension("VK_KHR_pipeline_library", 291, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_PIPELINE_LIBRARY_EXTENSION_NAME",
      name: "KHR_PIPELINE_LIBRARY_EXTENSION_NAME",
      origin: Extension("VK_KHR_pipeline_library", 291, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_pipeline_library"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_292_SPEC_VERSION",
      name: "NV_EXTENSION_292_SPEC_VERSION",
      origin: Extension("VK_NV_extension_292", 292, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_292_EXTENSION_NAME",
      name: "NV_EXTENSION_292_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_292", 292, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_292"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_293_SPEC_VERSION",
      name: "NV_EXTENSION_293_SPEC_VERSION",
      origin: Extension("VK_NV_extension_293", 293, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_293_EXTENSION_NAME",
      name: "NV_EXTENSION_293_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_293", 293, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_293"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_NON_SEMANTIC_INFO_SPEC_VERSION",
      name: "KHR_SHADER_NON_SEMANTIC_INFO_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_non_semantic_info", 294, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_NON_SEMANTIC_INFO_EXTENSION_NAME",
      name: "KHR_SHADER_NON_SEMANTIC_INFO_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_non_semantic_info", 294, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_non_semantic_info"),
    ),
    Const(
      original_name: "VK_KHR_PRESENT_ID_SPEC_VERSION",
      name: "KHR_PRESENT_ID_SPEC_VERSION",
      origin: Extension("VK_KHR_present_id", 295, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_PRESENT_ID_EXTENSION_NAME",
      name: "KHR_PRESENT_ID_EXTENSION_NAME",
      origin: Extension("VK_KHR_present_id", 295, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_present_id"),
    ),
    Const(
      original_name: "VK_EXT_PRIVATE_DATA_SPEC_VERSION",
      name: "EXT_PRIVATE_DATA_SPEC_VERSION",
      origin: Extension("VK_EXT_private_data", 296, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_PRIVATE_DATA_EXTENSION_NAME",
      name: "EXT_PRIVATE_DATA_EXTENSION_NAME",
      origin: Extension("VK_EXT_private_data", 296, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_private_data"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_297_SPEC_VERSION",
      name: "KHR_EXTENSION_297_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_297", 297, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_297_EXTENSION_NAME",
      name: "KHR_EXTENSION_297_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_297", 297, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_297"),
    ),
    Const(
      original_name: "VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_SPEC_VERSION",
      name: "EXT_PIPELINE_CREATION_CACHE_CONTROL_SPEC_VERSION",
      origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
      ty: Native(UInt(4)),
      value: ConstantInt(3),
    ),
    Const(
      original_name: "VK_EXT_PIPELINE_CREATION_CACHE_CONTROL_EXTENSION_NAME",
      name: "EXT_PIPELINE_CREATION_CACHE_CONTROL_EXTENSION_NAME",
      origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_pipeline_creation_cache_control"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_299_SPEC_VERSION",
      name: "KHR_EXTENSION_299_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_299", 299, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_299_EXTENSION_NAME",
      name: "KHR_EXTENSION_299_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_299", 299, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_299"),
    ),
    Const(
      original_name: "VK_KHR_VIDEO_ENCODE_QUEUE_SPEC_VERSION",
      name: "KHR_VIDEO_ENCODE_QUEUE_SPEC_VERSION",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      ty: Native(UInt(4)),
      value: ConstantInt(4),
    ),
    Const(
      original_name: "VK_KHR_VIDEO_ENCODE_QUEUE_EXTENSION_NAME",
      name: "KHR_VIDEO_ENCODE_QUEUE_EXTENSION_NAME",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_video_encode_queue"),
    ),
    Const(
      original_name: "VK_NV_DEVICE_DIAGNOSTICS_CONFIG_SPEC_VERSION",
      name: "NV_DEVICE_DIAGNOSTICS_CONFIG_SPEC_VERSION",
      origin: Extension("VK_NV_device_diagnostics_config", 301, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_DEVICE_DIAGNOSTICS_CONFIG_EXTENSION_NAME",
      name: "NV_DEVICE_DIAGNOSTICS_CONFIG_EXTENSION_NAME",
      origin: Extension("VK_NV_device_diagnostics_config", 301, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_device_diagnostics_config"),
    ),
    Const(
      original_name: "VK_QCOM_RENDER_PASS_STORE_OPS_SPEC_VERSION",
      name: "QCOM_RENDER_PASS_STORE_OPS_SPEC_VERSION",
      origin: Extension("VK_QCOM_render_pass_store_ops", 302, true),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_QCOM_RENDER_PASS_STORE_OPS_EXTENSION_NAME",
      name: "QCOM_RENDER_PASS_STORE_OPS_EXTENSION_NAME",
      origin: Extension("VK_QCOM_render_pass_store_ops", 302, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_render_pass_store_ops"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_303_SPEC_VERSION",
      name: "QCOM_EXTENSION_303_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_303", 303, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_303_EXTENSION_NAME",
      name: "QCOM_EXTENSION_303_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_303", 303, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_303"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_304_SPEC_VERSION",
      name: "QCOM_EXTENSION_304_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_304", 304, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_304_EXTENSION_NAME",
      name: "QCOM_EXTENSION_304_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_304", 304, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_304"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_305_SPEC_VERSION",
      name: "QCOM_EXTENSION_305_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_305", 305, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_305_EXTENSION_NAME",
      name: "QCOM_EXTENSION_305_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_305", 305, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_305"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_306_SPEC_VERSION",
      name: "QCOM_EXTENSION_306_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_306", 306, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_306_EXTENSION_NAME",
      name: "QCOM_EXTENSION_306_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_306", 306, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_306"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_307_SPEC_VERSION",
      name: "QCOM_EXTENSION_307_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_307", 307, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_307_EXTENSION_NAME",
      name: "QCOM_EXTENSION_307_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_307", 307, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_307"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_308_SPEC_VERSION",
      name: "NV_EXTENSION_308_SPEC_VERSION",
      origin: Extension("VK_NV_extension_308", 308, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_308_EXTENSION_NAME",
      name: "NV_EXTENSION_308_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_308", 308, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_308"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_309_SPEC_VERSION",
      name: "KHR_EXTENSION_309_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_309", 309, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_309_EXTENSION_NAME",
      name: "KHR_EXTENSION_309_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_309", 309, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_309"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_310_SPEC_VERSION",
      name: "QCOM_EXTENSION_310_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_310", 310, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_310_EXTENSION_NAME",
      name: "QCOM_EXTENSION_310_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_310", 310, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_310"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_311_SPEC_VERSION",
      name: "NV_EXTENSION_311_SPEC_VERSION",
      origin: Extension("VK_NV_extension_311", 311, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_311_EXTENSION_NAME",
      name: "NV_EXTENSION_311_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_311", 311, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_311"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_312_SPEC_VERSION",
      name: "EXT_EXTENSION_312_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_312", 312, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_312_EXTENSION_NAME",
      name: "EXT_EXTENSION_312_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_312", 312, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_312"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_313_SPEC_VERSION",
      name: "EXT_EXTENSION_313_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_313", 313, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_313_EXTENSION_NAME",
      name: "EXT_EXTENSION_313_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_313", 313, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_313"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_314_SPEC_VERSION",
      name: "AMD_EXTENSION_314_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_314", 314, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_314_EXTENSION_NAME",
      name: "AMD_EXTENSION_314_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_314", 314, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_314"),
    ),
    Const(
      original_name: "VK_KHR_SYNCHRONIZATION_2_SPEC_VERSION",
      name: "KHR_SYNCHRONIZATION_2_SPEC_VERSION",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SYNCHRONIZATION_2_EXTENSION_NAME",
      name: "KHR_SYNCHRONIZATION_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_synchronization2"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_316_SPEC_VERSION",
      name: "AMD_EXTENSION_316_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_316", 316, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_316_EXTENSION_NAME",
      name: "AMD_EXTENSION_316_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_316", 316, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_316"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_317_SPEC_VERSION",
      name: "AMD_EXTENSION_317_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_317", 317, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_317_EXTENSION_NAME",
      name: "AMD_EXTENSION_317_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_317", 317, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_317"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_318_SPEC_VERSION",
      name: "AMD_EXTENSION_318_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_318", 318, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_318_EXTENSION_NAME",
      name: "AMD_EXTENSION_318_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_318", 318, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_318"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_319_SPEC_VERSION",
      name: "AMD_EXTENSION_319_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_319", 319, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_319_EXTENSION_NAME",
      name: "AMD_EXTENSION_319_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_319", 319, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_319"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_320_SPEC_VERSION",
      name: "AMD_EXTENSION_320_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_320", 320, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_320_EXTENSION_NAME",
      name: "AMD_EXTENSION_320_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_320", 320, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_320"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_321_SPEC_VERSION",
      name: "AMD_EXTENSION_321_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_321", 321, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_321_EXTENSION_NAME",
      name: "AMD_EXTENSION_321_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_321", 321, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_321"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_322_SPEC_VERSION",
      name: "AMD_EXTENSION_322_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_322", 322, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_322_EXTENSION_NAME",
      name: "AMD_EXTENSION_322_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_322", 322, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_322"),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_323_SPEC_VERSION",
      name: "AMD_EXTENSION_323_SPEC_VERSION",
      origin: Extension("VK_AMD_extension_323", 323, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_AMD_EXTENSION_323_EXTENSION_NAME",
      name: "AMD_EXTENSION_323_EXTENSION_NAME",
      origin: Extension("VK_AMD_extension_323", 323, true),
      ty: NullTerminatedString(Const),
      value: String("VK_AMD_extension_323"),
    ),
    Const(
      original_name: "VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_SPEC_VERSION",
      name: "KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_SPEC_VERSION",
      origin: Extension("VK_KHR_shader_subgroup_uniform_control_flow", 324, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_EXTENSION_NAME",
      name: "KHR_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_EXTENSION_NAME",
      origin: Extension("VK_KHR_shader_subgroup_uniform_control_flow", 324, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_shader_subgroup_uniform_control_flow"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_325_SPEC_VERSION",
      name: "KHR_EXTENSION_325_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_325", 325, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_325_EXTENSION_NAME",
      name: "KHR_EXTENSION_325_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_325", 325, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_325"),
    ),
    Const(
      original_name: "VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_SPEC_VERSION",
      name: "KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_SPEC_VERSION",
      origin: Extension("VK_KHR_zero_initialize_workgroup_memory", 326, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_EXTENSION_NAME",
      name: "KHR_ZERO_INITIALIZE_WORKGROUP_MEMORY_EXTENSION_NAME",
      origin: Extension("VK_KHR_zero_initialize_workgroup_memory", 326, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_zero_initialize_workgroup_memory"),
    ),
    Const(
      original_name: "VK_NV_FRAGMENT_SHADING_RATE_ENUMS_SPEC_VERSION",
      name: "NV_FRAGMENT_SHADING_RATE_ENUMS_SPEC_VERSION",
      origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_FRAGMENT_SHADING_RATE_ENUMS_EXTENSION_NAME",
      name: "NV_FRAGMENT_SHADING_RATE_ENUMS_EXTENSION_NAME",
      origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_fragment_shading_rate_enums"),
    ),
    Const(
      original_name: "VK_NV_RAY_TRACING_MOTION_BLUR_SPEC_VERSION",
      name: "NV_RAY_TRACING_MOTION_BLUR_SPEC_VERSION",
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_RAY_TRACING_MOTION_BLUR_EXTENSION_NAME",
      name: "NV_RAY_TRACING_MOTION_BLUR_EXTENSION_NAME",
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_ray_tracing_motion_blur"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_329_SPEC_VERSION",
      name: "NV_EXTENSION_329_SPEC_VERSION",
      origin: Extension("VK_NV_extension_329", 329, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_329_EXTENSION_NAME",
      name: "NV_EXTENSION_329_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_329", 329, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_329"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_330_SPEC_VERSION",
      name: "NV_EXTENSION_330_SPEC_VERSION",
      origin: Extension("VK_NV_extension_330", 330, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_330_EXTENSION_NAME",
      name: "NV_EXTENSION_330_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_330", 330, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_330"),
    ),
    Const(
      original_name: "VK_EXT_YCBCR_2PLANE_444_FORMATS_SPEC_VERSION",
      name: "EXT_YCBCR_2PLANE_444_FORMATS_SPEC_VERSION",
      origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_YCBCR_2PLANE_444_FORMATS_EXTENSION_NAME",
      name: "EXT_YCBCR_2PLANE_444_FORMATS_EXTENSION_NAME",
      origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_ycbcr_2plane_444_formats"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_332_SPEC_VERSION",
      name: "NV_EXTENSION_332_SPEC_VERSION",
      origin: Extension("VK_NV_extension_332", 332, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_332_EXTENSION_NAME",
      name: "NV_EXTENSION_332_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_332", 332, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_332"),
    ),
    Const(
      original_name: "VK_EXT_FRAGMENT_DENSITY_MAP_2_SPEC_VERSION",
      name: "EXT_FRAGMENT_DENSITY_MAP_2_SPEC_VERSION",
      origin: Extension("VK_EXT_fragment_density_map2", 333, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_FRAGMENT_DENSITY_MAP_2_EXTENSION_NAME",
      name: "EXT_FRAGMENT_DENSITY_MAP_2_EXTENSION_NAME",
      origin: Extension("VK_EXT_fragment_density_map2", 333, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_fragment_density_map2"),
    ),
    Const(
      original_name: "VK_QCOM_ROTATED_COPY_COMMANDS_SPEC_VERSION",
      name: "QCOM_ROTATED_COPY_COMMANDS_SPEC_VERSION",
      origin: Extension("VK_QCOM_rotated_copy_commands", 334, true),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_QCOM_ROTATED_COPY_COMMANDS_EXTENSION_NAME",
      name: "QCOM_ROTATED_COPY_COMMANDS_EXTENSION_NAME",
      origin: Extension("VK_QCOM_rotated_copy_commands", 334, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_rotated_copy_commands"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_335_SPEC_VERSION",
      name: "KHR_EXTENSION_335_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_335", 335, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_335_EXTENSION_NAME",
      name: "KHR_EXTENSION_335_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_335", 335, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_335"),
    ),
    Const(
      original_name: "VK_EXT_IMAGE_ROBUSTNESS_SPEC_VERSION",
      name: "EXT_IMAGE_ROBUSTNESS_SPEC_VERSION",
      origin: Extension("VK_EXT_image_robustness", 336, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_IMAGE_ROBUSTNESS_EXTENSION_NAME",
      name: "EXT_IMAGE_ROBUSTNESS_EXTENSION_NAME",
      origin: Extension("VK_EXT_image_robustness", 336, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_image_robustness"),
    ),
    Const(
      original_name: "VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_SPEC_VERSION",
      name: "KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_SPEC_VERSION",
      origin: Extension("VK_KHR_workgroup_memory_explicit_layout", 337, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_EXTENSION_NAME",
      name: "KHR_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_EXTENSION_NAME",
      origin: Extension("VK_KHR_workgroup_memory_explicit_layout", 337, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_workgroup_memory_explicit_layout"),
    ),
    Const(
      original_name: "VK_KHR_COPY_COMMANDS_2_SPEC_VERSION",
      name: "KHR_COPY_COMMANDS_2_SPEC_VERSION",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_COPY_COMMANDS_2_EXTENSION_NAME",
      name: "KHR_COPY_COMMANDS_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_copy_commands2"),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_339_SPEC_VERSION",
      name: "ARM_EXTENSION_339_SPEC_VERSION",
      origin: Extension("VK_ARM_extension_339", 339, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_339_EXTENSION_NAME",
      name: "ARM_EXTENSION_339_EXTENSION_NAME",
      origin: Extension("VK_ARM_extension_339", 339, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_extension_339"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_340_SPEC_VERSION",
      name: "EXT_EXTENSION_340_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_340", 340, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_340_EXTENSION_NAME",
      name: "EXT_EXTENSION_340_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_340", 340, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_340"),
    ),
    Const(
      original_name: "VK_EXT_4444_FORMATS_SPEC_VERSION",
      name: "EXT_4444_FORMATS_SPEC_VERSION",
      origin: Extension("VK_EXT_4444_formats", 341, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_4444_FORMATS_EXTENSION_NAME",
      name: "EXT_4444_FORMATS_EXTENSION_NAME",
      origin: Extension("VK_EXT_4444_formats", 341, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_4444_formats"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_342_SPEC_VERSION",
      name: "EXT_EXTENSION_342_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_342", 342, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_342_EXTENSION_NAME",
      name: "EXT_EXTENSION_342_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_342", 342, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_342"),
    ),
    Const(
      original_name: "VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION",
      name: "ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_SPEC_VERSION",
      origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME",
      name: "ARM_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_EXTENSION_NAME",
      origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_rasterization_order_attachment_access"),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_344_SPEC_VERSION",
      name: "ARM_EXTENSION_344_SPEC_VERSION",
      origin: Extension("VK_ARM_extension_344", 344, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_344_EXTENSION_NAME",
      name: "ARM_EXTENSION_344_EXTENSION_NAME",
      origin: Extension("VK_ARM_extension_344", 344, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_extension_344"),
    ),
    Const(
      original_name: "VK_EXT_RGBA10X6_FORMATS_SPEC_VERSION",
      name: "EXT_RGBA10X6_FORMATS_SPEC_VERSION",
      origin: Extension("VK_EXT_rgba10x6_formats", 345, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_RGBA10X6_FORMATS_EXTENSION_NAME",
      name: "EXT_RGBA10X6_FORMATS_EXTENSION_NAME",
      origin: Extension("VK_EXT_rgba10x6_formats", 345, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_rgba10x6_formats"),
    ),
    Const(
      original_name: "VK_NV_ACQUIRE_WINRT_DISPLAY_SPEC_VERSION",
      name: "NV_ACQUIRE_WINRT_DISPLAY_SPEC_VERSION",
      origin: Extension("VK_NV_acquire_winrt_display", 346, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_ACQUIRE_WINRT_DISPLAY_EXTENSION_NAME",
      name: "NV_ACQUIRE_WINRT_DISPLAY_EXTENSION_NAME",
      origin: Extension("VK_NV_acquire_winrt_display", 346, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_acquire_winrt_display"),
    ),
    Const(
      original_name: "VK_EXT_DIRECTFB_SURFACE_SPEC_VERSION",
      name: "EXT_DIRECTFB_SURFACE_SPEC_VERSION",
      origin: Extension("VK_EXT_directfb_surface", 347, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_DIRECTFB_SURFACE_EXTENSION_NAME",
      name: "EXT_DIRECTFB_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_EXT_directfb_surface", 347, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_directfb_surface"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_350_SPEC_VERSION",
      name: "KHR_EXTENSION_350_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_350", 350, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_350_EXTENSION_NAME",
      name: "KHR_EXTENSION_350_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_350", 350, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_350"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_351_SPEC_VERSION",
      name: "NV_EXTENSION_351_SPEC_VERSION",
      origin: Extension("VK_NV_extension_351", 351, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_351_EXTENSION_NAME",
      name: "NV_EXTENSION_351_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_351", 351, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_351"),
    ),
    Const(
      original_name: "VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION",
      name: "VALVE_MUTABLE_DESCRIPTOR_TYPE_SPEC_VERSION",
      origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_VALVE_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME",
      name: "VALVE_MUTABLE_DESCRIPTOR_TYPE_EXTENSION_NAME",
      origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
      ty: NullTerminatedString(Const),
      value: String("VK_VALVE_mutable_descriptor_type"),
    ),
    Const(
      original_name: "VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_SPEC_VERSION",
      name: "EXT_VERTEX_INPUT_DYNAMIC_STATE_SPEC_VERSION",
      origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_EXT_VERTEX_INPUT_DYNAMIC_STATE_EXTENSION_NAME",
      name: "EXT_VERTEX_INPUT_DYNAMIC_STATE_EXTENSION_NAME",
      origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_vertex_input_dynamic_state"),
    ),
    Const(
      original_name: "VK_EXT_PHYSICAL_DEVICE_DRM_SPEC_VERSION",
      name: "EXT_PHYSICAL_DEVICE_DRM_SPEC_VERSION",
      origin: Extension("VK_EXT_physical_device_drm", 354, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_PHYSICAL_DEVICE_DRM_EXTENSION_NAME",
      name: "EXT_PHYSICAL_DEVICE_DRM_EXTENSION_NAME",
      origin: Extension("VK_EXT_physical_device_drm", 354, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_physical_device_drm"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_355_SPEC_VERSION",
      name: "EXT_EXTENSION_355_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_355", 355, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_355_EXTENSION_NAME",
      name: "EXT_EXTENSION_355_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_355", 355, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_355"),
    ),
    Const(
      original_name: "VK_EXT_DEPTH_CLIP_CONTROL_SPEC_VERSION",
      name: "EXT_DEPTH_CLIP_CONTROL_SPEC_VERSION",
      origin: Extension("VK_EXT_depth_clip_control", 356, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_DEPTH_CLIP_CONTROL_EXTENSION_NAME",
      name: "EXT_DEPTH_CLIP_CONTROL_EXTENSION_NAME",
      origin: Extension("VK_EXT_depth_clip_control", 356, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_depth_clip_control"),
    ),
    Const(
      original_name: "VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_SPEC_VERSION",
      name: "EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_SPEC_VERSION",
      origin: Extension("VK_EXT_primitive_topology_list_restart", 357, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_EXTENSION_NAME",
      name: "EXT_PRIMITIVE_TOPOLOGY_LIST_RESTART_EXTENSION_NAME",
      origin: Extension("VK_EXT_primitive_topology_list_restart", 357, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_primitive_topology_list_restart"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_358_SPEC_VERSION",
      name: "KHR_EXTENSION_358_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_358", 358, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_358_EXTENSION_NAME",
      name: "KHR_EXTENSION_358_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_358", 358, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_358"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_359_SPEC_VERSION",
      name: "EXT_EXTENSION_359_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_359", 359, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_359_EXTENSION_NAME",
      name: "EXT_EXTENSION_359_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_359", 359, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_359"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_360_SPEC_VERSION",
      name: "EXT_EXTENSION_360_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_360", 360, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_360_EXTENSION_NAME",
      name: "EXT_EXTENSION_360_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_360", 360, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_360"),
    ),
    Const(
      original_name: "VK_KHR_FORMAT_FEATURE_FLAGS_2_SPEC_VERSION",
      name: "KHR_FORMAT_FEATURE_FLAGS_2_SPEC_VERSION",
      origin: Extension("VK_KHR_format_feature_flags2", 361, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_FORMAT_FEATURE_FLAGS_2_EXTENSION_NAME",
      name: "KHR_FORMAT_FEATURE_FLAGS_2_EXTENSION_NAME",
      origin: Extension("VK_KHR_format_feature_flags2", 361, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_format_feature_flags2"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_362_SPEC_VERSION",
      name: "EXT_EXTENSION_362_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_362", 362, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_362_EXTENSION_NAME",
      name: "EXT_EXTENSION_362_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_362", 362, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_362"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_363_SPEC_VERSION",
      name: "EXT_EXTENSION_363_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_363", 363, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_363_EXTENSION_NAME",
      name: "EXT_EXTENSION_363_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_363", 363, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_363"),
    ),
    Const(
      original_name: "VK_FUCHSIA_EXTENSION_364_SPEC_VERSION",
      name: "FUCHSIA_EXTENSION_364_SPEC_VERSION",
      origin: Extension("VK_FUCHSIA_extension_364", 364, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_FUCHSIA_EXTENSION_364_EXTENSION_NAME",
      name: "FUCHSIA_EXTENSION_364_EXTENSION_NAME",
      origin: Extension("VK_FUCHSIA_extension_364", 364, true),
      ty: NullTerminatedString(Const),
      value: String("VK_FUCHSIA_extension_364"),
    ),
    Const(
      original_name: "VK_FUCHSIA_EXTERNAL_MEMORY_SPEC_VERSION",
      name: "FUCHSIA_EXTERNAL_MEMORY_SPEC_VERSION",
      origin: Extension("VK_FUCHSIA_external_memory", 365, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_FUCHSIA_EXTERNAL_MEMORY_EXTENSION_NAME",
      name: "FUCHSIA_EXTERNAL_MEMORY_EXTENSION_NAME",
      origin: Extension("VK_FUCHSIA_external_memory", 365, false),
      ty: NullTerminatedString(Const),
      value: String("VK_FUCHSIA_external_memory"),
    ),
    Const(
      original_name: "VK_FUCHSIA_EXTERNAL_SEMAPHORE_SPEC_VERSION",
      name: "FUCHSIA_EXTERNAL_SEMAPHORE_SPEC_VERSION",
      origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_FUCHSIA_EXTERNAL_SEMAPHORE_EXTENSION_NAME",
      name: "FUCHSIA_EXTERNAL_SEMAPHORE_EXTENSION_NAME",
      origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
      ty: NullTerminatedString(Const),
      value: String("VK_FUCHSIA_external_semaphore"),
    ),
    Const(
      original_name: "VK_FUCHSIA_BUFFER_COLLECTION_SPEC_VERSION",
      name: "FUCHSIA_BUFFER_COLLECTION_SPEC_VERSION",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_FUCHSIA_BUFFER_COLLECTION_EXTENSION_NAME",
      name: "FUCHSIA_BUFFER_COLLECTION_EXTENSION_NAME",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      ty: NullTerminatedString(Const),
      value: String("VK_FUCHSIA_buffer_collection"),
    ),
    Const(
      original_name: "VK_FUCHSIA_EXTENSION_368_SPEC_VERSION",
      name: "FUCHSIA_EXTENSION_368_SPEC_VERSION",
      origin: Extension("VK_FUCHSIA_extension_368", 368, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_FUCHSIA_EXTENSION_368_EXTENSION_NAME",
      name: "FUCHSIA_EXTENSION_368_EXTENSION_NAME",
      origin: Extension("VK_FUCHSIA_extension_368", 368, true),
      ty: NullTerminatedString(Const),
      value: String("VK_FUCHSIA_extension_368"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_369_SPEC_VERSION",
      name: "QCOM_EXTENSION_369_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_369", 369, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_369_EXTENSION_NAME",
      name: "QCOM_EXTENSION_369_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_369", 369, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_369"),
    ),
    Const(
      original_name: "VK_HUAWEI_SUBPASS_SHADING_SPEC_VERSION",
      name: "HUAWEI_SUBPASS_SHADING_SPEC_VERSION",
      origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_HUAWEI_SUBPASS_SHADING_EXTENSION_NAME",
      name: "HUAWEI_SUBPASS_SHADING_EXTENSION_NAME",
      origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
      ty: NullTerminatedString(Const),
      value: String("VK_HUAWEI_subpass_shading"),
    ),
    Const(
      original_name: "VK_HUAWEI_INVOCATION_MASK_SPEC_VERSION",
      name: "HUAWEI_INVOCATION_MASK_SPEC_VERSION",
      origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_HUAWEI_INVOCATION_MASK_EXTENSION_NAME",
      name: "HUAWEI_INVOCATION_MASK_EXTENSION_NAME",
      origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
      ty: NullTerminatedString(Const),
      value: String("VK_HUAWEI_invocation_mask"),
    ),
    Const(
      original_name: "VK_NV_EXTERNAL_MEMORY_RDMA_SPEC_VERSION",
      name: "NV_EXTERNAL_MEMORY_RDMA_SPEC_VERSION",
      origin: Extension("VK_NV_external_memory_rdma", 372, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_EXTERNAL_MEMORY_RDMA_EXTENSION_NAME",
      name: "NV_EXTERNAL_MEMORY_RDMA_EXTENSION_NAME",
      origin: Extension("VK_NV_external_memory_rdma", 372, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_external_memory_rdma"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_373_SPEC_VERSION",
      name: "NV_EXTENSION_373_SPEC_VERSION",
      origin: Extension("VK_NV_extension_373", 373, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_373_EXTENSION_NAME",
      name: "NV_EXTENSION_373_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_373", 373, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_373"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_374_SPEC_VERSION",
      name: "NV_EXTENSION_374_SPEC_VERSION",
      origin: Extension("VK_NV_extension_374", 374, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_374_EXTENSION_NAME",
      name: "NV_EXTENSION_374_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_374", 374, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_374"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_375_SPEC_VERSION",
      name: "NV_EXTENSION_375_SPEC_VERSION",
      origin: Extension("VK_NV_extension_375", 375, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_375_EXTENSION_NAME",
      name: "NV_EXTENSION_375_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_375", 375, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_375"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_376_SPEC_VERSION",
      name: "EXT_EXTENSION_376_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_376", 376, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_376_EXTENSION_NAME",
      name: "EXT_EXTENSION_376_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_376", 376, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_376"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_377_SPEC_VERSION",
      name: "EXT_EXTENSION_377_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_377", 377, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_377_EXTENSION_NAME",
      name: "EXT_EXTENSION_377_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_377", 377, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_377"),
    ),
    Const(
      original_name: "VK_EXT_EXTENDED_DYNAMIC_STATE_2_SPEC_VERSION",
      name: "EXT_EXTENDED_DYNAMIC_STATE_2_SPEC_VERSION",
      origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_EXTENDED_DYNAMIC_STATE_2_EXTENSION_NAME",
      name: "EXT_EXTENDED_DYNAMIC_STATE_2_EXTENSION_NAME",
      origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extended_dynamic_state2"),
    ),
    Const(
      original_name: "VK_QNX_SCREEN_SURFACE_SPEC_VERSION",
      name: "QNX_SCREEN_SURFACE_SPEC_VERSION",
      origin: Extension("VK_QNX_screen_surface", 379, true),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_QNX_SCREEN_SURFACE_EXTENSION_NAME",
      name: "QNX_SCREEN_SURFACE_EXTENSION_NAME",
      origin: Extension("VK_QNX_screen_surface", 379, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QNX_screen_surface"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_380_SPEC_VERSION",
      name: "KHR_EXTENSION_380_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_380", 380, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_380_EXTENSION_NAME",
      name: "KHR_EXTENSION_380_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_380", 380, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_380"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_381_SPEC_VERSION",
      name: "KHR_EXTENSION_381_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_381", 381, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_381_EXTENSION_NAME",
      name: "KHR_EXTENSION_381_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_381", 381, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_381"),
    ),
    Const(
      original_name: "VK_EXT_COLOR_WRITE_ENABLE_SPEC_VERSION",
      name: "EXT_COLOR_WRITE_ENABLE_SPEC_VERSION",
      origin: Extension("VK_EXT_color_write_enable", 382, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_COLOR_WRITE_ENABLE_EXTENSION_NAME",
      name: "EXT_COLOR_WRITE_ENABLE_EXTENSION_NAME",
      origin: Extension("VK_EXT_color_write_enable", 382, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_color_write_enable"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_383_SPEC_VERSION",
      name: "EXT_EXTENSION_383_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_383", 383, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_383_EXTENSION_NAME",
      name: "EXT_EXTENSION_383_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_383", 383, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_383"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_384_SPEC_VERSION",
      name: "EXT_EXTENSION_384_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_384", 384, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_384_EXTENSION_NAME",
      name: "EXT_EXTENSION_384_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_384", 384, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_384"),
    ),
    Const(
      original_name: "VK_MESA_EXTENSION_385_SPEC_VERSION",
      name: "MESA_EXTENSION_385_SPEC_VERSION",
      origin: Extension("VK_MESA_extension_385", 385, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_MESA_EXTENSION_385_EXTENSION_NAME",
      name: "MESA_EXTENSION_385_EXTENSION_NAME",
      origin: Extension("VK_MESA_extension_385", 385, true),
      ty: NullTerminatedString(Const),
      value: String("VK_MESA_extension_385"),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_386_SPEC_VERSION",
      name: "GOOGLE_EXTENSION_386_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_extension_386", 386, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_386_EXTENSION_NAME",
      name: "GOOGLE_EXTENSION_386_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_extension_386", 386, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_extension_386"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_387_SPEC_VERSION",
      name: "KHR_EXTENSION_387_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_387", 387, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_387_EXTENSION_NAME",
      name: "KHR_EXTENSION_387_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_387", 387, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_387"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_388_SPEC_VERSION",
      name: "EXT_EXTENSION_388_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_388", 388, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_388_EXTENSION_NAME",
      name: "EXT_EXTENSION_388_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_388", 388, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_388"),
    ),
    Const(
      original_name: "VK_EXT_GLOBAL_PRIORITY_QUERY_SPEC_VERSION",
      name: "EXT_GLOBAL_PRIORITY_QUERY_SPEC_VERSION",
      origin: Extension("VK_EXT_global_priority_query", 389, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_GLOBAL_PRIORITY_QUERY_EXTENSION_NAME",
      name: "EXT_GLOBAL_PRIORITY_QUERY_EXTENSION_NAME",
      origin: Extension("VK_EXT_global_priority_query", 389, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_global_priority_query"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_390_SPEC_VERSION",
      name: "EXT_EXTENSION_390_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_390", 390, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_390_EXTENSION_NAME",
      name: "EXT_EXTENSION_390_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_390", 390, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_390"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_391_SPEC_VERSION",
      name: "EXT_EXTENSION_391_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_391", 391, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_391_EXTENSION_NAME",
      name: "EXT_EXTENSION_391_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_391", 391, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_391"),
    ),
    Const(
      original_name: "VK_EXT_IMAGE_VIEW_MIN_LOD_SPEC_VERSION",
      name: "EXT_IMAGE_VIEW_MIN_LOD_SPEC_VERSION",
      origin: Extension("VK_EXT_image_view_min_lod", 392, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_IMAGE_VIEW_MIN_LOD_EXTENSION_NAME",
      name: "EXT_IMAGE_VIEW_MIN_LOD_EXTENSION_NAME",
      origin: Extension("VK_EXT_image_view_min_lod", 392, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_image_view_min_lod"),
    ),
    Const(
      original_name: "VK_EXT_MULTI_DRAW_SPEC_VERSION",
      name: "EXT_MULTI_DRAW_SPEC_VERSION",
      origin: Extension("VK_EXT_multi_draw", 393, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_MULTI_DRAW_EXTENSION_NAME",
      name: "EXT_MULTI_DRAW_EXTENSION_NAME",
      origin: Extension("VK_EXT_multi_draw", 393, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_multi_draw"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_394_SPEC_VERSION",
      name: "EXT_EXTENSION_394_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_394", 394, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_394_EXTENSION_NAME",
      name: "EXT_EXTENSION_394_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_394", 394, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_394"),
    ),
    Const(
      original_name: "VK_KHR_PORTABILITY_ENUMERATION_SPEC_VERSION",
      name: "KHR_PORTABILITY_ENUMERATION_SPEC_VERSION",
      origin: Extension("VK_KHR_portability_enumeration", 395, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_KHR_PORTABILITY_ENUMERATION_EXTENSION_NAME",
      name: "KHR_PORTABILITY_ENUMERATION_EXTENSION_NAME",
      origin: Extension("VK_KHR_portability_enumeration", 395, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_portability_enumeration"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_396_SPEC_VERSION",
      name: "KHR_EXTENSION_396_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_396", 396, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_396_EXTENSION_NAME",
      name: "KHR_EXTENSION_396_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_396", 396, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_396"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_397_SPEC_VERSION",
      name: "NV_EXTENSION_397_SPEC_VERSION",
      origin: Extension("VK_NV_extension_397", 397, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_397_EXTENSION_NAME",
      name: "NV_EXTENSION_397_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_397", 397, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_397"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_398_SPEC_VERSION",
      name: "NV_EXTENSION_398_SPEC_VERSION",
      origin: Extension("VK_NV_extension_398", 398, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_398_EXTENSION_NAME",
      name: "NV_EXTENSION_398_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_398", 398, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_398"),
    ),
    Const(
      original_name: "VK_JUICE_EXTENSION_399_SPEC_VERSION",
      name: "JUICE_EXTENSION_399_SPEC_VERSION",
      origin: Extension("VK_JUICE_extension_399", 399, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_JUICE_EXTENSION_399_EXTENSION_NAME",
      name: "JUICE_EXTENSION_399_EXTENSION_NAME",
      origin: Extension("VK_JUICE_extension_399", 399, true),
      ty: NullTerminatedString(Const),
      value: String("VK_JUICE_extension_399"),
    ),
    Const(
      original_name: "VK_JUICE_EXTENSION_400_SPEC_VERSION",
      name: "JUICE_EXTENSION_400_SPEC_VERSION",
      origin: Extension("VK_JUICE_extension_400", 400, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_JUICE_EXTENSION_400_EXTENSION_NAME",
      name: "JUICE_EXTENSION_400_EXTENSION_NAME",
      origin: Extension("VK_JUICE_extension_400", 400, true),
      ty: NullTerminatedString(Const),
      value: String("VK_JUICE_extension_400"),
    ),
    Const(
      original_name: "VK_EXT_LOAD_STORE_OP_NONE_SPEC_VERSION",
      name: "EXT_LOAD_STORE_OP_NONE_SPEC_VERSION",
      origin: Extension("VK_EXT_load_store_op_none", 401, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_LOAD_STORE_OP_NONE_EXTENSION_NAME",
      name: "EXT_LOAD_STORE_OP_NONE_EXTENSION_NAME",
      origin: Extension("VK_EXT_load_store_op_none", 401, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_load_store_op_none"),
    ),
    Const(
      original_name: "VK_FB_EXTENSION_402_SPEC_VERSION",
      name: "FB_EXTENSION_402_SPEC_VERSION",
      origin: Extension("VK_FB_extension_402", 402, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_FB_EXTENSION_402_EXTENSION_NAME",
      name: "FB_EXTENSION_402_EXTENSION_NAME",
      origin: Extension("VK_FB_extension_402", 402, true),
      ty: NullTerminatedString(Const),
      value: String("VK_FB_extension_402"),
    ),
    Const(
      original_name: "VK_FB_EXTENSION_403_SPEC_VERSION",
      name: "FB_EXTENSION_403_SPEC_VERSION",
      origin: Extension("VK_FB_extension_403", 403, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_FB_EXTENSION_403_EXTENSION_NAME",
      name: "FB_EXTENSION_403_EXTENSION_NAME",
      origin: Extension("VK_FB_extension_403", 403, true),
      ty: NullTerminatedString(Const),
      value: String("VK_FB_extension_403"),
    ),
    Const(
      original_name: "VK_FB_EXTENSION_404_SPEC_VERSION",
      name: "FB_EXTENSION_404_SPEC_VERSION",
      origin: Extension("VK_FB_extension_404", 404, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_FB_EXTENSION_404_EXTENSION_NAME",
      name: "FB_EXTENSION_404_EXTENSION_NAME",
      origin: Extension("VK_FB_extension_404", 404, true),
      ty: NullTerminatedString(Const),
      value: String("VK_FB_extension_404"),
    ),
    Const(
      original_name: "VK_HUAWEI_EXTENSION_405_SPEC_VERSION",
      name: "HUAWEI_EXTENSION_405_SPEC_VERSION",
      origin: Extension("VK_HUAWEI_extension_405", 405, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_HUAWEI_EXTENSION_405_EXTENSION_NAME",
      name: "HUAWEI_EXTENSION_405_EXTENSION_NAME",
      origin: Extension("VK_HUAWEI_extension_405", 405, true),
      ty: NullTerminatedString(Const),
      value: String("VK_HUAWEI_extension_405"),
    ),
    Const(
      original_name: "VK_HUAWEI_EXTENSION_406_SPEC_VERSION",
      name: "HUAWEI_EXTENSION_406_SPEC_VERSION",
      origin: Extension("VK_HUAWEI_extension_406", 406, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_HUAWEI_EXTENSION_406_EXTENSION_NAME",
      name: "HUAWEI_EXTENSION_406_EXTENSION_NAME",
      origin: Extension("VK_HUAWEI_extension_406", 406, true),
      ty: NullTerminatedString(Const),
      value: String("VK_HUAWEI_extension_406"),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_407_SPEC_VERSION",
      name: "GGP_EXTENSION_407_SPEC_VERSION",
      origin: Extension("VK_GGP_extension_407", 407, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_407_EXTENSION_NAME",
      name: "GGP_EXTENSION_407_EXTENSION_NAME",
      origin: Extension("VK_GGP_extension_407", 407, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GGP_extension_407"),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_408_SPEC_VERSION",
      name: "GGP_EXTENSION_408_SPEC_VERSION",
      origin: Extension("VK_GGP_extension_408", 408, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_408_EXTENSION_NAME",
      name: "GGP_EXTENSION_408_EXTENSION_NAME",
      origin: Extension("VK_GGP_extension_408", 408, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GGP_extension_408"),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_409_SPEC_VERSION",
      name: "GGP_EXTENSION_409_SPEC_VERSION",
      origin: Extension("VK_GGP_extension_409", 409, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_409_EXTENSION_NAME",
      name: "GGP_EXTENSION_409_EXTENSION_NAME",
      origin: Extension("VK_GGP_extension_409", 409, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GGP_extension_409"),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_410_SPEC_VERSION",
      name: "GGP_EXTENSION_410_SPEC_VERSION",
      origin: Extension("VK_GGP_extension_410", 410, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_410_EXTENSION_NAME",
      name: "GGP_EXTENSION_410_EXTENSION_NAME",
      origin: Extension("VK_GGP_extension_410", 410, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GGP_extension_410"),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_411_SPEC_VERSION",
      name: "GGP_EXTENSION_411_SPEC_VERSION",
      origin: Extension("VK_GGP_extension_411", 411, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GGP_EXTENSION_411_EXTENSION_NAME",
      name: "GGP_EXTENSION_411_EXTENSION_NAME",
      origin: Extension("VK_GGP_extension_411", 411, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GGP_extension_411"),
    ),
    Const(
      original_name: "VK_EXT_BORDER_COLOR_SWIZZLE_SPEC_VERSION",
      name: "EXT_BORDER_COLOR_SWIZZLE_SPEC_VERSION",
      origin: Extension("VK_EXT_border_color_swizzle", 412, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_BORDER_COLOR_SWIZZLE_EXTENSION_NAME",
      name: "EXT_BORDER_COLOR_SWIZZLE_EXTENSION_NAME",
      origin: Extension("VK_EXT_border_color_swizzle", 412, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_border_color_swizzle"),
    ),
    Const(
      original_name: "VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_SPEC_VERSION",
      name: "EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_SPEC_VERSION",
      origin: Extension("VK_EXT_pageable_device_local_memory", 413, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_EXTENSION_NAME",
      name: "EXT_PAGEABLE_DEVICE_LOCAL_MEMORY_EXTENSION_NAME",
      origin: Extension("VK_EXT_pageable_device_local_memory", 413, false),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_pageable_device_local_memory"),
    ),
    Const(
      original_name: "VK_KHR_MAINTENANCE_4_SPEC_VERSION",
      name: "KHR_MAINTENANCE_4_SPEC_VERSION",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      ty: Native(UInt(4)),
      value: ConstantInt(2),
    ),
    Const(
      original_name: "VK_KHR_MAINTENANCE_4_EXTENSION_NAME",
      name: "KHR_MAINTENANCE_4_EXTENSION_NAME",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_maintenance4"),
    ),
    Const(
      original_name: "VK_HUAWEI_EXTENSION_415_SPEC_VERSION",
      name: "HUAWEI_EXTENSION_415_SPEC_VERSION",
      origin: Extension("VK_HUAWEI_extension_415", 415, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_HUAWEI_EXTENSION_415_EXTENSION_NAME",
      name: "HUAWEI_EXTENSION_415_EXTENSION_NAME",
      origin: Extension("VK_HUAWEI_extension_415", 415, true),
      ty: NullTerminatedString(Const),
      value: String("VK_HUAWEI_extension_415"),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_416_SPEC_VERSION",
      name: "ARM_EXTENSION_416_SPEC_VERSION",
      origin: Extension("VK_ARM_extension_416", 416, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_416_EXTENSION_NAME",
      name: "ARM_EXTENSION_416_EXTENSION_NAME",
      origin: Extension("VK_ARM_extension_416", 416, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_extension_416"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_417_SPEC_VERSION",
      name: "KHR_EXTENSION_417_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_417", 417, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_417_EXTENSION_NAME",
      name: "KHR_EXTENSION_417_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_417", 417, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_417"),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_418_SPEC_VERSION",
      name: "ARM_EXTENSION_418_SPEC_VERSION",
      origin: Extension("VK_ARM_extension_418", 418, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_418_EXTENSION_NAME",
      name: "ARM_EXTENSION_418_EXTENSION_NAME",
      origin: Extension("VK_ARM_extension_418", 418, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_extension_418"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_419_SPEC_VERSION",
      name: "EXT_EXTENSION_419_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_419", 419, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_419_EXTENSION_NAME",
      name: "EXT_EXTENSION_419_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_419", 419, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_419"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_420_SPEC_VERSION",
      name: "EXT_EXTENSION_420_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_420", 420, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_420_EXTENSION_NAME",
      name: "EXT_EXTENSION_420_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_420", 420, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_420"),
    ),
    Const(
      original_name: "VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_SPEC_VERSION",
      name: "VALVE_DESCRIPTOR_SET_HOST_MAPPING_SPEC_VERSION",
      origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_VALVE_DESCRIPTOR_SET_HOST_MAPPING_EXTENSION_NAME",
      name: "VALVE_DESCRIPTOR_SET_HOST_MAPPING_EXTENSION_NAME",
      origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
      ty: NullTerminatedString(Const),
      value: String("VK_VALVE_descriptor_set_host_mapping"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_422_SPEC_VERSION",
      name: "EXT_EXTENSION_422_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_422", 422, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_422_EXTENSION_NAME",
      name: "EXT_EXTENSION_422_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_422", 422, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_422"),
    ),
    Const(
      original_name: "VK_EXT_DISABLE_CUBE_MAP_WRAP_SPEC_VERSION",
      name: "EXT_DISABLE_CUBE_MAP_WRAP_SPEC_VERSION",
      origin: Extension("VK_EXT_disable_cube_map_wrap", 423, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_DISABLE_CUBE_MAP_WRAP_EXTENSION_NAME",
      name: "EXT_DISABLE_CUBE_MAP_WRAP_EXTENSION_NAME",
      origin: Extension("VK_EXT_disable_cube_map_wrap", 423, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_disable_cube_map_wrap"),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_424_SPEC_VERSION",
      name: "ARM_EXTENSION_424_SPEC_VERSION",
      origin: Extension("VK_ARM_extension_424", 424, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_424_EXTENSION_NAME",
      name: "ARM_EXTENSION_424_EXTENSION_NAME",
      origin: Extension("VK_ARM_extension_424", 424, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_extension_424"),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_425_SPEC_VERSION",
      name: "ARM_EXTENSION_425_SPEC_VERSION",
      origin: Extension("VK_ARM_extension_425", 425, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_425_EXTENSION_NAME",
      name: "ARM_EXTENSION_425_EXTENSION_NAME",
      origin: Extension("VK_ARM_extension_425", 425, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_extension_425"),
    ),
    Const(
      original_name: "VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_SPEC_VERSION",
      name: "QCOM_FRAGMENT_DENSITY_MAP_OFFSET_SPEC_VERSION",
      origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_QCOM_FRAGMENT_DENSITY_MAP_OFFSET_EXTENSION_NAME",
      name: "QCOM_FRAGMENT_DENSITY_MAP_OFFSET_EXTENSION_NAME",
      origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_fragment_density_map_offset"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_427_SPEC_VERSION",
      name: "NV_EXTENSION_427_SPEC_VERSION",
      origin: Extension("VK_NV_extension_427", 427, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_427_EXTENSION_NAME",
      name: "NV_EXTENSION_427_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_427", 427, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_427"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_428_SPEC_VERSION",
      name: "NV_EXTENSION_428_SPEC_VERSION",
      origin: Extension("VK_NV_extension_428", 428, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_428_EXTENSION_NAME",
      name: "NV_EXTENSION_428_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_428", 428, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_428"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_429_SPEC_VERSION",
      name: "NV_EXTENSION_429_SPEC_VERSION",
      origin: Extension("VK_NV_extension_429", 429, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_429_EXTENSION_NAME",
      name: "NV_EXTENSION_429_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_429", 429, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_429"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_430_SPEC_VERSION",
      name: "NV_EXTENSION_430_SPEC_VERSION",
      origin: Extension("VK_NV_extension_430", 430, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_430_EXTENSION_NAME",
      name: "NV_EXTENSION_430_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_430", 430, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_430"),
    ),
    Const(
      original_name: "VK_NV_LINEAR_COLOR_ATTACHMENT_SPEC_VERSION",
      name: "NV_LINEAR_COLOR_ATTACHMENT_SPEC_VERSION",
      origin: Extension("VK_NV_linear_color_attachment", 431, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_NV_LINEAR_COLOR_ATTACHMENT_EXTENSION_NAME",
      name: "NV_LINEAR_COLOR_ATTACHMENT_EXTENSION_NAME",
      origin: Extension("VK_NV_linear_color_attachment", 431, false),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_linear_color_attachment"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_432_SPEC_VERSION",
      name: "NV_EXTENSION_432_SPEC_VERSION",
      origin: Extension("VK_NV_extension_432", 432, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_432_EXTENSION_NAME",
      name: "NV_EXTENSION_432_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_432", 432, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_432"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_433_SPEC_VERSION",
      name: "NV_EXTENSION_433_SPEC_VERSION",
      origin: Extension("VK_NV_extension_433", 433, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_433_EXTENSION_NAME",
      name: "NV_EXTENSION_433_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_433", 433, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_433"),
    ),
    Const(
      original_name: "VK_GOOGLE_SURFACELESS_QUERY_SPEC_VERSION",
      name: "GOOGLE_SURFACELESS_QUERY_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_surfaceless_query", 434, false),
      ty: Native(UInt(4)),
      value: ConstantInt(1),
    ),
    Const(
      original_name: "VK_GOOGLE_SURFACELESS_QUERY_EXTENSION_NAME",
      name: "GOOGLE_SURFACELESS_QUERY_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_surfaceless_query", 434, false),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_surfaceless_query"),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_435_SPEC_VERSION",
      name: "KHR_EXTENSION_435_SPEC_VERSION",
      origin: Extension("VK_KHR_extension_435", 435, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_KHR_EXTENSION_435_EXTENSION_NAME",
      name: "KHR_EXTENSION_435_EXTENSION_NAME",
      origin: Extension("VK_KHR_extension_435", 435, true),
      ty: NullTerminatedString(Const),
      value: String("VK_KHR_extension_435"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_436_SPEC_VERSION",
      name: "NV_EXTENSION_436_SPEC_VERSION",
      origin: Extension("VK_NV_extension_436", 436, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_436_EXTENSION_NAME",
      name: "NV_EXTENSION_436_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_436", 436, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_436"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_437_SPEC_VERSION",
      name: "EXT_EXTENSION_437_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_437", 437, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_437_EXTENSION_NAME",
      name: "EXT_EXTENSION_437_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_437", 437, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_437"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_438_SPEC_VERSION",
      name: "EXT_EXTENSION_438_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_438", 438, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_438_EXTENSION_NAME",
      name: "EXT_EXTENSION_438_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_438", 438, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_438"),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_439_SPEC_VERSION",
      name: "SEC_EXTENSION_439_SPEC_VERSION",
      origin: Extension("VK_SEC_extension_439", 439, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_439_EXTENSION_NAME",
      name: "SEC_EXTENSION_439_EXTENSION_NAME",
      origin: Extension("VK_SEC_extension_439", 439, true),
      ty: NullTerminatedString(Const),
      value: String("VK_SEC_extension_439"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_440_SPEC_VERSION",
      name: "QCOM_EXTENSION_440_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_440", 440, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_440_EXTENSION_NAME",
      name: "QCOM_EXTENSION_440_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_440", 440, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_440"),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_441_SPEC_VERSION",
      name: "QCOM_EXTENSION_441_SPEC_VERSION",
      origin: Extension("VK_QCOM_extension_441", 441, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_QCOM_EXTENSION_441_EXTENSION_NAME",
      name: "QCOM_EXTENSION_441_EXTENSION_NAME",
      origin: Extension("VK_QCOM_extension_441", 441, true),
      ty: NullTerminatedString(Const),
      value: String("VK_QCOM_extension_441"),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_442_SPEC_VERSION",
      name: "COREAVI_EXTENSION_442_SPEC_VERSION",
      origin: Extension("VK_COREAVI_extension_442", 442, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_442_EXTENSION_NAME",
      name: "COREAVI_EXTENSION_442_EXTENSION_NAME",
      origin: Extension("VK_COREAVI_extension_442", 442, true),
      ty: NullTerminatedString(Const),
      value: String("VK_COREAVI_extension_442"),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_443_SPEC_VERSION",
      name: "COREAVI_EXTENSION_443_SPEC_VERSION",
      origin: Extension("VK_COREAVI_extension_443", 443, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_443_EXTENSION_NAME",
      name: "COREAVI_EXTENSION_443_EXTENSION_NAME",
      origin: Extension("VK_COREAVI_extension_443", 443, true),
      ty: NullTerminatedString(Const),
      value: String("VK_COREAVI_extension_443"),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_444_SPEC_VERSION",
      name: "COREAVI_EXTENSION_444_SPEC_VERSION",
      origin: Extension("VK_COREAVI_extension_444", 444, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_444_EXTENSION_NAME",
      name: "COREAVI_EXTENSION_444_EXTENSION_NAME",
      origin: Extension("VK_COREAVI_extension_444", 444, true),
      ty: NullTerminatedString(Const),
      value: String("VK_COREAVI_extension_444"),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_445_SPEC_VERSION",
      name: "COREAVI_EXTENSION_445_SPEC_VERSION",
      origin: Extension("VK_COREAVI_extension_445", 445, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_445_EXTENSION_NAME",
      name: "COREAVI_EXTENSION_445_EXTENSION_NAME",
      origin: Extension("VK_COREAVI_extension_445", 445, true),
      ty: NullTerminatedString(Const),
      value: String("VK_COREAVI_extension_445"),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_446_SPEC_VERSION",
      name: "COREAVI_EXTENSION_446_SPEC_VERSION",
      origin: Extension("VK_COREAVI_extension_446", 446, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_446_EXTENSION_NAME",
      name: "COREAVI_EXTENSION_446_EXTENSION_NAME",
      origin: Extension("VK_COREAVI_extension_446", 446, true),
      ty: NullTerminatedString(Const),
      value: String("VK_COREAVI_extension_446"),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_447_SPEC_VERSION",
      name: "COREAVI_EXTENSION_447_SPEC_VERSION",
      origin: Extension("VK_COREAVI_extension_447", 447, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_COREAVI_EXTENSION_447_EXTENSION_NAME",
      name: "COREAVI_EXTENSION_447_EXTENSION_NAME",
      origin: Extension("VK_COREAVI_extension_447", 447, true),
      ty: NullTerminatedString(Const),
      value: String("VK_COREAVI_extension_447"),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_448_SPEC_VERSION",
      name: "SEC_EXTENSION_448_SPEC_VERSION",
      origin: Extension("VK_SEC_extension_448", 448, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_448_EXTENSION_NAME",
      name: "SEC_EXTENSION_448_EXTENSION_NAME",
      origin: Extension("VK_SEC_extension_448", 448, true),
      ty: NullTerminatedString(Const),
      value: String("VK_SEC_extension_448"),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_449_SPEC_VERSION",
      name: "SEC_EXTENSION_449_SPEC_VERSION",
      origin: Extension("VK_SEC_extension_449", 449, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_449_EXTENSION_NAME",
      name: "SEC_EXTENSION_449_EXTENSION_NAME",
      origin: Extension("VK_SEC_extension_449", 449, true),
      ty: NullTerminatedString(Const),
      value: String("VK_SEC_extension_449"),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_450_SPEC_VERSION",
      name: "SEC_EXTENSION_450_SPEC_VERSION",
      origin: Extension("VK_SEC_extension_450", 450, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_450_EXTENSION_NAME",
      name: "SEC_EXTENSION_450_EXTENSION_NAME",
      origin: Extension("VK_SEC_extension_450", 450, true),
      ty: NullTerminatedString(Const),
      value: String("VK_SEC_extension_450"),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_451_SPEC_VERSION",
      name: "SEC_EXTENSION_451_SPEC_VERSION",
      origin: Extension("VK_SEC_extension_451", 451, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_SEC_EXTENSION_451_EXTENSION_NAME",
      name: "SEC_EXTENSION_451_EXTENSION_NAME",
      origin: Extension("VK_SEC_extension_451", 451, true),
      ty: NullTerminatedString(Const),
      value: String("VK_SEC_extension_451"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_452_SPEC_VERSION",
      name: "NV_EXTENSION_452_SPEC_VERSION",
      origin: Extension("VK_NV_extension_452", 452, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_452_EXTENSION_NAME",
      name: "NV_EXTENSION_452_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_452", 452, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_452"),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_453_SPEC_VERSION",
      name: "ARM_EXTENSION_453_SPEC_VERSION",
      origin: Extension("VK_ARM_extension_453", 453, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_453_EXTENSION_NAME",
      name: "ARM_EXTENSION_453_EXTENSION_NAME",
      origin: Extension("VK_ARM_extension_453", 453, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_extension_453"),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_454_SPEC_VERSION",
      name: "GOOGLE_EXTENSION_454_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_extension_454", 454, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_454_EXTENSION_NAME",
      name: "GOOGLE_EXTENSION_454_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_extension_454", 454, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_extension_454"),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_455_SPEC_VERSION",
      name: "GOOGLE_EXTENSION_455_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_extension_455", 455, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_GOOGLE_EXTENSION_455_EXTENSION_NAME",
      name: "GOOGLE_EXTENSION_455_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_extension_455", 455, true),
      ty: NullTerminatedString(Const),
      value: String("VK_GOOGLE_extension_455"),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_456_SPEC_VERSION",
      name: "NV_EXTENSION_456_SPEC_VERSION",
      origin: Extension("VK_NV_extension_456", 456, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_NV_EXTENSION_456_EXTENSION_NAME",
      name: "NV_EXTENSION_456_EXTENSION_NAME",
      origin: Extension("VK_NV_extension_456", 456, true),
      ty: NullTerminatedString(Const),
      value: String("VK_NV_extension_456"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_457_SPEC_VERSION",
      name: "EXT_EXTENSION_457_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_457", 457, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_457_EXTENSION_NAME",
      name: "EXT_EXTENSION_457_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_457", 457, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_457"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_458_SPEC_VERSION",
      name: "EXT_EXTENSION_458_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_458", 458, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_458_EXTENSION_NAME",
      name: "EXT_EXTENSION_458_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_458", 458, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_458"),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_459_SPEC_VERSION",
      name: "ARM_EXTENSION_459_SPEC_VERSION",
      origin: Extension("VK_ARM_extension_459", 459, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_ARM_EXTENSION_459_EXTENSION_NAME",
      name: "ARM_EXTENSION_459_EXTENSION_NAME",
      origin: Extension("VK_ARM_extension_459", 459, true),
      ty: NullTerminatedString(Const),
      value: String("VK_ARM_extension_459"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_460_SPEC_VERSION",
      name: "EXT_EXTENSION_460_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_460", 460, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_460_EXTENSION_NAME",
      name: "EXT_EXTENSION_460_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_460", 460, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_460"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_461_SPEC_VERSION",
      name: "EXT_EXTENSION_461_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_461", 461, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_461_EXTENSION_NAME",
      name: "EXT_EXTENSION_461_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_461", 461, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_461"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_462_SPEC_VERSION",
      name: "EXT_EXTENSION_462_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_462", 462, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_462_EXTENSION_NAME",
      name: "EXT_EXTENSION_462_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_462", 462, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_462"),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_463_SPEC_VERSION",
      name: "EXT_EXTENSION_463_SPEC_VERSION",
      origin: Extension("VK_EXT_extension_463", 463, true),
      ty: Native(UInt(4)),
      value: ConstantInt(0),
    ),
    Const(
      original_name: "VK_EXT_EXTENSION_463_EXTENSION_NAME",
      name: "EXT_EXTENSION_463_EXTENSION_NAME",
      origin: Extension("VK_EXT_extension_463", 463, true),
      ty: NullTerminatedString(Const),
      value: String("VK_EXT_extension_463"),
    ),
  ],
  constant_aliases: [
    ConstAlias(
      original_name: "VK_LUID_SIZE_KHR",
      name: "LUID_SIZE_KHR",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "VK_LUID_SIZE",
    ),
    ConstAlias(
      original_name: "VK_QUEUE_FAMILY_EXTERNAL_KHR",
      name: "QUEUE_FAMILY_EXTERNAL_KHR",
      origin: Extension("VK_KHR_external_memory", 73, false),
      of: "VK_QUEUE_FAMILY_EXTERNAL",
    ),
    ConstAlias(
      original_name: "VK_MAX_DEVICE_GROUP_SIZE_KHR",
      name: "MAX_DEVICE_GROUP_SIZE_KHR",
      origin: Extension("VK_KHR_device_group_creation", 71, false),
      of: "VK_MAX_DEVICE_GROUP_SIZE",
    ),
    ConstAlias(
      original_name: "VK_MAX_DRIVER_NAME_SIZE_KHR",
      name: "MAX_DRIVER_NAME_SIZE_KHR",
      origin: Extension("VK_KHR_driver_properties", 197, false),
      of: "VK_MAX_DRIVER_NAME_SIZE",
    ),
    ConstAlias(
      original_name: "VK_MAX_DRIVER_INFO_SIZE_KHR",
      name: "MAX_DRIVER_INFO_SIZE_KHR",
      origin: Extension("VK_KHR_driver_properties", 197, false),
      of: "VK_MAX_DRIVER_INFO_SIZE",
    ),
    ConstAlias(
      original_name: "VK_SHADER_UNUSED_NV",
      name: "SHADER_UNUSED_NV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "VK_SHADER_UNUSED_KHR",
    ),
    ConstAlias(
      original_name: "VK_MAX_GLOBAL_PRIORITY_SIZE_EXT",
      name: "MAX_GLOBAL_PRIORITY_SIZE_EXT",
      origin: Extension("VK_EXT_global_priority_query", 389, false),
      of: "VK_MAX_GLOBAL_PRIORITY_SIZE_KHR",
    ),
    ConstAlias(
      original_name: "VK_ANDROID_NATIVE_BUFFER_NAME",
      name: "ANDROID_NATIVE_BUFFER_NAME",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      of: "VK_ANDROID_NATIVE_BUFFER_EXTENSION_NAME",
    ),
    ConstAlias(
      original_name: "VK_KHR_MAINTENANCE1_SPEC_VERSION",
      name: "KHR_MAINTENANCE1_SPEC_VERSION",
      origin: Extension("VK_KHR_maintenance1", 70, false),
      of: "VK_KHR_MAINTENANCE_1_SPEC_VERSION",
    ),
    ConstAlias(
      original_name: "VK_KHR_MAINTENANCE1_EXTENSION_NAME",
      name: "KHR_MAINTENANCE1_EXTENSION_NAME",
      origin: Extension("VK_KHR_maintenance1", 70, false),
      of: "VK_KHR_MAINTENANCE_1_EXTENSION_NAME",
    ),
    ConstAlias(
      original_name: "VK_NV_VIEWPORT_ARRAY2_SPEC_VERSION",
      name: "NV_VIEWPORT_ARRAY2_SPEC_VERSION",
      origin: Extension("VK_NV_viewport_array2", 97, false),
      of: "VK_NV_VIEWPORT_ARRAY_2_SPEC_VERSION",
    ),
    ConstAlias(
      original_name: "VK_NV_VIEWPORT_ARRAY2_EXTENSION_NAME",
      name: "NV_VIEWPORT_ARRAY2_EXTENSION_NAME",
      origin: Extension("VK_NV_viewport_array2", 97, false),
      of: "VK_NV_VIEWPORT_ARRAY_2_EXTENSION_NAME",
    ),
    ConstAlias(
      original_name: "VK_KHR_MAINTENANCE2_SPEC_VERSION",
      name: "KHR_MAINTENANCE2_SPEC_VERSION",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VK_KHR_MAINTENANCE_2_SPEC_VERSION",
    ),
    ConstAlias(
      original_name: "VK_KHR_MAINTENANCE2_EXTENSION_NAME",
      name: "KHR_MAINTENANCE2_EXTENSION_NAME",
      origin: Extension("VK_KHR_maintenance2", 118, false),
      of: "VK_KHR_MAINTENANCE_2_EXTENSION_NAME",
    ),
    ConstAlias(
      original_name: "VK_KHR_MAINTENANCE3_SPEC_VERSION",
      name: "KHR_MAINTENANCE3_SPEC_VERSION",
      origin: Extension("VK_KHR_maintenance3", 169, false),
      of: "VK_KHR_MAINTENANCE_3_SPEC_VERSION",
    ),
    ConstAlias(
      original_name: "VK_KHR_MAINTENANCE3_EXTENSION_NAME",
      name: "KHR_MAINTENANCE3_EXTENSION_NAME",
      origin: Extension("VK_KHR_maintenance3", 169, false),
      of: "VK_KHR_MAINTENANCE_3_EXTENSION_NAME",
    ),
    ConstAlias(
      original_name: "VK_GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION",
      name: "GOOGLE_HLSL_FUNCTIONALITY1_SPEC_VERSION",
      origin: Extension("VK_GOOGLE_hlsl_functionality1", 224, false),
      of: "VK_GOOGLE_HLSL_FUNCTIONALITY_1_SPEC_VERSION",
    ),
    ConstAlias(
      original_name: "VK_GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME",
      name: "GOOGLE_HLSL_FUNCTIONALITY1_EXTENSION_NAME",
      origin: Extension("VK_GOOGLE_hlsl_functionality1", 224, false),
      of: "VK_GOOGLE_HLSL_FUNCTIONALITY_1_EXTENSION_NAME",
    ),
  ],
  bitflags: [
    Bitflag(
      original_name: "VkPipelineCacheCreateFlagBits",
      name: "PipelineCacheCreateFlagBits",
      origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT",
          name: "EXTERNALLY_SYNCHRONIZED",
          origin: Vulkan1_3,
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_CACHE_CREATE_RESERVED_1_BIT_EXT",
          name: "RESERVED1_EXT",
          origin: Extension("VK_GOOGLE_extension_196", 196, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_PIPELINE_CACHE_CREATE_RESERVED_2_BIT_KHR",
          name: "RESERVED2_KHR",
          origin: Extension("VK_KHR_extension_299", 299, true),
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT_EXT",
          name: "EXTERNALLY_SYNCHRONIZED_EXT",
          origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
          of: "VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_CACHE_CREATE_RESERVED_1_BIT_KHR",
          name: "RESERVED1_KHR",
          origin: Extension("VK_KHR_extension_299", 299, true),
          of: "VK_PIPELINE_CACHE_CREATE_RESERVED_1_BIT_EXT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkQueueFlagBits",
      name: "QueueFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_QUEUE_GRAPHICS_BIT",
          name: "GRAPHICS",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_QUEUE_COMPUTE_BIT",
          name: "COMPUTE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_QUEUE_TRANSFER_BIT",
          name: "TRANSFER",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_QUEUE_SPARSE_BINDING_BIT",
          name: "SPARSE_BINDING",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_QUEUE_PROTECTED_BIT",
          name: "PROTECTED",
          origin: Vulkan1_1,
          value: 16,
        ),
        Bit(
          original_name: "VK_QUEUE_VIDEO_DECODE_BIT_KHR",
          name: "VIDEO_DECODE_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 32,
        ),
        Bit(
          original_name: "VK_QUEUE_VIDEO_ENCODE_BIT_KHR",
          name: "VIDEO_ENCODE_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 64,
        ),
        Bit(
          original_name: "VK_QUEUE_RESERVED_7_BIT_QCOM",
          name: "RESERVED7_QCOM",
          origin: Extension("VK_QCOM_extension_440", 440, true),
          value: 128,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkCullModeFlagBits",
      name: "CullModeFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_CULL_MODE_NONE",
          name: "NONE",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_CULL_MODE_FRONT_BIT",
          name: "FRONT",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_CULL_MODE_BACK_BIT",
          name: "BACK",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_CULL_MODE_FRONT_AND_BACK",
          name: "FRONT_AND_BACK",
          origin: Vulkan1_0,
          value: 3,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkRenderPassCreateFlagBits",
      name: "RenderPassCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_RENDER_PASS_CREATE_RESERVED_0_BIT_KHR",
          name: "RESERVED0_KHR",
          origin: Extension("VK_KHR_extension_221", 221, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_RENDER_PASS_CREATE_TRANSFORM_BIT_QCOM",
          name: "TRANSFORM_QCOM",
          origin: Extension("VK_QCOM_render_pass_transform", 283, true),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkDeviceQueueCreateFlagBits",
      name: "DeviceQueueCreateFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DEVICE_QUEUE_CREATE_PROTECTED_BIT",
          name: "PROTECTED",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_DEVICE_QUEUE_CREATE_RESERVED_1_BIT_QCOM",
          name: "RESERVED1_QCOM",
          origin: Extension("VK_QCOM_extension_440", 440, true),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkMemoryPropertyFlagBits",
      name: "MemoryPropertyFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_MEMORY_PROPERTY_DEVICE_LOCAL_BIT",
          name: "DEVICE_LOCAL",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_MEMORY_PROPERTY_HOST_VISIBLE_BIT",
          name: "HOST_VISIBLE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_MEMORY_PROPERTY_HOST_COHERENT_BIT",
          name: "HOST_COHERENT",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_MEMORY_PROPERTY_HOST_CACHED_BIT",
          name: "HOST_CACHED",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_MEMORY_PROPERTY_LAZILY_ALLOCATED_BIT",
          name: "LAZILY_ALLOCATED",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_MEMORY_PROPERTY_PROTECTED_BIT",
          name: "PROTECTED",
          origin: Vulkan1_1,
          value: 32,
        ),
        Bit(
          original_name: "VK_MEMORY_PROPERTY_DEVICE_COHERENT_BIT_AMD",
          name: "DEVICE_COHERENT_AMD",
          origin: Extension("VK_AMD_device_coherent_memory", 230, false),
          value: 64,
        ),
        Bit(
          original_name: "VK_MEMORY_PROPERTY_DEVICE_UNCACHED_BIT_AMD",
          name: "DEVICE_UNCACHED_AMD",
          origin: Extension("VK_AMD_device_coherent_memory", 230, false),
          value: 128,
        ),
        Bit(
          original_name: "VK_MEMORY_PROPERTY_RDMA_CAPABLE_BIT_NV",
          name: "RDMA_CAPABLE_NV",
          origin: Extension("VK_NV_external_memory_rdma", 372, false),
          value: 256,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkMemoryHeapFlagBits",
      name: "MemoryHeapFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_MEMORY_HEAP_DEVICE_LOCAL_BIT",
          name: "DEVICE_LOCAL",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT",
          name: "MULTI_INSTANCE",
          origin: Vulkan1_1,
          value: 2,
        ),
        Bit(
          original_name: "VK_MEMORY_HEAP_RESERVED_2_BIT_KHR",
          name: "RESERVED2_KHR",
          origin: Extension("VK_KHR_extension_299", 299, true),
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT_KHR",
          name: "MULTI_INSTANCE_KHR",
          origin: Extension("VK_KHR_device_group_creation", 71, false),
          of: "VK_MEMORY_HEAP_MULTI_INSTANCE_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkAccessFlagBits",
      name: "AccessFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_ACCESS_INDIRECT_COMMAND_READ_BIT",
          name: "INDIRECT_COMMAND_READ",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_ACCESS_INDEX_READ_BIT",
          name: "INDEX_READ",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_ACCESS_VERTEX_ATTRIBUTE_READ_BIT",
          name: "VERTEX_ATTRIBUTE_READ",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_ACCESS_UNIFORM_READ_BIT",
          name: "UNIFORM_READ",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_ACCESS_INPUT_ATTACHMENT_READ_BIT",
          name: "INPUT_ATTACHMENT_READ",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_ACCESS_SHADER_READ_BIT",
          name: "SHADER_READ",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_ACCESS_SHADER_WRITE_BIT",
          name: "SHADER_WRITE",
          origin: Vulkan1_0,
          value: 64,
        ),
        Bit(
          original_name: "VK_ACCESS_COLOR_ATTACHMENT_READ_BIT",
          name: "COLOR_ATTACHMENT_READ",
          origin: Vulkan1_0,
          value: 128,
        ),
        Bit(
          original_name: "VK_ACCESS_COLOR_ATTACHMENT_WRITE_BIT",
          name: "COLOR_ATTACHMENT_WRITE",
          origin: Vulkan1_0,
          value: 256,
        ),
        Bit(
          original_name: "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_READ_BIT",
          name: "DEPTH_STENCIL_ATTACHMENT_READ",
          origin: Vulkan1_0,
          value: 512,
        ),
        Bit(
          original_name: "VK_ACCESS_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT",
          name: "DEPTH_STENCIL_ATTACHMENT_WRITE",
          origin: Vulkan1_0,
          value: 1024,
        ),
        Bit(
          original_name: "VK_ACCESS_TRANSFER_READ_BIT",
          name: "TRANSFER_READ",
          origin: Vulkan1_0,
          value: 2048,
        ),
        Bit(
          original_name: "VK_ACCESS_TRANSFER_WRITE_BIT",
          name: "TRANSFER_WRITE",
          origin: Vulkan1_0,
          value: 4096,
        ),
        Bit(
          original_name: "VK_ACCESS_HOST_READ_BIT",
          name: "HOST_READ",
          origin: Vulkan1_0,
          value: 8192,
        ),
        Bit(
          original_name: "VK_ACCESS_HOST_WRITE_BIT",
          name: "HOST_WRITE",
          origin: Vulkan1_0,
          value: 16384,
        ),
        Bit(
          original_name: "VK_ACCESS_MEMORY_READ_BIT",
          name: "MEMORY_READ",
          origin: Vulkan1_0,
          value: 32768,
        ),
        Bit(
          original_name: "VK_ACCESS_MEMORY_WRITE_BIT",
          name: "MEMORY_WRITE",
          origin: Vulkan1_0,
          value: 65536,
        ),
        Bit(
          original_name: "VK_ACCESS_NONE",
          name: "NONE",
          origin: Vulkan1_3,
          value: 0,
        ),
        Bit(
          original_name: "VK_ACCESS_TRANSFORM_FEEDBACK_WRITE_BIT_EXT",
          name: "TRANSFORM_FEEDBACK_WRITE_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 33554432,
        ),
        Bit(
          original_name: "VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT",
          name: "TRANSFORM_FEEDBACK_COUNTER_READ_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 67108864,
        ),
        Bit(
          original_name: "VK_ACCESS_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT",
          name: "TRANSFORM_FEEDBACK_COUNTER_WRITE_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 134217728,
        ),
        Bit(
          original_name: "VK_ACCESS_CONDITIONAL_RENDERING_READ_BIT_EXT",
          name: "CONDITIONAL_RENDERING_READ_EXT",
          origin: Extension("VK_EXT_conditional_rendering", 82, false),
          value: 1048576,
        ),
        Bit(
          original_name: "VK_ACCESS_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT",
          name: "COLOR_ATTACHMENT_READ_NONCOHERENT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 524288,
        ),
        Bit(
          original_name: "VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR",
          name: "ACCELERATION_STRUCTURE_READ_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 2097152,
        ),
        Bit(
          original_name: "VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR",
          name: "ACCELERATION_STRUCTURE_WRITE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 4194304,
        ),
        Bit(
          original_name: "VK_ACCESS_FRAGMENT_DENSITY_MAP_READ_BIT_EXT",
          name: "FRAGMENT_DENSITY_MAP_READ_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 16777216,
        ),
        Bit(
          original_name: "VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR",
          name: "FRAGMENT_SHADING_RATE_ATTACHMENT_READ_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 8388608,
        ),
        Bit(
          original_name: "VK_ACCESS_COMMAND_PREPROCESS_READ_BIT_NV",
          name: "COMMAND_PREPROCESS_READ_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 131072,
        ),
        Bit(
          original_name: "VK_ACCESS_COMMAND_PREPROCESS_WRITE_BIT_NV",
          name: "COMMAND_PREPROCESS_WRITE_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 262144,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_ACCESS_SHADING_RATE_IMAGE_READ_BIT_NV",
          name: "SHADING_RATE_IMAGE_READ_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          of: "VK_ACCESS_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR",
        ),
        Alias(
          original_name: "VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_NV",
          name: "ACCELERATION_STRUCTURE_READ_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_ACCESS_ACCELERATION_STRUCTURE_READ_BIT_KHR",
        ),
        Alias(
          original_name: "VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_NV",
          name: "ACCELERATION_STRUCTURE_WRITE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_ACCESS_ACCELERATION_STRUCTURE_WRITE_BIT_KHR",
        ),
        Alias(
          original_name: "VK_ACCESS_NONE_KHR",
          name: "NONE_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_ACCESS_NONE",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkBufferUsageFlagBits",
      name: "BufferUsageFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_BUFFER_USAGE_TRANSFER_SRC_BIT",
          name: "TRANSFER_SRC",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_TRANSFER_DST_BIT",
          name: "TRANSFER_DST",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT",
          name: "UNIFORM_TEXEL_BUFFER",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT",
          name: "STORAGE_TEXEL_BUFFER",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT",
          name: "UNIFORM_BUFFER",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_STORAGE_BUFFER_BIT",
          name: "STORAGE_BUFFER",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_INDEX_BUFFER_BIT",
          name: "INDEX_BUFFER",
          origin: Vulkan1_0,
          value: 64,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_VERTEX_BUFFER_BIT",
          name: "VERTEX_BUFFER",
          origin: Vulkan1_0,
          value: 128,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT",
          name: "INDIRECT_BUFFER",
          origin: Vulkan1_0,
          value: 256,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT",
          name: "SHADER_DEVICE_ADDRESS",
          origin: Vulkan1_2,
          value: 131072,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_VIDEO_DECODE_SRC_BIT_KHR",
          name: "VIDEO_DECODE_SRC_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 8192,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_VIDEO_DECODE_DST_BIT_KHR",
          name: "VIDEO_DECODE_DST_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 16384,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_BUFFER_BIT_EXT",
          name: "TRANSFORM_FEEDBACK_BUFFER_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 2048,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_TRANSFORM_FEEDBACK_COUNTER_BUFFER_BIT_EXT",
          name: "TRANSFORM_FEEDBACK_COUNTER_BUFFER_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 4096,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_CONDITIONAL_RENDERING_BIT_EXT",
          name: "CONDITIONAL_RENDERING_EXT",
          origin: Extension("VK_EXT_conditional_rendering", 82, false),
          value: 512,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_BIT_KHR",
          name: "ACCELERATION_STRUCTURE_BUILD_INPUT_READ_ONLY_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 524288,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_ACCELERATION_STRUCTURE_STORAGE_BIT_KHR",
          name: "ACCELERATION_STRUCTURE_STORAGE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1048576,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR",
          name: "SHADER_BINDING_TABLE_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1024,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_RESERVED_18_BIT_QCOM",
          name: "RESERVED18_QCOM",
          origin: Extension("VK_QCOM_extension_173", 173, true),
          value: 262144,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_VIDEO_ENCODE_DST_BIT_KHR",
          name: "VIDEO_ENCODE_DST_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 32768,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_VIDEO_ENCODE_SRC_BIT_KHR",
          name: "VIDEO_ENCODE_SRC_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 65536,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_RESERVED_21_BIT_AMD",
          name: "RESERVED21_AMD",
          origin: Extension("VK_AMD_extension_317", 317, true),
          value: 2097152,
        ),
        Bit(
          original_name: "VK_BUFFER_USAGE_RESERVED_22_BIT_AMD",
          name: "RESERVED22_AMD",
          origin: Extension("VK_AMD_extension_317", 317, true),
          value: 4194304,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_BUFFER_USAGE_RAY_TRACING_BIT_NV",
          name: "RAY_TRACING_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_BUFFER_USAGE_SHADER_BINDING_TABLE_BIT_KHR",
        ),
        Alias(
          original_name: "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_EXT",
          name: "SHADER_DEVICE_ADDRESS_EXT",
          origin: Extension("VK_EXT_buffer_device_address", 245, false),
          of: "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT",
        ),
        Alias(
          original_name: "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT_KHR",
          name: "SHADER_DEVICE_ADDRESS_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkBufferCreateFlagBits",
      name: "BufferCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_BUFFER_CREATE_SPARSE_BINDING_BIT",
          name: "SPARSE_BINDING",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT",
          name: "SPARSE_RESIDENCY",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_BUFFER_CREATE_SPARSE_ALIASED_BIT",
          name: "SPARSE_ALIASED",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_BUFFER_CREATE_PROTECTED_BIT",
          name: "PROTECTED",
          origin: Vulkan1_1,
          value: 8,
        ),
        Bit(
          original_name: "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT",
          name: "DEVICE_ADDRESS_CAPTURE_REPLAY",
          origin: Vulkan1_2,
          value: 16,
        ),
        Bit(
          original_name: "VK_BUFFER_CREATE_RESERVED_5_BIT_AMD",
          name: "RESERVED5_AMD",
          origin: Extension("VK_AMD_extension_317", 317, true),
          value: 32,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_EXT",
          name: "DEVICE_ADDRESS_CAPTURE_REPLAY_EXT",
          origin: Extension("VK_EXT_buffer_device_address", 245, false),
          of: "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT",
        ),
        Alias(
          original_name: "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR",
          name: "DEVICE_ADDRESS_CAPTURE_REPLAY_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_BUFFER_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkShaderStageFlagBits",
      name: "ShaderStageFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SHADER_STAGE_VERTEX_BIT",
          name: "VERTEX",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_TESSELLATION_CONTROL_BIT",
          name: "TESSELLATION_CONTROL",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_TESSELLATION_EVALUATION_BIT",
          name: "TESSELLATION_EVALUATION",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_GEOMETRY_BIT",
          name: "GEOMETRY",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_FRAGMENT_BIT",
          name: "FRAGMENT",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_COMPUTE_BIT",
          name: "COMPUTE",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_ALL_GRAPHICS",
          name: "ALL_GRAPHICS",
          origin: Vulkan1_0,
          value: 31,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_ALL",
          name: "ALL",
          origin: Vulkan1_0,
          value: 2147483647,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_RAYGEN_BIT_KHR",
          name: "RAYGEN_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 256,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_ANY_HIT_BIT_KHR",
          name: "ANY_HIT_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 512,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR",
          name: "CLOSEST_HIT_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1024,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_MISS_BIT_KHR",
          name: "MISS_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 2048,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_INTERSECTION_BIT_KHR",
          name: "INTERSECTION_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 4096,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_CALLABLE_BIT_KHR",
          name: "CALLABLE_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 8192,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_TASK_BIT_NV",
          name: "TASK_NV",
          origin: Extension("VK_NV_mesh_shader", 203, false),
          value: 64,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_MESH_BIT_NV",
          name: "MESH_NV",
          origin: Extension("VK_NV_mesh_shader", 203, false),
          value: 128,
        ),
        Bit(
          original_name: "VK_SHADER_STAGE_SUBPASS_SHADING_BIT_HUAWEI",
          name: "SUBPASS_SHADING_HUAWEI",
          origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
          value: 16384,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SHADER_STAGE_RAYGEN_BIT_NV",
          name: "RAYGEN_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_SHADER_STAGE_RAYGEN_BIT_KHR",
        ),
        Alias(
          original_name: "VK_SHADER_STAGE_ANY_HIT_BIT_NV",
          name: "ANY_HIT_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_SHADER_STAGE_ANY_HIT_BIT_KHR",
        ),
        Alias(
          original_name: "VK_SHADER_STAGE_CLOSEST_HIT_BIT_NV",
          name: "CLOSEST_HIT_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_SHADER_STAGE_CLOSEST_HIT_BIT_KHR",
        ),
        Alias(
          original_name: "VK_SHADER_STAGE_MISS_BIT_NV",
          name: "MISS_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_SHADER_STAGE_MISS_BIT_KHR",
        ),
        Alias(
          original_name: "VK_SHADER_STAGE_INTERSECTION_BIT_NV",
          name: "INTERSECTION_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_SHADER_STAGE_INTERSECTION_BIT_KHR",
        ),
        Alias(
          original_name: "VK_SHADER_STAGE_CALLABLE_BIT_NV",
          name: "CALLABLE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_SHADER_STAGE_CALLABLE_BIT_KHR",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkImageUsageFlagBits",
      name: "ImageUsageFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_IMAGE_USAGE_TRANSFER_SRC_BIT",
          name: "TRANSFER_SRC",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_TRANSFER_DST_BIT",
          name: "TRANSFER_DST",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_SAMPLED_BIT",
          name: "SAMPLED",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_STORAGE_BIT",
          name: "STORAGE",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_COLOR_ATTACHMENT_BIT",
          name: "COLOR_ATTACHMENT",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_DEPTH_STENCIL_ATTACHMENT_BIT",
          name: "DEPTH_STENCIL_ATTACHMENT",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_TRANSIENT_ATTACHMENT_BIT",
          name: "TRANSIENT_ATTACHMENT",
          origin: Vulkan1_0,
          value: 64,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_INPUT_ATTACHMENT_BIT",
          name: "INPUT_ATTACHMENT",
          origin: Vulkan1_0,
          value: 128,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_VIDEO_DECODE_DST_BIT_KHR",
          name: "VIDEO_DECODE_DST_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 1024,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_VIDEO_DECODE_SRC_BIT_KHR",
          name: "VIDEO_DECODE_SRC_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 2048,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_VIDEO_DECODE_DPB_BIT_KHR",
          name: "VIDEO_DECODE_DPB_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 4096,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_RESERVED_16_BIT_QCOM",
          name: "RESERVED16_QCOM",
          origin: Extension("VK_QCOM_extension_173", 173, true),
          value: 65536,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_RESERVED_17_BIT_QCOM",
          name: "RESERVED17_QCOM",
          origin: Extension("VK_QCOM_extension_173", 173, true),
          value: 131072,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_FRAGMENT_DENSITY_MAP_BIT_EXT",
          name: "FRAGMENT_DENSITY_MAP_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 512,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
          name: "FRAGMENT_SHADING_RATE_ATTACHMENT_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 256,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_RESERVED_22_BIT_EXT",
          name: "RESERVED22_EXT",
          origin: Extension("VK_INTEL_extension_271", 271, true),
          value: 4194304,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_VIDEO_ENCODE_DST_BIT_KHR",
          name: "VIDEO_ENCODE_DST_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 8192,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_VIDEO_ENCODE_SRC_BIT_KHR",
          name: "VIDEO_ENCODE_SRC_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 16384,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_VIDEO_ENCODE_DPB_BIT_KHR",
          name: "VIDEO_ENCODE_DPB_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 32768,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_RESERVED_19_BIT_EXT",
          name: "RESERVED19_EXT",
          origin: Extension("VK_EXT_extension_340", 340, true),
          value: 524288,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_INVOCATION_MASK_BIT_HUAWEI",
          name: "INVOCATION_MASK_HUAWEI",
          origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
          value: 262144,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_RESERVED_20_BIT_QCOM",
          name: "RESERVED20_QCOM",
          origin: Extension("VK_QCOM_extension_441", 441, true),
          value: 1048576,
        ),
        Bit(
          original_name: "VK_IMAGE_USAGE_RESERVED_21_BIT_QCOM",
          name: "RESERVED21_QCOM",
          origin: Extension("VK_QCOM_extension_441", 441, true),
          value: 2097152,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_IMAGE_USAGE_SHADING_RATE_IMAGE_BIT_NV",
          name: "SHADING_RATE_IMAGE_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          of: "VK_IMAGE_USAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkImageCreateFlagBits",
      name: "ImageCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_IMAGE_CREATE_SPARSE_BINDING_BIT",
          name: "SPARSE_BINDING",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_SPARSE_RESIDENCY_BIT",
          name: "SPARSE_RESIDENCY",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_SPARSE_ALIASED_BIT",
          name: "SPARSE_ALIASED",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT",
          name: "MUTABLE_FORMAT",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_CUBE_COMPATIBLE_BIT",
          name: "CUBE_COMPATIBLE",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_ALIAS_BIT",
          name: "ALIAS",
          origin: Vulkan1_1,
          value: 1024,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT",
          name: "SPLIT_INSTANCE_BIND_REGIONS",
          origin: Vulkan1_1,
          value: 64,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT",
          name: "2D_ARRAY_COMPATIBLE",
          origin: Vulkan1_1,
          value: 32,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT",
          name: "BLOCK_TEXEL_VIEW_COMPATIBLE",
          origin: Vulkan1_1,
          value: 128,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT",
          name: "EXTENDED_USAGE",
          origin: Vulkan1_1,
          value: 256,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_PROTECTED_BIT",
          name: "PROTECTED",
          origin: Vulkan1_1,
          value: 2048,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_DISJOINT_BIT",
          name: "DISJOINT",
          origin: Vulkan1_1,
          value: 512,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_CORNER_SAMPLED_BIT_NV",
          name: "CORNER_SAMPLED_NV",
          origin: Extension("VK_NV_corner_sampled_image", 51, false),
          value: 8192,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_BIT_EXT",
          name: "SAMPLE_LOCATIONS_COMPATIBLE_DEPTH_EXT",
          origin: Extension("VK_EXT_sample_locations", 144, false),
          value: 4096,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_SUBSAMPLED_BIT_EXT",
          name: "SUBSAMPLED_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 16384,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_RESERVED_16_BIT_AMD",
          name: "RESERVED16_AMD",
          origin: Extension("VK_AMD_extension_317", 317, true),
          value: 65536,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_RESERVED_18_BIT_EXT",
          name: "RESERVED18_EXT",
          origin: Extension("VK_EXT_extension_377", 377, true),
          value: 262144,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_RESERVED_394_BIT_EXT",
          name: "RESERVED394_EXT",
          origin: Extension("VK_EXT_extension_394", 394, true),
          value: 131072,
        ),
        Bit(
          original_name: "VK_IMAGE_CREATE_FRAGMENT_DENSITY_MAP_OFFSET_BIT_QCOM",
          name: "FRAGMENT_DENSITY_MAP_OFFSET_QCOM",
          origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
          value: 32768,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
          name: "SPLIT_INSTANCE_BIND_REGIONS_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_IMAGE_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT",
        ),
        Alias(
          original_name: "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT_KHR",
          name: "2D_ARRAY_COMPATIBLE_KHR",
          origin: Extension("VK_KHR_maintenance1", 70, false),
          of: "VK_IMAGE_CREATE_2D_ARRAY_COMPATIBLE_BIT",
        ),
        Alias(
          original_name: "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT_KHR",
          name: "BLOCK_TEXEL_VIEW_COMPATIBLE_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_IMAGE_CREATE_BLOCK_TEXEL_VIEW_COMPATIBLE_BIT",
        ),
        Alias(
          original_name: "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT_KHR",
          name: "EXTENDED_USAGE_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_IMAGE_CREATE_EXTENDED_USAGE_BIT",
        ),
        Alias(
          original_name: "VK_IMAGE_CREATE_DISJOINT_BIT_KHR",
          name: "DISJOINT_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_IMAGE_CREATE_DISJOINT_BIT",
        ),
        Alias(
          original_name: "VK_IMAGE_CREATE_ALIAS_BIT_KHR",
          name: "ALIAS_KHR",
          origin: Extension("VK_KHR_bind_memory2", 158, false),
          of: "VK_IMAGE_CREATE_ALIAS_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkImageViewCreateFlagBits",
      name: "ImageViewCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DYNAMIC_BIT_EXT",
          name: "FRAGMENT_DENSITY_MAP_DYNAMIC_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_VIEW_CREATE_RESERVED_2_BIT_AMD",
          name: "RESERVED2_AMD",
          origin: Extension("VK_AMD_extension_317", 317, true),
          value: 4,
        ),
        Bit(
          original_name: "VK_IMAGE_VIEW_CREATE_FRAGMENT_DENSITY_MAP_DEFERRED_BIT_EXT",
          name: "FRAGMENT_DENSITY_MAP_DEFERRED_EXT",
          origin: Extension("VK_EXT_fragment_density_map2", 333, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSamplerCreateFlagBits",
      name: "SamplerCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SAMPLER_CREATE_SUBSAMPLED_BIT_EXT",
          name: "SUBSAMPLED_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_SAMPLER_CREATE_SUBSAMPLED_COARSE_RECONSTRUCTION_BIT_EXT",
          name: "SUBSAMPLED_COARSE_RECONSTRUCTION_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_SAMPLER_CREATE_RESERVED_3_BIT_AMD",
          name: "RESERVED3_AMD",
          origin: Extension("VK_AMD_extension_317", 317, true),
          value: 8,
        ),
        Bit(
          original_name: "VK_SAMPLER_CREATE_RESERVED_2_BIT_EXT",
          name: "RESERVED2_EXT",
          origin: Extension("VK_EXT_disable_cube_map_wrap", 423, true),
          value: 4,
        ),
        Bit(
          original_name: "VK_SAMPLER_CREATE_IMAGE_PROCESSING_BIT_QCOM",
          name: "IMAGE_PROCESSING_QCOM",
          origin: Extension("VK_QCOM_extension_441", 441, true),
          value: 16,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkPipelineCreateFlagBits",
      name: "PipelineCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT",
          name: "DISABLE_OPTIMIZATION",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_ALLOW_DERIVATIVES_BIT",
          name: "ALLOW_DERIVATIVES",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_DERIVATIVE_BIT",
          name: "DERIVATIVE",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT",
          name: "VIEW_INDEX_FROM_DEVICE_INDEX",
          origin: Vulkan1_1,
          value: 8,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_DISPATCH_BASE_BIT",
          name: "DISPATCH_BASE",
          origin: Vulkan1_1,
          value: 16,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT",
          name: "FAIL_ON_PIPELINE_COMPILE_REQUIRED",
          origin: Vulkan1_3,
          value: 256,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT",
          name: "EARLY_RETURN_ON_FAILURE",
          origin: Vulkan1_3,
          value: 512,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
          name: "RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          value: 2097152,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT",
          name: "RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_EXT",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          value: 4194304,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_BIT_KHR",
          name: "RAY_TRACING_NO_NULL_ANY_HIT_SHADERS_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 16384,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_BIT_KHR",
          name: "RAY_TRACING_NO_NULL_CLOSEST_HIT_SHADERS_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 32768,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_MISS_SHADERS_BIT_KHR",
          name: "RAY_TRACING_NO_NULL_MISS_SHADERS_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 65536,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_BIT_KHR",
          name: "RAY_TRACING_NO_NULL_INTERSECTION_SHADERS_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 131072,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RAY_TRACING_SKIP_TRIANGLES_BIT_KHR",
          name: "RAY_TRACING_SKIP_TRIANGLES_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 4096,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RAY_TRACING_SKIP_AABBS_BIT_KHR",
          name: "RAY_TRACING_SKIP_AABBS_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 8192,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_BIT_KHR",
          name: "RAY_TRACING_SHADER_GROUP_HANDLE_CAPTURE_REPLAY_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 524288,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_DEFER_COMPILE_BIT_NV",
          name: "DEFER_COMPILE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 32,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_CAPTURE_STATISTICS_BIT_KHR",
          name: "CAPTURE_STATISTICS_KHR",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 64,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_CAPTURE_INTERNAL_REPRESENTATIONS_BIT_KHR",
          name: "CAPTURE_INTERNAL_REPRESENTATIONS_KHR",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 128,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_INDIRECT_BINDABLE_BIT_NV",
          name: "INDIRECT_BINDABLE_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 262144,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_LIBRARY_BIT_KHR",
          name: "LIBRARY_KHR",
          origin: Extension("VK_KHR_pipeline_library", 291, false),
          value: 2048,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RESERVED_23_BIT_AMD",
          name: "RESERVED23_AMD",
          origin: Extension("VK_AMD_extension_321", 321, true),
          value: 8388608,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RESERVED_10_BIT_AMD",
          name: "RESERVED10_AMD",
          origin: Extension("VK_AMD_extension_321", 321, true),
          value: 1024,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATE_RAY_TRACING_ALLOW_MOTION_BIT_NV",
          name: "RAY_TRACING_ALLOW_MOTION_NV",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 1048576,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_PIPELINE_CREATE_DISPATCH_BASE",
          name: "DISPATCH_BASE",
          origin: Vulkan1_1,
          of: "VK_PIPELINE_CREATE_DISPATCH_BASE_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
          name: "PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_PIPELINE_CREATE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
        ),
        Alias(
          original_name: "VK_PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT",
          name: "PIPELINE_RASTERIZATION_STATE_CREATE_FRAGMENT_DENSITY_MAP_ATTACHMENT_EXT",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_PIPELINE_CREATE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_BIT_EXT",
        ),
        Alias(
          original_name: "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT_KHR",
          name: "VIEW_INDEX_FROM_DEVICE_INDEX_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_PIPELINE_CREATE_VIEW_INDEX_FROM_DEVICE_INDEX_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_CREATE_DISPATCH_BASE_KHR",
          name: "DISPATCH_BASE_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_PIPELINE_CREATE_DISPATCH_BASE",
        ),
        Alias(
          original_name: "VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT",
          name: "FAIL_ON_PIPELINE_COMPILE_REQUIRED_EXT",
          origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
          of: "VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT_EXT",
          name: "EARLY_RETURN_ON_FAILURE_EXT",
          origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
          of: "VK_PIPELINE_CREATE_EARLY_RETURN_ON_FAILURE_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkPipelineShaderStageCreateFlagBits",
      name: "PipelineShaderStageCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT",
          name: "ALLOW_VARYING_SUBGROUP_SIZE",
          origin: Vulkan1_3,
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT",
          name: "REQUIRE_FULL_SUBGROUPS",
          origin: Vulkan1_3,
          value: 2,
        ),
        Bit(
          original_name: "VK_PIPELINE_SHADER_STAGE_CREATE_RESERVED_2_BIT_NV",
          name: "RESERVED2_NV",
          origin: Extension("VK_NV_extension_52", 52, true),
          value: 4,
        ),
        Bit(
          original_name: "VK_PIPELINE_SHADER_STAGE_CREATE_RESERVED_3_BIT_KHR",
          name: "RESERVED3_KHR",
          origin: Extension("VK_KHR_extension_297", 297, true),
          value: 8,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT_EXT",
          name: "ALLOW_VARYING_SUBGROUP_SIZE_EXT",
          origin: Extension("VK_EXT_subgroup_size_control", 226, false),
          of: "VK_PIPELINE_SHADER_STAGE_CREATE_ALLOW_VARYING_SUBGROUP_SIZE_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT_EXT",
          name: "REQUIRE_FULL_SUBGROUPS_EXT",
          origin: Extension("VK_EXT_subgroup_size_control", 226, false),
          of: "VK_PIPELINE_SHADER_STAGE_CREATE_REQUIRE_FULL_SUBGROUPS_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkColorComponentFlagBits",
      name: "ColorComponentFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_COLOR_COMPONENT_R_BIT",
          name: "R",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_COLOR_COMPONENT_G_BIT",
          name: "G",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_COLOR_COMPONENT_B_BIT",
          name: "B",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_COLOR_COMPONENT_A_BIT",
          name: "A",
          origin: Vulkan1_0,
          value: 8,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkFenceCreateFlagBits",
      name: "FenceCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_FENCE_CREATE_SIGNALED_BIT",
          name: "SIGNALED",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSemaphoreCreateFlagBits",
      name: "SemaphoreCreateFlagBits",
      origin: Unknown,
      width: 4,
      bits: [],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkFormatFeatureFlagBits",
      name: "FormatFeatureFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_BIT",
          name: "SAMPLED_IMAGE",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_STORAGE_IMAGE_BIT",
          name: "STORAGE_IMAGE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_STORAGE_IMAGE_ATOMIC_BIT",
          name: "STORAGE_IMAGE_ATOMIC",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_UNIFORM_TEXEL_BUFFER_BIT",
          name: "UNIFORM_TEXEL_BUFFER",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_BIT",
          name: "STORAGE_TEXEL_BUFFER",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_STORAGE_TEXEL_BUFFER_ATOMIC_BIT",
          name: "STORAGE_TEXEL_BUFFER_ATOMIC",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_VERTEX_BUFFER_BIT",
          name: "VERTEX_BUFFER",
          origin: Vulkan1_0,
          value: 64,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BIT",
          name: "COLOR_ATTACHMENT",
          origin: Vulkan1_0,
          value: 128,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_COLOR_ATTACHMENT_BLEND_BIT",
          name: "COLOR_ATTACHMENT_BLEND",
          origin: Vulkan1_0,
          value: 256,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_DEPTH_STENCIL_ATTACHMENT_BIT",
          name: "DEPTH_STENCIL_ATTACHMENT",
          origin: Vulkan1_0,
          value: 512,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_BLIT_SRC_BIT",
          name: "BLIT_SRC",
          origin: Vulkan1_0,
          value: 1024,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_BLIT_DST_BIT",
          name: "BLIT_DST",
          origin: Vulkan1_0,
          value: 2048,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_LINEAR_BIT",
          name: "SAMPLED_IMAGE_FILTER_LINEAR",
          origin: Vulkan1_0,
          value: 4096,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT",
          name: "TRANSFER_SRC",
          origin: Vulkan1_1,
          value: 16384,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_TRANSFER_DST_BIT",
          name: "TRANSFER_DST",
          origin: Vulkan1_1,
          value: 32768,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT",
          name: "MIDPOINT_CHROMA_SAMPLES",
          origin: Vulkan1_1,
          value: 131072,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT",
          name: "SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER",
          origin: Vulkan1_1,
          value: 262144,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT",
          name: "SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER",
          origin: Vulkan1_1,
          value: 524288,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT",
          name: "SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT",
          origin: Vulkan1_1,
          value: 1048576,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT",
          name: "SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE",
          origin: Vulkan1_1,
          value: 2097152,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_DISJOINT_BIT",
          name: "DISJOINT",
          origin: Vulkan1_1,
          value: 4194304,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT",
          name: "COSITED_CHROMA_SAMPLES",
          origin: Vulkan1_1,
          value: 8388608,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT",
          name: "SAMPLED_IMAGE_FILTER_MINMAX",
          origin: Vulkan1_2,
          value: 65536,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG",
          name: "SAMPLED_IMAGE_FILTER_CUBIC_IMG",
          origin: Extension("VK_IMG_filter_cubic", 16, false),
          value: 8192,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_VIDEO_DECODE_OUTPUT_BIT_KHR",
          name: "VIDEO_DECODE_OUTPUT_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 33554432,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_VIDEO_DECODE_DPB_BIT_KHR",
          name: "VIDEO_DECODE_DPB_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 67108864,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR",
          name: "ACCELERATION_STRUCTURE_VERTEX_BUFFER_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 536870912,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_FRAGMENT_DENSITY_MAP_BIT_EXT",
          name: "FRAGMENT_DENSITY_MAP_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 16777216,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
          name: "FRAGMENT_SHADING_RATE_ATTACHMENT_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1073741824,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_VIDEO_ENCODE_INPUT_BIT_KHR",
          name: "VIDEO_ENCODE_INPUT_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 134217728,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_VIDEO_ENCODE_DPB_BIT_KHR",
          name: "VIDEO_ENCODE_DPB_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 268435456,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT_KHR",
          name: "TRANSFER_SRC_KHR",
          origin: Extension("VK_KHR_maintenance1", 70, false),
          of: "VK_FORMAT_FEATURE_TRANSFER_SRC_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_TRANSFER_DST_BIT_KHR",
          name: "TRANSFER_DST_KHR",
          origin: Extension("VK_KHR_maintenance1", 70, false),
          of: "VK_FORMAT_FEATURE_TRANSFER_DST_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT_EXT",
          name: "SAMPLED_IMAGE_FILTER_MINMAX_EXT",
          origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
          of: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_MINMAX_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT_KHR",
          name: "MIDPOINT_CHROMA_SAMPLES_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_FEATURE_MIDPOINT_CHROMA_SAMPLES_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR",
          name: "SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR",
          name: "SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR",
          name: "SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR",
          name: "SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_DISJOINT_BIT_KHR",
          name: "DISJOINT_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_FEATURE_DISJOINT_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT_KHR",
          name: "COSITED_CHROMA_SAMPLES_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_FEATURE_COSITED_CHROMA_SAMPLES_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT",
          name: "SAMPLED_IMAGE_FILTER_CUBIC_EXT",
          origin: Extension("VK_EXT_filter_cubic", 171, false),
          of: "VK_FORMAT_FEATURE_SAMPLED_IMAGE_FILTER_CUBIC_BIT_IMG",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkQueryControlFlagBits",
      name: "QueryControlFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_QUERY_CONTROL_PRECISE_BIT",
          name: "PRECISE",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkQueryResultFlagBits",
      name: "QueryResultFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_QUERY_RESULT_64_BIT",
          name: "64",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_QUERY_RESULT_WAIT_BIT",
          name: "WAIT",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_QUERY_RESULT_WITH_AVAILABILITY_BIT",
          name: "WITH_AVAILABILITY",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_QUERY_RESULT_PARTIAL_BIT",
          name: "PARTIAL",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_QUERY_RESULT_WITH_STATUS_BIT_KHR",
          name: "WITH_STATUS_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 16,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkCommandBufferUsageFlagBits",
      name: "CommandBufferUsageFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_COMMAND_BUFFER_USAGE_ONE_TIME_SUBMIT_BIT",
          name: "ONE_TIME_SUBMIT",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_COMMAND_BUFFER_USAGE_RENDER_PASS_CONTINUE_BIT",
          name: "RENDER_PASS_CONTINUE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_COMMAND_BUFFER_USAGE_SIMULTANEOUS_USE_BIT",
          name: "SIMULTANEOUS_USE",
          origin: Vulkan1_0,
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkQueryPipelineStatisticFlagBits",
      name: "QueryPipelineStatisticFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_VERTICES_BIT",
          name: "INPUT_ASSEMBLY_VERTICES",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_INPUT_ASSEMBLY_PRIMITIVES_BIT",
          name: "INPUT_ASSEMBLY_PRIMITIVES",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_VERTEX_SHADER_INVOCATIONS_BIT",
          name: "VERTEX_SHADER_INVOCATIONS",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_INVOCATIONS_BIT",
          name: "GEOMETRY_SHADER_INVOCATIONS",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_GEOMETRY_SHADER_PRIMITIVES_BIT",
          name: "GEOMETRY_SHADER_PRIMITIVES",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_CLIPPING_INVOCATIONS_BIT",
          name: "CLIPPING_INVOCATIONS",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_CLIPPING_PRIMITIVES_BIT",
          name: "CLIPPING_PRIMITIVES",
          origin: Vulkan1_0,
          value: 64,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_FRAGMENT_SHADER_INVOCATIONS_BIT",
          name: "FRAGMENT_SHADER_INVOCATIONS",
          origin: Vulkan1_0,
          value: 128,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_CONTROL_SHADER_PATCHES_BIT",
          name: "TESSELLATION_CONTROL_SHADER_PATCHES",
          origin: Vulkan1_0,
          value: 256,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_TESSELLATION_EVALUATION_SHADER_INVOCATIONS_BIT",
          name: "TESSELLATION_EVALUATION_SHADER_INVOCATIONS",
          origin: Vulkan1_0,
          value: 512,
        ),
        Bit(
          original_name: "VK_QUERY_PIPELINE_STATISTIC_COMPUTE_SHADER_INVOCATIONS_BIT",
          name: "COMPUTE_SHADER_INVOCATIONS",
          origin: Vulkan1_0,
          value: 1024,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkImageAspectFlagBits",
      name: "ImageAspectFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_IMAGE_ASPECT_COLOR_BIT",
          name: "COLOR",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_DEPTH_BIT",
          name: "DEPTH",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_STENCIL_BIT",
          name: "STENCIL",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_METADATA_BIT",
          name: "METADATA",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_PLANE_0_BIT",
          name: "PLANE0",
          origin: Vulkan1_1,
          value: 16,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_PLANE_1_BIT",
          name: "PLANE1",
          origin: Vulkan1_1,
          value: 32,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_PLANE_2_BIT",
          name: "PLANE2",
          origin: Vulkan1_1,
          value: 64,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_NONE",
          name: "NONE",
          origin: Vulkan1_3,
          value: 0,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_MEMORY_PLANE_0_BIT_EXT",
          name: "MEMORY_PLANE0_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 128,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_MEMORY_PLANE_1_BIT_EXT",
          name: "MEMORY_PLANE1_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 256,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_MEMORY_PLANE_2_BIT_EXT",
          name: "MEMORY_PLANE2_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 512,
        ),
        Bit(
          original_name: "VK_IMAGE_ASPECT_MEMORY_PLANE_3_BIT_EXT",
          name: "MEMORY_PLANE3_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 1024,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_IMAGE_ASPECT_PLANE_0_BIT_KHR",
          name: "PLANE0_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_IMAGE_ASPECT_PLANE_0_BIT",
        ),
        Alias(
          original_name: "VK_IMAGE_ASPECT_PLANE_1_BIT_KHR",
          name: "PLANE1_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_IMAGE_ASPECT_PLANE_1_BIT",
        ),
        Alias(
          original_name: "VK_IMAGE_ASPECT_PLANE_2_BIT_KHR",
          name: "PLANE2_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_IMAGE_ASPECT_PLANE_2_BIT",
        ),
        Alias(
          original_name: "VK_IMAGE_ASPECT_NONE_KHR",
          name: "NONE_KHR",
          origin: Extension("VK_KHR_maintenance4", 414, false),
          of: "VK_IMAGE_ASPECT_NONE",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkSparseImageFormatFlagBits",
      name: "SparseImageFormatFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SPARSE_IMAGE_FORMAT_SINGLE_MIPTAIL_BIT",
          name: "SINGLE_MIPTAIL",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_SPARSE_IMAGE_FORMAT_ALIGNED_MIP_SIZE_BIT",
          name: "ALIGNED_MIP_SIZE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_SPARSE_IMAGE_FORMAT_NONSTANDARD_BLOCK_SIZE_BIT",
          name: "NONSTANDARD_BLOCK_SIZE",
          origin: Vulkan1_0,
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSparseMemoryBindFlagBits",
      name: "SparseMemoryBindFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SPARSE_MEMORY_BIND_METADATA_BIT",
          name: "METADATA",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkPipelineStageFlagBits",
      name: "PipelineStageFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_STAGE_TOP_OF_PIPE_BIT",
          name: "TOP_OF_PIPE",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_DRAW_INDIRECT_BIT",
          name: "DRAW_INDIRECT",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_VERTEX_INPUT_BIT",
          name: "VERTEX_INPUT",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_VERTEX_SHADER_BIT",
          name: "VERTEX_SHADER",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_TESSELLATION_CONTROL_SHADER_BIT",
          name: "TESSELLATION_CONTROL_SHADER",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_TESSELLATION_EVALUATION_SHADER_BIT",
          name: "TESSELLATION_EVALUATION_SHADER",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_GEOMETRY_SHADER_BIT",
          name: "GEOMETRY_SHADER",
          origin: Vulkan1_0,
          value: 64,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_FRAGMENT_SHADER_BIT",
          name: "FRAGMENT_SHADER",
          origin: Vulkan1_0,
          value: 128,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_EARLY_FRAGMENT_TESTS_BIT",
          name: "EARLY_FRAGMENT_TESTS",
          origin: Vulkan1_0,
          value: 256,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_LATE_FRAGMENT_TESTS_BIT",
          name: "LATE_FRAGMENT_TESTS",
          origin: Vulkan1_0,
          value: 512,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_COLOR_ATTACHMENT_OUTPUT_BIT",
          name: "COLOR_ATTACHMENT_OUTPUT",
          origin: Vulkan1_0,
          value: 1024,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_COMPUTE_SHADER_BIT",
          name: "COMPUTE_SHADER",
          origin: Vulkan1_0,
          value: 2048,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_TRANSFER_BIT",
          name: "TRANSFER",
          origin: Vulkan1_0,
          value: 4096,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_BOTTOM_OF_PIPE_BIT",
          name: "BOTTOM_OF_PIPE",
          origin: Vulkan1_0,
          value: 8192,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_HOST_BIT",
          name: "HOST",
          origin: Vulkan1_0,
          value: 16384,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_ALL_GRAPHICS_BIT",
          name: "ALL_GRAPHICS",
          origin: Vulkan1_0,
          value: 32768,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_ALL_COMMANDS_BIT",
          name: "ALL_COMMANDS",
          origin: Vulkan1_0,
          value: 65536,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_NONE",
          name: "NONE",
          origin: Vulkan1_3,
          value: 0,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_TRANSFORM_FEEDBACK_BIT_EXT",
          name: "TRANSFORM_FEEDBACK_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 16777216,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_CONDITIONAL_RENDERING_BIT_EXT",
          name: "CONDITIONAL_RENDERING_EXT",
          origin: Extension("VK_EXT_conditional_rendering", 82, false),
          value: 262144,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR",
          name: "ACCELERATION_STRUCTURE_BUILD_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 33554432,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR",
          name: "RAY_TRACING_SHADER_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 2097152,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_TASK_SHADER_BIT_NV",
          name: "TASK_SHADER_NV",
          origin: Extension("VK_NV_mesh_shader", 203, false),
          value: 524288,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_MESH_SHADER_BIT_NV",
          name: "MESH_SHADER_NV",
          origin: Extension("VK_NV_mesh_shader", 203, false),
          value: 1048576,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_FRAGMENT_DENSITY_PROCESS_BIT_EXT",
          name: "FRAGMENT_DENSITY_PROCESS_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 8388608,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
          name: "FRAGMENT_SHADING_RATE_ATTACHMENT_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 4194304,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_COMMAND_PREPROCESS_BIT_NV",
          name: "COMMAND_PREPROCESS_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 131072,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_PIPELINE_STAGE_SHADING_RATE_IMAGE_BIT_NV",
          name: "SHADING_RATE_IMAGE_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          of: "VK_PIPELINE_STAGE_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_NV",
          name: "RAY_TRACING_SHADER_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_PIPELINE_STAGE_RAY_TRACING_SHADER_BIT_KHR",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_NV",
          name: "ACCELERATION_STRUCTURE_BUILD_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_PIPELINE_STAGE_ACCELERATION_STRUCTURE_BUILD_BIT_KHR",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_NONE_KHR",
          name: "NONE_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_PIPELINE_STAGE_NONE",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkCommandPoolCreateFlagBits",
      name: "CommandPoolCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_COMMAND_POOL_CREATE_TRANSIENT_BIT",
          name: "TRANSIENT",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_COMMAND_POOL_CREATE_RESET_COMMAND_BUFFER_BIT",
          name: "RESET_COMMAND_BUFFER",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_COMMAND_POOL_CREATE_PROTECTED_BIT",
          name: "PROTECTED",
          origin: Vulkan1_1,
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkCommandPoolResetFlagBits",
      name: "CommandPoolResetFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_COMMAND_POOL_RESET_RELEASE_RESOURCES_BIT",
          name: "RELEASE_RESOURCES",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_COMMAND_POOL_RESET_RESERVED_1_BIT_COREAVI",
          name: "RESERVED1_COREAVI",
          origin: Extension("VK_COREAVI_extension_444", 444, true),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkCommandBufferResetFlagBits",
      name: "CommandBufferResetFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_COMMAND_BUFFER_RESET_RELEASE_RESOURCES_BIT",
          name: "RELEASE_RESOURCES",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSampleCountFlagBits",
      name: "SampleCountFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SAMPLE_COUNT_1_BIT",
          name: "1",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_SAMPLE_COUNT_2_BIT",
          name: "2",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_SAMPLE_COUNT_4_BIT",
          name: "4",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_SAMPLE_COUNT_8_BIT",
          name: "8",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_SAMPLE_COUNT_16_BIT",
          name: "16",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_SAMPLE_COUNT_32_BIT",
          name: "32",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_SAMPLE_COUNT_64_BIT",
          name: "64",
          origin: Vulkan1_0,
          value: 64,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkAttachmentDescriptionFlagBits",
      name: "AttachmentDescriptionFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_ATTACHMENT_DESCRIPTION_MAY_ALIAS_BIT",
          name: "MAY_ALIAS",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkStencilFaceFlagBits",
      name: "StencilFaceFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_STENCIL_FACE_FRONT_BIT",
          name: "FRONT",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_STENCIL_FACE_BACK_BIT",
          name: "BACK",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_STENCIL_FACE_FRONT_AND_BACK",
          name: "FRONT_AND_BACK",
          origin: Vulkan1_0,
          value: 3,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_STENCIL_FRONT_AND_BACK",
          name: "STENCIL_FRONT_AND_BACK",
          origin: Vulkan1_0,
          of: "VK_STENCIL_FACE_FRONT_AND_BACK",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkDescriptorPoolCreateFlagBits",
      name: "DescriptorPoolCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DESCRIPTOR_POOL_CREATE_FREE_DESCRIPTOR_SET_BIT",
          name: "FREE_DESCRIPTOR_SET",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT",
          name: "UPDATE_AFTER_BIND",
          origin: Vulkan1_2,
          value: 2,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_POOL_CREATE_HOST_ONLY_BIT_VALVE",
          name: "HOST_ONLY_VALVE",
          origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT_EXT",
          name: "UPDATE_AFTER_BIND_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_DESCRIPTOR_POOL_CREATE_UPDATE_AFTER_BIND_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkDependencyFlagBits",
      name: "DependencyFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DEPENDENCY_BY_REGION_BIT",
          name: "BY_REGION",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_DEPENDENCY_DEVICE_GROUP_BIT",
          name: "DEVICE_GROUP",
          origin: Vulkan1_1,
          value: 4,
        ),
        Bit(
          original_name: "VK_DEPENDENCY_VIEW_LOCAL_BIT",
          name: "VIEW_LOCAL",
          origin: Vulkan1_1,
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DEPENDENCY_VIEW_LOCAL_BIT_KHR",
          name: "VIEW_LOCAL_KHR",
          origin: Extension("VK_KHR_multiview", 54, false),
          of: "VK_DEPENDENCY_VIEW_LOCAL_BIT",
        ),
        Alias(
          original_name: "VK_DEPENDENCY_DEVICE_GROUP_BIT_KHR",
          name: "DEVICE_GROUP_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_DEPENDENCY_DEVICE_GROUP_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkSemaphoreWaitFlagBits",
      name: "SemaphoreWaitFlagBits",
      origin: Vulkan1_2,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SEMAPHORE_WAIT_ANY_BIT",
          name: "ANY",
          origin: Vulkan1_2,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SEMAPHORE_WAIT_ANY_BIT_KHR",
          name: "ANY_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_SEMAPHORE_WAIT_ANY_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkDisplayPlaneAlphaFlagBitsKHR",
      name: "DisplayPlaneAlphaFlagBitsKHR",
      origin: Extension("VK_KHR_display", 3, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DISPLAY_PLANE_ALPHA_OPAQUE_BIT_KHR",
          name: "OPAQUE",
          origin: Extension("VK_KHR_display", 3, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DISPLAY_PLANE_ALPHA_GLOBAL_BIT_KHR",
          name: "GLOBAL",
          origin: Extension("VK_KHR_display", 3, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_BIT_KHR",
          name: "PER_PIXEL",
          origin: Extension("VK_KHR_display", 3, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_DISPLAY_PLANE_ALPHA_PER_PIXEL_PREMULTIPLIED_BIT_KHR",
          name: "PER_PIXEL_PREMULTIPLIED",
          origin: Extension("VK_KHR_display", 3, false),
          value: 8,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkCompositeAlphaFlagBitsKHR",
      name: "CompositeAlphaFlagBitsKHR",
      origin: Extension("VK_KHR_surface", 1, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_COMPOSITE_ALPHA_OPAQUE_BIT_KHR",
          name: "OPAQUE",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_COMPOSITE_ALPHA_PRE_MULTIPLIED_BIT_KHR",
          name: "PRE_MULTIPLIED",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_COMPOSITE_ALPHA_POST_MULTIPLIED_BIT_KHR",
          name: "POST_MULTIPLIED",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_COMPOSITE_ALPHA_INHERIT_BIT_KHR",
          name: "INHERIT",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 8,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSurfaceTransformFlagBitsKHR",
      name: "SurfaceTransformFlagBitsKHR",
      origin: Extension("VK_KHR_surface", 1, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_IDENTITY_BIT_KHR",
          name: "IDENTITY",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_ROTATE_90_BIT_KHR",
          name: "ROTATE90",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_ROTATE_180_BIT_KHR",
          name: "ROTATE180",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_ROTATE_270_BIT_KHR",
          name: "ROTATE270",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 8,
        ),
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_BIT_KHR",
          name: "HORIZONTAL_MIRROR",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 16,
        ),
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_90_BIT_KHR",
          name: "HORIZONTAL_MIRROR_ROTATE90",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 32,
        ),
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_180_BIT_KHR",
          name: "HORIZONTAL_MIRROR_ROTATE180",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 64,
        ),
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_HORIZONTAL_MIRROR_ROTATE_270_BIT_KHR",
          name: "HORIZONTAL_MIRROR_ROTATE270",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 128,
        ),
        Bit(
          original_name: "VK_SURFACE_TRANSFORM_INHERIT_BIT_KHR",
          name: "INHERIT",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 256,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSwapchainImageUsageFlagBitsANDROID",
      name: "SwapchainImageUsageFlagBitsANDROID",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SWAPCHAIN_IMAGE_USAGE_SHARED_BIT_ANDROID",
          name: "SHARED",
          origin: Extension("VK_ANDROID_native_buffer", 11, true),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkDebugReportFlagBitsEXT",
      name: "DebugReportFlagBitsEXT",
      origin: Extension("VK_EXT_debug_report", 12, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DEBUG_REPORT_INFORMATION_BIT_EXT",
          name: "INFORMATION",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_WARNING_BIT_EXT",
          name: "WARNING",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_PERFORMANCE_WARNING_BIT_EXT",
          name: "PERFORMANCE_WARNING",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_ERROR_BIT_EXT",
          name: "ERROR",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 8,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_DEBUG_BIT_EXT",
          name: "DEBUG",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 16,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkExternalMemoryHandleTypeFlagBitsNV",
      name: "ExternalMemoryHandleTypeFlagBitsNV",
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_NV",
          name: "OPAQUE_WIN32",
          origin: Extension("VK_NV_external_memory_capabilities", 56, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_NV",
          name: "OPAQUE_WIN32_KMT",
          origin: Extension("VK_NV_external_memory_capabilities", 56, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_BIT_NV",
          name: "D3D11_IMAGE",
          origin: Extension("VK_NV_external_memory_capabilities", 56, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_IMAGE_KMT_BIT_NV",
          name: "D3D11_IMAGE_KMT",
          origin: Extension("VK_NV_external_memory_capabilities", 56, false),
          value: 8,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkExternalMemoryFeatureFlagBitsNV",
      name: "ExternalMemoryFeatureFlagBitsNV",
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_NV",
          name: "DEDICATED_ONLY",
          origin: Extension("VK_NV_external_memory_capabilities", 56, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_NV",
          name: "EXPORTABLE",
          origin: Extension("VK_NV_external_memory_capabilities", 56, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_NV",
          name: "IMPORTABLE",
          origin: Extension("VK_NV_external_memory_capabilities", 56, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSubgroupFeatureFlagBits",
      name: "SubgroupFeatureFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_BASIC_BIT",
          name: "BASIC",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_VOTE_BIT",
          name: "VOTE",
          origin: Vulkan1_1,
          value: 2,
        ),
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_ARITHMETIC_BIT",
          name: "ARITHMETIC",
          origin: Vulkan1_1,
          value: 4,
        ),
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_BALLOT_BIT",
          name: "BALLOT",
          origin: Vulkan1_1,
          value: 8,
        ),
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_SHUFFLE_BIT",
          name: "SHUFFLE",
          origin: Vulkan1_1,
          value: 16,
        ),
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_SHUFFLE_RELATIVE_BIT",
          name: "SHUFFLE_RELATIVE",
          origin: Vulkan1_1,
          value: 32,
        ),
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_CLUSTERED_BIT",
          name: "CLUSTERED",
          origin: Vulkan1_1,
          value: 64,
        ),
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_QUAD_BIT",
          name: "QUAD",
          origin: Vulkan1_1,
          value: 128,
        ),
        Bit(
          original_name: "VK_SUBGROUP_FEATURE_PARTITIONED_BIT_NV",
          name: "PARTITIONED_NV",
          origin: Extension("VK_NV_shader_subgroup_partitioned", 199, false),
          value: 256,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkIndirectCommandsLayoutUsageFlagBitsNV",
      name: "IndirectCommandsLayoutUsageFlagBitsNV",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_EXPLICIT_PREPROCESS_BIT_NV",
          name: "EXPLICIT_PREPROCESS",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_INDEXED_SEQUENCES_BIT_NV",
          name: "INDEXED_SEQUENCES",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_LAYOUT_USAGE_UNORDERED_SEQUENCES_BIT_NV",
          name: "UNORDERED_SEQUENCES",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkIndirectStateFlagBitsNV",
      name: "IndirectStateFlagBitsNV",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_INDIRECT_STATE_FLAG_FRONTFACE_BIT_NV",
          name: "FLAG_FRONTFACE",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkPrivateDataSlotCreateFlagBits",
      name: "PrivateDataSlotCreateFlagBits",
      origin: Unknown,
      width: 4,
      bits: [],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkDescriptorSetLayoutCreateFlagBits",
      name: "DescriptorSetLayoutCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT",
          name: "UPDATE_AFTER_BIND_POOL",
          origin: Vulkan1_2,
          value: 2,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_SET_LAYOUT_CREATE_PUSH_DESCRIPTOR_BIT_KHR",
          name: "PUSH_DESCRIPTOR_KHR",
          origin: Extension("VK_KHR_push_descriptor", 81, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_SET_LAYOUT_CREATE_RESERVED_4_BIT_AMD",
          name: "RESERVED4_AMD",
          origin: Extension("VK_AMD_extension_317", 317, true),
          value: 16,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_SET_LAYOUT_CREATE_RESERVED_3_BIT_AMD",
          name: "RESERVED3_AMD",
          origin: Extension("VK_AMD_extension_319", 319, true),
          value: 8,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_SET_LAYOUT_CREATE_HOST_ONLY_POOL_BIT_VALVE",
          name: "HOST_ONLY_POOL_VALVE",
          origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT_EXT",
          name: "UPDATE_AFTER_BIND_POOL_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_DESCRIPTOR_SET_LAYOUT_CREATE_UPDATE_AFTER_BIND_POOL_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkExternalMemoryHandleTypeFlagBits",
      name: "ExternalMemoryHandleTypeFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT",
          name: "OPAQUE_FD",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT",
          name: "OPAQUE_WIN32",
          origin: Vulkan1_1,
          value: 2,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
          name: "OPAQUE_WIN32_KMT",
          origin: Vulkan1_1,
          value: 4,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT",
          name: "D3D11_TEXTURE",
          origin: Vulkan1_1,
          value: 8,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT",
          name: "D3D11_TEXTURE_KMT",
          origin: Vulkan1_1,
          value: 16,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT",
          name: "D3D12_HEAP",
          origin: Vulkan1_1,
          value: 32,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT",
          name: "D3D12_RESOURCE",
          origin: Vulkan1_1,
          value: 64,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_DMA_BUF_BIT_EXT",
          name: "DMA_BUF_EXT",
          origin: Extension("VK_EXT_external_memory_dma_buf", 126, false),
          value: 512,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_ANDROID_HARDWARE_BUFFER_BIT_ANDROID",
          name: "ANDROID_HARDWARE_BUFFER_ANDROID",
          origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
          value: 1024,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_ALLOCATION_BIT_EXT",
          name: "HOST_ALLOCATION_EXT",
          origin: Extension("VK_EXT_external_memory_host", 179, false),
          value: 128,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_HOST_MAPPED_FOREIGN_MEMORY_BIT_EXT",
          name: "HOST_MAPPED_FOREIGN_MEMORY_EXT",
          origin: Extension("VK_EXT_external_memory_host", 179, false),
          value: 256,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_ZIRCON_VMO_BIT_FUCHSIA",
          name: "ZIRCON_VMO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_external_memory", 365, false),
          value: 2048,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_RDMA_ADDRESS_BIT_NV",
          name: "RDMA_ADDRESS_NV",
          origin: Extension("VK_NV_external_memory_rdma", 372, false),
          value: 4096,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_RESERVED_13_BIT_NV",
          name: "RESERVED13_NV",
          origin: Extension("VK_NV_extension_375", 375, true),
          value: 8192,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
          name: "OPAQUE_FD_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
          name: "OPAQUE_WIN32_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
          name: "OPAQUE_WIN32_KMT_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT_KHR",
          name: "D3D11_TEXTURE_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT_KHR",
          name: "D3D11_TEXTURE_KMT_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_TEXTURE_KMT_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT_KHR",
          name: "D3D12_HEAP_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT_KHR",
          name: "D3D12_RESOURCE_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkExternalMemoryFeatureFlagBits",
      name: "ExternalMemoryFeatureFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT",
          name: "DEDICATED_ONLY",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT",
          name: "EXPORTABLE",
          origin: Vulkan1_1,
          value: 2,
        ),
        Bit(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT",
          name: "IMPORTABLE",
          origin: Vulkan1_1,
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT_KHR",
          name: "DEDICATED_ONLY_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_FEATURE_DEDICATED_ONLY_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT_KHR",
          name: "EXPORTABLE_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_FEATURE_EXPORTABLE_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT_KHR",
          name: "IMPORTABLE_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_EXTERNAL_MEMORY_FEATURE_IMPORTABLE_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkExternalSemaphoreHandleTypeFlagBits",
      name: "ExternalSemaphoreHandleTypeFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT",
          name: "OPAQUE_FD",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT",
          name: "OPAQUE_WIN32",
          origin: Vulkan1_1,
          value: 2,
        ),
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
          name: "OPAQUE_WIN32_KMT",
          origin: Vulkan1_1,
          value: 4,
        ),
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT",
          name: "D3D12_FENCE",
          origin: Vulkan1_1,
          value: 8,
        ),
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT",
          name: "SYNC_FD",
          origin: Vulkan1_1,
          value: 16,
        ),
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_ZIRCON_EVENT_BIT_FUCHSIA",
          name: "ZIRCON_EVENT_FUCHSIA",
          origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
          value: 128,
        ),
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_RESERVED_5_BIT_NV",
          name: "RESERVED5_NV",
          origin: Extension("VK_NV_extension_374", 374, true),
          value: 32,
        ),
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_RESERVED_6_BIT_NV",
          name: "RESERVED6_NV",
          origin: Extension("VK_NV_extension_374", 374, true),
          value: 64,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE_BIT",
          name: "D3D11_FENCE",
          origin: Vulkan1_1,
          of: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
          name: "OPAQUE_FD_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
          name: "OPAQUE_WIN32_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
          name: "OPAQUE_WIN32_KMT_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT_KHR",
          name: "D3D12_FENCE_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT_KHR",
          name: "SYNC_FD_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_EXTERNAL_SEMAPHORE_HANDLE_TYPE_SYNC_FD_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkExternalSemaphoreFeatureFlagBits",
      name: "ExternalSemaphoreFeatureFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT",
          name: "EXPORTABLE",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT",
          name: "IMPORTABLE",
          origin: Vulkan1_1,
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT_KHR",
          name: "EXPORTABLE_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_EXTERNAL_SEMAPHORE_FEATURE_EXPORTABLE_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT_KHR",
          name: "IMPORTABLE_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_EXTERNAL_SEMAPHORE_FEATURE_IMPORTABLE_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkSemaphoreImportFlagBits",
      name: "SemaphoreImportFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT",
          name: "TEMPORARY",
          origin: Vulkan1_1,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT_KHR",
          name: "TEMPORARY_KHR",
          origin: Extension("VK_KHR_external_semaphore", 78, false),
          of: "VK_SEMAPHORE_IMPORT_TEMPORARY_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkExternalFenceHandleTypeFlagBits",
      name: "ExternalFenceHandleTypeFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT",
          name: "OPAQUE_FD",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT",
          name: "OPAQUE_WIN32",
          origin: Vulkan1_1,
          value: 2,
        ),
        Bit(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
          name: "OPAQUE_WIN32_KMT",
          origin: Vulkan1_1,
          value: 4,
        ),
        Bit(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT",
          name: "SYNC_FD",
          origin: Vulkan1_1,
          value: 8,
        ),
        Bit(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_RESERVED_4_BIT_NV",
          name: "RESERVED4_NV",
          origin: Extension("VK_NV_extension_374", 374, true),
          value: 16,
        ),
        Bit(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_RESERVED_5_BIT_NV",
          name: "RESERVED5_NV",
          origin: Extension("VK_NV_extension_374", 374, true),
          value: 32,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT_KHR",
          name: "OPAQUE_FD_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_FD_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT_KHR",
          name: "OPAQUE_WIN32_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT_KHR",
          name: "OPAQUE_WIN32_KMT_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_EXTERNAL_FENCE_HANDLE_TYPE_OPAQUE_WIN32_KMT_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT_KHR",
          name: "SYNC_FD_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_EXTERNAL_FENCE_HANDLE_TYPE_SYNC_FD_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkExternalFenceFeatureFlagBits",
      name: "ExternalFenceFeatureFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT",
          name: "EXPORTABLE",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT",
          name: "IMPORTABLE",
          origin: Vulkan1_1,
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT_KHR",
          name: "EXPORTABLE_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_EXTERNAL_FENCE_FEATURE_EXPORTABLE_BIT",
        ),
        Alias(
          original_name: "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT_KHR",
          name: "IMPORTABLE_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_EXTERNAL_FENCE_FEATURE_IMPORTABLE_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkFenceImportFlagBits",
      name: "FenceImportFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_FENCE_IMPORT_TEMPORARY_BIT",
          name: "TEMPORARY",
          origin: Vulkan1_1,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_FENCE_IMPORT_TEMPORARY_BIT_KHR",
          name: "TEMPORARY_KHR",
          origin: Extension("VK_KHR_external_fence", 114, false),
          of: "VK_FENCE_IMPORT_TEMPORARY_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkSurfaceCounterFlagBitsEXT",
      name: "SurfaceCounterFlagBitsEXT",
      origin: Extension("VK_EXT_display_surface_counter", 91, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SURFACE_COUNTER_VBLANK_BIT_EXT",
          name: "VBLANK",
          origin: Extension("VK_EXT_display_surface_counter", 91, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkPeerMemoryFeatureFlagBits",
      name: "PeerMemoryFeatureFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT",
          name: "COPY_SRC",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT",
          name: "COPY_DST",
          origin: Vulkan1_1,
          value: 2,
        ),
        Bit(
          original_name: "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT",
          name: "GENERIC_SRC",
          origin: Vulkan1_1,
          value: 4,
        ),
        Bit(
          original_name: "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT",
          name: "GENERIC_DST",
          origin: Vulkan1_1,
          value: 8,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT_KHR",
          name: "COPY_SRC_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_PEER_MEMORY_FEATURE_COPY_SRC_BIT",
        ),
        Alias(
          original_name: "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT_KHR",
          name: "COPY_DST_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_PEER_MEMORY_FEATURE_COPY_DST_BIT",
        ),
        Alias(
          original_name: "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT_KHR",
          name: "GENERIC_SRC_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_PEER_MEMORY_FEATURE_GENERIC_SRC_BIT",
        ),
        Alias(
          original_name: "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT_KHR",
          name: "GENERIC_DST_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_PEER_MEMORY_FEATURE_GENERIC_DST_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkMemoryAllocateFlagBits",
      name: "MemoryAllocateFlagBits",
      origin: Vulkan1_1,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT",
          name: "DEVICE_MASK",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT",
          name: "DEVICE_ADDRESS",
          origin: Vulkan1_2,
          value: 2,
        ),
        Bit(
          original_name: "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT",
          name: "DEVICE_ADDRESS_CAPTURE_REPLAY",
          origin: Vulkan1_2,
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT_KHR",
          name: "DEVICE_MASK_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_MEMORY_ALLOCATE_DEVICE_MASK_BIT",
        ),
        Alias(
          original_name: "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT_KHR",
          name: "DEVICE_ADDRESS_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_BIT",
        ),
        Alias(
          original_name: "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR",
          name: "DEVICE_ADDRESS_CAPTURE_REPLAY_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_MEMORY_ALLOCATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkDeviceGroupPresentModeFlagBitsKHR",
      name: "DeviceGroupPresentModeFlagBitsKHR",
      origin: Extension("VK_KHR_device_group", 61, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_BIT_KHR",
          name: "LOCAL",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DEVICE_GROUP_PRESENT_MODE_REMOTE_BIT_KHR",
          name: "REMOTE",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_DEVICE_GROUP_PRESENT_MODE_SUM_BIT_KHR",
          name: "SUM",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_DEVICE_GROUP_PRESENT_MODE_LOCAL_MULTI_DEVICE_BIT_KHR",
          name: "LOCAL_MULTI_DEVICE",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 8,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSwapchainCreateFlagBitsKHR",
      name: "SwapchainCreateFlagBitsKHR",
      origin: Extension("VK_KHR_swapchain", 2, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SWAPCHAIN_CREATE_SPLIT_INSTANCE_BIND_REGIONS_BIT_KHR",
          name: "SPLIT_INSTANCE_BIND_REGIONS",
          origin: Extension("VK_KHR_device_group", 61, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_SWAPCHAIN_CREATE_PROTECTED_BIT_KHR",
          name: "PROTECTED",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_SWAPCHAIN_CREATE_MUTABLE_FORMAT_BIT_KHR",
          name: "MUTABLE_FORMAT",
          origin: Extension("VK_KHR_swapchain_mutable_format", 201, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkSubpassDescriptionFlagBits",
      name: "SubpassDescriptionFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SUBPASS_DESCRIPTION_PER_VIEW_ATTRIBUTES_BIT_NVX",
          name: "PER_VIEW_ATTRIBUTES_NVX",
          origin: Extension("VK_NVX_multiview_per_view_attributes", 98, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_SUBPASS_DESCRIPTION_PER_VIEW_POSITION_X_ONLY_BIT_NVX",
          name: "PER_VIEW_POSITION_X_ONLY_NVX",
          origin: Extension("VK_NVX_multiview_per_view_attributes", 98, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_SUBPASS_DESCRIPTION_FRAGMENT_REGION_BIT_QCOM",
          name: "FRAGMENT_REGION_QCOM",
          origin: Extension("VK_QCOM_render_pass_shader_resolve", 172, true),
          value: 4,
        ),
        Bit(
          original_name: "VK_SUBPASS_DESCRIPTION_SHADER_RESOLVE_BIT_QCOM",
          name: "SHADER_RESOLVE_QCOM",
          origin: Extension("VK_QCOM_render_pass_shader_resolve", 172, true),
          value: 8,
        ),
        Bit(
          original_name: "VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_BIT_ARM",
          name: "RASTERIZATION_ORDER_ATTACHMENT_COLOR_ACCESS_ARM",
          origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
          value: 16,
        ),
        Bit(
          original_name: "VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM",
          name: "RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_ARM",
          origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
          value: 32,
        ),
        Bit(
          original_name: "VK_SUBPASS_DESCRIPTION_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM",
          name: "RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_ARM",
          origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
          value: 64,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkDebugUtilsMessageSeverityFlagBitsEXT",
      name: "DebugUtilsMessageSeverityFlagBitsEXT",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DEBUG_UTILS_MESSAGE_SEVERITY_VERBOSE_BIT_EXT",
          name: "VERBOSE",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DEBUG_UTILS_MESSAGE_SEVERITY_INFO_BIT_EXT",
          name: "INFO",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 16,
        ),
        Bit(
          original_name: "VK_DEBUG_UTILS_MESSAGE_SEVERITY_WARNING_BIT_EXT",
          name: "WARNING",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 256,
        ),
        Bit(
          original_name: "VK_DEBUG_UTILS_MESSAGE_SEVERITY_ERROR_BIT_EXT",
          name: "ERROR",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 4096,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkDebugUtilsMessageTypeFlagBitsEXT",
      name: "DebugUtilsMessageTypeFlagBitsEXT",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DEBUG_UTILS_MESSAGE_TYPE_GENERAL_BIT_EXT",
          name: "GENERAL",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DEBUG_UTILS_MESSAGE_TYPE_VALIDATION_BIT_EXT",
          name: "VALIDATION",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_DEBUG_UTILS_MESSAGE_TYPE_PERFORMANCE_BIT_EXT",
          name: "PERFORMANCE",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkDescriptorBindingFlagBits",
      name: "DescriptorBindingFlagBits",
      origin: Vulkan1_2,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT",
          name: "UPDATE_AFTER_BIND",
          origin: Vulkan1_2,
          value: 1,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT",
          name: "UPDATE_UNUSED_WHILE_PENDING",
          origin: Vulkan1_2,
          value: 2,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT",
          name: "PARTIALLY_BOUND",
          origin: Vulkan1_2,
          value: 4,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT",
          name: "VARIABLE_DESCRIPTOR_COUNT",
          origin: Vulkan1_2,
          value: 8,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_BINDING_RESERVED_4_BIT_QCOM",
          name: "RESERVED4_QCOM",
          origin: Extension("VK_QCOM_extension_369", 369, true),
          value: 16,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT_EXT",
          name: "UPDATE_AFTER_BIND_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_DESCRIPTOR_BINDING_UPDATE_AFTER_BIND_BIT",
        ),
        Alias(
          original_name: "VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT_EXT",
          name: "UPDATE_UNUSED_WHILE_PENDING_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_DESCRIPTOR_BINDING_UPDATE_UNUSED_WHILE_PENDING_BIT",
        ),
        Alias(
          original_name: "VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT_EXT",
          name: "PARTIALLY_BOUND_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_DESCRIPTOR_BINDING_PARTIALLY_BOUND_BIT",
        ),
        Alias(
          original_name: "VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT_EXT",
          name: "VARIABLE_DESCRIPTOR_COUNT_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_DESCRIPTOR_BINDING_VARIABLE_DESCRIPTOR_COUNT_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkConditionalRenderingFlagBitsEXT",
      name: "ConditionalRenderingFlagBitsEXT",
      origin: Extension("VK_EXT_conditional_rendering", 82, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_CONDITIONAL_RENDERING_INVERTED_BIT_EXT",
          name: "INVERTED",
          origin: Extension("VK_EXT_conditional_rendering", 82, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkResolveModeFlagBits",
      name: "ResolveModeFlagBits",
      origin: Vulkan1_2,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_RESOLVE_MODE_NONE",
          name: "NONE",
          origin: Vulkan1_2,
          value: 0,
        ),
        Bit(
          original_name: "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT",
          name: "SAMPLE_ZERO",
          origin: Vulkan1_2,
          value: 1,
        ),
        Bit(
          original_name: "VK_RESOLVE_MODE_AVERAGE_BIT",
          name: "AVERAGE",
          origin: Vulkan1_2,
          value: 2,
        ),
        Bit(
          original_name: "VK_RESOLVE_MODE_MIN_BIT",
          name: "MIN",
          origin: Vulkan1_2,
          value: 4,
        ),
        Bit(
          original_name: "VK_RESOLVE_MODE_MAX_BIT",
          name: "MAX",
          origin: Vulkan1_2,
          value: 8,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_RESOLVE_MODE_NONE_KHR",
          name: "NONE_KHR",
          origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
          of: "VK_RESOLVE_MODE_NONE",
        ),
        Alias(
          original_name: "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT_KHR",
          name: "SAMPLE_ZERO_KHR",
          origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
          of: "VK_RESOLVE_MODE_SAMPLE_ZERO_BIT",
        ),
        Alias(
          original_name: "VK_RESOLVE_MODE_AVERAGE_BIT_KHR",
          name: "AVERAGE_KHR",
          origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
          of: "VK_RESOLVE_MODE_AVERAGE_BIT",
        ),
        Alias(
          original_name: "VK_RESOLVE_MODE_MIN_BIT_KHR",
          name: "MIN_KHR",
          origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
          of: "VK_RESOLVE_MODE_MIN_BIT",
        ),
        Alias(
          original_name: "VK_RESOLVE_MODE_MAX_BIT_KHR",
          name: "MAX_KHR",
          origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
          of: "VK_RESOLVE_MODE_MAX_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkGeometryInstanceFlagBitsKHR",
      name: "GeometryInstanceFlagBitsKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR",
          name: "TRIANGLE_FACING_CULL_DISABLE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR",
          name: "TRIANGLE_FLIP_FACING",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR",
          name: "FORCE_OPAQUE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR",
          name: "FORCE_NO_OPAQUE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 8,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR",
          name: "TRIANGLE_FRONT_COUNTERCLOCKWISE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          of: "VK_GEOMETRY_INSTANCE_TRIANGLE_FLIP_FACING_BIT_KHR",
        ),
        Alias(
          original_name: "VK_GEOMETRY_INSTANCE_TRIANGLE_CULL_DISABLE_BIT_NV",
          name: "TRIANGLE_CULL_DISABLE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_GEOMETRY_INSTANCE_TRIANGLE_FACING_CULL_DISABLE_BIT_KHR",
        ),
        Alias(
          original_name: "VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_NV",
          name: "TRIANGLE_FRONT_COUNTERCLOCKWISE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_GEOMETRY_INSTANCE_TRIANGLE_FRONT_COUNTERCLOCKWISE_BIT_KHR",
        ),
        Alias(
          original_name: "VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_NV",
          name: "FORCE_OPAQUE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_GEOMETRY_INSTANCE_FORCE_OPAQUE_BIT_KHR",
        ),
        Alias(
          original_name: "VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_NV",
          name: "FORCE_NO_OPAQUE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_GEOMETRY_INSTANCE_FORCE_NO_OPAQUE_BIT_KHR",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkGeometryFlagBitsKHR",
      name: "GeometryFlagBitsKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_GEOMETRY_OPAQUE_BIT_KHR",
          name: "OPAQUE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR",
          name: "NO_DUPLICATE_ANY_HIT_INVOCATION",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_GEOMETRY_OPAQUE_BIT_NV",
          name: "OPAQUE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_GEOMETRY_OPAQUE_BIT_KHR",
        ),
        Alias(
          original_name: "VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_NV",
          name: "NO_DUPLICATE_ANY_HIT_INVOCATION_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_GEOMETRY_NO_DUPLICATE_ANY_HIT_INVOCATION_BIT_KHR",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkBuildAccelerationStructureFlagBitsKHR",
      name: "BuildAccelerationStructureFlagBitsKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR",
          name: "ALLOW_UPDATE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR",
          name: "ALLOW_COMPACTION",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR",
          name: "PREFER_FAST_TRACE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR",
          name: "PREFER_FAST_BUILD",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 8,
        ),
        Bit(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR",
          name: "LOW_MEMORY",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 16,
        ),
        Bit(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_MOTION_BIT_NV",
          name: "MOTION_NV",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 32,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_NV",
          name: "ALLOW_UPDATE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_UPDATE_BIT_KHR",
        ),
        Alias(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_NV",
          name: "ALLOW_COMPACTION_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_BUILD_ACCELERATION_STRUCTURE_ALLOW_COMPACTION_BIT_KHR",
        ),
        Alias(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_NV",
          name: "PREFER_FAST_TRACE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_TRACE_BIT_KHR",
        ),
        Alias(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_NV",
          name: "PREFER_FAST_BUILD_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_BUILD_ACCELERATION_STRUCTURE_PREFER_FAST_BUILD_BIT_KHR",
        ),
        Alias(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_NV",
          name: "LOW_MEMORY_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_BUILD_ACCELERATION_STRUCTURE_LOW_MEMORY_BIT_KHR",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkAccelerationStructureCreateFlagBitsKHR",
      name: "AccelerationStructureCreateFlagBitsKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_CREATE_DEVICE_ADDRESS_CAPTURE_REPLAY_BIT_KHR",
          name: "DEVICE_ADDRESS_CAPTURE_REPLAY",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_CREATE_MOTION_BIT_NV",
          name: "MOTION_NV",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkFramebufferCreateFlagBits",
      name: "FramebufferCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT",
          name: "IMAGELESS",
          origin: Vulkan1_2,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT_KHR",
          name: "IMAGELESS_KHR",
          origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
          of: "VK_FRAMEBUFFER_CREATE_IMAGELESS_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkDeviceDiagnosticsConfigFlagBitsNV",
      name: "DeviceDiagnosticsConfigFlagBitsNV",
      origin: Extension("VK_NV_device_diagnostics_config", 301, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_SHADER_DEBUG_INFO_BIT_NV",
          name: "ENABLE_SHADER_DEBUG_INFO",
          origin: Extension("VK_NV_device_diagnostics_config", 301, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_RESOURCE_TRACKING_BIT_NV",
          name: "ENABLE_RESOURCE_TRACKING",
          origin: Extension("VK_NV_device_diagnostics_config", 301, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_DEVICE_DIAGNOSTICS_CONFIG_ENABLE_AUTOMATIC_CHECKPOINTS_BIT_NV",
          name: "ENABLE_AUTOMATIC_CHECKPOINTS",
          origin: Extension("VK_NV_device_diagnostics_config", 301, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkPipelineCreationFeedbackFlagBits",
      name: "PipelineCreationFeedbackFlagBits",
      origin: Vulkan1_3,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT",
          name: "VALID",
          origin: Vulkan1_3,
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT",
          name: "APPLICATION_PIPELINE_CACHE_HIT",
          origin: Vulkan1_3,
          value: 2,
        ),
        Bit(
          original_name: "VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT",
          name: "BASE_PIPELINE_ACCELERATION",
          origin: Vulkan1_3,
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT_EXT",
          name: "VALID_EXT",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_CREATION_FEEDBACK_VALID_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT_EXT",
          name: "APPLICATION_PIPELINE_CACHE_HIT_EXT",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_CREATION_FEEDBACK_APPLICATION_PIPELINE_CACHE_HIT_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT_EXT",
          name: "BASE_PIPELINE_ACCELERATION_EXT",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_CREATION_FEEDBACK_BASE_PIPELINE_ACCELERATION_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkPerformanceCounterDescriptionFlagBitsKHR",
      name: "PerformanceCounterDescriptionFlagBitsKHR",
      origin: Extension("VK_KHR_performance_query", 117, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_DESCRIPTION_PERFORMANCE_IMPACTING_BIT_KHR",
          name: "PERFORMANCE_IMPACTING",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_DESCRIPTION_CONCURRENTLY_IMPACTED_BIT_KHR",
          name: "CONCURRENTLY_IMPACTED",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkAcquireProfilingLockFlagBitsKHR",
      name: "AcquireProfilingLockFlagBitsKHR",
      origin: Extension("VK_KHR_performance_query", 117, false),
      width: 4,
      bits: [],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkShaderCorePropertiesFlagBitsAMD",
      name: "ShaderCorePropertiesFlagBitsAMD",
      origin: Extension("VK_AMD_shader_core_properties2", 228, false),
      width: 4,
      bits: [],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkShaderModuleCreateFlagBits",
      name: "ShaderModuleCreateFlagBits",
      origin: Unknown,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SHADER_MODULE_CREATE_RESERVED_0_BIT_NV",
          name: "RESERVED0_NV",
          origin: Extension("VK_NV_extension_52", 52, true),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkPipelineCompilerControlFlagBitsAMD",
      name: "PipelineCompilerControlFlagBitsAMD",
      origin: Extension("VK_AMD_pipeline_compiler_control", 184, false),
      width: 4,
      bits: [],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkToolPurposeFlagBits",
      name: "ToolPurposeFlagBits",
      origin: Vulkan1_3,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_TOOL_PURPOSE_VALIDATION_BIT",
          name: "VALIDATION",
          origin: Vulkan1_3,
          value: 1,
        ),
        Bit(
          original_name: "VK_TOOL_PURPOSE_PROFILING_BIT",
          name: "PROFILING",
          origin: Vulkan1_3,
          value: 2,
        ),
        Bit(
          original_name: "VK_TOOL_PURPOSE_TRACING_BIT",
          name: "TRACING",
          origin: Vulkan1_3,
          value: 4,
        ),
        Bit(
          original_name: "VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT",
          name: "ADDITIONAL_FEATURES",
          origin: Vulkan1_3,
          value: 8,
        ),
        Bit(
          original_name: "VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT",
          name: "MODIFYING_FEATURES",
          origin: Vulkan1_3,
          value: 16,
        ),
        Bit(
          original_name: "VK_TOOL_PURPOSE_DEBUG_REPORTING_BIT_EXT",
          name: "DEBUG_REPORTING_EXT",
          origin: Extension("VK_EXT_tooling_info", 246, false),
          value: 32,
        ),
        Bit(
          original_name: "VK_TOOL_PURPOSE_DEBUG_MARKERS_BIT_EXT",
          name: "DEBUG_MARKERS_EXT",
          origin: Extension("VK_EXT_tooling_info", 246, false),
          value: 64,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_TOOL_PURPOSE_VALIDATION_BIT_EXT",
          name: "VALIDATION_EXT",
          origin: Vulkan1_3,
          of: "VK_TOOL_PURPOSE_VALIDATION_BIT",
        ),
        Alias(
          original_name: "VK_TOOL_PURPOSE_PROFILING_BIT_EXT",
          name: "PROFILING_EXT",
          origin: Vulkan1_3,
          of: "VK_TOOL_PURPOSE_PROFILING_BIT",
        ),
        Alias(
          original_name: "VK_TOOL_PURPOSE_TRACING_BIT_EXT",
          name: "TRACING_EXT",
          origin: Vulkan1_3,
          of: "VK_TOOL_PURPOSE_TRACING_BIT",
        ),
        Alias(
          original_name: "VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT_EXT",
          name: "ADDITIONAL_FEATURES_EXT",
          origin: Vulkan1_3,
          of: "VK_TOOL_PURPOSE_ADDITIONAL_FEATURES_BIT",
        ),
        Alias(
          original_name: "VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT_EXT",
          name: "MODIFYING_FEATURES_EXT",
          origin: Vulkan1_3,
          of: "VK_TOOL_PURPOSE_MODIFYING_FEATURES_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkAccessFlagBits2",
      name: "AccessFlagBits2",
      origin: Vulkan1_3,
      width: 8,
      bits: [
        Bit(
          original_name: "VK_ACCESS_2_NONE",
          name: "ACCESS2_NONE",
          origin: Vulkan1_3,
          value: 0,
        ),
        Bit(
          original_name: "VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT",
          name: "ACCESS2_INDIRECT_COMMAND_READ",
          origin: Vulkan1_3,
          value: 1,
        ),
        Bit(
          original_name: "VK_ACCESS_2_INDEX_READ_BIT",
          name: "ACCESS2_INDEX_READ",
          origin: Vulkan1_3,
          value: 2,
        ),
        Bit(
          original_name: "VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT",
          name: "ACCESS2_VERTEX_ATTRIBUTE_READ",
          origin: Vulkan1_3,
          value: 4,
        ),
        Bit(
          original_name: "VK_ACCESS_2_UNIFORM_READ_BIT",
          name: "ACCESS2_UNIFORM_READ",
          origin: Vulkan1_3,
          value: 8,
        ),
        Bit(
          original_name: "VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT",
          name: "ACCESS2_INPUT_ATTACHMENT_READ",
          origin: Vulkan1_3,
          value: 16,
        ),
        Bit(
          original_name: "VK_ACCESS_2_SHADER_READ_BIT",
          name: "ACCESS2_SHADER_READ",
          origin: Vulkan1_3,
          value: 32,
        ),
        Bit(
          original_name: "VK_ACCESS_2_SHADER_WRITE_BIT",
          name: "ACCESS2_SHADER_WRITE",
          origin: Vulkan1_3,
          value: 64,
        ),
        Bit(
          original_name: "VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT",
          name: "ACCESS2_COLOR_ATTACHMENT_READ",
          origin: Vulkan1_3,
          value: 128,
        ),
        Bit(
          original_name: "VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT",
          name: "ACCESS2_COLOR_ATTACHMENT_WRITE",
          origin: Vulkan1_3,
          value: 256,
        ),
        Bit(
          original_name: "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT",
          name: "ACCESS2_DEPTH_STENCIL_ATTACHMENT_READ",
          origin: Vulkan1_3,
          value: 512,
        ),
        Bit(
          original_name: "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT",
          name: "ACCESS2_DEPTH_STENCIL_ATTACHMENT_WRITE",
          origin: Vulkan1_3,
          value: 1024,
        ),
        Bit(
          original_name: "VK_ACCESS_2_TRANSFER_READ_BIT",
          name: "ACCESS2_TRANSFER_READ",
          origin: Vulkan1_3,
          value: 2048,
        ),
        Bit(
          original_name: "VK_ACCESS_2_TRANSFER_WRITE_BIT",
          name: "ACCESS2_TRANSFER_WRITE",
          origin: Vulkan1_3,
          value: 4096,
        ),
        Bit(
          original_name: "VK_ACCESS_2_HOST_READ_BIT",
          name: "ACCESS2_HOST_READ",
          origin: Vulkan1_3,
          value: 8192,
        ),
        Bit(
          original_name: "VK_ACCESS_2_HOST_WRITE_BIT",
          name: "ACCESS2_HOST_WRITE",
          origin: Vulkan1_3,
          value: 16384,
        ),
        Bit(
          original_name: "VK_ACCESS_2_MEMORY_READ_BIT",
          name: "ACCESS2_MEMORY_READ",
          origin: Vulkan1_3,
          value: 32768,
        ),
        Bit(
          original_name: "VK_ACCESS_2_MEMORY_WRITE_BIT",
          name: "ACCESS2_MEMORY_WRITE",
          origin: Vulkan1_3,
          value: 65536,
        ),
        Bit(
          original_name: "VK_ACCESS_2_SHADER_SAMPLED_READ_BIT",
          name: "ACCESS2_SHADER_SAMPLED_READ",
          origin: Vulkan1_3,
          value: 4294967296,
        ),
        Bit(
          original_name: "VK_ACCESS_2_SHADER_STORAGE_READ_BIT",
          name: "ACCESS2_SHADER_STORAGE_READ",
          origin: Vulkan1_3,
          value: 8589934592,
        ),
        Bit(
          original_name: "VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT",
          name: "ACCESS2_SHADER_STORAGE_WRITE",
          origin: Vulkan1_3,
          value: 17179869184,
        ),
        Bit(
          original_name: "VK_ACCESS_2_VIDEO_DECODE_READ_BIT_KHR",
          name: "ACCESS2_VIDEO_DECODE_READ_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 34359738368,
        ),
        Bit(
          original_name: "VK_ACCESS_2_VIDEO_DECODE_WRITE_BIT_KHR",
          name: "ACCESS2_VIDEO_DECODE_WRITE_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 68719476736,
        ),
        Bit(
          original_name: "VK_ACCESS_2_VIDEO_ENCODE_READ_BIT_KHR",
          name: "ACCESS2_VIDEO_ENCODE_READ_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 137438953472,
        ),
        Bit(
          original_name: "VK_ACCESS_2_VIDEO_ENCODE_WRITE_BIT_KHR",
          name: "ACCESS2_VIDEO_ENCODE_WRITE_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 274877906944,
        ),
        Bit(
          original_name: "VK_ACCESS_2_TRANSFORM_FEEDBACK_WRITE_BIT_EXT",
          name: "ACCESS2_TRANSFORM_FEEDBACK_WRITE_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 33554432,
        ),
        Bit(
          original_name: "VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_READ_BIT_EXT",
          name: "ACCESS2_TRANSFORM_FEEDBACK_COUNTER_READ_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 67108864,
        ),
        Bit(
          original_name: "VK_ACCESS_2_TRANSFORM_FEEDBACK_COUNTER_WRITE_BIT_EXT",
          name: "ACCESS2_TRANSFORM_FEEDBACK_COUNTER_WRITE_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 134217728,
        ),
        Bit(
          original_name: "VK_ACCESS_2_CONDITIONAL_RENDERING_READ_BIT_EXT",
          name: "ACCESS2_CONDITIONAL_RENDERING_READ_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 1048576,
        ),
        Bit(
          original_name: "VK_ACCESS_2_COMMAND_PREPROCESS_READ_BIT_NV",
          name: "ACCESS2_COMMAND_PREPROCESS_READ_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 131072,
        ),
        Bit(
          original_name: "VK_ACCESS_2_COMMAND_PREPROCESS_WRITE_BIT_NV",
          name: "ACCESS2_COMMAND_PREPROCESS_WRITE_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 262144,
        ),
        Bit(
          original_name: "VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR",
          name: "ACCESS2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 8388608,
        ),
        Bit(
          original_name: "VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR",
          name: "ACCESS2_ACCELERATION_STRUCTURE_READ_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 2097152,
        ),
        Bit(
          original_name: "VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR",
          name: "ACCESS2_ACCELERATION_STRUCTURE_WRITE_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 4194304,
        ),
        Bit(
          original_name: "VK_ACCESS_2_FRAGMENT_DENSITY_MAP_READ_BIT_EXT",
          name: "ACCESS2_FRAGMENT_DENSITY_MAP_READ_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 16777216,
        ),
        Bit(
          original_name: "VK_ACCESS_2_COLOR_ATTACHMENT_READ_NONCOHERENT_BIT_EXT",
          name: "ACCESS2_COLOR_ATTACHMENT_READ_NONCOHERENT_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 524288,
        ),
        Bit(
          original_name: "VK_ACCESS_2_RESERVED_41_BIT_AMD",
          name: "ACCESS2_RESERVED_41_AMD",
          origin: Extension("VK_AMD_extension_317", 317, true),
          value: 2199023255552,
        ),
        Bit(
          original_name: "VK_ACCESS_2_INVOCATION_MASK_READ_BIT_HUAWEI",
          name: "ACCESS2_INVOCATION_MASK_READ_HUAWEI",
          origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
          value: 549755813888,
        ),
        Bit(
          original_name: "VK_ACCESS_2_RESERVED_387_BIT_KHR",
          name: "ACCESS2_RESERVED_387_KHR",
          origin: Extension("VK_KHR_extension_387", 387, true),
          value: 1099511627776,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_ACCESS_2_NONE_KHR",
          name: "ACCESS2_NONE_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_NONE",
        ),
        Alias(
          original_name: "VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT_KHR",
          name: "ACCESS2_INDIRECT_COMMAND_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_INDIRECT_COMMAND_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_INDEX_READ_BIT_KHR",
          name: "ACCESS2_INDEX_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_INDEX_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT_KHR",
          name: "ACCESS2_VERTEX_ATTRIBUTE_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_VERTEX_ATTRIBUTE_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_UNIFORM_READ_BIT_KHR",
          name: "ACCESS2_UNIFORM_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_UNIFORM_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT_KHR",
          name: "ACCESS2_INPUT_ATTACHMENT_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_INPUT_ATTACHMENT_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_SHADER_READ_BIT_KHR",
          name: "ACCESS2_SHADER_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_SHADER_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_SHADER_WRITE_BIT_KHR",
          name: "ACCESS2_SHADER_WRITE_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_SHADER_WRITE_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT_KHR",
          name: "ACCESS2_COLOR_ATTACHMENT_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_COLOR_ATTACHMENT_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT_KHR",
          name: "ACCESS2_COLOR_ATTACHMENT_WRITE_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_COLOR_ATTACHMENT_WRITE_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT_KHR",
          name: "ACCESS2_DEPTH_STENCIL_ATTACHMENT_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT_KHR",
          name: "ACCESS2_DEPTH_STENCIL_ATTACHMENT_WRITE_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_DEPTH_STENCIL_ATTACHMENT_WRITE_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_TRANSFER_READ_BIT_KHR",
          name: "ACCESS2_TRANSFER_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_TRANSFER_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_TRANSFER_WRITE_BIT_KHR",
          name: "ACCESS2_TRANSFER_WRITE_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_TRANSFER_WRITE_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_HOST_READ_BIT_KHR",
          name: "ACCESS2_HOST_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_HOST_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_HOST_WRITE_BIT_KHR",
          name: "ACCESS2_HOST_WRITE_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_HOST_WRITE_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_MEMORY_READ_BIT_KHR",
          name: "ACCESS2_MEMORY_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_MEMORY_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_MEMORY_WRITE_BIT_KHR",
          name: "ACCESS2_MEMORY_WRITE_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_MEMORY_WRITE_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_SHADER_SAMPLED_READ_BIT_KHR",
          name: "ACCESS2_SHADER_SAMPLED_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_SHADER_SAMPLED_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_SHADER_STORAGE_READ_BIT_KHR",
          name: "ACCESS2_SHADER_STORAGE_READ_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_SHADER_STORAGE_READ_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT_KHR",
          name: "ACCESS2_SHADER_STORAGE_WRITE_KHR",
          origin: Vulkan1_3,
          of: "VK_ACCESS_2_SHADER_STORAGE_WRITE_BIT",
        ),
        Alias(
          original_name: "VK_ACCESS_2_SHADING_RATE_IMAGE_READ_BIT_NV",
          name: "ACCESS2_SHADING_RATE_IMAGE_READ_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_ACCESS_2_FRAGMENT_SHADING_RATE_ATTACHMENT_READ_BIT_KHR",
        ),
        Alias(
          original_name: "VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_NV",
          name: "ACCESS2_ACCELERATION_STRUCTURE_READ_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_ACCESS_2_ACCELERATION_STRUCTURE_READ_BIT_KHR",
        ),
        Alias(
          original_name: "VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_NV",
          name: "ACCESS2_ACCELERATION_STRUCTURE_WRITE_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_ACCESS_2_ACCELERATION_STRUCTURE_WRITE_BIT_KHR",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkPipelineStageFlagBits2",
      name: "PipelineStageFlagBits2",
      origin: Vulkan1_3,
      width: 8,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_NONE",
          name: "PIPELINE_STAGE2_NONE",
          origin: Vulkan1_3,
          value: 0,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT",
          name: "PIPELINE_STAGE2_TOP_OF_PIPE",
          origin: Vulkan1_3,
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT",
          name: "PIPELINE_STAGE2_DRAW_INDIRECT",
          origin: Vulkan1_3,
          value: 2,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT",
          name: "PIPELINE_STAGE2_VERTEX_INPUT",
          origin: Vulkan1_3,
          value: 4,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT",
          name: "PIPELINE_STAGE2_VERTEX_SHADER",
          origin: Vulkan1_3,
          value: 8,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT",
          name: "PIPELINE_STAGE2_TESSELLATION_CONTROL_SHADER",
          origin: Vulkan1_3,
          value: 16,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT",
          name: "PIPELINE_STAGE2_TESSELLATION_EVALUATION_SHADER",
          origin: Vulkan1_3,
          value: 32,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT",
          name: "PIPELINE_STAGE2_GEOMETRY_SHADER",
          origin: Vulkan1_3,
          value: 64,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT",
          name: "PIPELINE_STAGE2_FRAGMENT_SHADER",
          origin: Vulkan1_3,
          value: 128,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT",
          name: "PIPELINE_STAGE2_EARLY_FRAGMENT_TESTS",
          origin: Vulkan1_3,
          value: 256,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT",
          name: "PIPELINE_STAGE2_LATE_FRAGMENT_TESTS",
          origin: Vulkan1_3,
          value: 512,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT",
          name: "PIPELINE_STAGE2_COLOR_ATTACHMENT_OUTPUT",
          origin: Vulkan1_3,
          value: 1024,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT",
          name: "PIPELINE_STAGE2_COMPUTE_SHADER",
          origin: Vulkan1_3,
          value: 2048,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT",
          name: "PIPELINE_STAGE2_ALL_TRANSFER",
          origin: Vulkan1_3,
          value: 4096,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT",
          name: "PIPELINE_STAGE2_BOTTOM_OF_PIPE",
          origin: Vulkan1_3,
          value: 8192,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_HOST_BIT",
          name: "PIPELINE_STAGE2_HOST",
          origin: Vulkan1_3,
          value: 16384,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT",
          name: "PIPELINE_STAGE2_ALL_GRAPHICS",
          origin: Vulkan1_3,
          value: 32768,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT",
          name: "PIPELINE_STAGE2_ALL_COMMANDS",
          origin: Vulkan1_3,
          value: 65536,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_COPY_BIT",
          name: "PIPELINE_STAGE2_COPY",
          origin: Vulkan1_3,
          value: 4294967296,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_RESOLVE_BIT",
          name: "PIPELINE_STAGE2_RESOLVE",
          origin: Vulkan1_3,
          value: 8589934592,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_BLIT_BIT",
          name: "PIPELINE_STAGE2_BLIT",
          origin: Vulkan1_3,
          value: 17179869184,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_CLEAR_BIT",
          name: "PIPELINE_STAGE2_CLEAR",
          origin: Vulkan1_3,
          value: 34359738368,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT",
          name: "PIPELINE_STAGE2_INDEX_INPUT",
          origin: Vulkan1_3,
          value: 68719476736,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT",
          name: "PIPELINE_STAGE2_VERTEX_ATTRIBUTE_INPUT",
          origin: Vulkan1_3,
          value: 137438953472,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT",
          name: "PIPELINE_STAGE2_PRE_RASTERIZATION_SHADERS",
          origin: Vulkan1_3,
          value: 274877906944,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_VIDEO_DECODE_BIT_KHR",
          name: "PIPELINE_STAGE2_VIDEO_DECODE_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 67108864,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_VIDEO_ENCODE_BIT_KHR",
          name: "PIPELINE_STAGE2_VIDEO_ENCODE_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 134217728,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_TRANSFORM_FEEDBACK_BIT_EXT",
          name: "PIPELINE_STAGE2_TRANSFORM_FEEDBACK_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 16777216,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_CONDITIONAL_RENDERING_BIT_EXT",
          name: "PIPELINE_STAGE2_CONDITIONAL_RENDERING_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 262144,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_COMMAND_PREPROCESS_BIT_NV",
          name: "PIPELINE_STAGE2_COMMAND_PREPROCESS_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 131072,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
          name: "PIPELINE_STAGE2_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 4194304,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR",
          name: "PIPELINE_STAGE2_ACCELERATION_STRUCTURE_BUILD_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 33554432,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR",
          name: "PIPELINE_STAGE2_RAY_TRACING_SHADER_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 2097152,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_FRAGMENT_DENSITY_PROCESS_BIT_EXT",
          name: "PIPELINE_STAGE2_FRAGMENT_DENSITY_PROCESS_EXT",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 8388608,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_TASK_SHADER_BIT_NV",
          name: "PIPELINE_STAGE2_TASK_SHADER_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 524288,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_MESH_SHADER_BIT_NV",
          name: "PIPELINE_STAGE2_MESH_SHADER_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 1048576,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_SUBPASS_SHADING_BIT_HUAWEI",
          name: "PIPELINE_STAGE2_SUBPASS_SHADING_HUAWEI",
          origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
          value: 549755813888,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_INVOCATION_MASK_BIT_HUAWEI",
          name: "PIPELINE_STAGE2_INVOCATION_MASK_HUAWEI",
          origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
          value: 1099511627776,
        ),
        Bit(
          original_name: "VK_PIPELINE_STAGE_2_RESERVED_387_BIT_KHR",
          name: "PIPELINE_STAGE2_RESERVED_387_KHR",
          origin: Extension("VK_KHR_extension_387", 387, true),
          value: 268435456,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_NONE_KHR",
          name: "PIPELINE_STAGE2_NONE_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_NONE",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT_KHR",
          name: "PIPELINE_STAGE2_TOP_OF_PIPE_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_TOP_OF_PIPE_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT_KHR",
          name: "PIPELINE_STAGE2_DRAW_INDIRECT_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_DRAW_INDIRECT_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT_KHR",
          name: "PIPELINE_STAGE2_VERTEX_INPUT_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_VERTEX_INPUT_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT_KHR",
          name: "PIPELINE_STAGE2_VERTEX_SHADER_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_VERTEX_SHADER_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT_KHR",
          name: "PIPELINE_STAGE2_TESSELLATION_CONTROL_SHADER_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_TESSELLATION_CONTROL_SHADER_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT_KHR",
          name: "PIPELINE_STAGE2_TESSELLATION_EVALUATION_SHADER_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_TESSELLATION_EVALUATION_SHADER_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT_KHR",
          name: "PIPELINE_STAGE2_GEOMETRY_SHADER_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_GEOMETRY_SHADER_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT_KHR",
          name: "PIPELINE_STAGE2_FRAGMENT_SHADER_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_FRAGMENT_SHADER_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT_KHR",
          name: "PIPELINE_STAGE2_EARLY_FRAGMENT_TESTS_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_EARLY_FRAGMENT_TESTS_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT_KHR",
          name: "PIPELINE_STAGE2_LATE_FRAGMENT_TESTS_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_LATE_FRAGMENT_TESTS_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT_KHR",
          name: "PIPELINE_STAGE2_COLOR_ATTACHMENT_OUTPUT_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_COLOR_ATTACHMENT_OUTPUT_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT_KHR",
          name: "PIPELINE_STAGE2_COMPUTE_SHADER_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_COMPUTE_SHADER_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR",
          name: "PIPELINE_STAGE2_ALL_TRANSFER_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_TRANSFER_BIT",
          name: "PIPELINE_STAGE2_TRANSFER",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_ALL_TRANSFER_BIT_KHR",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_TRANSFER_BIT_KHR",
          name: "PIPELINE_STAGE2_TRANSFER_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_TRANSFER_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT_KHR",
          name: "PIPELINE_STAGE2_BOTTOM_OF_PIPE_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_BOTTOM_OF_PIPE_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_HOST_BIT_KHR",
          name: "PIPELINE_STAGE2_HOST_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_HOST_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT_KHR",
          name: "PIPELINE_STAGE2_ALL_GRAPHICS_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_ALL_GRAPHICS_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT_KHR",
          name: "PIPELINE_STAGE2_ALL_COMMANDS_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_ALL_COMMANDS_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_COPY_BIT_KHR",
          name: "PIPELINE_STAGE2_COPY_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_COPY_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_RESOLVE_BIT_KHR",
          name: "PIPELINE_STAGE2_RESOLVE_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_RESOLVE_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_BLIT_BIT_KHR",
          name: "PIPELINE_STAGE2_BLIT_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_BLIT_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_CLEAR_BIT_KHR",
          name: "PIPELINE_STAGE2_CLEAR_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_CLEAR_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT_KHR",
          name: "PIPELINE_STAGE2_INDEX_INPUT_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_INDEX_INPUT_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT_KHR",
          name: "PIPELINE_STAGE2_VERTEX_ATTRIBUTE_INPUT_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_VERTEX_ATTRIBUTE_INPUT_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT_KHR",
          name: "PIPELINE_STAGE2_PRE_RASTERIZATION_SHADERS_KHR",
          origin: Vulkan1_3,
          of: "VK_PIPELINE_STAGE_2_PRE_RASTERIZATION_SHADERS_BIT",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_SHADING_RATE_IMAGE_BIT_NV",
          name: "PIPELINE_STAGE2_SHADING_RATE_IMAGE_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_PIPELINE_STAGE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_NV",
          name: "PIPELINE_STAGE2_RAY_TRACING_SHADER_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_PIPELINE_STAGE_2_RAY_TRACING_SHADER_BIT_KHR",
        ),
        Alias(
          original_name: "VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_NV",
          name: "PIPELINE_STAGE2_ACCELERATION_STRUCTURE_BUILD_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_PIPELINE_STAGE_2_ACCELERATION_STRUCTURE_BUILD_BIT_KHR",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkSubmitFlagBits",
      name: "SubmitFlagBits",
      origin: Vulkan1_3,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_SUBMIT_PROTECTED_BIT",
          name: "PROTECTED",
          origin: Vulkan1_3,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SUBMIT_PROTECTED_BIT_KHR",
          name: "PROTECTED_KHR",
          origin: Vulkan1_3,
          of: "VK_SUBMIT_PROTECTED_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkEventCreateFlagBits",
      name: "EventCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_EVENT_CREATE_DEVICE_ONLY_BIT",
          name: "DEVICE_ONLY",
          origin: Vulkan1_3,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_EVENT_CREATE_DEVICE_ONLY_BIT_KHR",
          name: "DEVICE_ONLY_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_EVENT_CREATE_DEVICE_ONLY_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkPipelineLayoutCreateFlagBits",
      name: "PipelineLayoutCreateFlagBits",
      origin: Unknown,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_LAYOUT_CREATE_RESERVED_0_BIT_AMD",
          name: "RESERVED0_AMD",
          origin: Extension("VK_AMD_extension_319", 319, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_LAYOUT_CREATE_RESERVED_1_BIT_AMD",
          name: "RESERVED1_AMD",
          origin: Extension("VK_AMD_extension_321", 321, true),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkPipelineColorBlendStateCreateFlagBits",
      name: "PipelineColorBlendStateCreateFlagBits",
      origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_COLOR_BLEND_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_BIT_ARM",
          name: "RASTERIZATION_ORDER_ATTACHMENT_ACCESS_ARM",
          origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkPipelineDepthStencilStateCreateFlagBits",
      name: "PipelineDepthStencilStateCreateFlagBits",
      origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_BIT_ARM",
          name: "RASTERIZATION_ORDER_ATTACHMENT_DEPTH_ACCESS_ARM",
          origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_DEPTH_STENCIL_STATE_CREATE_RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_BIT_ARM",
          name: "RASTERIZATION_ORDER_ATTACHMENT_STENCIL_ACCESS_ARM",
          origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoCodecOperationFlagBitsKHR",
      name: "VideoCodecOperationFlagBitsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_CODEC_OPERATION_INVALID_BIT_KHR",
          name: "INVALID",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_CODEC_OPERATION_ENCODE_H264_BIT_EXT",
          name: "ENCODE_H264_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 65536,
        ),
        Bit(
          original_name: "VK_VIDEO_CODEC_OPERATION_ENCODE_H265_BIT_EXT",
          name: "ENCODE_H265_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 131072,
        ),
        Bit(
          original_name: "VK_VIDEO_CODEC_OPERATION_DECODE_H264_BIT_EXT",
          name: "DECODE_H264_EXT",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_CODEC_OPERATION_DECODE_H265_BIT_EXT",
          name: "DECODE_H265_EXT",
          origin: Extension("VK_EXT_video_decode_h265", 188, true),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoChromaSubsamplingFlagBitsKHR",
      name: "VideoChromaSubsamplingFlagBitsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_CHROMA_SUBSAMPLING_INVALID_BIT_KHR",
          name: "INVALID",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_CHROMA_SUBSAMPLING_MONOCHROME_BIT_KHR",
          name: "MONOCHROME",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_CHROMA_SUBSAMPLING_420_BIT_KHR",
          name: "420",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_CHROMA_SUBSAMPLING_422_BIT_KHR",
          name: "422",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_VIDEO_CHROMA_SUBSAMPLING_444_BIT_KHR",
          name: "444",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 8,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoComponentBitDepthFlagBitsKHR",
      name: "VideoComponentBitDepthFlagBitsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_COMPONENT_BIT_DEPTH_INVALID_KHR",
          name: "VIDEO_COMPONENT_DEPTH_INVALID",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_COMPONENT_BIT_DEPTH_8_BIT_KHR",
          name: "VIDEO_COMPONENT_DEPTH8",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_COMPONENT_BIT_DEPTH_10_BIT_KHR",
          name: "VIDEO_COMPONENT_DEPTH10",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_VIDEO_COMPONENT_BIT_DEPTH_12_BIT_KHR",
          name: "VIDEO_COMPONENT_DEPTH12",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 16,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoCapabilityFlagBitsKHR",
      name: "VideoCapabilityFlagBitsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_CAPABILITY_PROTECTED_CONTENT_BIT_KHR",
          name: "PROTECTED_CONTENT",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_CAPABILITY_SEPARATE_REFERENCE_IMAGES_BIT_KHR",
          name: "SEPARATE_REFERENCE_IMAGES",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoSessionCreateFlagBitsKHR",
      name: "VideoSessionCreateFlagBitsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_SESSION_CREATE_DEFAULT_KHR",
          name: "DEFAULT",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_SESSION_CREATE_PROTECTED_CONTENT_BIT_KHR",
          name: "PROTECTED_CONTENT",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoCodingQualityPresetFlagBitsKHR",
      name: "VideoCodingQualityPresetFlagBitsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_CODING_QUALITY_PRESET_NORMAL_BIT_KHR",
          name: "NORMAL",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_CODING_QUALITY_PRESET_POWER_BIT_KHR",
          name: "POWER",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_CODING_QUALITY_PRESET_QUALITY_BIT_KHR",
          name: "QUALITY",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoDecodeH264PictureLayoutFlagBitsEXT",
      name: "VideoDecodeH264PictureLayoutFlagBitsEXT",
      origin: Extension("VK_EXT_video_decode_h264", 41, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_PROGRESSIVE_EXT",
          name: "PROGRESSIVE",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_INTERLEAVED_LINES_BIT_EXT",
          name: "INTERLACED_INTERLEAVED_LINES",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_DECODE_H264_PICTURE_LAYOUT_INTERLACED_SEPARATE_PLANES_BIT_EXT",
          name: "INTERLACED_SEPARATE_PLANES",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoCodingControlFlagBitsKHR",
      name: "VideoCodingControlFlagBitsKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_CODING_CONTROL_DEFAULT_KHR",
          name: "DEFAULT",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_CODING_CONTROL_RESET_BIT_KHR",
          name: "RESET",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoDecodeCapabilityFlagBitsKHR",
      name: "VideoDecodeCapabilityFlagBitsKHR",
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_DECODE_CAPABILITY_DEFAULT_KHR",
          name: "DEFAULT",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_COINCIDE_BIT_KHR",
          name: "DPB_AND_OUTPUT_COINCIDE",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_DECODE_CAPABILITY_DPB_AND_OUTPUT_DISTINCT_BIT_KHR",
          name: "DPB_AND_OUTPUT_DISTINCT",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoDecodeFlagBitsKHR",
      name: "VideoDecodeFlagBitsKHR",
      origin: Extension("VK_KHR_video_decode_queue", 25, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_DECODE_DEFAULT_KHR",
          name: "DEFAULT",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_DECODE_RESERVED_0_BIT_KHR",
          name: "RESERVED0",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeFlagBitsKHR",
      name: "VideoEncodeFlagBitsKHR",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_DEFAULT_KHR",
          name: "DEFAULT",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_RESERVED_0_BIT_KHR",
          name: "RESERVED0",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeCapabilityFlagBitsKHR",
      name: "VideoEncodeCapabilityFlagBitsKHR",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_CAPABILITY_DEFAULT_KHR",
          name: "DEFAULT",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_CAPABILITY_PRECEDING_EXTERNALLY_ENCODED_BYTES_BIT_KHR",
          name: "PRECEDING_EXTERNALLY_ENCODED_BYTES",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeRateControlFlagBitsKHR",
      name: "VideoEncodeRateControlFlagBitsKHR",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_RATE_CONTROL_DEFAULT_KHR",
          name: "DEFAULT",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_RATE_CONTROL_RESERVED_0_BIT_KHR",
          name: "RESERVED0",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeRateControlModeFlagBitsKHR",
      name: "VideoEncodeRateControlModeFlagBitsKHR",
      origin: Extension("VK_KHR_video_encode_queue", 300, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_RATE_CONTROL_MODE_NONE_BIT_KHR",
          name: "NONE",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_RATE_CONTROL_MODE_CBR_BIT_KHR",
          name: "CBR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_RATE_CONTROL_MODE_VBR_BIT_KHR",
          name: "VBR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH264CapabilityFlagBitsEXT",
      name: "VideoEncodeH264CapabilityFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_DIRECT_8X8_INFERENCE_BIT_EXT",
          name: "DIRECT8X8_INFERENCE",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_SEPARATE_COLOUR_PLANE_BIT_EXT",
          name: "SEPARATE_COLOUR_PLANE",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_QPPRIME_Y_ZERO_TRANSFORM_BYPASS_BIT_EXT",
          name: "QPPRIME_Y_ZERO_TRANSFORM_BYPASS",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 4,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_SCALING_LISTS_BIT_EXT",
          name: "SCALING_LISTS",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 8,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_HRD_COMPLIANCE_BIT_EXT",
          name: "HRD_COMPLIANCE",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 16,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_CHROMA_QP_OFFSET_BIT_EXT",
          name: "CHROMA_QP_OFFSET",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 32,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_SECOND_CHROMA_QP_OFFSET_BIT_EXT",
          name: "SECOND_CHROMA_QP_OFFSET",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 64,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_PIC_INIT_QP_MINUS26_BIT_EXT",
          name: "PIC_INIT_QP_MINUS26",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 128,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_WEIGHTED_PRED_BIT_EXT",
          name: "WEIGHTED_PRED",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 256,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_WEIGHTED_BIPRED_EXPLICIT_BIT_EXT",
          name: "WEIGHTED_BIPRED_EXPLICIT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 512,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_WEIGHTED_BIPRED_IMPLICIT_BIT_EXT",
          name: "WEIGHTED_BIPRED_IMPLICIT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1024,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_WEIGHTED_PRED_NO_TABLE_BIT_EXT",
          name: "WEIGHTED_PRED_NO_TABLE",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 2048,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_TRANSFORM_8X8_BIT_EXT",
          name: "TRANSFORM8X8",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 4096,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_CABAC_BIT_EXT",
          name: "CABAC",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 8192,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_CAVLC_BIT_EXT",
          name: "CAVLC",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 16384,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_DISABLED_BIT_EXT",
          name: "DEBLOCKING_FILTER_DISABLED",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 32768,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_ENABLED_BIT_EXT",
          name: "DEBLOCKING_FILTER_ENABLED",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 65536,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_DEBLOCKING_FILTER_PARTIAL_BIT_EXT",
          name: "DEBLOCKING_FILTER_PARTIAL",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 131072,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_DISABLE_DIRECT_SPATIAL_MV_PRED_BIT_EXT",
          name: "DISABLE_DIRECT_SPATIAL_MV_PRED",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 262144,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_MULTIPLE_SLICE_PER_FRAME_BIT_EXT",
          name: "MULTIPLE_SLICE_PER_FRAME",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 524288,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_SLICE_MB_COUNT_BIT_EXT",
          name: "SLICE_MB_COUNT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1048576,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_ROW_UNALIGNED_SLICE_BIT_EXT",
          name: "ROW_UNALIGNED_SLICE",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 2097152,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_EXT",
          name: "DIFFERENT_SLICE_TYPE",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 4194304,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH264InputModeFlagBitsEXT",
      name: "VideoEncodeH264InputModeFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_INPUT_MODE_FRAME_BIT_EXT",
          name: "FRAME",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_INPUT_MODE_SLICE_BIT_EXT",
          name: "SLICE",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_INPUT_MODE_NON_VCL_BIT_EXT",
          name: "NON_VCL",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH264OutputModeFlagBitsEXT",
      name: "VideoEncodeH264OutputModeFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_OUTPUT_MODE_FRAME_BIT_EXT",
          name: "FRAME",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_OUTPUT_MODE_SLICE_BIT_EXT",
          name: "SLICE",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_OUTPUT_MODE_NON_VCL_BIT_EXT",
          name: "NON_VCL",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH264RateControlStructureFlagBitsEXT",
      name: "VideoEncodeH264RateControlStructureFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h264", 39, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_RATE_CONTROL_STRUCTURE_UNKNOWN_EXT",
          name: "UNKNOWN",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_RATE_CONTROL_STRUCTURE_FLAT_BIT_EXT",
          name: "FLAT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H264_RATE_CONTROL_STRUCTURE_DYADIC_BIT_EXT",
          name: "DYADIC",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkImageFormatConstraintsFlagBitsFUCHSIA",
      name: "ImageFormatConstraintsFlagBitsFUCHSIA",
      origin: Unknown,
      width: 4,
      bits: [],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkImageConstraintsInfoFlagBitsFUCHSIA",
      name: "ImageConstraintsInfoFlagBitsFUCHSIA",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_IMAGE_CONSTRAINTS_INFO_CPU_READ_RARELY_FUCHSIA",
          name: "CPU_READ_RARELY",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_CONSTRAINTS_INFO_CPU_READ_OFTEN_FUCHSIA",
          name: "CPU_READ_OFTEN",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_IMAGE_CONSTRAINTS_INFO_CPU_WRITE_RARELY_FUCHSIA",
          name: "CPU_WRITE_RARELY",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_IMAGE_CONSTRAINTS_INFO_CPU_WRITE_OFTEN_FUCHSIA",
          name: "CPU_WRITE_OFTEN",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 8,
        ),
        Bit(
          original_name: "VK_IMAGE_CONSTRAINTS_INFO_PROTECTED_OPTIONAL_FUCHSIA",
          name: "PROTECTED_OPTIONAL",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 16,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkFormatFeatureFlagBits2",
      name: "FormatFeatureFlagBits2",
      origin: Vulkan1_3,
      width: 8,
      bits: [
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE",
          origin: Vulkan1_3,
          value: 1,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT",
          name: "FORMAT_FEATURE2_STORAGE_IMAGE",
          origin: Vulkan1_3,
          value: 2,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT",
          name: "FORMAT_FEATURE2_STORAGE_IMAGE_ATOMIC",
          origin: Vulkan1_3,
          value: 4,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT",
          name: "FORMAT_FEATURE2_UNIFORM_TEXEL_BUFFER",
          origin: Vulkan1_3,
          value: 8,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT",
          name: "FORMAT_FEATURE2_STORAGE_TEXEL_BUFFER",
          origin: Vulkan1_3,
          value: 16,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT",
          name: "FORMAT_FEATURE2_STORAGE_TEXEL_BUFFER_ATOMIC",
          origin: Vulkan1_3,
          value: 32,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT",
          name: "FORMAT_FEATURE2_VERTEX_BUFFER",
          origin: Vulkan1_3,
          value: 64,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT",
          name: "FORMAT_FEATURE2_COLOR_ATTACHMENT",
          origin: Vulkan1_3,
          value: 128,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT",
          name: "FORMAT_FEATURE2_COLOR_ATTACHMENT_BLEND",
          origin: Vulkan1_3,
          value: 256,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT",
          name: "FORMAT_FEATURE2_DEPTH_STENCIL_ATTACHMENT",
          origin: Vulkan1_3,
          value: 512,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_BLIT_SRC_BIT",
          name: "FORMAT_FEATURE2_BLIT_SRC",
          origin: Vulkan1_3,
          value: 1024,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_BLIT_DST_BIT",
          name: "FORMAT_FEATURE2_BLIT_DST",
          origin: Vulkan1_3,
          value: 2048,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_FILTER_LINEAR",
          origin: Vulkan1_3,
          value: 4096,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_FILTER_CUBIC",
          origin: Vulkan1_3,
          value: 8192,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT",
          name: "FORMAT_FEATURE2_TRANSFER_SRC",
          origin: Vulkan1_3,
          value: 16384,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT",
          name: "FORMAT_FEATURE2_TRANSFER_DST",
          origin: Vulkan1_3,
          value: 32768,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_FILTER_MINMAX",
          origin: Vulkan1_3,
          value: 65536,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT",
          name: "FORMAT_FEATURE2_MIDPOINT_CHROMA_SAMPLES",
          origin: Vulkan1_3,
          value: 131072,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER",
          origin: Vulkan1_3,
          value: 262144,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER",
          origin: Vulkan1_3,
          value: 524288,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT",
          origin: Vulkan1_3,
          value: 1048576,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE",
          origin: Vulkan1_3,
          value: 2097152,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_DISJOINT_BIT",
          name: "FORMAT_FEATURE2_DISJOINT",
          origin: Vulkan1_3,
          value: 4194304,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT",
          name: "FORMAT_FEATURE2_COSITED_CHROMA_SAMPLES",
          origin: Vulkan1_3,
          value: 8388608,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT",
          name: "FORMAT_FEATURE2_STORAGE_READ_WITHOUT_FORMAT",
          origin: Vulkan1_3,
          value: 2147483648,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT",
          name: "FORMAT_FEATURE2_STORAGE_WRITE_WITHOUT_FORMAT",
          origin: Vulkan1_3,
          value: 4294967296,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_DEPTH_COMPARISON",
          origin: Vulkan1_3,
          value: 8589934592,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_VIDEO_DECODE_OUTPUT_BIT_KHR",
          name: "FORMAT_FEATURE2_VIDEO_DECODE_OUTPUT_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 33554432,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_VIDEO_DECODE_DPB_BIT_KHR",
          name: "FORMAT_FEATURE2_VIDEO_DECODE_DPB_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 67108864,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_BIT_KHR",
          name: "FORMAT_FEATURE2_ACCELERATION_STRUCTURE_VERTEX_BUFFER_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 536870912,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_FRAGMENT_DENSITY_MAP_BIT_EXT",
          name: "FORMAT_FEATURE2_FRAGMENT_DENSITY_MAP_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 16777216,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_FRAGMENT_SHADING_RATE_ATTACHMENT_BIT_KHR",
          name: "FORMAT_FEATURE2_FRAGMENT_SHADING_RATE_ATTACHMENT_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1073741824,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_VIDEO_ENCODE_INPUT_BIT_KHR",
          name: "FORMAT_FEATURE2_VIDEO_ENCODE_INPUT_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 134217728,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_VIDEO_ENCODE_DPB_BIT_KHR",
          name: "FORMAT_FEATURE2_VIDEO_ENCODE_DPB_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 268435456,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_LINEAR_COLOR_ATTACHMENT_BIT_NV",
          name: "FORMAT_FEATURE2_LINEAR_COLOR_ATTACHMENT_NV",
          origin: Extension("VK_NV_linear_color_attachment", 431, false),
          value: 274877906944,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_RESERVED_34_BIT_QCOM",
          name: "FORMAT_FEATURE2_RESERVED_34_QCOM",
          origin: Extension("VK_QCOM_extension_441", 441, true),
          value: 17179869184,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_RESERVED_35_BIT_QCOM",
          name: "FORMAT_FEATURE2_RESERVED_35_QCOM",
          origin: Extension("VK_QCOM_extension_441", 441, true),
          value: 34359738368,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_RESERVED_36_BIT_QCOM",
          name: "FORMAT_FEATURE2_RESERVED_36_QCOM",
          origin: Extension("VK_QCOM_extension_441", 441, true),
          value: 68719476736,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_RESERVED_37_BIT_QCOM",
          name: "FORMAT_FEATURE2_RESERVED_37_QCOM",
          origin: Extension("VK_QCOM_extension_441", 441, true),
          value: 137438953472,
        ),
        Bit(
          original_name: "VK_FORMAT_FEATURE_2_RESERVED_39_BIT_EXT",
          name: "FORMAT_FEATURE2_RESERVED_39_EXT",
          origin: Extension("VK_EXT_extension_461", 461, true),
          value: 549755813888,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT_KHR",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT_KHR",
          name: "FORMAT_FEATURE2_STORAGE_IMAGE_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT_KHR",
          name: "FORMAT_FEATURE2_STORAGE_IMAGE_ATOMIC_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_STORAGE_IMAGE_ATOMIC_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT_KHR",
          name: "FORMAT_FEATURE2_UNIFORM_TEXEL_BUFFER_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_UNIFORM_TEXEL_BUFFER_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT_KHR",
          name: "FORMAT_FEATURE2_STORAGE_TEXEL_BUFFER_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT_KHR",
          name: "FORMAT_FEATURE2_STORAGE_TEXEL_BUFFER_ATOMIC_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_STORAGE_TEXEL_BUFFER_ATOMIC_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT_KHR",
          name: "FORMAT_FEATURE2_VERTEX_BUFFER_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_VERTEX_BUFFER_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT_KHR",
          name: "FORMAT_FEATURE2_COLOR_ATTACHMENT_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT_KHR",
          name: "FORMAT_FEATURE2_COLOR_ATTACHMENT_BLEND_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_COLOR_ATTACHMENT_BLEND_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT_KHR",
          name: "FORMAT_FEATURE2_DEPTH_STENCIL_ATTACHMENT_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_DEPTH_STENCIL_ATTACHMENT_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_BLIT_SRC_BIT_KHR",
          name: "FORMAT_FEATURE2_BLIT_SRC_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_BLIT_SRC_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_BLIT_DST_BIT_KHR",
          name: "FORMAT_FEATURE2_BLIT_DST_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_BLIT_DST_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT_KHR",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_FILTER_LINEAR_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_LINEAR_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT_EXT",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_FILTER_CUBIC_EXT",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_CUBIC_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT_KHR",
          name: "FORMAT_FEATURE2_TRANSFER_SRC_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_TRANSFER_SRC_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT_KHR",
          name: "FORMAT_FEATURE2_TRANSFER_DST_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_TRANSFER_DST_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT_KHR",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_FILTER_MINMAX_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_FILTER_MINMAX_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT_KHR",
          name: "FORMAT_FEATURE2_MIDPOINT_CHROMA_SAMPLES_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_MIDPOINT_CHROMA_SAMPLES_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT_KHR",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_LINEAR_FILTER_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT_KHR",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_SEPARATE_RECONSTRUCTION_FILTER_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT_KHR",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT_KHR",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_YCBCR_CONVERSION_CHROMA_RECONSTRUCTION_EXPLICIT_FORCEABLE_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_DISJOINT_BIT_KHR",
          name: "FORMAT_FEATURE2_DISJOINT_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_DISJOINT_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT_KHR",
          name: "FORMAT_FEATURE2_COSITED_CHROMA_SAMPLES_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_COSITED_CHROMA_SAMPLES_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT_KHR",
          name: "FORMAT_FEATURE2_STORAGE_READ_WITHOUT_FORMAT_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_STORAGE_READ_WITHOUT_FORMAT_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT_KHR",
          name: "FORMAT_FEATURE2_STORAGE_WRITE_WITHOUT_FORMAT_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_STORAGE_WRITE_WITHOUT_FORMAT_BIT",
        ),
        Alias(
          original_name: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT_KHR",
          name: "FORMAT_FEATURE2_SAMPLED_IMAGE_DEPTH_COMPARISON_KHR",
          origin: Vulkan1_3,
          of: "VK_FORMAT_FEATURE_2_SAMPLED_IMAGE_DEPTH_COMPARISON_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkRenderingFlagBits",
      name: "RenderingFlagBits",
      origin: Vulkan1_3,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT",
          name: "CONTENTS_SECONDARY_COMMAND_BUFFERS",
          origin: Vulkan1_3,
          value: 1,
        ),
        Bit(
          original_name: "VK_RENDERING_SUSPENDING_BIT",
          name: "SUSPENDING",
          origin: Vulkan1_3,
          value: 2,
        ),
        Bit(
          original_name: "VK_RENDERING_RESUMING_BIT",
          name: "RESUMING",
          origin: Vulkan1_3,
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT_KHR",
          name: "CONTENTS_SECONDARY_COMMAND_BUFFERS_KHR",
          origin: Vulkan1_3,
          of: "VK_RENDERING_CONTENTS_SECONDARY_COMMAND_BUFFERS_BIT",
        ),
        Alias(
          original_name: "VK_RENDERING_SUSPENDING_BIT_KHR",
          name: "SUSPENDING_KHR",
          origin: Vulkan1_3,
          of: "VK_RENDERING_SUSPENDING_BIT",
        ),
        Alias(
          original_name: "VK_RENDERING_RESUMING_BIT_KHR",
          name: "RESUMING_KHR",
          origin: Vulkan1_3,
          of: "VK_RENDERING_RESUMING_BIT",
        ),
      ],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH265CapabilityFlagBitsEXT",
      name: "VideoEncodeH265CapabilityFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_SEPARATE_COLOUR_PLANE_BIT_EXT",
          name: "SEPARATE_COLOUR_PLANE",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_SCALING_LISTS_BIT_EXT",
          name: "SCALING_LISTS",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_SAMPLE_ADAPTIVE_OFFSET_ENABLED_BIT_EXT",
          name: "SAMPLE_ADAPTIVE_OFFSET_ENABLED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 4,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_PCM_ENABLE_BIT_EXT",
          name: "PCM_ENABLE",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 8,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_SPS_TEMPORAL_MVP_ENABLED_BIT_EXT",
          name: "SPS_TEMPORAL_MVP_ENABLED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 16,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_HRD_COMPLIANCE_BIT_EXT",
          name: "HRD_COMPLIANCE",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 32,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_INIT_QP_MINUS26_BIT_EXT",
          name: "INIT_QP_MINUS26",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 64,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_LOG2_PARALLEL_MERGE_LEVEL_MINUS2_BIT_EXT",
          name: "LOG2_PARALLEL_MERGE_LEVEL_MINUS2",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 128,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_SIGN_DATA_HIDING_ENABLED_BIT_EXT",
          name: "SIGN_DATA_HIDING_ENABLED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 256,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_TRANSFORM_SKIP_ENABLED_BIT_EXT",
          name: "TRANSFORM_SKIP_ENABLED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 512,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT_BIT_EXT",
          name: "PPS_SLICE_CHROMA_QP_OFFSETS_PRESENT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1024,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_WEIGHTED_PRED_BIT_EXT",
          name: "WEIGHTED_PRED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 2048,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_WEIGHTED_BIPRED_BIT_EXT",
          name: "WEIGHTED_BIPRED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 4096,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_WEIGHTED_PRED_NO_TABLE_BIT_EXT",
          name: "WEIGHTED_PRED_NO_TABLE",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 8192,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_TRANSQUANT_BYPASS_ENABLED_BIT_EXT",
          name: "TRANSQUANT_BYPASS_ENABLED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 16384,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_ENTROPY_CODING_SYNC_ENABLED_BIT_EXT",
          name: "ENTROPY_CODING_SYNC_ENABLED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 32768,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_DEBLOCKING_FILTER_OVERRIDE_ENABLED_BIT_EXT",
          name: "DEBLOCKING_FILTER_OVERRIDE_ENABLED",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 65536,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILE_PER_FRAME_BIT_EXT",
          name: "MULTIPLE_TILE_PER_FRAME",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 131072,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_SLICE_PER_TILE_BIT_EXT",
          name: "MULTIPLE_SLICE_PER_TILE",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 262144,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_MULTIPLE_TILE_PER_SLICE_BIT_EXT",
          name: "MULTIPLE_TILE_PER_SLICE",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 524288,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_SLICE_SEGMENT_CTB_COUNT_BIT_EXT",
          name: "SLICE_SEGMENT_CTB_COUNT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1048576,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_ROW_UNALIGNED_SLICE_SEGMENT_BIT_EXT",
          name: "ROW_UNALIGNED_SLICE_SEGMENT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 2097152,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_DEPENDENT_SLICE_SEGMENT_BIT_EXT",
          name: "DEPENDENT_SLICE_SEGMENT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 4194304,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CAPABILITY_DIFFERENT_SLICE_TYPE_BIT_EXT",
          name: "DIFFERENT_SLICE_TYPE",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 8388608,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH265InputModeFlagBitsEXT",
      name: "VideoEncodeH265InputModeFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_INPUT_MODE_FRAME_BIT_EXT",
          name: "FRAME",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_INPUT_MODE_SLICE_SEGMENT_BIT_EXT",
          name: "SLICE_SEGMENT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_INPUT_MODE_NON_VCL_BIT_EXT",
          name: "NON_VCL",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH265OutputModeFlagBitsEXT",
      name: "VideoEncodeH265OutputModeFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_OUTPUT_MODE_FRAME_BIT_EXT",
          name: "FRAME",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_OUTPUT_MODE_SLICE_SEGMENT_BIT_EXT",
          name: "SLICE_SEGMENT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_OUTPUT_MODE_NON_VCL_BIT_EXT",
          name: "NON_VCL",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH265RateControlStructureFlagBitsEXT",
      name: "VideoEncodeH265RateControlStructureFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_RATE_CONTROL_STRUCTURE_UNKNOWN_EXT",
          name: "UNKNOWN",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_RATE_CONTROL_STRUCTURE_FLAT_BIT_EXT",
          name: "FLAT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_RATE_CONTROL_STRUCTURE_DYADIC_BIT_EXT",
          name: "DYADIC",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH265CtbSizeFlagBitsEXT",
      name: "VideoEncodeH265CtbSizeFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CTB_SIZE_16_BIT_EXT",
          name: "16",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CTB_SIZE_32_BIT_EXT",
          name: "32",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_CTB_SIZE_64_BIT_EXT",
          name: "64",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkVideoEncodeH265TransformBlockSizeFlagBitsEXT",
      name: "VideoEncodeH265TransformBlockSizeFlagBitsEXT",
      origin: Extension("VK_EXT_video_encode_h265", 40, true),
      width: 4,
      bits: [
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_4_BIT_EXT",
          name: "4",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_8_BIT_EXT",
          name: "8",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_16_BIT_EXT",
          name: "16",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 4,
        ),
        Bit(
          original_name: "VK_VIDEO_ENCODE_H265_TRANSFORM_BLOCK_SIZE_32_BIT_EXT",
          name: "32",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 8,
        ),
      ],
      aliases: [],
    ),
    Bitflag(
      original_name: "VkInstanceCreateFlagBits",
      name: "InstanceCreateFlagBits",
      origin: Vulkan1_0,
      width: 4,
      bits: [
        Bit(
          original_name: "VK_INSTANCE_CREATE_ENUMERATE_PORTABILITY_BIT_KHR",
          name: "ENUMERATE_PORTABILITY_KHR",
          origin: Extension("VK_KHR_portability_enumeration", 395, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
  ],
  enums: [
    Enum(
      original_name: "VkImageLayout",
      name: "ImageLayout",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_IMAGE_LAYOUT_UNDEFINED",
          name: "UNDEFINED",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_GENERAL",
          name: "GENERAL",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_COLOR_ATTACHMENT_OPTIMAL",
          name: "COLOR_ATTACHMENT_OPTIMAL",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_STENCIL_ATTACHMENT_OPTIMAL",
          name: "DEPTH_STENCIL_ATTACHMENT_OPTIMAL",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_STENCIL_READ_ONLY_OPTIMAL",
          name: "DEPTH_STENCIL_READ_ONLY_OPTIMAL",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL",
          name: "SHADER_READ_ONLY_OPTIMAL",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_TRANSFER_SRC_OPTIMAL",
          name: "TRANSFER_SRC_OPTIMAL",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_TRANSFER_DST_OPTIMAL",
          name: "TRANSFER_DST_OPTIMAL",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_PREINITIALIZED",
          name: "PREINITIALIZED",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL",
          name: "DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL",
          origin: Vulkan1_1,
          value: 1000117000,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL",
          name: "DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL",
          origin: Vulkan1_1,
          value: 1000117001,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL",
          name: "DEPTH_ATTACHMENT_OPTIMAL",
          origin: Vulkan1_2,
          value: 1000241000,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL",
          name: "DEPTH_READ_ONLY_OPTIMAL",
          origin: Vulkan1_2,
          value: 1000241001,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL",
          name: "STENCIL_ATTACHMENT_OPTIMAL",
          origin: Vulkan1_2,
          value: 1000241002,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL",
          name: "STENCIL_READ_ONLY_OPTIMAL",
          origin: Vulkan1_2,
          value: 1000241003,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL",
          name: "READ_ONLY_OPTIMAL",
          origin: Vulkan1_3,
          value: 1000314000,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL",
          name: "ATTACHMENT_OPTIMAL",
          origin: Vulkan1_3,
          value: 1000314001,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_PRESENT_SRC_KHR",
          name: "PRESENT_SRC_KHR",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 1000001002,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_VIDEO_DECODE_DST_KHR",
          name: "VIDEO_DECODE_DST_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 1000024000,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_VIDEO_DECODE_SRC_KHR",
          name: "VIDEO_DECODE_SRC_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 1000024001,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_VIDEO_DECODE_DPB_KHR",
          name: "VIDEO_DECODE_DPB_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 1000024002,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_SHARED_PRESENT_KHR",
          name: "SHARED_PRESENT_KHR",
          origin: Extension("VK_KHR_shared_presentable_image", 112, false),
          value: 1000111000,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_FRAGMENT_DENSITY_MAP_OPTIMAL_EXT",
          name: "FRAGMENT_DENSITY_MAP_OPTIMAL_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 1000218000,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR",
          name: "FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1000164003,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_VIDEO_ENCODE_DST_KHR",
          name: "VIDEO_ENCODE_DST_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1000299000,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_VIDEO_ENCODE_SRC_KHR",
          name: "VIDEO_ENCODE_SRC_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1000299001,
        ),
        Bit(
          original_name: "VK_IMAGE_LAYOUT_VIDEO_ENCODE_DPB_KHR",
          name: "VIDEO_ENCODE_DPB_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1000299002,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR",
          name: "DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_STENCIL_ATTACHMENT_OPTIMAL",
        ),
        Alias(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR",
          name: "DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_STENCIL_READ_ONLY_OPTIMAL",
        ),
        Alias(
          original_name: "VK_IMAGE_LAYOUT_SHADING_RATE_OPTIMAL_NV",
          name: "SHADING_RATE_OPTIMAL_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          of: "VK_IMAGE_LAYOUT_FRAGMENT_SHADING_RATE_ATTACHMENT_OPTIMAL_KHR",
        ),
        Alias(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL_KHR",
          name: "DEPTH_ATTACHMENT_OPTIMAL_KHR",
          origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
          of: "VK_IMAGE_LAYOUT_DEPTH_ATTACHMENT_OPTIMAL",
        ),
        Alias(
          original_name: "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL_KHR",
          name: "DEPTH_READ_ONLY_OPTIMAL_KHR",
          origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
          of: "VK_IMAGE_LAYOUT_DEPTH_READ_ONLY_OPTIMAL",
        ),
        Alias(
          original_name: "VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL_KHR",
          name: "STENCIL_ATTACHMENT_OPTIMAL_KHR",
          origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
          of: "VK_IMAGE_LAYOUT_STENCIL_ATTACHMENT_OPTIMAL",
        ),
        Alias(
          original_name: "VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL_KHR",
          name: "STENCIL_READ_ONLY_OPTIMAL_KHR",
          origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
          of: "VK_IMAGE_LAYOUT_STENCIL_READ_ONLY_OPTIMAL",
        ),
        Alias(
          original_name: "VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL_KHR",
          name: "READ_ONLY_OPTIMAL_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_IMAGE_LAYOUT_READ_ONLY_OPTIMAL",
        ),
        Alias(
          original_name: "VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR",
          name: "ATTACHMENT_OPTIMAL_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL",
        ),
      ],
    ),
    Enum(
      original_name: "VkAttachmentLoadOp",
      name: "AttachmentLoadOp",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_ATTACHMENT_LOAD_OP_LOAD",
          name: "LOAD",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_ATTACHMENT_LOAD_OP_CLEAR",
          name: "CLEAR",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_ATTACHMENT_LOAD_OP_DONT_CARE",
          name: "DONT_CARE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_ATTACHMENT_LOAD_OP_NONE_EXT",
          name: "NONE_EXT",
          origin: Extension("VK_EXT_load_store_op_none", 401, false),
          value: 1000400000,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkAttachmentStoreOp",
      name: "AttachmentStoreOp",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_ATTACHMENT_STORE_OP_STORE",
          name: "STORE",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_ATTACHMENT_STORE_OP_DONT_CARE",
          name: "DONT_CARE",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_ATTACHMENT_STORE_OP_NONE",
          name: "NONE",
          origin: Vulkan1_3,
          value: 1000301000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_ATTACHMENT_STORE_OP_NONE_KHR",
          name: "NONE_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_ATTACHMENT_STORE_OP_NONE",
        ),
        Alias(
          original_name: "VK_ATTACHMENT_STORE_OP_NONE_QCOM",
          name: "NONE_QCOM",
          origin: Extension("VK_QCOM_render_pass_store_ops", 302, true),
          of: "VK_ATTACHMENT_STORE_OP_NONE",
        ),
        Alias(
          original_name: "VK_ATTACHMENT_STORE_OP_NONE_EXT",
          name: "NONE_EXT",
          origin: Extension("VK_EXT_load_store_op_none", 401, false),
          of: "VK_ATTACHMENT_STORE_OP_NONE",
        ),
      ],
    ),
    Enum(
      original_name: "VkImageType",
      name: "ImageType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_IMAGE_TYPE_1D",
          name: "1D",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_IMAGE_TYPE_2D",
          name: "2D",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_TYPE_3D",
          name: "3D",
          origin: Vulkan1_0,
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkImageTiling",
      name: "ImageTiling",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_IMAGE_TILING_OPTIMAL",
          name: "OPTIMAL",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_IMAGE_TILING_LINEAR",
          name: "LINEAR",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_TILING_DRM_FORMAT_MODIFIER_EXT",
          name: "DRM_FORMAT_MODIFIER_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 1000158000,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkImageViewType",
      name: "ImageViewType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_IMAGE_VIEW_TYPE_1D",
          name: "1D",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_IMAGE_VIEW_TYPE_2D",
          name: "2D",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_IMAGE_VIEW_TYPE_3D",
          name: "3D",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_IMAGE_VIEW_TYPE_CUBE",
          name: "CUBE",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_IMAGE_VIEW_TYPE_1D_ARRAY",
          name: "1D_ARRAY",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_IMAGE_VIEW_TYPE_2D_ARRAY",
          name: "2D_ARRAY",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_IMAGE_VIEW_TYPE_CUBE_ARRAY",
          name: "CUBE_ARRAY",
          origin: Vulkan1_0,
          value: 6,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkCommandBufferLevel",
      name: "CommandBufferLevel",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_COMMAND_BUFFER_LEVEL_PRIMARY",
          name: "PRIMARY",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_COMMAND_BUFFER_LEVEL_SECONDARY",
          name: "SECONDARY",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkComponentSwizzle",
      name: "ComponentSwizzle",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_COMPONENT_SWIZZLE_IDENTITY",
          name: "IDENTITY",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_COMPONENT_SWIZZLE_ZERO",
          name: "ZERO",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_COMPONENT_SWIZZLE_ONE",
          name: "ONE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_COMPONENT_SWIZZLE_R",
          name: "R",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_COMPONENT_SWIZZLE_G",
          name: "G",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_COMPONENT_SWIZZLE_B",
          name: "B",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_COMPONENT_SWIZZLE_A",
          name: "A",
          origin: Vulkan1_0,
          value: 6,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkDescriptorType",
      name: "DescriptorType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_SAMPLER",
          name: "SAMPLER",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER",
          name: "COMBINED_IMAGE_SAMPLER",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_SAMPLED_IMAGE",
          name: "SAMPLED_IMAGE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_STORAGE_IMAGE",
          name: "STORAGE_IMAGE",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER",
          name: "UNIFORM_TEXEL_BUFFER",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER",
          name: "STORAGE_TEXEL_BUFFER",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER",
          name: "UNIFORM_BUFFER",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER",
          name: "STORAGE_BUFFER",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC",
          name: "UNIFORM_BUFFER_DYNAMIC",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC",
          name: "STORAGE_BUFFER_DYNAMIC",
          origin: Vulkan1_0,
          value: 9,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_INPUT_ATTACHMENT",
          name: "INPUT_ATTACHMENT",
          origin: Vulkan1_0,
          value: 10,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK",
          name: "INLINE_UNIFORM_BLOCK",
          origin: Vulkan1_3,
          value: 1000138000,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_KHR",
          name: "ACCELERATION_STRUCTURE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150000,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_ACCELERATION_STRUCTURE_NV",
          name: "ACCELERATION_STRUCTURE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165000,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_TYPE_MUTABLE_VALVE",
          name: "MUTABLE_VALVE",
          origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
          value: 1000351000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK_EXT",
          name: "INLINE_UNIFORM_BLOCK_EXT",
          origin: Extension("VK_EXT_inline_uniform_block", 139, false),
          of: "VK_DESCRIPTOR_TYPE_INLINE_UNIFORM_BLOCK",
        ),
      ],
    ),
    Enum(
      original_name: "VkQueryType",
      name: "QueryType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_QUERY_TYPE_OCCLUSION",
          name: "OCCLUSION",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_PIPELINE_STATISTICS",
          name: "PIPELINE_STATISTICS",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_TIMESTAMP",
          name: "TIMESTAMP",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_RESULT_STATUS_ONLY_KHR",
          name: "RESULT_STATUS_ONLY_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023000,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_TRANSFORM_FEEDBACK_STREAM_EXT",
          name: "TRANSFORM_FEEDBACK_STREAM_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 1000028004,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_PERFORMANCE_QUERY_KHR",
          name: "PERFORMANCE_QUERY_KHR",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1000116000,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR",
          name: "ACCELERATION_STRUCTURE_COMPACTED_SIZE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150000,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR",
          name: "ACCELERATION_STRUCTURE_SERIALIZATION_SIZE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150001,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV",
          name: "ACCELERATION_STRUCTURE_COMPACTED_SIZE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165000,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_PERFORMANCE_QUERY_INTEL",
          name: "PERFORMANCE_QUERY_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1000210000,
        ),
        Bit(
          original_name: "VK_QUERY_TYPE_VIDEO_ENCODE_BITSTREAM_BUFFER_RANGE_KHR",
          name: "VIDEO_ENCODE_BITSTREAM_BUFFER_RANGE_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1000299000,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkBorderColor",
      name: "BorderColor",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_BORDER_COLOR_FLOAT_TRANSPARENT_BLACK",
          name: "FLOAT_TRANSPARENT_BLACK",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_BORDER_COLOR_INT_TRANSPARENT_BLACK",
          name: "INT_TRANSPARENT_BLACK",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_BORDER_COLOR_FLOAT_OPAQUE_BLACK",
          name: "FLOAT_OPAQUE_BLACK",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_BORDER_COLOR_INT_OPAQUE_BLACK",
          name: "INT_OPAQUE_BLACK",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_BORDER_COLOR_FLOAT_OPAQUE_WHITE",
          name: "FLOAT_OPAQUE_WHITE",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_BORDER_COLOR_INT_OPAQUE_WHITE",
          name: "INT_OPAQUE_WHITE",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_BORDER_COLOR_FLOAT_CUSTOM_EXT",
          name: "FLOAT_CUSTOM_EXT",
          origin: Extension("VK_EXT_custom_border_color", 288, false),
          value: 1000287003,
        ),
        Bit(
          original_name: "VK_BORDER_COLOR_INT_CUSTOM_EXT",
          name: "INT_CUSTOM_EXT",
          origin: Extension("VK_EXT_custom_border_color", 288, false),
          value: 1000287004,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPipelineBindPoint",
      name: "PipelineBindPoint",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_PIPELINE_BIND_POINT_GRAPHICS",
          name: "GRAPHICS",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_PIPELINE_BIND_POINT_COMPUTE",
          name: "COMPUTE",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR",
          name: "RAY_TRACING_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1000165000,
        ),
        Bit(
          original_name: "VK_PIPELINE_BIND_POINT_SUBPASS_SHADING_HUAWEI",
          name: "SUBPASS_SHADING_HUAWEI",
          origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
          value: 1000369003,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_PIPELINE_BIND_POINT_RAY_TRACING_NV",
          name: "RAY_TRACING_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_PIPELINE_BIND_POINT_RAY_TRACING_KHR",
        ),
      ],
    ),
    Enum(
      original_name: "VkPipelineCacheHeaderVersion",
      name: "PipelineCacheHeaderVersion",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_PIPELINE_CACHE_HEADER_VERSION_ONE",
          name: "ONE",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPrimitiveTopology",
      name: "PrimitiveTopology",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_POINT_LIST",
          name: "POINT_LIST",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_LINE_LIST",
          name: "LINE_LIST",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_LINE_STRIP",
          name: "LINE_STRIP",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST",
          name: "TRIANGLE_LIST",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP",
          name: "TRIANGLE_STRIP",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN",
          name: "TRIANGLE_FAN",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY",
          name: "LINE_LIST_WITH_ADJACENCY",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY",
          name: "LINE_STRIP_WITH_ADJACENCY",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY",
          name: "TRIANGLE_LIST_WITH_ADJACENCY",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY",
          name: "TRIANGLE_STRIP_WITH_ADJACENCY",
          origin: Vulkan1_0,
          value: 9,
        ),
        Bit(
          original_name: "VK_PRIMITIVE_TOPOLOGY_PATCH_LIST",
          name: "PATCH_LIST",
          origin: Vulkan1_0,
          value: 10,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkSharingMode",
      name: "SharingMode",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_SHARING_MODE_EXCLUSIVE",
          name: "EXCLUSIVE",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_SHARING_MODE_CONCURRENT",
          name: "CONCURRENT",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkIndexType",
      name: "IndexType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_INDEX_TYPE_UINT16",
          name: "UINT16",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_INDEX_TYPE_UINT32",
          name: "UINT32",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_INDEX_TYPE_NONE_KHR",
          name: "NONE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000165000,
        ),
        Bit(
          original_name: "VK_INDEX_TYPE_UINT8_EXT",
          name: "UINT8_EXT",
          origin: Extension("VK_EXT_index_type_uint8", 266, false),
          value: 1000265000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_INDEX_TYPE_NONE_NV",
          name: "NONE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_INDEX_TYPE_NONE_KHR",
        ),
      ],
    ),
    Enum(
      original_name: "VkFilter",
      name: "Filter",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_FILTER_NEAREST",
          name: "NEAREST",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_FILTER_LINEAR",
          name: "LINEAR",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_FILTER_CUBIC_IMG",
          name: "CUBIC_IMG",
          origin: Extension("VK_IMG_filter_cubic", 16, false),
          value: 1000015000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_FILTER_CUBIC_EXT",
          name: "CUBIC_EXT",
          origin: Extension("VK_EXT_filter_cubic", 171, false),
          of: "VK_FILTER_CUBIC_IMG",
        ),
      ],
    ),
    Enum(
      original_name: "VkSamplerMipmapMode",
      name: "SamplerMipmapMode",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_SAMPLER_MIPMAP_MODE_NEAREST",
          name: "NEAREST",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_SAMPLER_MIPMAP_MODE_LINEAR",
          name: "LINEAR",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkSamplerAddressMode",
      name: "SamplerAddressMode",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_SAMPLER_ADDRESS_MODE_REPEAT",
          name: "REPEAT",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_SAMPLER_ADDRESS_MODE_MIRRORED_REPEAT",
          name: "MIRRORED_REPEAT",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE",
          name: "CLAMP_TO_EDGE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_BORDER",
          name: "CLAMP_TO_BORDER",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE",
          name: "MIRROR_CLAMP_TO_EDGE",
          origin: Extension("VK_KHR_sampler_mirror_clamp_to_edge", 15, false),
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE_KHR",
          name: "MIRROR_CLAMP_TO_EDGE_KHR",
          origin: Extension("VK_KHR_sampler_mirror_clamp_to_edge", 15, false),
          of: "VK_SAMPLER_ADDRESS_MODE_MIRROR_CLAMP_TO_EDGE",
        ),
      ],
    ),
    Enum(
      original_name: "VkCompareOp",
      name: "CompareOp",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_COMPARE_OP_NEVER",
          name: "NEVER",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_COMPARE_OP_LESS",
          name: "LESS",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_COMPARE_OP_EQUAL",
          name: "EQUAL",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_COMPARE_OP_LESS_OR_EQUAL",
          name: "LESS_OR_EQUAL",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_COMPARE_OP_GREATER",
          name: "GREATER",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_COMPARE_OP_NOT_EQUAL",
          name: "NOT_EQUAL",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_COMPARE_OP_GREATER_OR_EQUAL",
          name: "GREATER_OR_EQUAL",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_COMPARE_OP_ALWAYS",
          name: "ALWAYS",
          origin: Vulkan1_0,
          value: 7,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPolygonMode",
      name: "PolygonMode",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_POLYGON_MODE_FILL",
          name: "FILL",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_POLYGON_MODE_LINE",
          name: "LINE",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_POLYGON_MODE_POINT",
          name: "POINT",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_POLYGON_MODE_FILL_RECTANGLE_NV",
          name: "FILL_RECTANGLE_NV",
          origin: Extension("VK_NV_fill_rectangle", 154, false),
          value: 1000153000,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkFrontFace",
      name: "FrontFace",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_FRONT_FACE_COUNTER_CLOCKWISE",
          name: "COUNTER_CLOCKWISE",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_FRONT_FACE_CLOCKWISE",
          name: "CLOCKWISE",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkBlendFactor",
      name: "BlendFactor",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_BLEND_FACTOR_ZERO",
          name: "ZERO",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE",
          name: "ONE",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_SRC_COLOR",
          name: "SRC_COLOR",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE_MINUS_SRC_COLOR",
          name: "ONE_MINUS_SRC_COLOR",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_DST_COLOR",
          name: "DST_COLOR",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE_MINUS_DST_COLOR",
          name: "ONE_MINUS_DST_COLOR",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_SRC_ALPHA",
          name: "SRC_ALPHA",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE_MINUS_SRC_ALPHA",
          name: "ONE_MINUS_SRC_ALPHA",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_DST_ALPHA",
          name: "DST_ALPHA",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE_MINUS_DST_ALPHA",
          name: "ONE_MINUS_DST_ALPHA",
          origin: Vulkan1_0,
          value: 9,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_CONSTANT_COLOR",
          name: "CONSTANT_COLOR",
          origin: Vulkan1_0,
          value: 10,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_COLOR",
          name: "ONE_MINUS_CONSTANT_COLOR",
          origin: Vulkan1_0,
          value: 11,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_CONSTANT_ALPHA",
          name: "CONSTANT_ALPHA",
          origin: Vulkan1_0,
          value: 12,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE_MINUS_CONSTANT_ALPHA",
          name: "ONE_MINUS_CONSTANT_ALPHA",
          origin: Vulkan1_0,
          value: 13,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_SRC_ALPHA_SATURATE",
          name: "SRC_ALPHA_SATURATE",
          origin: Vulkan1_0,
          value: 14,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_SRC1_COLOR",
          name: "SRC1_COLOR",
          origin: Vulkan1_0,
          value: 15,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE_MINUS_SRC1_COLOR",
          name: "ONE_MINUS_SRC1_COLOR",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_SRC1_ALPHA",
          name: "SRC1_ALPHA",
          origin: Vulkan1_0,
          value: 17,
        ),
        Bit(
          original_name: "VK_BLEND_FACTOR_ONE_MINUS_SRC1_ALPHA",
          name: "ONE_MINUS_SRC1_ALPHA",
          origin: Vulkan1_0,
          value: 18,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkBlendOp",
      name: "BlendOp",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_BLEND_OP_ADD",
          name: "ADD",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_BLEND_OP_SUBTRACT",
          name: "SUBTRACT",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_BLEND_OP_REVERSE_SUBTRACT",
          name: "REVERSE_SUBTRACT",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_BLEND_OP_MIN",
          name: "MIN",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_BLEND_OP_MAX",
          name: "MAX",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_BLEND_OP_ZERO_EXT",
          name: "ZERO_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148000,
        ),
        Bit(
          original_name: "VK_BLEND_OP_SRC_EXT",
          name: "SRC_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148001,
        ),
        Bit(
          original_name: "VK_BLEND_OP_DST_EXT",
          name: "DST_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148002,
        ),
        Bit(
          original_name: "VK_BLEND_OP_SRC_OVER_EXT",
          name: "SRC_OVER_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148003,
        ),
        Bit(
          original_name: "VK_BLEND_OP_DST_OVER_EXT",
          name: "DST_OVER_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148004,
        ),
        Bit(
          original_name: "VK_BLEND_OP_SRC_IN_EXT",
          name: "SRC_IN_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148005,
        ),
        Bit(
          original_name: "VK_BLEND_OP_DST_IN_EXT",
          name: "DST_IN_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148006,
        ),
        Bit(
          original_name: "VK_BLEND_OP_SRC_OUT_EXT",
          name: "SRC_OUT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148007,
        ),
        Bit(
          original_name: "VK_BLEND_OP_DST_OUT_EXT",
          name: "DST_OUT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148008,
        ),
        Bit(
          original_name: "VK_BLEND_OP_SRC_ATOP_EXT",
          name: "SRC_ATOP_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148009,
        ),
        Bit(
          original_name: "VK_BLEND_OP_DST_ATOP_EXT",
          name: "DST_ATOP_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148010,
        ),
        Bit(
          original_name: "VK_BLEND_OP_XOR_EXT",
          name: "XOR_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148011,
        ),
        Bit(
          original_name: "VK_BLEND_OP_MULTIPLY_EXT",
          name: "MULTIPLY_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148012,
        ),
        Bit(
          original_name: "VK_BLEND_OP_SCREEN_EXT",
          name: "SCREEN_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148013,
        ),
        Bit(
          original_name: "VK_BLEND_OP_OVERLAY_EXT",
          name: "OVERLAY_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148014,
        ),
        Bit(
          original_name: "VK_BLEND_OP_DARKEN_EXT",
          name: "DARKEN_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148015,
        ),
        Bit(
          original_name: "VK_BLEND_OP_LIGHTEN_EXT",
          name: "LIGHTEN_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148016,
        ),
        Bit(
          original_name: "VK_BLEND_OP_COLORDODGE_EXT",
          name: "COLORDODGE_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148017,
        ),
        Bit(
          original_name: "VK_BLEND_OP_COLORBURN_EXT",
          name: "COLORBURN_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148018,
        ),
        Bit(
          original_name: "VK_BLEND_OP_HARDLIGHT_EXT",
          name: "HARDLIGHT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148019,
        ),
        Bit(
          original_name: "VK_BLEND_OP_SOFTLIGHT_EXT",
          name: "SOFTLIGHT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148020,
        ),
        Bit(
          original_name: "VK_BLEND_OP_DIFFERENCE_EXT",
          name: "DIFFERENCE_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148021,
        ),
        Bit(
          original_name: "VK_BLEND_OP_EXCLUSION_EXT",
          name: "EXCLUSION_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148022,
        ),
        Bit(
          original_name: "VK_BLEND_OP_INVERT_EXT",
          name: "INVERT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148023,
        ),
        Bit(
          original_name: "VK_BLEND_OP_INVERT_RGB_EXT",
          name: "INVERT_RGB_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148024,
        ),
        Bit(
          original_name: "VK_BLEND_OP_LINEARDODGE_EXT",
          name: "LINEARDODGE_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148025,
        ),
        Bit(
          original_name: "VK_BLEND_OP_LINEARBURN_EXT",
          name: "LINEARBURN_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148026,
        ),
        Bit(
          original_name: "VK_BLEND_OP_VIVIDLIGHT_EXT",
          name: "VIVIDLIGHT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148027,
        ),
        Bit(
          original_name: "VK_BLEND_OP_LINEARLIGHT_EXT",
          name: "LINEARLIGHT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148028,
        ),
        Bit(
          original_name: "VK_BLEND_OP_PINLIGHT_EXT",
          name: "PINLIGHT_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148029,
        ),
        Bit(
          original_name: "VK_BLEND_OP_HARDMIX_EXT",
          name: "HARDMIX_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148030,
        ),
        Bit(
          original_name: "VK_BLEND_OP_HSL_HUE_EXT",
          name: "HSL_HUE_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148031,
        ),
        Bit(
          original_name: "VK_BLEND_OP_HSL_SATURATION_EXT",
          name: "HSL_SATURATION_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148032,
        ),
        Bit(
          original_name: "VK_BLEND_OP_HSL_COLOR_EXT",
          name: "HSL_COLOR_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148033,
        ),
        Bit(
          original_name: "VK_BLEND_OP_HSL_LUMINOSITY_EXT",
          name: "HSL_LUMINOSITY_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148034,
        ),
        Bit(
          original_name: "VK_BLEND_OP_PLUS_EXT",
          name: "PLUS_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148035,
        ),
        Bit(
          original_name: "VK_BLEND_OP_PLUS_CLAMPED_EXT",
          name: "PLUS_CLAMPED_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148036,
        ),
        Bit(
          original_name: "VK_BLEND_OP_PLUS_CLAMPED_ALPHA_EXT",
          name: "PLUS_CLAMPED_ALPHA_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148037,
        ),
        Bit(
          original_name: "VK_BLEND_OP_PLUS_DARKER_EXT",
          name: "PLUS_DARKER_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148038,
        ),
        Bit(
          original_name: "VK_BLEND_OP_MINUS_EXT",
          name: "MINUS_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148039,
        ),
        Bit(
          original_name: "VK_BLEND_OP_MINUS_CLAMPED_EXT",
          name: "MINUS_CLAMPED_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148040,
        ),
        Bit(
          original_name: "VK_BLEND_OP_CONTRAST_EXT",
          name: "CONTRAST_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148041,
        ),
        Bit(
          original_name: "VK_BLEND_OP_INVERT_OVG_EXT",
          name: "INVERT_OVG_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148042,
        ),
        Bit(
          original_name: "VK_BLEND_OP_RED_EXT",
          name: "RED_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148043,
        ),
        Bit(
          original_name: "VK_BLEND_OP_GREEN_EXT",
          name: "GREEN_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148044,
        ),
        Bit(
          original_name: "VK_BLEND_OP_BLUE_EXT",
          name: "BLUE_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148045,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkStencilOp",
      name: "StencilOp",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_STENCIL_OP_KEEP",
          name: "KEEP",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_STENCIL_OP_ZERO",
          name: "ZERO",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_STENCIL_OP_REPLACE",
          name: "REPLACE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_STENCIL_OP_INCREMENT_AND_CLAMP",
          name: "INCREMENT_AND_CLAMP",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_STENCIL_OP_DECREMENT_AND_CLAMP",
          name: "DECREMENT_AND_CLAMP",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_STENCIL_OP_INVERT",
          name: "INVERT",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_STENCIL_OP_INCREMENT_AND_WRAP",
          name: "INCREMENT_AND_WRAP",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_STENCIL_OP_DECREMENT_AND_WRAP",
          name: "DECREMENT_AND_WRAP",
          origin: Vulkan1_0,
          value: 7,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkLogicOp",
      name: "LogicOp",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_LOGIC_OP_CLEAR",
          name: "CLEAR",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_AND",
          name: "AND",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_AND_REVERSE",
          name: "AND_REVERSE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_COPY",
          name: "COPY",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_AND_INVERTED",
          name: "AND_INVERTED",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_NO_OP",
          name: "NO_OP",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_XOR",
          name: "XOR",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_OR",
          name: "OR",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_NOR",
          name: "NOR",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_EQUIVALENT",
          name: "EQUIVALENT",
          origin: Vulkan1_0,
          value: 9,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_INVERT",
          name: "INVERT",
          origin: Vulkan1_0,
          value: 10,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_OR_REVERSE",
          name: "OR_REVERSE",
          origin: Vulkan1_0,
          value: 11,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_COPY_INVERTED",
          name: "COPY_INVERTED",
          origin: Vulkan1_0,
          value: 12,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_OR_INVERTED",
          name: "OR_INVERTED",
          origin: Vulkan1_0,
          value: 13,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_NAND",
          name: "NAND",
          origin: Vulkan1_0,
          value: 14,
        ),
        Bit(
          original_name: "VK_LOGIC_OP_SET",
          name: "SET",
          origin: Vulkan1_0,
          value: 15,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkInternalAllocationType",
      name: "InternalAllocationType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_INTERNAL_ALLOCATION_TYPE_EXECUTABLE",
          name: "EXECUTABLE",
          origin: Vulkan1_0,
          value: 0,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkSystemAllocationScope",
      name: "SystemAllocationScope",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_SYSTEM_ALLOCATION_SCOPE_COMMAND",
          name: "COMMAND",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_SYSTEM_ALLOCATION_SCOPE_OBJECT",
          name: "OBJECT",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_SYSTEM_ALLOCATION_SCOPE_CACHE",
          name: "CACHE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_SYSTEM_ALLOCATION_SCOPE_DEVICE",
          name: "DEVICE",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_SYSTEM_ALLOCATION_SCOPE_INSTANCE",
          name: "INSTANCE",
          origin: Vulkan1_0,
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPhysicalDeviceType",
      name: "PhysicalDeviceType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_PHYSICAL_DEVICE_TYPE_OTHER",
          name: "OTHER",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_PHYSICAL_DEVICE_TYPE_INTEGRATED_GPU",
          name: "INTEGRATED_GPU",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_PHYSICAL_DEVICE_TYPE_DISCRETE_GPU",
          name: "DISCRETE_GPU",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_PHYSICAL_DEVICE_TYPE_VIRTUAL_GPU",
          name: "VIRTUAL_GPU",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_PHYSICAL_DEVICE_TYPE_CPU",
          name: "CPU",
          origin: Vulkan1_0,
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkVertexInputRate",
      name: "VertexInputRate",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_VERTEX_INPUT_RATE_VERTEX",
          name: "VERTEX",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_VERTEX_INPUT_RATE_INSTANCE",
          name: "INSTANCE",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkFormat",
      name: "Format",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_FORMAT_UNDEFINED",
          name: "UNDEFINED",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_FORMAT_R4G4_UNORM_PACK8",
          name: "R4G4_UNORM_PACK8",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_FORMAT_R4G4B4A4_UNORM_PACK16",
          name: "R4G4B4A4_UNORM_PACK16",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_FORMAT_B4G4R4A4_UNORM_PACK16",
          name: "B4G4R4A4_UNORM_PACK16",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_FORMAT_R5G6B5_UNORM_PACK16",
          name: "R5G6B5_UNORM_PACK16",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_FORMAT_B5G6R5_UNORM_PACK16",
          name: "B5G6R5_UNORM_PACK16",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_FORMAT_R5G5B5A1_UNORM_PACK16",
          name: "R5G5B5A1_UNORM_PACK16",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_FORMAT_B5G5R5A1_UNORM_PACK16",
          name: "B5G5R5A1_UNORM_PACK16",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_FORMAT_A1R5G5B5_UNORM_PACK16",
          name: "A1R5G5B5_UNORM_PACK16",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_FORMAT_R8_UNORM",
          name: "R8_UNORM",
          origin: Vulkan1_0,
          value: 9,
        ),
        Bit(
          original_name: "VK_FORMAT_R8_SNORM",
          name: "R8_SNORM",
          origin: Vulkan1_0,
          value: 10,
        ),
        Bit(
          original_name: "VK_FORMAT_R8_USCALED",
          name: "R8_USCALED",
          origin: Vulkan1_0,
          value: 11,
        ),
        Bit(
          original_name: "VK_FORMAT_R8_SSCALED",
          name: "R8_SSCALED",
          origin: Vulkan1_0,
          value: 12,
        ),
        Bit(
          original_name: "VK_FORMAT_R8_UINT",
          name: "R8_UINT",
          origin: Vulkan1_0,
          value: 13,
        ),
        Bit(
          original_name: "VK_FORMAT_R8_SINT",
          name: "R8_SINT",
          origin: Vulkan1_0,
          value: 14,
        ),
        Bit(
          original_name: "VK_FORMAT_R8_SRGB",
          name: "R8_SRGB",
          origin: Vulkan1_0,
          value: 15,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8_UNORM",
          name: "R8G8_UNORM",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8_SNORM",
          name: "R8G8_SNORM",
          origin: Vulkan1_0,
          value: 17,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8_USCALED",
          name: "R8G8_USCALED",
          origin: Vulkan1_0,
          value: 18,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8_SSCALED",
          name: "R8G8_SSCALED",
          origin: Vulkan1_0,
          value: 19,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8_UINT",
          name: "R8G8_UINT",
          origin: Vulkan1_0,
          value: 20,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8_SINT",
          name: "R8G8_SINT",
          origin: Vulkan1_0,
          value: 21,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8_SRGB",
          name: "R8G8_SRGB",
          origin: Vulkan1_0,
          value: 22,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8_UNORM",
          name: "R8G8B8_UNORM",
          origin: Vulkan1_0,
          value: 23,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8_SNORM",
          name: "R8G8B8_SNORM",
          origin: Vulkan1_0,
          value: 24,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8_USCALED",
          name: "R8G8B8_USCALED",
          origin: Vulkan1_0,
          value: 25,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8_SSCALED",
          name: "R8G8B8_SSCALED",
          origin: Vulkan1_0,
          value: 26,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8_UINT",
          name: "R8G8B8_UINT",
          origin: Vulkan1_0,
          value: 27,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8_SINT",
          name: "R8G8B8_SINT",
          origin: Vulkan1_0,
          value: 28,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8_SRGB",
          name: "R8G8B8_SRGB",
          origin: Vulkan1_0,
          value: 29,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8_UNORM",
          name: "B8G8R8_UNORM",
          origin: Vulkan1_0,
          value: 30,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8_SNORM",
          name: "B8G8R8_SNORM",
          origin: Vulkan1_0,
          value: 31,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8_USCALED",
          name: "B8G8R8_USCALED",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8_SSCALED",
          name: "B8G8R8_SSCALED",
          origin: Vulkan1_0,
          value: 33,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8_UINT",
          name: "B8G8R8_UINT",
          origin: Vulkan1_0,
          value: 34,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8_SINT",
          name: "B8G8R8_SINT",
          origin: Vulkan1_0,
          value: 35,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8_SRGB",
          name: "B8G8R8_SRGB",
          origin: Vulkan1_0,
          value: 36,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8A8_UNORM",
          name: "R8G8B8A8_UNORM",
          origin: Vulkan1_0,
          value: 37,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8A8_SNORM",
          name: "R8G8B8A8_SNORM",
          origin: Vulkan1_0,
          value: 38,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8A8_USCALED",
          name: "R8G8B8A8_USCALED",
          origin: Vulkan1_0,
          value: 39,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8A8_SSCALED",
          name: "R8G8B8A8_SSCALED",
          origin: Vulkan1_0,
          value: 40,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8A8_UINT",
          name: "R8G8B8A8_UINT",
          origin: Vulkan1_0,
          value: 41,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8A8_SINT",
          name: "R8G8B8A8_SINT",
          origin: Vulkan1_0,
          value: 42,
        ),
        Bit(
          original_name: "VK_FORMAT_R8G8B8A8_SRGB",
          name: "R8G8B8A8_SRGB",
          origin: Vulkan1_0,
          value: 43,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8A8_UNORM",
          name: "B8G8R8A8_UNORM",
          origin: Vulkan1_0,
          value: 44,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8A8_SNORM",
          name: "B8G8R8A8_SNORM",
          origin: Vulkan1_0,
          value: 45,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8A8_USCALED",
          name: "B8G8R8A8_USCALED",
          origin: Vulkan1_0,
          value: 46,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8A8_SSCALED",
          name: "B8G8R8A8_SSCALED",
          origin: Vulkan1_0,
          value: 47,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8A8_UINT",
          name: "B8G8R8A8_UINT",
          origin: Vulkan1_0,
          value: 48,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8A8_SINT",
          name: "B8G8R8A8_SINT",
          origin: Vulkan1_0,
          value: 49,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8A8_SRGB",
          name: "B8G8R8A8_SRGB",
          origin: Vulkan1_0,
          value: 50,
        ),
        Bit(
          original_name: "VK_FORMAT_A8B8G8R8_UNORM_PACK32",
          name: "A8B8G8R8_UNORM_PACK32",
          origin: Vulkan1_0,
          value: 51,
        ),
        Bit(
          original_name: "VK_FORMAT_A8B8G8R8_SNORM_PACK32",
          name: "A8B8G8R8_SNORM_PACK32",
          origin: Vulkan1_0,
          value: 52,
        ),
        Bit(
          original_name: "VK_FORMAT_A8B8G8R8_USCALED_PACK32",
          name: "A8B8G8R8_USCALED_PACK32",
          origin: Vulkan1_0,
          value: 53,
        ),
        Bit(
          original_name: "VK_FORMAT_A8B8G8R8_SSCALED_PACK32",
          name: "A8B8G8R8_SSCALED_PACK32",
          origin: Vulkan1_0,
          value: 54,
        ),
        Bit(
          original_name: "VK_FORMAT_A8B8G8R8_UINT_PACK32",
          name: "A8B8G8R8_UINT_PACK32",
          origin: Vulkan1_0,
          value: 55,
        ),
        Bit(
          original_name: "VK_FORMAT_A8B8G8R8_SINT_PACK32",
          name: "A8B8G8R8_SINT_PACK32",
          origin: Vulkan1_0,
          value: 56,
        ),
        Bit(
          original_name: "VK_FORMAT_A8B8G8R8_SRGB_PACK32",
          name: "A8B8G8R8_SRGB_PACK32",
          origin: Vulkan1_0,
          value: 57,
        ),
        Bit(
          original_name: "VK_FORMAT_A2R10G10B10_UNORM_PACK32",
          name: "A2R10G10B10_UNORM_PACK32",
          origin: Vulkan1_0,
          value: 58,
        ),
        Bit(
          original_name: "VK_FORMAT_A2R10G10B10_SNORM_PACK32",
          name: "A2R10G10B10_SNORM_PACK32",
          origin: Vulkan1_0,
          value: 59,
        ),
        Bit(
          original_name: "VK_FORMAT_A2R10G10B10_USCALED_PACK32",
          name: "A2R10G10B10_USCALED_PACK32",
          origin: Vulkan1_0,
          value: 60,
        ),
        Bit(
          original_name: "VK_FORMAT_A2R10G10B10_SSCALED_PACK32",
          name: "A2R10G10B10_SSCALED_PACK32",
          origin: Vulkan1_0,
          value: 61,
        ),
        Bit(
          original_name: "VK_FORMAT_A2R10G10B10_UINT_PACK32",
          name: "A2R10G10B10_UINT_PACK32",
          origin: Vulkan1_0,
          value: 62,
        ),
        Bit(
          original_name: "VK_FORMAT_A2R10G10B10_SINT_PACK32",
          name: "A2R10G10B10_SINT_PACK32",
          origin: Vulkan1_0,
          value: 63,
        ),
        Bit(
          original_name: "VK_FORMAT_A2B10G10R10_UNORM_PACK32",
          name: "A2B10G10R10_UNORM_PACK32",
          origin: Vulkan1_0,
          value: 64,
        ),
        Bit(
          original_name: "VK_FORMAT_A2B10G10R10_SNORM_PACK32",
          name: "A2B10G10R10_SNORM_PACK32",
          origin: Vulkan1_0,
          value: 65,
        ),
        Bit(
          original_name: "VK_FORMAT_A2B10G10R10_USCALED_PACK32",
          name: "A2B10G10R10_USCALED_PACK32",
          origin: Vulkan1_0,
          value: 66,
        ),
        Bit(
          original_name: "VK_FORMAT_A2B10G10R10_SSCALED_PACK32",
          name: "A2B10G10R10_SSCALED_PACK32",
          origin: Vulkan1_0,
          value: 67,
        ),
        Bit(
          original_name: "VK_FORMAT_A2B10G10R10_UINT_PACK32",
          name: "A2B10G10R10_UINT_PACK32",
          origin: Vulkan1_0,
          value: 68,
        ),
        Bit(
          original_name: "VK_FORMAT_A2B10G10R10_SINT_PACK32",
          name: "A2B10G10R10_SINT_PACK32",
          origin: Vulkan1_0,
          value: 69,
        ),
        Bit(
          original_name: "VK_FORMAT_R16_UNORM",
          name: "R16_UNORM",
          origin: Vulkan1_0,
          value: 70,
        ),
        Bit(
          original_name: "VK_FORMAT_R16_SNORM",
          name: "R16_SNORM",
          origin: Vulkan1_0,
          value: 71,
        ),
        Bit(
          original_name: "VK_FORMAT_R16_USCALED",
          name: "R16_USCALED",
          origin: Vulkan1_0,
          value: 72,
        ),
        Bit(
          original_name: "VK_FORMAT_R16_SSCALED",
          name: "R16_SSCALED",
          origin: Vulkan1_0,
          value: 73,
        ),
        Bit(
          original_name: "VK_FORMAT_R16_UINT",
          name: "R16_UINT",
          origin: Vulkan1_0,
          value: 74,
        ),
        Bit(
          original_name: "VK_FORMAT_R16_SINT",
          name: "R16_SINT",
          origin: Vulkan1_0,
          value: 75,
        ),
        Bit(
          original_name: "VK_FORMAT_R16_SFLOAT",
          name: "R16_SFLOAT",
          origin: Vulkan1_0,
          value: 76,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16_UNORM",
          name: "R16G16_UNORM",
          origin: Vulkan1_0,
          value: 77,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16_SNORM",
          name: "R16G16_SNORM",
          origin: Vulkan1_0,
          value: 78,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16_USCALED",
          name: "R16G16_USCALED",
          origin: Vulkan1_0,
          value: 79,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16_SSCALED",
          name: "R16G16_SSCALED",
          origin: Vulkan1_0,
          value: 80,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16_UINT",
          name: "R16G16_UINT",
          origin: Vulkan1_0,
          value: 81,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16_SINT",
          name: "R16G16_SINT",
          origin: Vulkan1_0,
          value: 82,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16_SFLOAT",
          name: "R16G16_SFLOAT",
          origin: Vulkan1_0,
          value: 83,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16_UNORM",
          name: "R16G16B16_UNORM",
          origin: Vulkan1_0,
          value: 84,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16_SNORM",
          name: "R16G16B16_SNORM",
          origin: Vulkan1_0,
          value: 85,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16_USCALED",
          name: "R16G16B16_USCALED",
          origin: Vulkan1_0,
          value: 86,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16_SSCALED",
          name: "R16G16B16_SSCALED",
          origin: Vulkan1_0,
          value: 87,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16_UINT",
          name: "R16G16B16_UINT",
          origin: Vulkan1_0,
          value: 88,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16_SINT",
          name: "R16G16B16_SINT",
          origin: Vulkan1_0,
          value: 89,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16_SFLOAT",
          name: "R16G16B16_SFLOAT",
          origin: Vulkan1_0,
          value: 90,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16A16_UNORM",
          name: "R16G16B16A16_UNORM",
          origin: Vulkan1_0,
          value: 91,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16A16_SNORM",
          name: "R16G16B16A16_SNORM",
          origin: Vulkan1_0,
          value: 92,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16A16_USCALED",
          name: "R16G16B16A16_USCALED",
          origin: Vulkan1_0,
          value: 93,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16A16_SSCALED",
          name: "R16G16B16A16_SSCALED",
          origin: Vulkan1_0,
          value: 94,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16A16_UINT",
          name: "R16G16B16A16_UINT",
          origin: Vulkan1_0,
          value: 95,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16A16_SINT",
          name: "R16G16B16A16_SINT",
          origin: Vulkan1_0,
          value: 96,
        ),
        Bit(
          original_name: "VK_FORMAT_R16G16B16A16_SFLOAT",
          name: "R16G16B16A16_SFLOAT",
          origin: Vulkan1_0,
          value: 97,
        ),
        Bit(
          original_name: "VK_FORMAT_R32_UINT",
          name: "R32_UINT",
          origin: Vulkan1_0,
          value: 98,
        ),
        Bit(
          original_name: "VK_FORMAT_R32_SINT",
          name: "R32_SINT",
          origin: Vulkan1_0,
          value: 99,
        ),
        Bit(
          original_name: "VK_FORMAT_R32_SFLOAT",
          name: "R32_SFLOAT",
          origin: Vulkan1_0,
          value: 100,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32_UINT",
          name: "R32G32_UINT",
          origin: Vulkan1_0,
          value: 101,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32_SINT",
          name: "R32G32_SINT",
          origin: Vulkan1_0,
          value: 102,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32_SFLOAT",
          name: "R32G32_SFLOAT",
          origin: Vulkan1_0,
          value: 103,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32B32_UINT",
          name: "R32G32B32_UINT",
          origin: Vulkan1_0,
          value: 104,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32B32_SINT",
          name: "R32G32B32_SINT",
          origin: Vulkan1_0,
          value: 105,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32B32_SFLOAT",
          name: "R32G32B32_SFLOAT",
          origin: Vulkan1_0,
          value: 106,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32B32A32_UINT",
          name: "R32G32B32A32_UINT",
          origin: Vulkan1_0,
          value: 107,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32B32A32_SINT",
          name: "R32G32B32A32_SINT",
          origin: Vulkan1_0,
          value: 108,
        ),
        Bit(
          original_name: "VK_FORMAT_R32G32B32A32_SFLOAT",
          name: "R32G32B32A32_SFLOAT",
          origin: Vulkan1_0,
          value: 109,
        ),
        Bit(
          original_name: "VK_FORMAT_R64_UINT",
          name: "R64_UINT",
          origin: Vulkan1_0,
          value: 110,
        ),
        Bit(
          original_name: "VK_FORMAT_R64_SINT",
          name: "R64_SINT",
          origin: Vulkan1_0,
          value: 111,
        ),
        Bit(
          original_name: "VK_FORMAT_R64_SFLOAT",
          name: "R64_SFLOAT",
          origin: Vulkan1_0,
          value: 112,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64_UINT",
          name: "R64G64_UINT",
          origin: Vulkan1_0,
          value: 113,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64_SINT",
          name: "R64G64_SINT",
          origin: Vulkan1_0,
          value: 114,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64_SFLOAT",
          name: "R64G64_SFLOAT",
          origin: Vulkan1_0,
          value: 115,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64B64_UINT",
          name: "R64G64B64_UINT",
          origin: Vulkan1_0,
          value: 116,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64B64_SINT",
          name: "R64G64B64_SINT",
          origin: Vulkan1_0,
          value: 117,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64B64_SFLOAT",
          name: "R64G64B64_SFLOAT",
          origin: Vulkan1_0,
          value: 118,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64B64A64_UINT",
          name: "R64G64B64A64_UINT",
          origin: Vulkan1_0,
          value: 119,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64B64A64_SINT",
          name: "R64G64B64A64_SINT",
          origin: Vulkan1_0,
          value: 120,
        ),
        Bit(
          original_name: "VK_FORMAT_R64G64B64A64_SFLOAT",
          name: "R64G64B64A64_SFLOAT",
          origin: Vulkan1_0,
          value: 121,
        ),
        Bit(
          original_name: "VK_FORMAT_B10G11R11_UFLOAT_PACK32",
          name: "B10G11R11_UFLOAT_PACK32",
          origin: Vulkan1_0,
          value: 122,
        ),
        Bit(
          original_name: "VK_FORMAT_E5B9G9R9_UFLOAT_PACK32",
          name: "E5B9G9R9_UFLOAT_PACK32",
          origin: Vulkan1_0,
          value: 123,
        ),
        Bit(
          original_name: "VK_FORMAT_D16_UNORM",
          name: "D16_UNORM",
          origin: Vulkan1_0,
          value: 124,
        ),
        Bit(
          original_name: "VK_FORMAT_X8_D24_UNORM_PACK32",
          name: "X8_D24_UNORM_PACK32",
          origin: Vulkan1_0,
          value: 125,
        ),
        Bit(
          original_name: "VK_FORMAT_D32_SFLOAT",
          name: "D32_SFLOAT",
          origin: Vulkan1_0,
          value: 126,
        ),
        Bit(
          original_name: "VK_FORMAT_S8_UINT",
          name: "S8_UINT",
          origin: Vulkan1_0,
          value: 127,
        ),
        Bit(
          original_name: "VK_FORMAT_D16_UNORM_S8_UINT",
          name: "D16_UNORM_S8_UINT",
          origin: Vulkan1_0,
          value: 128,
        ),
        Bit(
          original_name: "VK_FORMAT_D24_UNORM_S8_UINT",
          name: "D24_UNORM_S8_UINT",
          origin: Vulkan1_0,
          value: 129,
        ),
        Bit(
          original_name: "VK_FORMAT_D32_SFLOAT_S8_UINT",
          name: "D32_SFLOAT_S8_UINT",
          origin: Vulkan1_0,
          value: 130,
        ),
        Bit(
          original_name: "VK_FORMAT_BC1_RGB_UNORM_BLOCK",
          name: "BC1_RGB_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 131,
        ),
        Bit(
          original_name: "VK_FORMAT_BC1_RGB_SRGB_BLOCK",
          name: "BC1_RGB_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 132,
        ),
        Bit(
          original_name: "VK_FORMAT_BC1_RGBA_UNORM_BLOCK",
          name: "BC1_RGBA_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 133,
        ),
        Bit(
          original_name: "VK_FORMAT_BC1_RGBA_SRGB_BLOCK",
          name: "BC1_RGBA_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 134,
        ),
        Bit(
          original_name: "VK_FORMAT_BC2_UNORM_BLOCK",
          name: "BC2_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 135,
        ),
        Bit(
          original_name: "VK_FORMAT_BC2_SRGB_BLOCK",
          name: "BC2_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 136,
        ),
        Bit(
          original_name: "VK_FORMAT_BC3_UNORM_BLOCK",
          name: "BC3_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 137,
        ),
        Bit(
          original_name: "VK_FORMAT_BC3_SRGB_BLOCK",
          name: "BC3_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 138,
        ),
        Bit(
          original_name: "VK_FORMAT_BC4_UNORM_BLOCK",
          name: "BC4_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 139,
        ),
        Bit(
          original_name: "VK_FORMAT_BC4_SNORM_BLOCK",
          name: "BC4_SNORM_BLOCK",
          origin: Vulkan1_0,
          value: 140,
        ),
        Bit(
          original_name: "VK_FORMAT_BC5_UNORM_BLOCK",
          name: "BC5_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 141,
        ),
        Bit(
          original_name: "VK_FORMAT_BC5_SNORM_BLOCK",
          name: "BC5_SNORM_BLOCK",
          origin: Vulkan1_0,
          value: 142,
        ),
        Bit(
          original_name: "VK_FORMAT_BC6H_UFLOAT_BLOCK",
          name: "BC6H_UFLOAT_BLOCK",
          origin: Vulkan1_0,
          value: 143,
        ),
        Bit(
          original_name: "VK_FORMAT_BC6H_SFLOAT_BLOCK",
          name: "BC6H_SFLOAT_BLOCK",
          origin: Vulkan1_0,
          value: 144,
        ),
        Bit(
          original_name: "VK_FORMAT_BC7_UNORM_BLOCK",
          name: "BC7_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 145,
        ),
        Bit(
          original_name: "VK_FORMAT_BC7_SRGB_BLOCK",
          name: "BC7_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 146,
        ),
        Bit(
          original_name: "VK_FORMAT_ETC2_R8G8B8_UNORM_BLOCK",
          name: "ETC2_R8G8B8_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 147,
        ),
        Bit(
          original_name: "VK_FORMAT_ETC2_R8G8B8_SRGB_BLOCK",
          name: "ETC2_R8G8B8_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 148,
        ),
        Bit(
          original_name: "VK_FORMAT_ETC2_R8G8B8A1_UNORM_BLOCK",
          name: "ETC2_R8G8B8A1_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 149,
        ),
        Bit(
          original_name: "VK_FORMAT_ETC2_R8G8B8A1_SRGB_BLOCK",
          name: "ETC2_R8G8B8A1_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 150,
        ),
        Bit(
          original_name: "VK_FORMAT_ETC2_R8G8B8A8_UNORM_BLOCK",
          name: "ETC2_R8G8B8A8_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 151,
        ),
        Bit(
          original_name: "VK_FORMAT_ETC2_R8G8B8A8_SRGB_BLOCK",
          name: "ETC2_R8G8B8A8_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 152,
        ),
        Bit(
          original_name: "VK_FORMAT_EAC_R11_UNORM_BLOCK",
          name: "EAC_R11_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 153,
        ),
        Bit(
          original_name: "VK_FORMAT_EAC_R11_SNORM_BLOCK",
          name: "EAC_R11_SNORM_BLOCK",
          origin: Vulkan1_0,
          value: 154,
        ),
        Bit(
          original_name: "VK_FORMAT_EAC_R11G11_UNORM_BLOCK",
          name: "EAC_R11G11_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 155,
        ),
        Bit(
          original_name: "VK_FORMAT_EAC_R11G11_SNORM_BLOCK",
          name: "EAC_R11G11_SNORM_BLOCK",
          origin: Vulkan1_0,
          value: 156,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4_UNORM_BLOCK",
          name: "ASTC4X4_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 157,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4_SRGB_BLOCK",
          name: "ASTC4X4_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 158,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x4_UNORM_BLOCK",
          name: "ASTC5X4_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 159,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x4_SRGB_BLOCK",
          name: "ASTC5X4_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 160,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5_UNORM_BLOCK",
          name: "ASTC5X5_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 161,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5_SRGB_BLOCK",
          name: "ASTC5X5_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 162,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x5_UNORM_BLOCK",
          name: "ASTC6X5_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 163,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x5_SRGB_BLOCK",
          name: "ASTC6X5_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 164,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6_UNORM_BLOCK",
          name: "ASTC6X6_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 165,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6_SRGB_BLOCK",
          name: "ASTC6X6_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 166,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x5_UNORM_BLOCK",
          name: "ASTC8X5_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 167,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x5_SRGB_BLOCK",
          name: "ASTC8X5_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 168,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x6_UNORM_BLOCK",
          name: "ASTC8X6_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 169,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x6_SRGB_BLOCK",
          name: "ASTC8X6_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 170,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x8_UNORM_BLOCK",
          name: "ASTC8X8_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 171,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x8_SRGB_BLOCK",
          name: "ASTC8X8_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 172,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x5_UNORM_BLOCK",
          name: "ASTC10X5_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 173,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x5_SRGB_BLOCK",
          name: "ASTC10X5_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 174,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x6_UNORM_BLOCK",
          name: "ASTC10X6_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 175,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x6_SRGB_BLOCK",
          name: "ASTC10X6_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 176,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x8_UNORM_BLOCK",
          name: "ASTC10X8_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 177,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x8_SRGB_BLOCK",
          name: "ASTC10X8_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 178,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x10_UNORM_BLOCK",
          name: "ASTC10X10_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 179,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x10_SRGB_BLOCK",
          name: "ASTC10X10_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 180,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_12x10_UNORM_BLOCK",
          name: "ASTC12X10_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 181,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_12x10_SRGB_BLOCK",
          name: "ASTC12X10_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 182,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_12x12_UNORM_BLOCK",
          name: "ASTC12X12_UNORM_BLOCK",
          origin: Vulkan1_0,
          value: 183,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_12x12_SRGB_BLOCK",
          name: "ASTC12X12_SRGB_BLOCK",
          origin: Vulkan1_0,
          value: 184,
        ),
        Bit(
          original_name: "VK_FORMAT_G8B8G8R8_422_UNORM",
          name: "G8B8G8R8422_UNORM",
          origin: Vulkan1_1,
          value: 1000156000,
        ),
        Bit(
          original_name: "VK_FORMAT_B8G8R8G8_422_UNORM",
          name: "B8G8R8G8422_UNORM",
          origin: Vulkan1_1,
          value: 1000156001,
        ),
        Bit(
          original_name: "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM",
          name: "G8_B8_R83PLANE_420_UNORM",
          origin: Vulkan1_1,
          value: 1000156002,
        ),
        Bit(
          original_name: "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM",
          name: "G8_B8R82PLANE_420_UNORM",
          origin: Vulkan1_1,
          value: 1000156003,
        ),
        Bit(
          original_name: "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM",
          name: "G8_B8_R83PLANE_422_UNORM",
          origin: Vulkan1_1,
          value: 1000156004,
        ),
        Bit(
          original_name: "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM",
          name: "G8_B8R82PLANE_422_UNORM",
          origin: Vulkan1_1,
          value: 1000156005,
        ),
        Bit(
          original_name: "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM",
          name: "G8_B8_R83PLANE_444_UNORM",
          origin: Vulkan1_1,
          value: 1000156006,
        ),
        Bit(
          original_name: "VK_FORMAT_R10X6_UNORM_PACK16",
          name: "R10X6_UNORM_PACK16",
          origin: Vulkan1_1,
          value: 1000156007,
        ),
        Bit(
          original_name: "VK_FORMAT_R10X6G10X6_UNORM_2PACK16",
          name: "R10X6G10X6_UNORM2PACK16",
          origin: Vulkan1_1,
          value: 1000156008,
        ),
        Bit(
          original_name: "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16",
          name: "R10X6G10X6B10X6A10X6_UNORM4PACK16",
          origin: Vulkan1_1,
          value: 1000156009,
        ),
        Bit(
          original_name: "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16",
          name: "G10X6B10X6G10X6R10X6422_UNORM_4PACK16",
          origin: Vulkan1_1,
          value: 1000156010,
        ),
        Bit(
          original_name: "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16",
          name: "B10X6G10X6R10X6G10X6422_UNORM_4PACK16",
          origin: Vulkan1_1,
          value: 1000156011,
        ),
        Bit(
          original_name: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16",
          name: "G10X6_B10X6_R10X63PLANE_420_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156012,
        ),
        Bit(
          original_name: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16",
          name: "G10X6_B10X6R10X62PLANE_420_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156013,
        ),
        Bit(
          original_name: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16",
          name: "G10X6_B10X6_R10X63PLANE_422_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156014,
        ),
        Bit(
          original_name: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16",
          name: "G10X6_B10X6R10X62PLANE_422_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156015,
        ),
        Bit(
          original_name: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16",
          name: "G10X6_B10X6_R10X63PLANE_444_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156016,
        ),
        Bit(
          original_name: "VK_FORMAT_R12X4_UNORM_PACK16",
          name: "R12X4_UNORM_PACK16",
          origin: Vulkan1_1,
          value: 1000156017,
        ),
        Bit(
          original_name: "VK_FORMAT_R12X4G12X4_UNORM_2PACK16",
          name: "R12X4G12X4_UNORM2PACK16",
          origin: Vulkan1_1,
          value: 1000156018,
        ),
        Bit(
          original_name: "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16",
          name: "R12X4G12X4B12X4A12X4_UNORM4PACK16",
          origin: Vulkan1_1,
          value: 1000156019,
        ),
        Bit(
          original_name: "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16",
          name: "G12X4B12X4G12X4R12X4422_UNORM_4PACK16",
          origin: Vulkan1_1,
          value: 1000156020,
        ),
        Bit(
          original_name: "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16",
          name: "B12X4G12X4R12X4G12X4422_UNORM_4PACK16",
          origin: Vulkan1_1,
          value: 1000156021,
        ),
        Bit(
          original_name: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16",
          name: "G12X4_B12X4_R12X43PLANE_420_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156022,
        ),
        Bit(
          original_name: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16",
          name: "G12X4_B12X4R12X42PLANE_420_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156023,
        ),
        Bit(
          original_name: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16",
          name: "G12X4_B12X4_R12X43PLANE_422_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156024,
        ),
        Bit(
          original_name: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16",
          name: "G12X4_B12X4R12X42PLANE_422_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156025,
        ),
        Bit(
          original_name: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16",
          name: "G12X4_B12X4_R12X43PLANE_444_UNORM_3PACK16",
          origin: Vulkan1_1,
          value: 1000156026,
        ),
        Bit(
          original_name: "VK_FORMAT_G16B16G16R16_422_UNORM",
          name: "G16B16G16R16422_UNORM",
          origin: Vulkan1_1,
          value: 1000156027,
        ),
        Bit(
          original_name: "VK_FORMAT_B16G16R16G16_422_UNORM",
          name: "B16G16R16G16422_UNORM",
          origin: Vulkan1_1,
          value: 1000156028,
        ),
        Bit(
          original_name: "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM",
          name: "G16_B16_R163PLANE_420_UNORM",
          origin: Vulkan1_1,
          value: 1000156029,
        ),
        Bit(
          original_name: "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM",
          name: "G16_B16R162PLANE_420_UNORM",
          origin: Vulkan1_1,
          value: 1000156030,
        ),
        Bit(
          original_name: "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM",
          name: "G16_B16_R163PLANE_422_UNORM",
          origin: Vulkan1_1,
          value: 1000156031,
        ),
        Bit(
          original_name: "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM",
          name: "G16_B16R162PLANE_422_UNORM",
          origin: Vulkan1_1,
          value: 1000156032,
        ),
        Bit(
          original_name: "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM",
          name: "G16_B16_R163PLANE_444_UNORM",
          origin: Vulkan1_1,
          value: 1000156033,
        ),
        Bit(
          original_name: "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM",
          name: "G8_B8R82PLANE_444_UNORM",
          origin: Vulkan1_3,
          value: 1000330000,
        ),
        Bit(
          original_name: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16",
          name: "G10X6_B10X6R10X62PLANE_444_UNORM_3PACK16",
          origin: Vulkan1_3,
          value: 1000330001,
        ),
        Bit(
          original_name: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16",
          name: "G12X4_B12X4R12X42PLANE_444_UNORM_3PACK16",
          origin: Vulkan1_3,
          value: 1000330002,
        ),
        Bit(
          original_name: "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM",
          name: "G16_B16R162PLANE_444_UNORM",
          origin: Vulkan1_3,
          value: 1000330003,
        ),
        Bit(
          original_name: "VK_FORMAT_A4R4G4B4_UNORM_PACK16",
          name: "A4R4G4B4_UNORM_PACK16",
          origin: Vulkan1_3,
          value: 1000340000,
        ),
        Bit(
          original_name: "VK_FORMAT_A4B4G4R4_UNORM_PACK16",
          name: "A4B4G4R4_UNORM_PACK16",
          origin: Vulkan1_3,
          value: 1000340001,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK",
          name: "ASTC4X4_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066000,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK",
          name: "ASTC5X4_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066001,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK",
          name: "ASTC5X5_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066002,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK",
          name: "ASTC6X5_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066003,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK",
          name: "ASTC6X6_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066004,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK",
          name: "ASTC8X5_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066005,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK",
          name: "ASTC8X6_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066006,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK",
          name: "ASTC8X8_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066007,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK",
          name: "ASTC10X5_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066008,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK",
          name: "ASTC10X6_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066009,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK",
          name: "ASTC10X8_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066010,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK",
          name: "ASTC10X10_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066011,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK",
          name: "ASTC12X10_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066012,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK",
          name: "ASTC12X12_SFLOAT_BLOCK",
          origin: Vulkan1_3,
          value: 1000066013,
        ),
        Bit(
          original_name: "VK_FORMAT_PVRTC1_2BPP_UNORM_BLOCK_IMG",
          name: "PVRTC12BPP_UNORM_BLOCK_IMG",
          origin: Extension("VK_IMG_format_pvrtc", 55, false),
          value: 1000054000,
        ),
        Bit(
          original_name: "VK_FORMAT_PVRTC1_4BPP_UNORM_BLOCK_IMG",
          name: "PVRTC14BPP_UNORM_BLOCK_IMG",
          origin: Extension("VK_IMG_format_pvrtc", 55, false),
          value: 1000054001,
        ),
        Bit(
          original_name: "VK_FORMAT_PVRTC2_2BPP_UNORM_BLOCK_IMG",
          name: "PVRTC22BPP_UNORM_BLOCK_IMG",
          origin: Extension("VK_IMG_format_pvrtc", 55, false),
          value: 1000054002,
        ),
        Bit(
          original_name: "VK_FORMAT_PVRTC2_4BPP_UNORM_BLOCK_IMG",
          name: "PVRTC24BPP_UNORM_BLOCK_IMG",
          origin: Extension("VK_IMG_format_pvrtc", 55, false),
          value: 1000054003,
        ),
        Bit(
          original_name: "VK_FORMAT_PVRTC1_2BPP_SRGB_BLOCK_IMG",
          name: "PVRTC12BPP_SRGB_BLOCK_IMG",
          origin: Extension("VK_IMG_format_pvrtc", 55, false),
          value: 1000054004,
        ),
        Bit(
          original_name: "VK_FORMAT_PVRTC1_4BPP_SRGB_BLOCK_IMG",
          name: "PVRTC14BPP_SRGB_BLOCK_IMG",
          origin: Extension("VK_IMG_format_pvrtc", 55, false),
          value: 1000054005,
        ),
        Bit(
          original_name: "VK_FORMAT_PVRTC2_2BPP_SRGB_BLOCK_IMG",
          name: "PVRTC22BPP_SRGB_BLOCK_IMG",
          origin: Extension("VK_IMG_format_pvrtc", 55, false),
          value: 1000054006,
        ),
        Bit(
          original_name: "VK_FORMAT_PVRTC2_4BPP_SRGB_BLOCK_IMG",
          name: "PVRTC24BPP_SRGB_BLOCK_IMG",
          origin: Extension("VK_IMG_format_pvrtc", 55, false),
          value: 1000054007,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_3x3x3_UNORM_BLOCK_EXT",
          name: "ASTC3X3X3_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288000,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_3x3x3_SRGB_BLOCK_EXT",
          name: "ASTC3X3X3_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288001,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_3x3x3_SFLOAT_BLOCK_EXT",
          name: "ASTC3X3X3_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288002,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x3x3_UNORM_BLOCK_EXT",
          name: "ASTC4X3X3_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288003,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x3x3_SRGB_BLOCK_EXT",
          name: "ASTC4X3X3_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288004,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x3x3_SFLOAT_BLOCK_EXT",
          name: "ASTC4X3X3_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288005,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4x3_UNORM_BLOCK_EXT",
          name: "ASTC4X4X3_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288006,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4x3_SRGB_BLOCK_EXT",
          name: "ASTC4X4X3_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288007,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4x3_SFLOAT_BLOCK_EXT",
          name: "ASTC4X4X3_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288008,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4x4_UNORM_BLOCK_EXT",
          name: "ASTC4X4X4_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288009,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4x4_SRGB_BLOCK_EXT",
          name: "ASTC4X4X4_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288010,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_4x4x4_SFLOAT_BLOCK_EXT",
          name: "ASTC4X4X4_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288011,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x4x4_UNORM_BLOCK_EXT",
          name: "ASTC5X4X4_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288012,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x4x4_SRGB_BLOCK_EXT",
          name: "ASTC5X4X4_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288013,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x4x4_SFLOAT_BLOCK_EXT",
          name: "ASTC5X4X4_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288014,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5x4_UNORM_BLOCK_EXT",
          name: "ASTC5X5X4_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288015,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5x4_SRGB_BLOCK_EXT",
          name: "ASTC5X5X4_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288016,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5x4_SFLOAT_BLOCK_EXT",
          name: "ASTC5X5X4_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288017,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5x5_UNORM_BLOCK_EXT",
          name: "ASTC5X5X5_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288018,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5x5_SRGB_BLOCK_EXT",
          name: "ASTC5X5X5_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288019,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_5x5x5_SFLOAT_BLOCK_EXT",
          name: "ASTC5X5X5_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288020,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x5x5_UNORM_BLOCK_EXT",
          name: "ASTC6X5X5_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288021,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x5x5_SRGB_BLOCK_EXT",
          name: "ASTC6X5X5_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288022,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x5x5_SFLOAT_BLOCK_EXT",
          name: "ASTC6X5X5_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288023,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6x5_UNORM_BLOCK_EXT",
          name: "ASTC6X6X5_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288024,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6x5_SRGB_BLOCK_EXT",
          name: "ASTC6X6X5_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288025,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6x5_SFLOAT_BLOCK_EXT",
          name: "ASTC6X6X5_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288026,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6x6_UNORM_BLOCK_EXT",
          name: "ASTC6X6X6_UNORM_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288027,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6x6_SRGB_BLOCK_EXT",
          name: "ASTC6X6X6_SRGB_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288028,
        ),
        Bit(
          original_name: "VK_FORMAT_ASTC_6x6x6_SFLOAT_BLOCK_EXT",
          name: "ASTC6X6X6_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_extension_289", 289, true),
          value: 1000288029,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK_EXT",
          name: "ASTC4X4_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_4x4_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK_EXT",
          name: "ASTC5X4_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_5x4_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK_EXT",
          name: "ASTC5X5_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_5x5_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK_EXT",
          name: "ASTC6X5_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_6x5_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK_EXT",
          name: "ASTC6X6_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_6x6_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK_EXT",
          name: "ASTC8X5_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_8x5_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK_EXT",
          name: "ASTC8X6_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_8x6_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK_EXT",
          name: "ASTC8X8_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_8x8_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK_EXT",
          name: "ASTC10X5_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_10x5_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK_EXT",
          name: "ASTC10X6_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_10x6_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK_EXT",
          name: "ASTC10X8_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_10x8_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK_EXT",
          name: "ASTC10X10_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_10x10_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK_EXT",
          name: "ASTC12X10_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_12x10_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK_EXT",
          name: "ASTC12X12_SFLOAT_BLOCK_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_FORMAT_ASTC_12x12_SFLOAT_BLOCK",
        ),
        Alias(
          original_name: "VK_FORMAT_G8B8G8R8_422_UNORM_KHR",
          name: "G8B8G8R8422_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G8B8G8R8_422_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_B8G8R8G8_422_UNORM_KHR",
          name: "B8G8R8G8422_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_B8G8R8G8_422_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM_KHR",
          name: "G8_B8_R83PLANE_420_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G8_B8_R8_3PLANE_420_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM_KHR",
          name: "G8_B8R82PLANE_420_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G8_B8R8_2PLANE_420_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM_KHR",
          name: "G8_B8_R83PLANE_422_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G8_B8_R8_3PLANE_422_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM_KHR",
          name: "G8_B8R82PLANE_422_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G8_B8R8_2PLANE_422_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM_KHR",
          name: "G8_B8_R83PLANE_444_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G8_B8_R8_3PLANE_444_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_R10X6_UNORM_PACK16_KHR",
          name: "R10X6_UNORM_PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_R10X6_UNORM_PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_R10X6G10X6_UNORM_2PACK16_KHR",
          name: "R10X6G10X6_UNORM2PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_R10X6G10X6_UNORM_2PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16_KHR",
          name: "R10X6G10X6B10X6A10X6_UNORM4PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_R10X6G10X6B10X6A10X6_UNORM_4PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16_KHR",
          name: "G10X6B10X6G10X6R10X6422_UNORM_4PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G10X6B10X6G10X6R10X6_422_UNORM_4PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16_KHR",
          name: "B10X6G10X6R10X6G10X6422_UNORM_4PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_B10X6G10X6R10X6G10X6_422_UNORM_4PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16_KHR",
          name: "G10X6_B10X6_R10X63PLANE_420_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_420_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16_KHR",
          name: "G10X6_B10X6R10X62PLANE_420_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_420_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16_KHR",
          name: "G10X6_B10X6_R10X63PLANE_422_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_422_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16_KHR",
          name: "G10X6_B10X6R10X62PLANE_422_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_422_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16_KHR",
          name: "G10X6_B10X6_R10X63PLANE_444_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G10X6_B10X6_R10X6_3PLANE_444_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_R12X4_UNORM_PACK16_KHR",
          name: "R12X4_UNORM_PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_R12X4_UNORM_PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_R12X4G12X4_UNORM_2PACK16_KHR",
          name: "R12X4G12X4_UNORM2PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_R12X4G12X4_UNORM_2PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16_KHR",
          name: "R12X4G12X4B12X4A12X4_UNORM4PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_R12X4G12X4B12X4A12X4_UNORM_4PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16_KHR",
          name: "G12X4B12X4G12X4R12X4422_UNORM_4PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G12X4B12X4G12X4R12X4_422_UNORM_4PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16_KHR",
          name: "B12X4G12X4R12X4G12X4422_UNORM_4PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_B12X4G12X4R12X4G12X4_422_UNORM_4PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16_KHR",
          name: "G12X4_B12X4_R12X43PLANE_420_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_420_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16_KHR",
          name: "G12X4_B12X4R12X42PLANE_420_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_420_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16_KHR",
          name: "G12X4_B12X4_R12X43PLANE_422_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_422_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16_KHR",
          name: "G12X4_B12X4R12X42PLANE_422_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_422_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16_KHR",
          name: "G12X4_B12X4_R12X43PLANE_444_UNORM_3PACK16_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G12X4_B12X4_R12X4_3PLANE_444_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G16B16G16R16_422_UNORM_KHR",
          name: "G16B16G16R16422_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G16B16G16R16_422_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_B16G16R16G16_422_UNORM_KHR",
          name: "B16G16R16G16422_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_B16G16R16G16_422_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM_KHR",
          name: "G16_B16_R163PLANE_420_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G16_B16_R16_3PLANE_420_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM_KHR",
          name: "G16_B16R162PLANE_420_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G16_B16R16_2PLANE_420_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM_KHR",
          name: "G16_B16_R163PLANE_422_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G16_B16_R16_3PLANE_422_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM_KHR",
          name: "G16_B16R162PLANE_422_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G16_B16R16_2PLANE_422_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM_KHR",
          name: "G16_B16_R163PLANE_444_UNORM_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_FORMAT_G16_B16_R16_3PLANE_444_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM_EXT",
          name: "G8_B8R82PLANE_444_UNORM_EXT",
          origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
          of: "VK_FORMAT_G8_B8R8_2PLANE_444_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16_EXT",
          name: "G10X6_B10X6R10X62PLANE_444_UNORM_3PACK16_EXT",
          origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
          of: "VK_FORMAT_G10X6_B10X6R10X6_2PLANE_444_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16_EXT",
          name: "G12X4_B12X4R12X42PLANE_444_UNORM_3PACK16_EXT",
          origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
          of: "VK_FORMAT_G12X4_B12X4R12X4_2PLANE_444_UNORM_3PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM_EXT",
          name: "G16_B16R162PLANE_444_UNORM_EXT",
          origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
          of: "VK_FORMAT_G16_B16R16_2PLANE_444_UNORM",
        ),
        Alias(
          original_name: "VK_FORMAT_A4R4G4B4_UNORM_PACK16_EXT",
          name: "A4R4G4B4_UNORM_PACK16_EXT",
          origin: Extension("VK_EXT_4444_formats", 341, false),
          of: "VK_FORMAT_A4R4G4B4_UNORM_PACK16",
        ),
        Alias(
          original_name: "VK_FORMAT_A4B4G4R4_UNORM_PACK16_EXT",
          name: "A4B4G4R4_UNORM_PACK16_EXT",
          origin: Extension("VK_EXT_4444_formats", 341, false),
          of: "VK_FORMAT_A4B4G4R4_UNORM_PACK16",
        ),
      ],
    ),
    Enum(
      original_name: "VkStructureType",
      name: "StructureType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_STRUCTURE_TYPE_APPLICATION_INFO",
          name: "APPLICATION_INFO",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_INSTANCE_CREATE_INFO",
          name: "INSTANCE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_QUEUE_CREATE_INFO",
          name: "DEVICE_QUEUE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_CREATE_INFO",
          name: "DEVICE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBMIT_INFO",
          name: "SUBMIT_INFO",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_INFO",
          name: "MEMORY_ALLOCATE_INFO",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MAPPED_MEMORY_RANGE",
          name: "MAPPED_MEMORY_RANGE",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BIND_SPARSE_INFO",
          name: "BIND_SPARSE_INFO",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FENCE_CREATE_INFO",
          name: "FENCE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_CREATE_INFO",
          name: "SEMAPHORE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 9,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EVENT_CREATE_INFO",
          name: "EVENT_CREATE_INFO",
          origin: Vulkan1_0,
          value: 10,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO",
          name: "QUERY_POOL_CREATE_INFO",
          origin: Vulkan1_0,
          value: 11,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_CREATE_INFO",
          name: "BUFFER_CREATE_INFO",
          origin: Vulkan1_0,
          value: 12,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_VIEW_CREATE_INFO",
          name: "BUFFER_VIEW_CREATE_INFO",
          origin: Vulkan1_0,
          value: 13,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_CREATE_INFO",
          name: "IMAGE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 14,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_VIEW_CREATE_INFO",
          name: "IMAGE_VIEW_CREATE_INFO",
          origin: Vulkan1_0,
          value: 15,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SHADER_MODULE_CREATE_INFO",
          name: "SHADER_MODULE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_CACHE_CREATE_INFO",
          name: "PIPELINE_CACHE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 17,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_CREATE_INFO",
          name: "PIPELINE_SHADER_STAGE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 18,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO",
          name: "PIPELINE_VERTEX_INPUT_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 19,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO",
          name: "PIPELINE_INPUT_ASSEMBLY_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 20,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_STATE_CREATE_INFO",
          name: "PIPELINE_TESSELLATION_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 21,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_STATE_CREATE_INFO",
          name: "PIPELINE_VIEWPORT_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 22,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_CREATE_INFO",
          name: "PIPELINE_RASTERIZATION_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 23,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_MULTISAMPLE_STATE_CREATE_INFO",
          name: "PIPELINE_MULTISAMPLE_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 24,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO",
          name: "PIPELINE_DEPTH_STENCIL_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 25,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_STATE_CREATE_INFO",
          name: "PIPELINE_COLOR_BLEND_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 26,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_DYNAMIC_STATE_CREATE_INFO",
          name: "PIPELINE_DYNAMIC_STATE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 27,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_CREATE_INFO",
          name: "GRAPHICS_PIPELINE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 28,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMPUTE_PIPELINE_CREATE_INFO",
          name: "COMPUTE_PIPELINE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 29,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_LAYOUT_CREATE_INFO",
          name: "PIPELINE_LAYOUT_CREATE_INFO",
          origin: Vulkan1_0,
          value: 30,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_CREATE_INFO",
          name: "SAMPLER_CREATE_INFO",
          origin: Vulkan1_0,
          value: 31,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_CREATE_INFO",
          name: "DESCRIPTOR_SET_LAYOUT_CREATE_INFO",
          origin: Vulkan1_0,
          value: 32,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_CREATE_INFO",
          name: "DESCRIPTOR_POOL_CREATE_INFO",
          origin: Vulkan1_0,
          value: 33,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_ALLOCATE_INFO",
          name: "DESCRIPTOR_SET_ALLOCATE_INFO",
          origin: Vulkan1_0,
          value: 34,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET",
          name: "WRITE_DESCRIPTOR_SET",
          origin: Vulkan1_0,
          value: 35,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_DESCRIPTOR_SET",
          name: "COPY_DESCRIPTOR_SET",
          origin: Vulkan1_0,
          value: 36,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FRAMEBUFFER_CREATE_INFO",
          name: "FRAMEBUFFER_CREATE_INFO",
          origin: Vulkan1_0,
          value: 37,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO",
          name: "RENDER_PASS_CREATE_INFO",
          origin: Vulkan1_0,
          value: 38,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_POOL_CREATE_INFO",
          name: "COMMAND_POOL_CREATE_INFO",
          origin: Vulkan1_0,
          value: 39,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_ALLOCATE_INFO",
          name: "COMMAND_BUFFER_ALLOCATE_INFO",
          origin: Vulkan1_0,
          value: 40,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_INFO",
          name: "COMMAND_BUFFER_INHERITANCE_INFO",
          origin: Vulkan1_0,
          value: 41,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_BEGIN_INFO",
          name: "COMMAND_BUFFER_BEGIN_INFO",
          origin: Vulkan1_0,
          value: 42,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_BEGIN_INFO",
          name: "RENDER_PASS_BEGIN_INFO",
          origin: Vulkan1_0,
          value: 43,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER",
          name: "BUFFER_MEMORY_BARRIER",
          origin: Vulkan1_0,
          value: 44,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER",
          name: "IMAGE_MEMORY_BARRIER",
          origin: Vulkan1_0,
          value: 45,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_BARRIER",
          name: "MEMORY_BARRIER",
          origin: Vulkan1_0,
          value: 46,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_LOADER_INSTANCE_CREATE_INFO",
          name: "LOADER_INSTANCE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 47,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_LOADER_DEVICE_CREATE_INFO",
          name: "LOADER_DEVICE_CREATE_INFO",
          origin: Vulkan1_0,
          value: 48,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_PROPERTIES",
          name: "PHYSICAL_DEVICE_SUBGROUP_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000094000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO",
          name: "BIND_BUFFER_MEMORY_INFO",
          origin: Vulkan1_1,
          value: 1000157000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO",
          name: "BIND_IMAGE_MEMORY_INFO",
          origin: Vulkan1_1,
          value: 1000157001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES",
          name: "PHYSICAL_DEVICE16BIT_STORAGE_FEATURES",
          origin: Vulkan1_1,
          value: 1000083000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS",
          name: "MEMORY_DEDICATED_REQUIREMENTS",
          origin: Vulkan1_1,
          value: 1000127000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO",
          name: "MEMORY_DEDICATED_ALLOCATE_INFO",
          origin: Vulkan1_1,
          value: 1000127001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO",
          name: "MEMORY_ALLOCATE_FLAGS_INFO",
          origin: Vulkan1_1,
          value: 1000060000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO",
          name: "DEVICE_GROUP_RENDER_PASS_BEGIN_INFO",
          origin: Vulkan1_1,
          value: 1000060003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO",
          name: "DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO",
          origin: Vulkan1_1,
          value: 1000060004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO",
          name: "DEVICE_GROUP_SUBMIT_INFO",
          origin: Vulkan1_1,
          value: 1000060005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO",
          name: "DEVICE_GROUP_BIND_SPARSE_INFO",
          origin: Vulkan1_1,
          value: 1000060006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO",
          name: "BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO",
          origin: Vulkan1_1,
          value: 1000060013,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO",
          name: "BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO",
          origin: Vulkan1_1,
          value: 1000060014,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES",
          name: "PHYSICAL_DEVICE_GROUP_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000070000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO",
          name: "DEVICE_GROUP_DEVICE_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000070001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2",
          name: "BUFFER_MEMORY_REQUIREMENTS_INFO2",
          origin: Vulkan1_1,
          value: 1000146000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2",
          name: "IMAGE_MEMORY_REQUIREMENTS_INFO2",
          origin: Vulkan1_1,
          value: 1000146001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2",
          name: "IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO2",
          origin: Vulkan1_1,
          value: 1000146002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2",
          name: "MEMORY_REQUIREMENTS2",
          origin: Vulkan1_1,
          value: 1000146003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2",
          name: "SPARSE_IMAGE_MEMORY_REQUIREMENTS2",
          origin: Vulkan1_1,
          value: 1000146004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2",
          name: "PHYSICAL_DEVICE_FEATURES2",
          origin: Vulkan1_1,
          value: 1000059000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2",
          name: "PHYSICAL_DEVICE_PROPERTIES2",
          origin: Vulkan1_1,
          value: 1000059001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2",
          name: "FORMAT_PROPERTIES2",
          origin: Vulkan1_1,
          value: 1000059002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2",
          name: "IMAGE_FORMAT_PROPERTIES2",
          origin: Vulkan1_1,
          value: 1000059003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2",
          name: "PHYSICAL_DEVICE_IMAGE_FORMAT_INFO2",
          origin: Vulkan1_1,
          value: 1000059004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2",
          name: "QUEUE_FAMILY_PROPERTIES2",
          origin: Vulkan1_1,
          value: 1000059005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2",
          name: "PHYSICAL_DEVICE_MEMORY_PROPERTIES2",
          origin: Vulkan1_1,
          value: 1000059006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2",
          name: "SPARSE_IMAGE_FORMAT_PROPERTIES2",
          origin: Vulkan1_1,
          value: 1000059007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2",
          name: "PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO2",
          origin: Vulkan1_1,
          value: 1000059008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES",
          name: "PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000117000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO",
          name: "RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000117001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO",
          name: "IMAGE_VIEW_USAGE_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000117002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO",
          name: "PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000117003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO",
          name: "RENDER_PASS_MULTIVIEW_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000053000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES",
          name: "PHYSICAL_DEVICE_MULTIVIEW_FEATURES",
          origin: Vulkan1_1,
          value: 1000053001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES",
          name: "PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000053002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
          name: "PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
          origin: Vulkan1_1,
          value: 1000120000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PROTECTED_SUBMIT_INFO",
          name: "PROTECTED_SUBMIT_INFO",
          origin: Vulkan1_1,
          value: 1000145000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES",
          name: "PHYSICAL_DEVICE_PROTECTED_MEMORY_FEATURES",
          origin: Vulkan1_1,
          value: 1000145001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES",
          name: "PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000145002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_QUEUE_INFO_2",
          name: "DEVICE_QUEUE_INFO2",
          origin: Vulkan1_1,
          value: 1000145003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO",
          name: "SAMPLER_YCBCR_CONVERSION_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000156000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO",
          name: "SAMPLER_YCBCR_CONVERSION_INFO",
          origin: Vulkan1_1,
          value: 1000156001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO",
          name: "BIND_IMAGE_PLANE_MEMORY_INFO",
          origin: Vulkan1_1,
          value: 1000156002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO",
          name: "IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO",
          origin: Vulkan1_1,
          value: 1000156003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES",
          name: "PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES",
          origin: Vulkan1_1,
          value: 1000156004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES",
          name: "SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000156005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO",
          name: "DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000085000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO",
          name: "PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO",
          origin: Vulkan1_1,
          value: 1000071000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES",
          name: "EXTERNAL_IMAGE_FORMAT_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000071001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO",
          name: "PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO",
          origin: Vulkan1_1,
          value: 1000071002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES",
          name: "EXTERNAL_BUFFER_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000071003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES",
          name: "PHYSICAL_DEVICE_ID_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000071004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO",
          name: "EXTERNAL_MEMORY_BUFFER_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000072000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO",
          name: "EXTERNAL_MEMORY_IMAGE_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000072001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO",
          name: "EXPORT_MEMORY_ALLOCATE_INFO",
          origin: Vulkan1_1,
          value: 1000072002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO",
          name: "PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO",
          origin: Vulkan1_1,
          value: 1000112000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES",
          name: "EXTERNAL_FENCE_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000112001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO",
          name: "EXPORT_FENCE_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000113000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO",
          name: "EXPORT_SEMAPHORE_CREATE_INFO",
          origin: Vulkan1_1,
          value: 1000077000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO",
          name: "PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO",
          origin: Vulkan1_1,
          value: 1000076000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES",
          name: "EXTERNAL_SEMAPHORE_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000076001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES",
          name: "PHYSICAL_DEVICE_MAINTENANCE3_PROPERTIES",
          origin: Vulkan1_1,
          value: 1000168000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT",
          name: "DESCRIPTOR_SET_LAYOUT_SUPPORT",
          origin: Vulkan1_1,
          value: 1000168001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES",
          name: "PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES",
          origin: Vulkan1_1,
          value: 1000063000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_FEATURES",
          name: "PHYSICAL_DEVICE_VULKAN1_1_FEATURES",
          origin: Vulkan1_2,
          value: 49,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_1_PROPERTIES",
          name: "PHYSICAL_DEVICE_VULKAN1_1_PROPERTIES",
          origin: Vulkan1_2,
          value: 50,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_FEATURES",
          name: "PHYSICAL_DEVICE_VULKAN1_2_FEATURES",
          origin: Vulkan1_2,
          value: 51,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_2_PROPERTIES",
          name: "PHYSICAL_DEVICE_VULKAN1_2_PROPERTIES",
          origin: Vulkan1_2,
          value: 52,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO",
          name: "IMAGE_FORMAT_LIST_CREATE_INFO",
          origin: Vulkan1_2,
          value: 1000147000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2",
          name: "ATTACHMENT_DESCRIPTION2",
          origin: Vulkan1_2,
          value: 1000109000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2",
          name: "ATTACHMENT_REFERENCE2",
          origin: Vulkan1_2,
          value: 1000109001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2",
          name: "SUBPASS_DESCRIPTION2",
          origin: Vulkan1_2,
          value: 1000109002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2",
          name: "SUBPASS_DEPENDENCY2",
          origin: Vulkan1_2,
          value: 1000109003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2",
          name: "RENDER_PASS_CREATE_INFO2",
          origin: Vulkan1_2,
          value: 1000109004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO",
          name: "SUBPASS_BEGIN_INFO",
          origin: Vulkan1_2,
          value: 1000109005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_END_INFO",
          name: "SUBPASS_END_INFO",
          origin: Vulkan1_2,
          value: 1000109006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES",
          name: "PHYSICAL_DEVICE8BIT_STORAGE_FEATURES",
          origin: Vulkan1_2,
          value: 1000177000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES",
          name: "PHYSICAL_DEVICE_DRIVER_PROPERTIES",
          origin: Vulkan1_2,
          value: 1000196000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES",
          name: "PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES",
          origin: Vulkan1_2,
          value: 1000180000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES",
          name: "PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES",
          origin: Vulkan1_2,
          value: 1000082000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES",
          name: "PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES",
          origin: Vulkan1_2,
          value: 1000197000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO",
          name: "DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO",
          origin: Vulkan1_2,
          value: 1000161000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES",
          name: "PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES",
          origin: Vulkan1_2,
          value: 1000161001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES",
          name: "PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES",
          origin: Vulkan1_2,
          value: 1000161002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO",
          name: "DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO",
          origin: Vulkan1_2,
          value: 1000161003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT",
          name: "DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT",
          origin: Vulkan1_2,
          value: 1000161004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES",
          name: "PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES",
          origin: Vulkan1_2,
          value: 1000199000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE",
          name: "SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE",
          origin: Vulkan1_2,
          value: 1000199001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES",
          name: "PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES",
          origin: Vulkan1_2,
          value: 1000221000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO",
          name: "IMAGE_STENCIL_USAGE_CREATE_INFO",
          origin: Vulkan1_2,
          value: 1000246000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES",
          name: "PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES",
          origin: Vulkan1_2,
          value: 1000130000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO",
          name: "SAMPLER_REDUCTION_MODE_CREATE_INFO",
          origin: Vulkan1_2,
          value: 1000130001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES",
          name: "PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES",
          origin: Vulkan1_2,
          value: 1000211000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES",
          name: "PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES",
          origin: Vulkan1_2,
          value: 1000108000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO",
          name: "FRAMEBUFFER_ATTACHMENTS_CREATE_INFO",
          origin: Vulkan1_2,
          value: 1000108001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO",
          name: "FRAMEBUFFER_ATTACHMENT_IMAGE_INFO",
          origin: Vulkan1_2,
          value: 1000108002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO",
          name: "RENDER_PASS_ATTACHMENT_BEGIN_INFO",
          origin: Vulkan1_2,
          value: 1000108003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES",
          name: "PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES",
          origin: Vulkan1_2,
          value: 1000253000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES",
          name: "PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES",
          origin: Vulkan1_2,
          value: 1000175000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES",
          name: "PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES",
          origin: Vulkan1_2,
          value: 1000241000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT",
          name: "ATTACHMENT_REFERENCE_STENCIL_LAYOUT",
          origin: Vulkan1_2,
          value: 1000241001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT",
          name: "ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT",
          origin: Vulkan1_2,
          value: 1000241002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES",
          name: "PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES",
          origin: Vulkan1_2,
          value: 1000261000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES",
          name: "PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES",
          origin: Vulkan1_2,
          value: 1000207000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES",
          name: "PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES",
          origin: Vulkan1_2,
          value: 1000207001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO",
          name: "SEMAPHORE_TYPE_CREATE_INFO",
          origin: Vulkan1_2,
          value: 1000207002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO",
          name: "TIMELINE_SEMAPHORE_SUBMIT_INFO",
          origin: Vulkan1_2,
          value: 1000207003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO",
          name: "SEMAPHORE_WAIT_INFO",
          origin: Vulkan1_2,
          value: 1000207004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO",
          name: "SEMAPHORE_SIGNAL_INFO",
          origin: Vulkan1_2,
          value: 1000207005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES",
          name: "PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES",
          origin: Vulkan1_2,
          value: 1000257000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO",
          name: "BUFFER_DEVICE_ADDRESS_INFO",
          origin: Vulkan1_2,
          value: 1000244001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO",
          name: "BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO",
          origin: Vulkan1_2,
          value: 1000257002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO",
          name: "MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO",
          origin: Vulkan1_2,
          value: 1000257003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO",
          name: "DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO",
          origin: Vulkan1_2,
          value: 1000257004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_FEATURES",
          name: "PHYSICAL_DEVICE_VULKAN1_3_FEATURES",
          origin: Vulkan1_3,
          value: 53,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_1_3_PROPERTIES",
          name: "PHYSICAL_DEVICE_VULKAN1_3_PROPERTIES",
          origin: Vulkan1_3,
          value: 54,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO",
          name: "PIPELINE_CREATION_FEEDBACK_CREATE_INFO",
          origin: Vulkan1_3,
          value: 1000192000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES",
          name: "PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES",
          origin: Vulkan1_3,
          value: 1000215000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES",
          name: "PHYSICAL_DEVICE_TOOL_PROPERTIES",
          origin: Vulkan1_3,
          value: 1000245000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES",
          name: "PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES",
          origin: Vulkan1_3,
          value: 1000276000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES",
          name: "PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES",
          origin: Vulkan1_3,
          value: 1000295000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO",
          name: "DEVICE_PRIVATE_DATA_CREATE_INFO",
          origin: Vulkan1_3,
          value: 1000295001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO",
          name: "PRIVATE_DATA_SLOT_CREATE_INFO",
          origin: Vulkan1_3,
          value: 1000295002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES",
          name: "PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES",
          origin: Vulkan1_3,
          value: 1000297000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2",
          name: "MEMORY_BARRIER2",
          origin: Vulkan1_3,
          value: 1000314000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2",
          name: "BUFFER_MEMORY_BARRIER2",
          origin: Vulkan1_3,
          value: 1000314001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2",
          name: "IMAGE_MEMORY_BARRIER2",
          origin: Vulkan1_3,
          value: 1000314002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEPENDENCY_INFO",
          name: "DEPENDENCY_INFO",
          origin: Vulkan1_3,
          value: 1000314003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBMIT_INFO_2",
          name: "SUBMIT_INFO2",
          origin: Vulkan1_3,
          value: 1000314004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO",
          name: "SEMAPHORE_SUBMIT_INFO",
          origin: Vulkan1_3,
          value: 1000314005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO",
          name: "COMMAND_BUFFER_SUBMIT_INFO",
          origin: Vulkan1_3,
          value: 1000314006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES",
          name: "PHYSICAL_DEVICE_SYNCHRONIZATION2_FEATURES",
          origin: Vulkan1_3,
          value: 1000314007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES",
          name: "PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES",
          origin: Vulkan1_3,
          value: 1000325000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES",
          name: "PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES",
          origin: Vulkan1_3,
          value: 1000335000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2",
          name: "COPY_BUFFER_INFO2",
          origin: Vulkan1_3,
          value: 1000337000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2",
          name: "COPY_IMAGE_INFO2",
          origin: Vulkan1_3,
          value: 1000337001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2",
          name: "COPY_BUFFER_TO_IMAGE_INFO2",
          origin: Vulkan1_3,
          value: 1000337002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2",
          name: "COPY_IMAGE_TO_BUFFER_INFO2",
          origin: Vulkan1_3,
          value: 1000337003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2",
          name: "BLIT_IMAGE_INFO2",
          origin: Vulkan1_3,
          value: 1000337004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2",
          name: "RESOLVE_IMAGE_INFO2",
          origin: Vulkan1_3,
          value: 1000337005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_COPY_2",
          name: "BUFFER_COPY2",
          origin: Vulkan1_3,
          value: 1000337006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_COPY_2",
          name: "IMAGE_COPY2",
          origin: Vulkan1_3,
          value: 1000337007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_BLIT_2",
          name: "IMAGE_BLIT2",
          origin: Vulkan1_3,
          value: 1000337008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2",
          name: "BUFFER_IMAGE_COPY2",
          origin: Vulkan1_3,
          value: 1000337009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2",
          name: "IMAGE_RESOLVE2",
          origin: Vulkan1_3,
          value: 1000337010,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES",
          name: "PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES",
          origin: Vulkan1_3,
          value: 1000225000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO",
          name: "PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO",
          origin: Vulkan1_3,
          value: 1000225001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES",
          name: "PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES",
          origin: Vulkan1_3,
          value: 1000225002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES",
          name: "PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES",
          origin: Vulkan1_3,
          value: 1000138000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES",
          name: "PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES",
          origin: Vulkan1_3,
          value: 1000138001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK",
          name: "WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK",
          origin: Vulkan1_3,
          value: 1000138002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO",
          name: "DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO",
          origin: Vulkan1_3,
          value: 1000138003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES",
          name: "PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES",
          origin: Vulkan1_3,
          value: 1000066000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDERING_INFO",
          name: "RENDERING_INFO",
          origin: Vulkan1_3,
          value: 1000044000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO",
          name: "RENDERING_ATTACHMENT_INFO",
          origin: Vulkan1_3,
          value: 1000044001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO",
          name: "PIPELINE_RENDERING_CREATE_INFO",
          origin: Vulkan1_3,
          value: 1000044002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES",
          name: "PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES",
          origin: Vulkan1_3,
          value: 1000044003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO",
          name: "COMMAND_BUFFER_INHERITANCE_RENDERING_INFO",
          origin: Vulkan1_3,
          value: 1000044004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES",
          name: "PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES",
          origin: Vulkan1_3,
          value: 1000280000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES",
          name: "PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES",
          origin: Vulkan1_3,
          value: 1000280001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES",
          name: "PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES",
          origin: Vulkan1_3,
          value: 1000281001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3",
          name: "FORMAT_PROPERTIES3",
          origin: Vulkan1_3,
          value: 1000360000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES",
          name: "PHYSICAL_DEVICE_MAINTENANCE4_FEATURES",
          origin: Vulkan1_3,
          value: 1000413000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES",
          name: "PHYSICAL_DEVICE_MAINTENANCE4_PROPERTIES",
          origin: Vulkan1_3,
          value: 1000413001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS",
          name: "DEVICE_BUFFER_MEMORY_REQUIREMENTS",
          origin: Vulkan1_3,
          value: 1000413002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS",
          name: "DEVICE_IMAGE_MEMORY_REQUIREMENTS",
          origin: Vulkan1_3,
          value: 1000413003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR",
          name: "SWAPCHAIN_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 1000001000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PRESENT_INFO_KHR",
          name: "PRESENT_INFO_KHR",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 1000001001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_CAPABILITIES_KHR",
          name: "DEVICE_GROUP_PRESENT_CAPABILITIES_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          value: 1000060007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_SWAPCHAIN_CREATE_INFO_KHR",
          name: "IMAGE_SWAPCHAIN_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          value: 1000060008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR",
          name: "BIND_IMAGE_MEMORY_SWAPCHAIN_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          value: 1000060009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACQUIRE_NEXT_IMAGE_INFO_KHR",
          name: "ACQUIRE_NEXT_IMAGE_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          value: 1000060010,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_PRESENT_INFO_KHR",
          name: "DEVICE_GROUP_PRESENT_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          value: 1000060011,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR",
          name: "DEVICE_GROUP_SWAPCHAIN_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          value: 1000060012,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_MODE_CREATE_INFO_KHR",
          name: "DISPLAY_MODE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_display", 3, false),
          value: 1000002000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_SURFACE_CREATE_INFO_KHR",
          name: "DISPLAY_SURFACE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_display", 3, false),
          value: 1000002001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_PRESENT_INFO_KHR",
          name: "DISPLAY_PRESENT_INFO_KHR",
          origin: Extension("VK_KHR_display_swapchain", 4, false),
          value: 1000003000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_XLIB_SURFACE_CREATE_INFO_KHR",
          name: "XLIB_SURFACE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_xlib_surface", 5, false),
          value: 1000004000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_XCB_SURFACE_CREATE_INFO_KHR",
          name: "XCB_SURFACE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_xcb_surface", 6, false),
          value: 1000005000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_WAYLAND_SURFACE_CREATE_INFO_KHR",
          name: "WAYLAND_SURFACE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_wayland_surface", 7, false),
          value: 1000006000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ANDROID_SURFACE_CREATE_INFO_KHR",
          name: "ANDROID_SURFACE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_android_surface", 9, false),
          value: 1000008000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_WIN32_SURFACE_CREATE_INFO_KHR",
          name: "WIN32_SURFACE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_win32_surface", 10, false),
          value: 1000009000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_NATIVE_BUFFER_ANDROID",
          name: "NATIVE_BUFFER_ANDROID",
          origin: Extension("VK_ANDROID_native_buffer", 11, true),
          value: 1000010000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID",
          name: "SWAPCHAIN_IMAGE_CREATE_INFO_ANDROID",
          origin: Extension("VK_ANDROID_native_buffer", 11, true),
          value: 1000010001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID",
          name: "PHYSICAL_DEVICE_PRESENTATION_PROPERTIES_ANDROID",
          origin: Extension("VK_ANDROID_native_buffer", 11, true),
          value: 1000010002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
          name: "DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 1000011000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD",
          name: "PIPELINE_RASTERIZATION_STATE_RASTERIZATION_ORDER_AMD",
          origin: Extension("VK_AMD_rasterization_order", 19, false),
          value: 1000018000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_NAME_INFO_EXT",
          name: "DEBUG_MARKER_OBJECT_NAME_INFO_EXT",
          origin: Extension("VK_EXT_debug_marker", 23, false),
          value: 1000022000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_MARKER_OBJECT_TAG_INFO_EXT",
          name: "DEBUG_MARKER_OBJECT_TAG_INFO_EXT",
          origin: Extension("VK_EXT_debug_marker", 23, false),
          value: 1000022001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_MARKER_MARKER_INFO_EXT",
          name: "DEBUG_MARKER_MARKER_INFO_EXT",
          origin: Extension("VK_EXT_debug_marker", 23, false),
          value: 1000022002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_PROFILE_KHR",
          name: "VIDEO_PROFILE_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_CAPABILITIES_KHR",
          name: "VIDEO_CAPABILITIES_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_PICTURE_RESOURCE_KHR",
          name: "VIDEO_PICTURE_RESOURCE_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_GET_MEMORY_PROPERTIES_KHR",
          name: "VIDEO_GET_MEMORY_PROPERTIES_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_BIND_MEMORY_KHR",
          name: "VIDEO_BIND_MEMORY_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_SESSION_CREATE_INFO_KHR",
          name: "VIDEO_SESSION_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR",
          name: "VIDEO_SESSION_PARAMETERS_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR",
          name: "VIDEO_SESSION_PARAMETERS_UPDATE_INFO_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_BEGIN_CODING_INFO_KHR",
          name: "VIDEO_BEGIN_CODING_INFO_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_END_CODING_INFO_KHR",
          name: "VIDEO_END_CODING_INFO_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_CODING_CONTROL_INFO_KHR",
          name: "VIDEO_CODING_CONTROL_INFO_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023010,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_REFERENCE_SLOT_KHR",
          name: "VIDEO_REFERENCE_SLOT_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023011,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_QUEUE_FAMILY_PROPERTIES_2_KHR",
          name: "VIDEO_QUEUE_FAMILY_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023012,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_PROFILES_KHR",
          name: "VIDEO_PROFILES_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023013,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR",
          name: "PHYSICAL_DEVICE_VIDEO_FORMAT_INFO_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023014,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_FORMAT_PROPERTIES_KHR",
          name: "VIDEO_FORMAT_PROPERTIES_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023015,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES_2_KHR",
          name: "QUEUE_FAMILY_QUERY_RESULT_STATUS_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023016,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_INFO_KHR",
          name: "VIDEO_DECODE_INFO_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 1000024000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_CAPABILITIES_KHR",
          name: "VIDEO_DECODE_CAPABILITIES_KHR",
          origin: Extension("VK_KHR_video_decode_queue", 25, false),
          value: 1000024001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV",
          name: "DEDICATED_ALLOCATION_IMAGE_CREATE_INFO_NV",
          origin: Extension("VK_NV_dedicated_allocation", 27, false),
          value: 1000026000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV",
          name: "DEDICATED_ALLOCATION_BUFFER_CREATE_INFO_NV",
          origin: Extension("VK_NV_dedicated_allocation", 27, false),
          value: 1000026001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV",
          name: "DEDICATED_ALLOCATION_MEMORY_ALLOCATE_INFO_NV",
          origin: Extension("VK_NV_dedicated_allocation", 27, false),
          value: 1000026002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_FEATURES_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 1000028000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_TRANSFORM_FEEDBACK_PROPERTIES_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 1000028001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT",
          name: "PIPELINE_RASTERIZATION_STATE_STREAM_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_transform_feedback", 29, false),
          value: 1000028002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_CU_MODULE_CREATE_INFO_NVX",
          name: "CU_MODULE_CREATE_INFO_NVX",
          origin: Extension("VK_NVX_binary_import", 30, false),
          value: 1000029000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_CU_FUNCTION_CREATE_INFO_NVX",
          name: "CU_FUNCTION_CREATE_INFO_NVX",
          origin: Extension("VK_NVX_binary_import", 30, false),
          value: 1000029001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_CU_LAUNCH_INFO_NVX",
          name: "CU_LAUNCH_INFO_NVX",
          origin: Extension("VK_NVX_binary_import", 30, false),
          value: 1000029002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_VIEW_HANDLE_INFO_NVX",
          name: "IMAGE_VIEW_HANDLE_INFO_NVX",
          origin: Extension("VK_NVX_image_view_handle", 31, false),
          value: 1000030000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_VIEW_ADDRESS_PROPERTIES_NVX",
          name: "IMAGE_VIEW_ADDRESS_PROPERTIES_NVX",
          origin: Extension("VK_NVX_image_view_handle", 31, false),
          value: 1000030001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_CAPABILITIES_EXT",
          name: "VIDEO_ENCODE_H264_CAPABILITIES_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT",
          name: "VIDEO_ENCODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT",
          name: "VIDEO_ENCODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_VCL_FRAME_INFO_EXT",
          name: "VIDEO_ENCODE_H264_VCL_FRAME_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_DPB_SLOT_INFO_EXT",
          name: "VIDEO_ENCODE_H264_DPB_SLOT_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_NALU_SLICE_EXT",
          name: "VIDEO_ENCODE_H264_NALU_SLICE_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_EMIT_PICTURE_PARAMETERS_EXT",
          name: "VIDEO_ENCODE_H264_EMIT_PICTURE_PARAMETERS_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_PROFILE_EXT",
          name: "VIDEO_ENCODE_H264_PROFILE_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_INFO_EXT",
          name: "VIDEO_ENCODE_H264_RATE_CONTROL_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_EXT",
          name: "VIDEO_ENCODE_H264_RATE_CONTROL_LAYER_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H264_REFERENCE_LISTS_EXT",
          name: "VIDEO_ENCODE_H264_REFERENCE_LISTS_EXT",
          origin: Extension("VK_EXT_video_encode_h264", 39, true),
          value: 1000038010,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_CAPABILITIES_EXT",
          name: "VIDEO_ENCODE_H265_CAPABILITIES_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT",
          name: "VIDEO_ENCODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT",
          name: "VIDEO_ENCODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_VCL_FRAME_INFO_EXT",
          name: "VIDEO_ENCODE_H265_VCL_FRAME_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_DPB_SLOT_INFO_EXT",
          name: "VIDEO_ENCODE_H265_DPB_SLOT_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_EXT",
          name: "VIDEO_ENCODE_H265_NALU_SLICE_SEGMENT_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_EMIT_PICTURE_PARAMETERS_EXT",
          name: "VIDEO_ENCODE_H265_EMIT_PICTURE_PARAMETERS_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_PROFILE_EXT",
          name: "VIDEO_ENCODE_H265_PROFILE_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_REFERENCE_LISTS_EXT",
          name: "VIDEO_ENCODE_H265_REFERENCE_LISTS_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_INFO_EXT",
          name: "VIDEO_ENCODE_H265_RATE_CONTROL_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_EXT",
          name: "VIDEO_ENCODE_H265_RATE_CONTROL_LAYER_INFO_EXT",
          origin: Extension("VK_EXT_video_encode_h265", 40, true),
          value: 1000039010,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_CAPABILITIES_EXT",
          name: "VIDEO_DECODE_H264_CAPABILITIES_EXT",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1000040000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PICTURE_INFO_EXT",
          name: "VIDEO_DECODE_H264_PICTURE_INFO_EXT",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1000040001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_MVC_EXT",
          name: "VIDEO_DECODE_H264_MVC_EXT",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1000040002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_PROFILE_EXT",
          name: "VIDEO_DECODE_H264_PROFILE_EXT",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1000040003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT",
          name: "VIDEO_DECODE_H264_SESSION_PARAMETERS_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1000040004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT",
          name: "VIDEO_DECODE_H264_SESSION_PARAMETERS_ADD_INFO_EXT",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1000040005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H264_DPB_SLOT_INFO_EXT",
          name: "VIDEO_DECODE_H264_DPB_SLOT_INFO_EXT",
          origin: Extension("VK_EXT_video_decode_h264", 41, true),
          value: 1000040006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD",
          name: "TEXTURE_LOD_GATHER_FORMAT_PROPERTIES_AMD",
          origin: Extension("VK_AMD_texture_gather_bias_lod", 42, false),
          value: 1000041000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR",
          name: "RENDERING_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          value: 1000044006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT",
          name: "RENDERING_FRAGMENT_DENSITY_MAP_ATTACHMENT_INFO_EXT",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          value: 1000044007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD",
          name: "ATTACHMENT_SAMPLE_COUNT_INFO_AMD",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          value: 1000044008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX",
          name: "MULTIVIEW_PER_VIEW_ATTRIBUTES_INFO_NVX",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          value: 1000044009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP",
          name: "STREAM_DESCRIPTOR_SURFACE_CREATE_INFO_GGP",
          origin: Extension("VK_GGP_stream_descriptor_surface", 50, true),
          value: 1000049000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV",
          name: "PHYSICAL_DEVICE_CORNER_SAMPLED_IMAGE_FEATURES_NV",
          origin: Extension("VK_NV_corner_sampled_image", 51, false),
          value: 1000050000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV",
          name: "EXTERNAL_MEMORY_IMAGE_CREATE_INFO_NV",
          origin: Extension("VK_NV_external_memory", 57, false),
          value: 1000056000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_NV",
          name: "EXPORT_MEMORY_ALLOCATE_INFO_NV",
          origin: Extension("VK_NV_external_memory", 57, false),
          value: 1000056001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_NV",
          name: "IMPORT_MEMORY_WIN32_HANDLE_INFO_NV",
          origin: Extension("VK_NV_external_memory_win32", 58, false),
          value: 1000057000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_NV",
          name: "EXPORT_MEMORY_WIN32_HANDLE_INFO_NV",
          origin: Extension("VK_NV_external_memory_win32", 58, false),
          value: 1000057001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV",
          name: "WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_NV",
          origin: Extension("VK_NV_win32_keyed_mutex", 59, false),
          value: 1000058000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VALIDATION_FLAGS_EXT",
          name: "VALIDATION_FLAGS_EXT",
          origin: Extension("VK_EXT_validation_flags", 62, false),
          value: 1000061000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VI_SURFACE_CREATE_INFO_NN",
          name: "VI_SURFACE_CREATE_INFO_NN",
          origin: Extension("VK_NN_vi_surface", 63, false),
          value: 1000062000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_VIEW_ASTC_DECODE_MODE_EXT",
          name: "IMAGE_VIEW_ASTC_DECODE_MODE_EXT",
          origin: Extension("VK_EXT_astc_decode_mode", 68, false),
          value: 1000067000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_ASTC_DECODE_FEATURES_EXT",
          origin: Extension("VK_EXT_astc_decode_mode", 68, false),
          value: 1000067001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
          name: "IMPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_memory_win32", 74, false),
          value: 1000073000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
          name: "EXPORT_MEMORY_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_memory_win32", 74, false),
          value: 1000073001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_WIN32_HANDLE_PROPERTIES_KHR",
          name: "MEMORY_WIN32_HANDLE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_external_memory_win32", 74, false),
          value: 1000073002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_GET_WIN32_HANDLE_INFO_KHR",
          name: "MEMORY_GET_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_memory_win32", 74, false),
          value: 1000073003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_MEMORY_FD_INFO_KHR",
          name: "IMPORT_MEMORY_FD_INFO_KHR",
          origin: Extension("VK_KHR_external_memory_fd", 75, false),
          value: 1000074000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_FD_PROPERTIES_KHR",
          name: "MEMORY_FD_PROPERTIES_KHR",
          origin: Extension("VK_KHR_external_memory_fd", 75, false),
          value: 1000074001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_GET_FD_INFO_KHR",
          name: "MEMORY_GET_FD_INFO_KHR",
          origin: Extension("VK_KHR_external_memory_fd", 75, false),
          value: 1000074002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR",
          name: "WIN32_KEYED_MUTEX_ACQUIRE_RELEASE_INFO_KHR",
          origin: Extension("VK_KHR_win32_keyed_mutex", 76, false),
          value: 1000075000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
          name: "IMPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
          value: 1000078000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
          name: "EXPORT_SEMAPHORE_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
          value: 1000078001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_D3D12_FENCE_SUBMIT_INFO_KHR",
          name: "D3D12_FENCE_SUBMIT_INFO_KHR",
          origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
          value: 1000078002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR",
          name: "SEMAPHORE_GET_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
          value: 1000078003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_FD_INFO_KHR",
          name: "IMPORT_SEMAPHORE_FD_INFO_KHR",
          origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
          value: 1000079000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_GET_FD_INFO_KHR",
          name: "SEMAPHORE_GET_FD_INFO_KHR",
          origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
          value: 1000079001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_PUSH_DESCRIPTOR_PROPERTIES_KHR",
          origin: Extension("VK_KHR_push_descriptor", 81, false),
          value: 1000080000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT",
          name: "COMMAND_BUFFER_INHERITANCE_CONDITIONAL_RENDERING_INFO_EXT",
          origin: Extension("VK_EXT_conditional_rendering", 82, false),
          value: 1000081000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_CONDITIONAL_RENDERING_FEATURES_EXT",
          origin: Extension("VK_EXT_conditional_rendering", 82, false),
          value: 1000081001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_CONDITIONAL_RENDERING_BEGIN_INFO_EXT",
          name: "CONDITIONAL_RENDERING_BEGIN_INFO_EXT",
          origin: Extension("VK_EXT_conditional_rendering", 82, false),
          value: 1000081002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PRESENT_REGIONS_KHR",
          name: "PRESENT_REGIONS_KHR",
          origin: Extension("VK_KHR_incremental_present", 85, false),
          value: 1000084000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV",
          name: "PIPELINE_VIEWPORT_W_SCALING_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_clip_space_w_scaling", 88, false),
          value: 1000087000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT",
          name: "SURFACE_CAPABILITIES2_EXT",
          origin: Extension("VK_EXT_display_surface_counter", 91, false),
          value: 1000090000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_POWER_INFO_EXT",
          name: "DISPLAY_POWER_INFO_EXT",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 1000091000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_EVENT_INFO_EXT",
          name: "DEVICE_EVENT_INFO_EXT",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 1000091001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_EVENT_INFO_EXT",
          name: "DISPLAY_EVENT_INFO_EXT",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 1000091002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SWAPCHAIN_COUNTER_CREATE_INFO_EXT",
          name: "SWAPCHAIN_COUNTER_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 1000091003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PRESENT_TIMES_INFO_GOOGLE",
          name: "PRESENT_TIMES_INFO_GOOGLE",
          origin: Extension("VK_GOOGLE_display_timing", 93, false),
          value: 1000092000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX",
          name: "PHYSICAL_DEVICE_MULTIVIEW_PER_VIEW_ATTRIBUTES_PROPERTIES_NVX",
          origin: Extension("VK_NVX_multiview_per_view_attributes", 98, false),
          value: 1000097000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV",
          name: "PIPELINE_VIEWPORT_SWIZZLE_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 1000098000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_DISCARD_RECTANGLE_PROPERTIES_EXT",
          origin: Extension("VK_EXT_discard_rectangles", 100, false),
          value: 1000099000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT",
          name: "PIPELINE_DISCARD_RECTANGLE_STATE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_discard_rectangles", 100, false),
          value: 1000099001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_CONSERVATIVE_RASTERIZATION_PROPERTIES_EXT",
          origin: Extension("VK_EXT_conservative_rasterization", 102, false),
          value: 1000101000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT",
          name: "PIPELINE_RASTERIZATION_CONSERVATIVE_STATE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_conservative_rasterization", 102, false),
          value: 1000101001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_DEPTH_CLIP_ENABLE_FEATURES_EXT",
          origin: Extension("VK_EXT_depth_clip_enable", 103, false),
          value: 1000102000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT",
          name: "PIPELINE_RASTERIZATION_DEPTH_CLIP_STATE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_depth_clip_enable", 103, false),
          value: 1000102001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_HDR_METADATA_EXT",
          name: "HDR_METADATA_EXT",
          origin: Extension("VK_EXT_hdr_metadata", 106, false),
          value: 1000105000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SHARED_PRESENT_SURFACE_CAPABILITIES_KHR",
          name: "SHARED_PRESENT_SURFACE_CAPABILITIES_KHR",
          origin: Extension("VK_KHR_shared_presentable_image", 112, false),
          value: 1000111000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_FENCE_WIN32_HANDLE_INFO_KHR",
          name: "IMPORT_FENCE_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_fence_win32", 115, false),
          value: 1000114000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_FENCE_WIN32_HANDLE_INFO_KHR",
          name: "EXPORT_FENCE_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_fence_win32", 115, false),
          value: 1000114001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FENCE_GET_WIN32_HANDLE_INFO_KHR",
          name: "FENCE_GET_WIN32_HANDLE_INFO_KHR",
          origin: Extension("VK_KHR_external_fence_win32", 115, false),
          value: 1000114002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_FENCE_FD_INFO_KHR",
          name: "IMPORT_FENCE_FD_INFO_KHR",
          origin: Extension("VK_KHR_external_fence_fd", 116, false),
          value: 1000115000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FENCE_GET_FD_INFO_KHR",
          name: "FENCE_GET_FD_INFO_KHR",
          origin: Extension("VK_KHR_external_fence_fd", 116, false),
          value: 1000115001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_PERFORMANCE_QUERY_FEATURES_KHR",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1000116000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_PERFORMANCE_QUERY_PROPERTIES_KHR",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1000116001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR",
          name: "QUERY_POOL_PERFORMANCE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1000116002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PERFORMANCE_QUERY_SUBMIT_INFO_KHR",
          name: "PERFORMANCE_QUERY_SUBMIT_INFO_KHR",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1000116003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACQUIRE_PROFILING_LOCK_INFO_KHR",
          name: "ACQUIRE_PROFILING_LOCK_INFO_KHR",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1000116004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_KHR",
          name: "PERFORMANCE_COUNTER_KHR",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1000116005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PERFORMANCE_COUNTER_DESCRIPTION_KHR",
          name: "PERFORMANCE_COUNTER_DESCRIPTION_KHR",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1000116006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SURFACE_INFO_2_KHR",
          name: "PHYSICAL_DEVICE_SURFACE_INFO2_KHR",
          origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
          value: 1000119000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_KHR",
          name: "SURFACE_CAPABILITIES2_KHR",
          origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
          value: 1000119001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SURFACE_FORMAT_2_KHR",
          name: "SURFACE_FORMAT2_KHR",
          origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
          value: 1000119002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_PROPERTIES_2_KHR",
          name: "DISPLAY_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_display_properties2", 122, false),
          value: 1000121000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_PLANE_PROPERTIES_2_KHR",
          name: "DISPLAY_PLANE_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_display_properties2", 122, false),
          value: 1000121001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_MODE_PROPERTIES_2_KHR",
          name: "DISPLAY_MODE_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_display_properties2", 122, false),
          value: 1000121002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_PLANE_INFO_2_KHR",
          name: "DISPLAY_PLANE_INFO2_KHR",
          origin: Extension("VK_KHR_get_display_properties2", 122, false),
          value: 1000121003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_PLANE_CAPABILITIES_2_KHR",
          name: "DISPLAY_PLANE_CAPABILITIES2_KHR",
          origin: Extension("VK_KHR_get_display_properties2", 122, false),
          value: 1000121004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IOS_SURFACE_CREATE_INFO_MVK",
          name: "IOS_SURFACE_CREATE_INFO_MVK",
          origin: Extension("VK_MVK_ios_surface", 123, false),
          value: 1000122000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MACOS_SURFACE_CREATE_INFO_MVK",
          name: "MACOS_SURFACE_CREATE_INFO_MVK",
          origin: Extension("VK_MVK_macos_surface", 124, false),
          value: 1000123000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_NAME_INFO_EXT",
          name: "DEBUG_UTILS_OBJECT_NAME_INFO_EXT",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 1000128000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_UTILS_OBJECT_TAG_INFO_EXT",
          name: "DEBUG_UTILS_OBJECT_TAG_INFO_EXT",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 1000128001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_UTILS_LABEL_EXT",
          name: "DEBUG_UTILS_LABEL_EXT",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 1000128002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT",
          name: "DEBUG_UTILS_MESSENGER_CALLBACK_DATA_EXT",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 1000128003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT",
          name: "DEBUG_UTILS_MESSENGER_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 1000128004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_USAGE_ANDROID",
          name: "ANDROID_HARDWARE_BUFFER_USAGE_ANDROID",
          origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
          value: 1000129000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID",
          name: "ANDROID_HARDWARE_BUFFER_PROPERTIES_ANDROID",
          origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
          value: 1000129001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID",
          name: "ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_ANDROID",
          origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
          value: 1000129002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
          name: "IMPORT_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
          origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
          value: 1000129003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
          name: "MEMORY_GET_ANDROID_HARDWARE_BUFFER_INFO_ANDROID",
          origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
          value: 1000129004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_FORMAT_ANDROID",
          name: "EXTERNAL_FORMAT_ANDROID",
          origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
          value: 1000129005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES_2_ANDROID",
          name: "ANDROID_HARDWARE_BUFFER_FORMAT_PROPERTIES2_ANDROID",
          origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
          value: 1000129006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SAMPLE_LOCATIONS_INFO_EXT",
          name: "SAMPLE_LOCATIONS_INFO_EXT",
          origin: Extension("VK_EXT_sample_locations", 144, false),
          value: 1000143000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT",
          name: "RENDER_PASS_SAMPLE_LOCATIONS_BEGIN_INFO_EXT",
          origin: Extension("VK_EXT_sample_locations", 144, false),
          value: 1000143001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT",
          name: "PIPELINE_SAMPLE_LOCATIONS_STATE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_sample_locations", 144, false),
          value: 1000143002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_SAMPLE_LOCATIONS_PROPERTIES_EXT",
          origin: Extension("VK_EXT_sample_locations", 144, false),
          value: 1000143003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MULTISAMPLE_PROPERTIES_EXT",
          name: "MULTISAMPLE_PROPERTIES_EXT",
          origin: Extension("VK_EXT_sample_locations", 144, false),
          value: 1000143004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_FEATURES_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_BLEND_OPERATION_ADVANCED_PROPERTIES_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT",
          name: "PIPELINE_COLOR_BLEND_ADVANCED_STATE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1000148002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV",
          name: "PIPELINE_COVERAGE_TO_COLOR_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_fragment_coverage_to_color", 150, false),
          value: 1000149000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR",
          name: "WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR",
          name: "ACCELERATION_STRUCTURE_BUILD_GEOMETRY_INFO_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR",
          name: "ACCELERATION_STRUCTURE_DEVICE_ADDRESS_INFO_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR",
          name: "ACCELERATION_STRUCTURE_GEOMETRY_AABBS_DATA_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR",
          name: "ACCELERATION_STRUCTURE_GEOMETRY_INSTANCES_DATA_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR",
          name: "ACCELERATION_STRUCTURE_GEOMETRY_TRIANGLES_DATA_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_KHR",
          name: "ACCELERATION_STRUCTURE_GEOMETRY_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_VERSION_INFO_KHR",
          name: "ACCELERATION_STRUCTURE_VERSION_INFO_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_INFO_KHR",
          name: "COPY_ACCELERATION_STRUCTURE_INFO_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150010,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR",
          name: "COPY_ACCELERATION_STRUCTURE_TO_MEMORY_INFO_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150011,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR",
          name: "COPY_MEMORY_TO_ACCELERATION_STRUCTURE_INFO_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150012,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_FEATURES_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150013,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_ACCELERATION_STRUCTURE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150014,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_KHR",
          name: "ACCELERATION_STRUCTURE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150017,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR",
          name: "ACCELERATION_STRUCTURE_BUILD_SIZES_INFO_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150020,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_FEATURES_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1000347000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_RAY_TRACING_PIPELINE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1000347001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_KHR",
          name: "RAY_TRACING_PIPELINE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1000150015,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR",
          name: "RAY_TRACING_SHADER_GROUP_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1000150016,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR",
          name: "RAY_TRACING_PIPELINE_INTERFACE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1000150018,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_RAY_QUERY_FEATURES_KHR",
          origin: Extension("VK_KHR_ray_query", 349, false),
          value: 1000348013,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV",
          name: "PIPELINE_COVERAGE_MODULATION_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
          value: 1000152000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV",
          name: "PHYSICAL_DEVICE_SHADER_SM_BUILTINS_FEATURES_NV",
          origin: Extension("VK_NV_shader_sm_builtins", 155, false),
          value: 1000154000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV",
          name: "PHYSICAL_DEVICE_SHADER_SM_BUILTINS_PROPERTIES_NV",
          origin: Extension("VK_NV_shader_sm_builtins", 155, false),
          value: 1000154001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT",
          name: "DRM_FORMAT_MODIFIER_PROPERTIES_LIST_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 1000158000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT",
          name: "PHYSICAL_DEVICE_IMAGE_DRM_FORMAT_MODIFIER_INFO_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 1000158002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT",
          name: "IMAGE_DRM_FORMAT_MODIFIER_LIST_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 1000158003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT",
          name: "IMAGE_DRM_FORMAT_MODIFIER_EXPLICIT_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 1000158004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT",
          name: "IMAGE_DRM_FORMAT_MODIFIER_PROPERTIES_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 1000158005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DRM_FORMAT_MODIFIER_PROPERTIES_LIST_2_EXT",
          name: "DRM_FORMAT_MODIFIER_PROPERTIES_LIST2_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: 1000158006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VALIDATION_CACHE_CREATE_INFO_EXT",
          name: "VALIDATION_CACHE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_validation_cache", 161, false),
          value: 1000160000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT",
          name: "SHADER_MODULE_VALIDATION_CACHE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_validation_cache", 161, false),
          value: 1000160001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_PORTABILITY_SUBSET_FEATURES_KHR",
          origin: Extension("VK_KHR_portability_subset", 164, false),
          value: 1000163000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_PORTABILITY_SUBSET_PROPERTIES_KHR",
          origin: Extension("VK_KHR_portability_subset", 164, false),
          value: 1000163001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV",
          name: "PIPELINE_VIEWPORT_SHADING_RATE_IMAGE_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 1000164000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV",
          name: "PHYSICAL_DEVICE_SHADING_RATE_IMAGE_FEATURES_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 1000164001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV",
          name: "PHYSICAL_DEVICE_SHADING_RATE_IMAGE_PROPERTIES_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 1000164002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV",
          name: "PIPELINE_VIEWPORT_COARSE_SAMPLE_ORDER_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 1000164005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CREATE_INFO_NV",
          name: "RAY_TRACING_PIPELINE_CREATE_INFO_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_CREATE_INFO_NV",
          name: "ACCELERATION_STRUCTURE_CREATE_INFO_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_GEOMETRY_NV",
          name: "GEOMETRY_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_GEOMETRY_TRIANGLES_NV",
          name: "GEOMETRY_TRIANGLES_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_GEOMETRY_AABB_NV",
          name: "GEOMETRY_AABB_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV",
          name: "BIND_ACCELERATION_STRUCTURE_MEMORY_INFO_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV",
          name: "WRITE_DESCRIPTOR_SET_ACCELERATION_STRUCTURE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV",
          name: "ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_INFO_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV",
          name: "PHYSICAL_DEVICE_RAY_TRACING_PROPERTIES_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV",
          name: "RAY_TRACING_SHADER_GROUP_CREATE_INFO_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165011,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_INFO_NV",
          name: "ACCELERATION_STRUCTURE_INFO_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165012,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV",
          name: "PHYSICAL_DEVICE_REPRESENTATIVE_FRAGMENT_TEST_FEATURES_NV",
          origin: Extension("VK_NV_representative_fragment_test", 167, false),
          value: 1000166000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV",
          name: "PIPELINE_REPRESENTATIVE_FRAGMENT_TEST_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_representative_fragment_test", 167, false),
          value: 1000166001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT",
          name: "PHYSICAL_DEVICE_IMAGE_VIEW_IMAGE_FORMAT_INFO_EXT",
          origin: Extension("VK_EXT_filter_cubic", 171, false),
          value: 1000170000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT",
          name: "FILTER_CUBIC_IMAGE_VIEW_IMAGE_FORMAT_PROPERTIES_EXT",
          origin: Extension("VK_EXT_filter_cubic", 171, false),
          value: 1000170001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_MEMORY_HOST_POINTER_INFO_EXT",
          name: "IMPORT_MEMORY_HOST_POINTER_INFO_EXT",
          origin: Extension("VK_EXT_external_memory_host", 179, false),
          value: 1000178000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_HOST_POINTER_PROPERTIES_EXT",
          name: "MEMORY_HOST_POINTER_PROPERTIES_EXT",
          origin: Extension("VK_EXT_external_memory_host", 179, false),
          value: 1000178001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_EXTERNAL_MEMORY_HOST_PROPERTIES_EXT",
          origin: Extension("VK_EXT_external_memory_host", 179, false),
          value: 1000178002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SHADER_CLOCK_FEATURES_KHR",
          origin: Extension("VK_KHR_shader_clock", 182, false),
          value: 1000181000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD",
          name: "PIPELINE_COMPILER_CONTROL_CREATE_INFO_AMD",
          origin: Extension("VK_AMD_pipeline_compiler_control", 184, false),
          value: 1000183000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_CALIBRATED_TIMESTAMP_INFO_EXT",
          name: "CALIBRATED_TIMESTAMP_INFO_EXT",
          origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
          value: 1000184000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD",
          name: "PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_AMD",
          origin: Extension("VK_AMD_shader_core_properties", 186, false),
          value: 1000185000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_CAPABILITIES_EXT",
          name: "VIDEO_DECODE_H265_CAPABILITIES_EXT",
          origin: Extension("VK_EXT_video_decode_h265", 188, true),
          value: 1000187000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT",
          name: "VIDEO_DECODE_H265_SESSION_PARAMETERS_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_video_decode_h265", 188, true),
          value: 1000187001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT",
          name: "VIDEO_DECODE_H265_SESSION_PARAMETERS_ADD_INFO_EXT",
          origin: Extension("VK_EXT_video_decode_h265", 188, true),
          value: 1000187002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PROFILE_EXT",
          name: "VIDEO_DECODE_H265_PROFILE_EXT",
          origin: Extension("VK_EXT_video_decode_h265", 188, true),
          value: 1000187003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_PICTURE_INFO_EXT",
          name: "VIDEO_DECODE_H265_PICTURE_INFO_EXT",
          origin: Extension("VK_EXT_video_decode_h265", 188, true),
          value: 1000187004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_DECODE_H265_DPB_SLOT_INFO_EXT",
          name: "VIDEO_DECODE_H265_DPB_SLOT_INFO_EXT",
          origin: Extension("VK_EXT_video_decode_h265", 188, true),
          value: 1000187005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR",
          name: "DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_global_priority", 189, false),
          value: 1000174000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR",
          origin: Extension("VK_KHR_global_priority", 189, false),
          value: 1000388000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR",
          name: "QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR",
          origin: Extension("VK_KHR_global_priority", 189, false),
          value: 1000388001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD",
          name: "DEVICE_MEMORY_OVERALLOCATION_CREATE_INFO_AMD",
          origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
          value: 1000189000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_PROPERTIES_EXT",
          origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
          value: 1000190000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT",
          name: "PIPELINE_VERTEX_INPUT_DIVISOR_STATE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
          value: 1000190001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_VERTEX_ATTRIBUTE_DIVISOR_FEATURES_EXT",
          origin: Extension("VK_EXT_vertex_attribute_divisor", 191, false),
          value: 1000190002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PRESENT_FRAME_TOKEN_GGP",
          name: "PRESENT_FRAME_TOKEN_GGP",
          origin: Extension("VK_GGP_frame_token", 192, true),
          value: 1000191000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV",
          name: "PHYSICAL_DEVICE_COMPUTE_SHADER_DERIVATIVES_FEATURES_NV",
          origin: Extension("VK_NV_compute_shader_derivatives", 202, false),
          value: 1000201000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV",
          name: "PHYSICAL_DEVICE_MESH_SHADER_FEATURES_NV",
          origin: Extension("VK_NV_mesh_shader", 203, false),
          value: 1000202000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV",
          name: "PHYSICAL_DEVICE_MESH_SHADER_PROPERTIES_NV",
          origin: Extension("VK_NV_mesh_shader", 203, false),
          value: 1000202001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV",
          name: "PHYSICAL_DEVICE_FRAGMENT_SHADER_BARYCENTRIC_FEATURES_NV",
          origin: Extension("VK_NV_fragment_shader_barycentric", 204, false),
          value: 1000203000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV",
          name: "PHYSICAL_DEVICE_SHADER_IMAGE_FOOTPRINT_FEATURES_NV",
          origin: Extension("VK_NV_shader_image_footprint", 205, false),
          value: 1000204000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV",
          name: "PIPELINE_VIEWPORT_EXCLUSIVE_SCISSOR_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_scissor_exclusive", 206, false),
          value: 1000205000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV",
          name: "PHYSICAL_DEVICE_EXCLUSIVE_SCISSOR_FEATURES_NV",
          origin: Extension("VK_NV_scissor_exclusive", 206, false),
          value: 1000205002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_NV",
          name: "CHECKPOINT_DATA_NV",
          origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
          value: 1000206000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV",
          name: "QUEUE_FAMILY_CHECKPOINT_PROPERTIES_NV",
          origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
          value: 1000206001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS_2_FEATURES_INTEL",
          name: "PHYSICAL_DEVICE_SHADER_INTEGER_FUNCTIONS2_FEATURES_INTEL",
          origin: Extension("VK_INTEL_shader_integer_functions2", 210, false),
          value: 1000209000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL",
          name: "QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1000210000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_INITIALIZE_PERFORMANCE_API_INFO_INTEL",
          name: "INITIALIZE_PERFORMANCE_API_INFO_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1000210001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PERFORMANCE_MARKER_INFO_INTEL",
          name: "PERFORMANCE_MARKER_INFO_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1000210002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PERFORMANCE_STREAM_MARKER_INFO_INTEL",
          name: "PERFORMANCE_STREAM_MARKER_INFO_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1000210003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PERFORMANCE_OVERRIDE_INFO_INTEL",
          name: "PERFORMANCE_OVERRIDE_INFO_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1000210004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL",
          name: "PERFORMANCE_CONFIGURATION_ACQUIRE_INFO_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1000210005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_PCI_BUS_INFO_PROPERTIES_EXT",
          origin: Extension("VK_EXT_pci_bus_info", 213, false),
          value: 1000212000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD",
          name: "DISPLAY_NATIVE_HDR_SURFACE_CAPABILITIES_AMD",
          origin: Extension("VK_AMD_display_native_hdr", 214, false),
          value: 1000213000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD",
          name: "SWAPCHAIN_DISPLAY_NATIVE_HDR_CREATE_INFO_AMD",
          origin: Extension("VK_AMD_display_native_hdr", 214, false),
          value: 1000213001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA",
          name: "IMAGEPIPE_SURFACE_CREATE_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_imagepipe_surface", 215, false),
          value: 1000214000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_METAL_SURFACE_CREATE_INFO_EXT",
          name: "METAL_SURFACE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_metal_surface", 218, false),
          value: 1000217000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_FEATURES_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 1000218000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_PROPERTIES_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 1000218001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT",
          name: "RENDER_PASS_FRAGMENT_DENSITY_MAP_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_fragment_density_map", 219, false),
          value: 1000218002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR",
          name: "FRAGMENT_SHADING_RATE_ATTACHMENT_INFO_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1000226000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR",
          name: "PIPELINE_FRAGMENT_SHADING_RATE_STATE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1000226001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1000226002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_FEATURES_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1000226003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR",
          name: "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1000226004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES_2_AMD",
          name: "PHYSICAL_DEVICE_SHADER_CORE_PROPERTIES2_AMD",
          origin: Extension("VK_AMD_shader_core_properties2", 228, false),
          value: 1000227000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD",
          name: "PHYSICAL_DEVICE_COHERENT_MEMORY_FEATURES_AMD",
          origin: Extension("VK_AMD_device_coherent_memory", 230, false),
          value: 1000229000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_SHADER_IMAGE_ATOMIC_INT64_FEATURES_EXT",
          origin: Extension("VK_EXT_shader_image_atomic_int64", 235, false),
          value: 1000234000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_MEMORY_BUDGET_PROPERTIES_EXT",
          origin: Extension("VK_EXT_memory_budget", 238, false),
          value: 1000237000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_MEMORY_PRIORITY_FEATURES_EXT",
          origin: Extension("VK_EXT_memory_priority", 239, false),
          value: 1000238000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_PRIORITY_ALLOCATE_INFO_EXT",
          name: "MEMORY_PRIORITY_ALLOCATE_INFO_EXT",
          origin: Extension("VK_EXT_memory_priority", 239, false),
          value: 1000238001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SURFACE_PROTECTED_CAPABILITIES_KHR",
          name: "SURFACE_PROTECTED_CAPABILITIES_KHR",
          origin: Extension("VK_KHR_surface_protected_capabilities", 240, false),
          value: 1000239000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV",
          name: "PHYSICAL_DEVICE_DEDICATED_ALLOCATION_IMAGE_ALIASING_FEATURES_NV",
          origin: Extension("VK_NV_dedicated_allocation_image_aliasing", 241, false),
          value: 1000240000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
          origin: Extension("VK_EXT_buffer_device_address", 245, false),
          value: 1000244000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT",
          name: "BUFFER_DEVICE_ADDRESS_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_buffer_device_address", 245, false),
          value: 1000244002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VALIDATION_FEATURES_EXT",
          name: "VALIDATION_FEATURES_EXT",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 1000247000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_PRESENT_WAIT_FEATURES_KHR",
          origin: Extension("VK_KHR_present_wait", 249, false),
          value: 1000248000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV",
          name: "PHYSICAL_DEVICE_COOPERATIVE_MATRIX_FEATURES_NV",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 1000249000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COOPERATIVE_MATRIX_PROPERTIES_NV",
          name: "COOPERATIVE_MATRIX_PROPERTIES_NV",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 1000249001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV",
          name: "PHYSICAL_DEVICE_COOPERATIVE_MATRIX_PROPERTIES_NV",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 1000249002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV",
          name: "PHYSICAL_DEVICE_COVERAGE_REDUCTION_MODE_FEATURES_NV",
          origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
          value: 1000250000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV",
          name: "PIPELINE_COVERAGE_REDUCTION_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
          value: 1000250001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV",
          name: "FRAMEBUFFER_MIXED_SAMPLES_COMBINATION_NV",
          origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
          value: 1000250002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_FRAGMENT_SHADER_INTERLOCK_FEATURES_EXT",
          origin: Extension("VK_EXT_fragment_shader_interlock", 252, false),
          value: 1000251000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_YCBCR_IMAGE_ARRAYS_FEATURES_EXT",
          origin: Extension("VK_EXT_ycbcr_image_arrays", 253, false),
          value: 1000252000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_PROVOKING_VERTEX_FEATURES_EXT",
          origin: Extension("VK_EXT_provoking_vertex", 255, false),
          value: 1000254000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT",
          name: "PIPELINE_RASTERIZATION_PROVOKING_VERTEX_STATE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_provoking_vertex", 255, false),
          value: 1000254001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_PROVOKING_VERTEX_PROPERTIES_EXT",
          origin: Extension("VK_EXT_provoking_vertex", 255, false),
          value: 1000254002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT",
          name: "SURFACE_FULL_SCREEN_EXCLUSIVE_INFO_EXT",
          origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
          value: 1000255000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT",
          name: "SURFACE_CAPABILITIES_FULL_SCREEN_EXCLUSIVE_EXT",
          origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
          value: 1000255002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT",
          name: "SURFACE_FULL_SCREEN_EXCLUSIVE_WIN32_INFO_EXT",
          origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
          value: 1000255001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_HEADLESS_SURFACE_CREATE_INFO_EXT",
          name: "HEADLESS_SURFACE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_headless_surface", 257, false),
          value: 1000256000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_LINE_RASTERIZATION_FEATURES_EXT",
          origin: Extension("VK_EXT_line_rasterization", 260, false),
          value: 1000259000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT",
          name: "PIPELINE_RASTERIZATION_LINE_STATE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_line_rasterization", 260, false),
          value: 1000259001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_LINE_RASTERIZATION_PROPERTIES_EXT",
          origin: Extension("VK_EXT_line_rasterization", 260, false),
          value: 1000259002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_FEATURES_EXT",
          origin: Extension("VK_EXT_shader_atomic_float", 261, false),
          value: 1000260000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_INDEX_TYPE_UINT8_FEATURES_EXT",
          origin: Extension("VK_EXT_index_type_uint8", 266, false),
          value: 1000265000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_FEATURES_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          value: 1000267000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_PIPELINE_EXECUTABLE_PROPERTIES_FEATURES_KHR",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 1000269000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_INFO_KHR",
          name: "PIPELINE_INFO_KHR",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 1000269001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_PROPERTIES_KHR",
          name: "PIPELINE_EXECUTABLE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 1000269002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INFO_KHR",
          name: "PIPELINE_EXECUTABLE_INFO_KHR",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 1000269003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_STATISTIC_KHR",
          name: "PIPELINE_EXECUTABLE_STATISTIC_KHR",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 1000269004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR",
          name: "PIPELINE_EXECUTABLE_INTERNAL_REPRESENTATION_KHR",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 1000269005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT_2_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_SHADER_ATOMIC_FLOAT2_FEATURES_EXT",
          origin: Extension("VK_EXT_shader_atomic_float2", 274, false),
          value: 1000273000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV",
          name: "PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_PROPERTIES_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_GRAPHICS_SHADER_GROUP_CREATE_INFO_NV",
          name: "GRAPHICS_SHADER_GROUP_CREATE_INFO_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV",
          name: "GRAPHICS_PIPELINE_SHADER_GROUPS_CREATE_INFO_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_TOKEN_NV",
          name: "INDIRECT_COMMANDS_LAYOUT_TOKEN_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV",
          name: "INDIRECT_COMMANDS_LAYOUT_CREATE_INFO_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_GENERATED_COMMANDS_INFO_NV",
          name: "GENERATED_COMMANDS_INFO_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV",
          name: "GENERATED_COMMANDS_MEMORY_REQUIREMENTS_INFO_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV",
          name: "PHYSICAL_DEVICE_DEVICE_GENERATED_COMMANDS_FEATURES_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV",
          name: "PHYSICAL_DEVICE_INHERITED_VIEWPORT_SCISSOR_FEATURES_NV",
          origin: Extension("VK_NV_inherited_viewport_scissor", 279, false),
          value: 1000278000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV",
          name: "COMMAND_BUFFER_INHERITANCE_VIEWPORT_SCISSOR_INFO_NV",
          origin: Extension("VK_NV_inherited_viewport_scissor", 279, false),
          value: 1000278001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_FEATURES_EXT",
          origin: Extension("VK_EXT_texel_buffer_alignment", 282, false),
          value: 1000281000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM",
          name: "COMMAND_BUFFER_INHERITANCE_RENDER_PASS_TRANSFORM_INFO_QCOM",
          origin: Extension("VK_QCOM_render_pass_transform", 283, true),
          value: 1000282000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM",
          name: "RENDER_PASS_TRANSFORM_BEGIN_INFO_QCOM",
          origin: Extension("VK_QCOM_render_pass_transform", 283, true),
          value: 1000282001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_DEVICE_MEMORY_REPORT_FEATURES_EXT",
          origin: Extension("VK_EXT_device_memory_report", 285, false),
          value: 1000284000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT",
          name: "DEVICE_DEVICE_MEMORY_REPORT_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_device_memory_report", 285, false),
          value: 1000284001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT",
          name: "DEVICE_MEMORY_REPORT_CALLBACK_DATA_EXT",
          origin: Extension("VK_EXT_device_memory_report", 285, false),
          value: 1000284002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_ROBUSTNESS2_FEATURES_EXT",
          origin: Extension("VK_EXT_robustness2", 287, false),
          value: 1000286000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ROBUSTNESS_2_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_ROBUSTNESS2_PROPERTIES_EXT",
          origin: Extension("VK_EXT_robustness2", 287, false),
          value: 1000286001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT",
          name: "SAMPLER_CUSTOM_BORDER_COLOR_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_custom_border_color", 288, false),
          value: 1000287000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_PROPERTIES_EXT",
          origin: Extension("VK_EXT_custom_border_color", 288, false),
          value: 1000287001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_CUSTOM_BORDER_COLOR_FEATURES_EXT",
          origin: Extension("VK_EXT_custom_border_color", 288, false),
          value: 1000287002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_LIBRARY_CREATE_INFO_KHR",
          name: "PIPELINE_LIBRARY_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_pipeline_library", 291, false),
          value: 1000290000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PRESENT_ID_KHR",
          name: "PRESENT_ID_KHR",
          origin: Extension("VK_KHR_present_id", 295, false),
          value: 1000294000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_PRESENT_ID_FEATURES_KHR",
          origin: Extension("VK_KHR_present_id", 295, false),
          value: 1000294001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_INFO_KHR",
          name: "VIDEO_ENCODE_INFO_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1000299000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_INFO_KHR",
          name: "VIDEO_ENCODE_RATE_CONTROL_INFO_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1000299001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR",
          name: "VIDEO_ENCODE_RATE_CONTROL_LAYER_INFO_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1000299002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VIDEO_ENCODE_CAPABILITIES_KHR",
          name: "VIDEO_ENCODE_CAPABILITIES_KHR",
          origin: Extension("VK_KHR_video_encode_queue", 300, false),
          value: 1000299003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV",
          name: "PHYSICAL_DEVICE_DIAGNOSTICS_CONFIG_FEATURES_NV",
          origin: Extension("VK_NV_device_diagnostics_config", 301, false),
          value: 1000300000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV",
          name: "DEVICE_DIAGNOSTICS_CONFIG_CREATE_INFO_NV",
          origin: Extension("VK_NV_device_diagnostics_config", 301, false),
          value: 1000300001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_RESERVED_QCOM",
          name: "RESERVED_QCOM",
          origin: Extension("VK_QCOM_extension_310", 310, true),
          value: 1000309000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_CHECKPOINT_PROPERTIES_2_NV",
          name: "QUEUE_FAMILY_CHECKPOINT_PROPERTIES2_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 1000314008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_CHECKPOINT_DATA_2_NV",
          name: "CHECKPOINT_DATA2_NV",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          value: 1000314009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SHADER_SUBGROUP_UNIFORM_CONTROL_FLOW_FEATURES_KHR",
          origin: Extension("VK_KHR_shader_subgroup_uniform_control_flow", 324, false),
          value: 1000323000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV",
          name: "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_PROPERTIES_NV",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 1000326000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV",
          name: "PHYSICAL_DEVICE_FRAGMENT_SHADING_RATE_ENUMS_FEATURES_NV",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 1000326001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV",
          name: "PIPELINE_FRAGMENT_SHADING_RATE_ENUM_STATE_CREATE_INFO_NV",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 1000326002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV",
          name: "ACCELERATION_STRUCTURE_GEOMETRY_MOTION_TRIANGLES_DATA_NV",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 1000327000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV",
          name: "PHYSICAL_DEVICE_RAY_TRACING_MOTION_BLUR_FEATURES_NV",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 1000327001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_ACCELERATION_STRUCTURE_MOTION_INFO_NV",
          name: "ACCELERATION_STRUCTURE_MOTION_INFO_NV",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 1000327002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_YCBCR_2_PLANE_444_FORMATS_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_YCBCR2_PLANE_444_FORMATS_FEATURES_EXT",
          origin: Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
          value: 1000330000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP2_FEATURES_EXT",
          origin: Extension("VK_EXT_fragment_density_map2", 333, false),
          value: 1000332000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_2_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP2_PROPERTIES_EXT",
          origin: Extension("VK_EXT_fragment_density_map2", 333, false),
          value: 1000332001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_COPY_COMMAND_TRANSFORM_INFO_QCOM",
          name: "COPY_COMMAND_TRANSFORM_INFO_QCOM",
          origin: Extension("VK_QCOM_rotated_copy_commands", 334, true),
          value: 1000333000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_WORKGROUP_MEMORY_EXPLICIT_LAYOUT_FEATURES_KHR",
          origin: Extension("VK_KHR_workgroup_memory_explicit_layout", 337, false),
          value: 1000336000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_4444_FORMATS_FEATURES_EXT",
          name: "PHYSICAL_DEVICE4444_FORMATS_FEATURES_EXT",
          origin: Extension("VK_EXT_4444_formats", 341, false),
          value: 1000340000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM",
          name: "PHYSICAL_DEVICE_RASTERIZATION_ORDER_ATTACHMENT_ACCESS_FEATURES_ARM",
          origin: Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
          value: 1000342000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_RGBA10X6_FORMATS_FEATURES_EXT",
          origin: Extension("VK_EXT_rgba10x6_formats", 345, false),
          value: 1000344000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DIRECTFB_SURFACE_CREATE_INFO_EXT",
          name: "DIRECTFB_SURFACE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_directfb_surface", 347, false),
          value: 1000346000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE",
          name: "PHYSICAL_DEVICE_MUTABLE_DESCRIPTOR_TYPE_FEATURES_VALVE",
          origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
          value: 1000351000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE",
          name: "MUTABLE_DESCRIPTOR_TYPE_CREATE_INFO_VALVE",
          origin: Extension("VK_VALVE_mutable_descriptor_type", 352, false),
          value: 1000351002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_VERTEX_INPUT_DYNAMIC_STATE_FEATURES_EXT",
          origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
          value: 1000352000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VERTEX_INPUT_BINDING_DESCRIPTION_2_EXT",
          name: "VERTEX_INPUT_BINDING_DESCRIPTION2_EXT",
          origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
          value: 1000352001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_VERTEX_INPUT_ATTRIBUTE_DESCRIPTION_2_EXT",
          name: "VERTEX_INPUT_ATTRIBUTE_DESCRIPTION2_EXT",
          origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
          value: 1000352002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRM_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_DRM_PROPERTIES_EXT",
          origin: Extension("VK_EXT_physical_device_drm", 354, false),
          value: 1000353000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_DEPTH_CLIP_CONTROL_FEATURES_EXT",
          origin: Extension("VK_EXT_depth_clip_control", 356, false),
          value: 1000355000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT",
          name: "PIPELINE_VIEWPORT_DEPTH_CLIP_CONTROL_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_depth_clip_control", 356, false),
          value: 1000355001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_PRIMITIVE_TOPOLOGY_LIST_RESTART_FEATURES_EXT",
          origin: Extension("VK_EXT_primitive_topology_list_restart", 357, false),
          value: 1000356000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA",
          name: "IMPORT_MEMORY_ZIRCON_HANDLE_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_external_memory", 365, false),
          value: 1000364000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA",
          name: "MEMORY_ZIRCON_HANDLE_PROPERTIES_FUCHSIA",
          origin: Extension("VK_FUCHSIA_external_memory", 365, false),
          value: 1000364001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA",
          name: "MEMORY_GET_ZIRCON_HANDLE_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_external_memory", 365, false),
          value: 1000364002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA",
          name: "IMPORT_SEMAPHORE_ZIRCON_HANDLE_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
          value: 1000365000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA",
          name: "SEMAPHORE_GET_ZIRCON_HANDLE_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
          value: 1000365001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CREATE_INFO_FUCHSIA",
          name: "BUFFER_COLLECTION_CREATE_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA",
          name: "IMPORT_MEMORY_BUFFER_COLLECTION_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA",
          name: "BUFFER_COLLECTION_IMAGE_CREATE_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_PROPERTIES_FUCHSIA",
          name: "BUFFER_COLLECTION_PROPERTIES_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366003,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_CONSTRAINTS_INFO_FUCHSIA",
          name: "BUFFER_CONSTRAINTS_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366004,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA",
          name: "BUFFER_COLLECTION_BUFFER_CREATE_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366005,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_CONSTRAINTS_INFO_FUCHSIA",
          name: "IMAGE_CONSTRAINTS_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366006,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA",
          name: "IMAGE_FORMAT_CONSTRAINTS_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366007,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SYSMEM_COLOR_SPACE_FUCHSIA",
          name: "SYSMEM_COLOR_SPACE_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366008,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA",
          name: "BUFFER_COLLECTION_CONSTRAINTS_INFO_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366009,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI",
          name: "SUBPASS_SHADING_PIPELINE_CREATE_INFO_HUAWEI",
          origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
          value: 1000369000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI",
          name: "PHYSICAL_DEVICE_SUBPASS_SHADING_FEATURES_HUAWEI",
          origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
          value: 1000369001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI",
          name: "PHYSICAL_DEVICE_SUBPASS_SHADING_PROPERTIES_HUAWEI",
          origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
          value: 1000369002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI",
          name: "PHYSICAL_DEVICE_INVOCATION_MASK_FEATURES_HUAWEI",
          origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
          value: 1000370000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_GET_REMOTE_ADDRESS_INFO_NV",
          name: "MEMORY_GET_REMOTE_ADDRESS_INFO_NV",
          origin: Extension("VK_NV_external_memory_rdma", 372, false),
          value: 1000371000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV",
          name: "PHYSICAL_DEVICE_EXTERNAL_MEMORY_RDMA_FEATURES_NV",
          origin: Extension("VK_NV_external_memory_rdma", 372, false),
          value: 1000371001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE_2_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_EXTENDED_DYNAMIC_STATE2_FEATURES_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
          value: 1000377000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SCREEN_SURFACE_CREATE_INFO_QNX",
          name: "SCREEN_SURFACE_CREATE_INFO_QNX",
          origin: Extension("VK_QNX_screen_surface", 379, true),
          value: 1000378000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_COLOR_WRITE_ENABLE_FEATURES_EXT",
          origin: Extension("VK_EXT_color_write_enable", 382, false),
          value: 1000381000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_COLOR_WRITE_CREATE_INFO_EXT",
          name: "PIPELINE_COLOR_WRITE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_color_write_enable", 382, false),
          value: 1000381001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_IMAGE_VIEW_MIN_LOD_FEATURES_EXT",
          origin: Extension("VK_EXT_image_view_min_lod", 392, false),
          value: 1000391000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT",
          name: "IMAGE_VIEW_MIN_LOD_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_image_view_min_lod", 392, false),
          value: 1000391001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_MULTI_DRAW_FEATURES_EXT",
          origin: Extension("VK_EXT_multi_draw", 393, false),
          value: 1000392000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_MULTI_DRAW_PROPERTIES_EXT",
          origin: Extension("VK_EXT_multi_draw", 393, false),
          value: 1000392001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_BORDER_COLOR_SWIZZLE_FEATURES_EXT",
          origin: Extension("VK_EXT_border_color_swizzle", 412, false),
          value: 1000411000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT",
          name: "SAMPLER_BORDER_COLOR_COMPONENT_MAPPING_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_border_color_swizzle", 412, false),
          value: 1000411001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_PAGEABLE_DEVICE_LOCAL_MEMORY_FEATURES_EXT",
          origin: Extension("VK_EXT_pageable_device_local_memory", 413, false),
          value: 1000412000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE",
          name: "PHYSICAL_DEVICE_DESCRIPTOR_SET_HOST_MAPPING_FEATURES_VALVE",
          origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
          value: 1000420000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_BINDING_REFERENCE_VALVE",
          name: "DESCRIPTOR_SET_BINDING_REFERENCE_VALVE",
          origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
          value: 1000420001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE",
          name: "DESCRIPTOR_SET_LAYOUT_HOST_MAPPING_INFO_VALVE",
          origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
          value: 1000420002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM",
          name: "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_FEATURES_QCOM",
          origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
          value: 1000425000,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM",
          name: "PHYSICAL_DEVICE_FRAGMENT_DENSITY_MAP_OFFSET_PROPERTIES_QCOM",
          origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
          value: 1000425001,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM",
          name: "SUBPASS_FRAGMENT_DENSITY_MAP_OFFSET_END_INFO_QCOM",
          origin: Extension("VK_QCOM_fragment_density_map_offset", 426, true),
          value: 1000425002,
        ),
        Bit(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV",
          name: "PHYSICAL_DEVICE_LINEAR_COLOR_ATTACHMENT_FEATURES_NV",
          origin: Extension("VK_NV_linear_color_attachment", 431, false),
          value: 1000430000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES",
          name: "PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES",
          origin: Vulkan1_1,
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES",
          name: "PHYSICAL_DEVICE_SHADER_DRAW_PARAMETER_FEATURES",
          origin: Vulkan1_1,
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DRAW_PARAMETERS_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEBUG_REPORT_CREATE_INFO_EXT",
          name: "DEBUG_REPORT_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_debug_report", 12, false),
          of: "VK_STRUCTURE_TYPE_DEBUG_REPORT_CALLBACK_CREATE_INFO_EXT",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_RENDERING_INFO_KHR",
          name: "RENDERING_INFO_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_STRUCTURE_TYPE_RENDERING_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO_KHR",
          name: "RENDERING_ATTACHMENT_INFO_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_STRUCTURE_TYPE_RENDERING_ATTACHMENT_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO_KHR",
          name: "PIPELINE_RENDERING_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_STRUCTURE_TYPE_PIPELINE_RENDERING_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DYNAMIC_RENDERING_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR",
          name: "COMMAND_BUFFER_INHERITANCE_RENDERING_INFO_KHR",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_INHERITANCE_RENDERING_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_NV",
          name: "ATTACHMENT_SAMPLE_COUNT_INFO_NV",
          origin: Extension("VK_KHR_dynamic_rendering", 45, false),
          of: "VK_STRUCTURE_TYPE_ATTACHMENT_SAMPLE_COUNT_INFO_AMD",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR",
          name: "RENDER_PASS_MULTIVIEW_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_multiview", 54, false),
          of: "VK_STRUCTURE_TYPE_RENDER_PASS_MULTIVIEW_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_MULTIVIEW_FEATURES_KHR",
          origin: Extension("VK_KHR_multiview", 54, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES_KHR",
          origin: Extension("VK_KHR_multiview", 54, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MULTIVIEW_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2_KHR",
          name: "PHYSICAL_DEVICE_FEATURES2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FEATURES_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2_KHR",
          name: "PHYSICAL_DEVICE_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROPERTIES_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2_KHR",
          name: "FORMAT_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2_KHR",
          name: "IMAGE_FORMAT_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_FORMAT_PROPERTIES_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2_KHR",
          name: "PHYSICAL_DEVICE_IMAGE_FORMAT_INFO2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_FORMAT_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2_KHR",
          name: "QUEUE_FAMILY_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_PROPERTIES_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2_KHR",
          name: "PHYSICAL_DEVICE_MEMORY_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MEMORY_PROPERTIES_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2_KHR",
          name: "SPARSE_IMAGE_FORMAT_PROPERTIES2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_SPARSE_IMAGE_FORMAT_PROPERTIES_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2_KHR",
          name: "PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO2_KHR",
          origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SPARSE_IMAGE_FORMAT_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO_KHR",
          name: "MEMORY_ALLOCATE_FLAGS_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_STRUCTURE_TYPE_MEMORY_ALLOCATE_FLAGS_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR",
          name: "DEVICE_GROUP_RENDER_PASS_BEGIN_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_GROUP_RENDER_PASS_BEGIN_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR",
          name: "DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_GROUP_COMMAND_BUFFER_BEGIN_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO_KHR",
          name: "DEVICE_GROUP_SUBMIT_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_GROUP_SUBMIT_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO_KHR",
          name: "DEVICE_GROUP_BIND_SPARSE_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_GROUP_BIND_SPARSE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR",
          name: "BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_DEVICE_GROUP_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR",
          name: "BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO_KHR",
          origin: Extension("VK_KHR_device_group", 61, false),
          of: "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_DEVICE_GROUP_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES_EXT",
          origin: Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXTURE_COMPRESSION_ASTC_HDR_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_GROUP_PROPERTIES_KHR",
          origin: Extension("VK_KHR_device_group_creation", 71, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GROUP_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO_KHR",
          name: "DEVICE_GROUP_DEVICE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_device_group_creation", 71, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_GROUP_DEVICE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR",
          name: "PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_IMAGE_FORMAT_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR",
          name: "EXTERNAL_IMAGE_FORMAT_PROPERTIES_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_STRUCTURE_TYPE_EXTERNAL_IMAGE_FORMAT_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR",
          name: "PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_BUFFER_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES_KHR",
          name: "EXTERNAL_BUFFER_PROPERTIES_KHR",
          origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
          of: "VK_STRUCTURE_TYPE_EXTERNAL_BUFFER_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_ID_PROPERTIES_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ID_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR",
          name: "EXTERNAL_MEMORY_BUFFER_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_external_memory", 73, false),
          of: "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_BUFFER_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR",
          name: "EXTERNAL_MEMORY_IMAGE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_external_memory", 73, false),
          of: "VK_STRUCTURE_TYPE_EXTERNAL_MEMORY_IMAGE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR",
          name: "EXPORT_MEMORY_ALLOCATE_INFO_KHR",
          origin: Extension("VK_KHR_external_memory", 73, false),
          of: "VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR",
          name: "PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_SEMAPHORE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES_KHR",
          name: "EXTERNAL_SEMAPHORE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
          of: "VK_STRUCTURE_TYPE_EXTERNAL_SEMAPHORE_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO_KHR",
          name: "EXPORT_SEMAPHORE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_external_semaphore", 78, false),
          of: "VK_STRUCTURE_TYPE_EXPORT_SEMAPHORE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES_KHR",
          origin: Extension("VK_KHR_shader_float16_int8", 83, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_FLOAT16_INT8_FEATURES_KHR",
          origin: Extension("VK_KHR_shader_float16_int8", 83, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_FLOAT16_INT8_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES_KHR",
          name: "PHYSICAL_DEVICE16BIT_STORAGE_FEATURES_KHR",
          origin: Extension("VK_KHR_16bit_storage", 84, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_16BIT_STORAGE_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR",
          name: "DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_descriptor_update_template", 86, false),
          of: "VK_STRUCTURE_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES2_EXT",
          name: "SURFACE_CAPABILITIES2_EXT",
          origin: Extension("VK_EXT_display_surface_counter", 91, false),
          of: "VK_STRUCTURE_TYPE_SURFACE_CAPABILITIES_2_EXT",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES_KHR",
          origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGELESS_FRAMEBUFFER_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR",
          name: "FRAMEBUFFER_ATTACHMENTS_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
          of: "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENTS_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR",
          name: "FRAMEBUFFER_ATTACHMENT_IMAGE_INFO_KHR",
          origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
          of: "VK_STRUCTURE_TYPE_FRAMEBUFFER_ATTACHMENT_IMAGE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR",
          name: "RENDER_PASS_ATTACHMENT_BEGIN_INFO_KHR",
          origin: Extension("VK_KHR_imageless_framebuffer", 109, false),
          of: "VK_STRUCTURE_TYPE_RENDER_PASS_ATTACHMENT_BEGIN_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2_KHR",
          name: "ATTACHMENT_DESCRIPTION2_KHR",
          origin: Extension("VK_KHR_create_renderpass2", 110, false),
          of: "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2_KHR",
          name: "ATTACHMENT_REFERENCE2_KHR",
          origin: Extension("VK_KHR_create_renderpass2", 110, false),
          of: "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2_KHR",
          name: "SUBPASS_DESCRIPTION2_KHR",
          origin: Extension("VK_KHR_create_renderpass2", 110, false),
          of: "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2_KHR",
          name: "SUBPASS_DEPENDENCY2_KHR",
          origin: Extension("VK_KHR_create_renderpass2", 110, false),
          of: "VK_STRUCTURE_TYPE_SUBPASS_DEPENDENCY_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2_KHR",
          name: "RENDER_PASS_CREATE_INFO2_KHR",
          origin: Extension("VK_KHR_create_renderpass2", 110, false),
          of: "VK_STRUCTURE_TYPE_RENDER_PASS_CREATE_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO_KHR",
          name: "SUBPASS_BEGIN_INFO_KHR",
          origin: Extension("VK_KHR_create_renderpass2", 110, false),
          of: "VK_STRUCTURE_TYPE_SUBPASS_BEGIN_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_END_INFO_KHR",
          name: "SUBPASS_END_INFO_KHR",
          origin: Extension("VK_KHR_create_renderpass2", 110, false),
          of: "VK_STRUCTURE_TYPE_SUBPASS_END_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR",
          name: "PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_EXTERNAL_FENCE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES_KHR",
          name: "EXTERNAL_FENCE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
          of: "VK_STRUCTURE_TYPE_EXTERNAL_FENCE_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO_KHR",
          name: "EXPORT_FENCE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_external_fence", 114, false),
          of: "VK_STRUCTURE_TYPE_EXPORT_FENCE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_POINT_CLIPPING_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR",
          name: "RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_STRUCTURE_TYPE_RENDER_PASS_INPUT_ATTACHMENT_ASPECT_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO_KHR",
          name: "IMAGE_VIEW_USAGE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_VIEW_USAGE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR",
          name: "PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_STRUCTURE_TYPE_PIPELINE_TESSELLATION_DOMAIN_ORIGIN_STATE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR",
          origin: Extension("VK_KHR_variable_pointers", 121, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_VARIABLE_POINTER_FEATURES_KHR",
          origin: Extension("VK_KHR_variable_pointers", 121, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VARIABLE_POINTERS_FEATURES_KHR",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS_KHR",
          name: "MEMORY_DEDICATED_REQUIREMENTS_KHR",
          origin: Extension("VK_KHR_dedicated_allocation", 128, false),
          of: "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_REQUIREMENTS",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO_KHR",
          name: "MEMORY_DEDICATED_ALLOCATE_INFO_KHR",
          origin: Extension("VK_KHR_dedicated_allocation", 128, false),
          of: "VK_STRUCTURE_TYPE_MEMORY_DEDICATED_ALLOCATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES_EXT",
          origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_FILTER_MINMAX_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT",
          name: "SAMPLER_REDUCTION_MODE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
          of: "VK_STRUCTURE_TYPE_SAMPLER_REDUCTION_MODE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES_EXT",
          origin: Extension("VK_EXT_inline_uniform_block", 139, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES_EXT",
          origin: Extension("VK_EXT_inline_uniform_block", 139, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_INLINE_UNIFORM_BLOCK_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT",
          name: "WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK_EXT",
          origin: Extension("VK_EXT_inline_uniform_block", 139, false),
          of: "VK_STRUCTURE_TYPE_WRITE_DESCRIPTOR_SET_INLINE_UNIFORM_BLOCK",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT",
          name: "DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_inline_uniform_block", 139, false),
          of: "VK_STRUCTURE_TYPE_DESCRIPTOR_POOL_INLINE_UNIFORM_BLOCK_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2_KHR",
          name: "BUFFER_MEMORY_REQUIREMENTS_INFO2_KHR",
          origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
          of: "VK_STRUCTURE_TYPE_BUFFER_MEMORY_REQUIREMENTS_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2_KHR",
          name: "IMAGE_MEMORY_REQUIREMENTS_INFO2_KHR",
          origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_MEMORY_REQUIREMENTS_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2_KHR",
          name: "IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO2_KHR",
          origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_SPARSE_MEMORY_REQUIREMENTS_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2_KHR",
          name: "MEMORY_REQUIREMENTS2_KHR",
          origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
          of: "VK_STRUCTURE_TYPE_MEMORY_REQUIREMENTS_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2_KHR",
          name: "SPARSE_IMAGE_MEMORY_REQUIREMENTS2_KHR",
          origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
          of: "VK_STRUCTURE_TYPE_SPARSE_IMAGE_MEMORY_REQUIREMENTS_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO_KHR",
          name: "IMAGE_FORMAT_LIST_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_image_format_list", 148, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_FORMAT_LIST_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR",
          name: "SAMPLER_YCBCR_CONVERSION_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO_KHR",
          name: "SAMPLER_YCBCR_CONVERSION_INFO_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO_KHR",
          name: "BIND_IMAGE_PLANE_MEMORY_INFO_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_STRUCTURE_TYPE_BIND_IMAGE_PLANE_MEMORY_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR",
          name: "IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_PLANE_MEMORY_REQUIREMENTS_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SAMPLER_YCBCR_CONVERSION_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR",
          name: "SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_STRUCTURE_TYPE_SAMPLER_YCBCR_CONVERSION_IMAGE_FORMAT_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO_KHR",
          name: "BIND_BUFFER_MEMORY_INFO_KHR",
          origin: Extension("VK_KHR_bind_memory2", 158, false),
          of: "VK_STRUCTURE_TYPE_BIND_BUFFER_MEMORY_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO_KHR",
          name: "BIND_IMAGE_MEMORY_INFO_KHR",
          origin: Extension("VK_KHR_bind_memory2", 158, false),
          of: "VK_STRUCTURE_TYPE_BIND_IMAGE_MEMORY_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT",
          name: "DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_BINDING_FLAGS_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DESCRIPTOR_INDEXING_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT",
          name: "DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_ALLOCATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT",
          name: "DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_VARIABLE_DESCRIPTOR_COUNT_LAYOUT_SUPPORT",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_MAINTENANCE3_PROPERTIES_KHR",
          origin: Extension("VK_KHR_maintenance3", 169, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_3_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR",
          name: "DESCRIPTOR_SET_LAYOUT_SUPPORT_KHR",
          origin: Extension("VK_KHR_maintenance3", 169, false),
          of: "VK_STRUCTURE_TYPE_DESCRIPTOR_SET_LAYOUT_SUPPORT",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT",
          name: "DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_global_priority", 175, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_QUEUE_GLOBAL_PRIORITY_CREATE_INFO_KHR",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES_KHR",
          origin: Extension("VK_KHR_shader_subgroup_extended_types", 176, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_SUBGROUP_EXTENDED_TYPES_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES_KHR",
          name: "PHYSICAL_DEVICE8BIT_STORAGE_FEATURES_KHR",
          origin: Extension("VK_KHR_8bit_storage", 178, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_8BIT_STORAGE_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES_KHR",
          origin: Extension("VK_KHR_shader_atomic_int64", 181, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_ATOMIC_INT64_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT",
          name: "PIPELINE_CREATION_FEEDBACK_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_pipeline_creation_feedback", 193, false),
          of: "VK_STRUCTURE_TYPE_PIPELINE_CREATION_FEEDBACK_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_DRIVER_PROPERTIES_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DRIVER_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES_KHR",
          origin: Extension("VK_KHR_shader_float_controls", 198, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_FLOAT_CONTROLS_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_DEPTH_STENCIL_RESOLVE_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR",
          name: "SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE_KHR",
          origin: Extension("VK_KHR_depth_stencil_resolve", 200, false),
          of: "VK_STRUCTURE_TYPE_SUBPASS_DESCRIPTION_DEPTH_STENCIL_RESOLVE",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TIMELINE_SEMAPHORE_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO_KHR",
          name: "SEMAPHORE_TYPE_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_STRUCTURE_TYPE_SEMAPHORE_TYPE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR",
          name: "TIMELINE_SEMAPHORE_SUBMIT_INFO_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_STRUCTURE_TYPE_TIMELINE_SEMAPHORE_SUBMIT_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO_KHR",
          name: "SEMAPHORE_WAIT_INFO_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_STRUCTURE_TYPE_SEMAPHORE_WAIT_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO_KHR",
          name: "SEMAPHORE_SIGNAL_INFO_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_STRUCTURE_TYPE_SEMAPHORE_SIGNAL_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_QUERY_POOL_CREATE_INFO_INTEL",
          name: "QUERY_POOL_CREATE_INFO_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          of: "VK_STRUCTURE_TYPE_QUERY_POOL_PERFORMANCE_QUERY_CREATE_INFO_INTEL",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES_KHR",
          origin: Extension("VK_KHR_vulkan_memory_model", 212, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_VULKAN_MEMORY_MODEL_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES_KHR",
          origin: Extension("VK_KHR_shader_terminate_invocation", 216, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_TERMINATE_INVOCATION_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES_EXT",
          origin: Extension("VK_EXT_scalar_block_layout", 222, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SCALAR_BLOCK_LAYOUT_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES_EXT",
          origin: Extension("VK_EXT_subgroup_size_control", 226, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT",
          name: "PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_subgroup_size_control", 226, false),
          of: "VK_STRUCTURE_TYPE_PIPELINE_SHADER_STAGE_REQUIRED_SUBGROUP_SIZE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES_EXT",
          origin: Extension("VK_EXT_subgroup_size_control", 226, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SUBGROUP_SIZE_CONTROL_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES_KHR",
          origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SEPARATE_DEPTH_STENCIL_LAYOUTS_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR",
          name: "ATTACHMENT_REFERENCE_STENCIL_LAYOUT_KHR",
          origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
          of: "VK_STRUCTURE_TYPE_ATTACHMENT_REFERENCE_STENCIL_LAYOUT",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR",
          name: "ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT_KHR",
          origin: Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
          of: "VK_STRUCTURE_TYPE_ATTACHMENT_DESCRIPTION_STENCIL_LAYOUT",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_BUFFER_ADDRESS_FEATURES_EXT",
          origin: Extension("VK_EXT_buffer_device_address", 245, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_EXT",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_EXT",
          name: "BUFFER_DEVICE_ADDRESS_INFO_EXT",
          origin: Extension("VK_EXT_buffer_device_address", 245, false),
          of: "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_TOOL_PROPERTIES_EXT",
          origin: Extension("VK_EXT_tooling_info", 246, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TOOL_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO_EXT",
          name: "IMAGE_STENCIL_USAGE_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_separate_stencil_usage", 247, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_STENCIL_USAGE_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES_KHR",
          origin: Extension("VK_KHR_uniform_buffer_standard_layout", 254, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_UNIFORM_BUFFER_STANDARD_LAYOUT_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_BUFFER_DEVICE_ADDRESS_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO_KHR",
          name: "BUFFER_DEVICE_ADDRESS_INFO_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_STRUCTURE_TYPE_BUFFER_DEVICE_ADDRESS_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR",
          name: "BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_STRUCTURE_TYPE_BUFFER_OPAQUE_CAPTURE_ADDRESS_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR",
          name: "MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_STRUCTURE_TYPE_MEMORY_OPAQUE_CAPTURE_ADDRESS_ALLOCATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR",
          name: "DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_MEMORY_OPAQUE_CAPTURE_ADDRESS_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES_EXT",
          origin: Extension("VK_EXT_host_query_reset", 262, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_HOST_QUERY_RESET_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES_EXT",
          origin: Extension("VK_EXT_shader_demote_to_helper_invocation", 277, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_DEMOTE_TO_HELPER_INVOCATION_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES_KHR",
          origin: Extension("VK_KHR_shader_integer_dot_product", 281, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES_KHR",
          origin: Extension("VK_KHR_shader_integer_dot_product", 281, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SHADER_INTEGER_DOT_PRODUCT_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT",
          name: "PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES_EXT",
          origin: Extension("VK_EXT_texel_buffer_alignment", 282, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_TEXEL_BUFFER_ALIGNMENT_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES_EXT",
          origin: Extension("VK_EXT_private_data", 296, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PRIVATE_DATA_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO_EXT",
          name: "DEVICE_PRIVATE_DATA_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_private_data", 296, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_PRIVATE_DATA_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO_EXT",
          name: "PRIVATE_DATA_SLOT_CREATE_INFO_EXT",
          origin: Extension("VK_EXT_private_data", 296, false),
          of: "VK_STRUCTURE_TYPE_PRIVATE_DATA_SLOT_CREATE_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES_EXT",
          origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PIPELINE_CREATION_CACHE_CONTROL_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2_KHR",
          name: "MEMORY_BARRIER2_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_STRUCTURE_TYPE_MEMORY_BARRIER_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2_KHR",
          name: "BUFFER_MEMORY_BARRIER2_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_STRUCTURE_TYPE_BUFFER_MEMORY_BARRIER_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2_KHR",
          name: "IMAGE_MEMORY_BARRIER2_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_MEMORY_BARRIER_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEPENDENCY_INFO_KHR",
          name: "DEPENDENCY_INFO_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_STRUCTURE_TYPE_DEPENDENCY_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SUBMIT_INFO_2_KHR",
          name: "SUBMIT_INFO2_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_STRUCTURE_TYPE_SUBMIT_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO_KHR",
          name: "SEMAPHORE_SUBMIT_INFO_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_STRUCTURE_TYPE_SEMAPHORE_SUBMIT_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO_KHR",
          name: "COMMAND_BUFFER_SUBMIT_INFO_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_STRUCTURE_TYPE_COMMAND_BUFFER_SUBMIT_INFO",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_SYNCHRONIZATION2_FEATURES_KHR",
          origin: Extension("VK_KHR_synchronization2", 315, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_SYNCHRONIZATION_2_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES_KHR",
          origin: Extension("VK_KHR_zero_initialize_workgroup_memory", 326, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_ZERO_INITIALIZE_WORKGROUP_MEMORY_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES_EXT",
          origin: Extension("VK_EXT_image_robustness", 336, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_IMAGE_ROBUSTNESS_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2_KHR",
          name: "COPY_BUFFER_INFO2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_COPY_BUFFER_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2_KHR",
          name: "COPY_IMAGE_INFO2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_COPY_IMAGE_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2_KHR",
          name: "COPY_BUFFER_TO_IMAGE_INFO2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_COPY_BUFFER_TO_IMAGE_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2_KHR",
          name: "COPY_IMAGE_TO_BUFFER_INFO2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_COPY_IMAGE_TO_BUFFER_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2_KHR",
          name: "BLIT_IMAGE_INFO2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_BLIT_IMAGE_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2_KHR",
          name: "RESOLVE_IMAGE_INFO2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_RESOLVE_IMAGE_INFO_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_COPY_2_KHR",
          name: "BUFFER_COPY2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_BUFFER_COPY_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_COPY_2_KHR",
          name: "IMAGE_COPY2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_COPY_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_BLIT_2_KHR",
          name: "IMAGE_BLIT2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_BLIT_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2_KHR",
          name: "BUFFER_IMAGE_COPY2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_BUFFER_IMAGE_COPY_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2_KHR",
          name: "IMAGE_RESOLVE2_KHR",
          origin: Extension("VK_KHR_copy_commands2", 338, false),
          of: "VK_STRUCTURE_TYPE_IMAGE_RESOLVE_2",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3_KHR",
          name: "FORMAT_PROPERTIES3_KHR",
          origin: Extension("VK_KHR_format_feature_flags2", 361, false),
          of: "VK_STRUCTURE_TYPE_FORMAT_PROPERTIES_3",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT",
          name: "PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_EXT",
          origin: Extension("VK_EXT_global_priority_query", 389, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_GLOBAL_PRIORITY_QUERY_FEATURES_KHR",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT",
          name: "QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_EXT",
          origin: Extension("VK_EXT_global_priority_query", 389, false),
          of: "VK_STRUCTURE_TYPE_QUEUE_FAMILY_GLOBAL_PRIORITY_PROPERTIES_KHR",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES_KHR",
          name: "PHYSICAL_DEVICE_MAINTENANCE4_FEATURES_KHR",
          origin: Extension("VK_KHR_maintenance4", 414, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_FEATURES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES_KHR",
          name: "PHYSICAL_DEVICE_MAINTENANCE4_PROPERTIES_KHR",
          origin: Extension("VK_KHR_maintenance4", 414, false),
          of: "VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_MAINTENANCE_4_PROPERTIES",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR",
          name: "DEVICE_BUFFER_MEMORY_REQUIREMENTS_KHR",
          origin: Extension("VK_KHR_maintenance4", 414, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_BUFFER_MEMORY_REQUIREMENTS",
        ),
        Alias(
          original_name: "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR",
          name: "DEVICE_IMAGE_MEMORY_REQUIREMENTS_KHR",
          origin: Extension("VK_KHR_maintenance4", 414, false),
          of: "VK_STRUCTURE_TYPE_DEVICE_IMAGE_MEMORY_REQUIREMENTS",
        ),
      ],
    ),
    Enum(
      original_name: "VkSubpassContents",
      name: "SubpassContents",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_SUBPASS_CONTENTS_INLINE",
          name: "INLINE",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_SUBPASS_CONTENTS_SECONDARY_COMMAND_BUFFERS",
          name: "SECONDARY_COMMAND_BUFFERS",
          origin: Vulkan1_0,
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkResult",
      name: "VulkanResultCodes",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_SUCCESS",
          name: "SUCCESS",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_NOT_READY",
          name: "NOT_READY",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_TIMEOUT",
          name: "TIMEOUT",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_EVENT_SET",
          name: "EVENT_SET",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_EVENT_RESET",
          name: "EVENT_RESET",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_INCOMPLETE",
          name: "INCOMPLETE",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_ERROR_OUT_OF_HOST_MEMORY",
          name: "ERROR_OUT_OF_HOST_MEMORY",
          origin: Vulkan1_0,
          value: -1,
        ),
        Bit(
          original_name: "VK_ERROR_OUT_OF_DEVICE_MEMORY",
          name: "ERROR_OUT_OF_DEVICE_MEMORY",
          origin: Vulkan1_0,
          value: -2,
        ),
        Bit(
          original_name: "VK_ERROR_INITIALIZATION_FAILED",
          name: "ERROR_INITIALIZATION_FAILED",
          origin: Vulkan1_0,
          value: -3,
        ),
        Bit(
          original_name: "VK_ERROR_DEVICE_LOST",
          name: "ERROR_DEVICE_LOST",
          origin: Vulkan1_0,
          value: -4,
        ),
        Bit(
          original_name: "VK_ERROR_MEMORY_MAP_FAILED",
          name: "ERROR_MEMORY_MAP_FAILED",
          origin: Vulkan1_0,
          value: -5,
        ),
        Bit(
          original_name: "VK_ERROR_LAYER_NOT_PRESENT",
          name: "ERROR_LAYER_NOT_PRESENT",
          origin: Vulkan1_0,
          value: -6,
        ),
        Bit(
          original_name: "VK_ERROR_EXTENSION_NOT_PRESENT",
          name: "ERROR_EXTENSION_NOT_PRESENT",
          origin: Vulkan1_0,
          value: -7,
        ),
        Bit(
          original_name: "VK_ERROR_FEATURE_NOT_PRESENT",
          name: "ERROR_FEATURE_NOT_PRESENT",
          origin: Vulkan1_0,
          value: -8,
        ),
        Bit(
          original_name: "VK_ERROR_INCOMPATIBLE_DRIVER",
          name: "ERROR_INCOMPATIBLE_DRIVER",
          origin: Vulkan1_0,
          value: -9,
        ),
        Bit(
          original_name: "VK_ERROR_TOO_MANY_OBJECTS",
          name: "ERROR_TOO_MANY_OBJECTS",
          origin: Vulkan1_0,
          value: -10,
        ),
        Bit(
          original_name: "VK_ERROR_FORMAT_NOT_SUPPORTED",
          name: "ERROR_FORMAT_NOT_SUPPORTED",
          origin: Vulkan1_0,
          value: -11,
        ),
        Bit(
          original_name: "VK_ERROR_FRAGMENTED_POOL",
          name: "ERROR_FRAGMENTED_POOL",
          origin: Vulkan1_0,
          value: -12,
        ),
        Bit(
          original_name: "VK_ERROR_UNKNOWN",
          name: "ERROR_UNKNOWN",
          origin: Vulkan1_0,
          value: -13,
        ),
        Bit(
          original_name: "VK_ERROR_OUT_OF_POOL_MEMORY",
          name: "ERROR_OUT_OF_POOL_MEMORY",
          origin: Vulkan1_1,
          value: -1000069000,
        ),
        Bit(
          original_name: "VK_ERROR_INVALID_EXTERNAL_HANDLE",
          name: "ERROR_INVALID_EXTERNAL_HANDLE",
          origin: Vulkan1_1,
          value: -1000072003,
        ),
        Bit(
          original_name: "VK_ERROR_FRAGMENTATION",
          name: "ERROR_FRAGMENTATION",
          origin: Vulkan1_2,
          value: -1000161000,
        ),
        Bit(
          original_name: "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS",
          name: "ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS",
          origin: Vulkan1_2,
          value: -1000257000,
        ),
        Bit(
          original_name: "VK_PIPELINE_COMPILE_REQUIRED",
          name: "PIPELINE_COMPILE_REQUIRED",
          origin: Vulkan1_3,
          value: 1000297000,
        ),
        Bit(
          original_name: "VK_ERROR_SURFACE_LOST_KHR",
          name: "ERROR_SURFACE_LOST_KHR",
          origin: Extension("VK_KHR_surface", 1, false),
          value: -1000000000,
        ),
        Bit(
          original_name: "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
          name: "ERROR_NATIVE_WINDOW_IN_USE_KHR",
          origin: Extension("VK_KHR_surface", 1, false),
          value: -1000000001,
        ),
        Bit(
          original_name: "VK_SUBOPTIMAL_KHR",
          name: "SUBOPTIMAL_KHR",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 1000001003,
        ),
        Bit(
          original_name: "VK_ERROR_OUT_OF_DATE_KHR",
          name: "ERROR_OUT_OF_DATE_KHR",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: -1000001004,
        ),
        Bit(
          original_name: "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR",
          name: "ERROR_INCOMPATIBLE_DISPLAY_KHR",
          origin: Extension("VK_KHR_display_swapchain", 4, false),
          value: -1000003001,
        ),
        Bit(
          original_name: "VK_ERROR_VALIDATION_FAILED_EXT",
          name: "ERROR_VALIDATION_FAILED_EXT",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: -1000011001,
        ),
        Bit(
          original_name: "VK_ERROR_INVALID_SHADER_NV",
          name: "ERROR_INVALID_SHADER_NV",
          origin: Extension("VK_NV_glsl_shader", 13, false),
          value: -1000012000,
        ),
        Bit(
          original_name: "VK_ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT",
          name: "ERROR_INVALID_DRM_FORMAT_MODIFIER_PLANE_LAYOUT_EXT",
          origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
          value: -1000158000,
        ),
        Bit(
          original_name: "VK_ERROR_NOT_PERMITTED_KHR",
          name: "ERROR_NOT_PERMITTED_KHR",
          origin: Extension("VK_KHR_global_priority", 189, false),
          value: -1000174001,
        ),
        Bit(
          original_name: "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
          name: "ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
          origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
          value: -1000255000,
        ),
        Bit(
          original_name: "VK_THREAD_IDLE_KHR",
          name: "THREAD_IDLE_KHR",
          origin: Extension("VK_KHR_deferred_host_operations", 269, false),
          value: 1000268000,
        ),
        Bit(
          original_name: "VK_THREAD_DONE_KHR",
          name: "THREAD_DONE_KHR",
          origin: Extension("VK_KHR_deferred_host_operations", 269, false),
          value: 1000268001,
        ),
        Bit(
          original_name: "VK_OPERATION_DEFERRED_KHR",
          name: "OPERATION_DEFERRED_KHR",
          origin: Extension("VK_KHR_deferred_host_operations", 269, false),
          value: 1000268002,
        ),
        Bit(
          original_name: "VK_OPERATION_NOT_DEFERRED_KHR",
          name: "OPERATION_NOT_DEFERRED_KHR",
          origin: Extension("VK_KHR_deferred_host_operations", 269, false),
          value: 1000268003,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_ERROR_OUT_OF_POOL_MEMORY_KHR",
          name: "ERROR_OUT_OF_POOL_MEMORY_KHR",
          origin: Extension("VK_KHR_maintenance1", 70, false),
          of: "VK_ERROR_OUT_OF_POOL_MEMORY",
        ),
        Alias(
          original_name: "VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR",
          name: "ERROR_INVALID_EXTERNAL_HANDLE_KHR",
          origin: Extension("VK_KHR_external_memory", 73, false),
          of: "VK_ERROR_INVALID_EXTERNAL_HANDLE",
        ),
        Alias(
          original_name: "VK_ERROR_FRAGMENTATION_EXT",
          name: "ERROR_FRAGMENTATION_EXT",
          origin: Extension("VK_EXT_descriptor_indexing", 162, false),
          of: "VK_ERROR_FRAGMENTATION",
        ),
        Alias(
          original_name: "VK_ERROR_NOT_PERMITTED_EXT",
          name: "ERROR_NOT_PERMITTED_EXT",
          origin: Extension("VK_EXT_global_priority", 175, false),
          of: "VK_ERROR_NOT_PERMITTED_KHR",
        ),
        Alias(
          original_name: "VK_ERROR_INVALID_DEVICE_ADDRESS_EXT",
          name: "ERROR_INVALID_DEVICE_ADDRESS_EXT",
          origin: Extension("VK_EXT_buffer_device_address", 245, false),
          of: "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS",
        ),
        Alias(
          original_name: "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
          name: "ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
          origin: Extension("VK_KHR_buffer_device_address", 258, false),
          of: "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS",
        ),
        Alias(
          original_name: "VK_PIPELINE_COMPILE_REQUIRED_EXT",
          name: "PIPELINE_COMPILE_REQUIRED_EXT",
          origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
          of: "VK_PIPELINE_COMPILE_REQUIRED",
        ),
        Alias(
          original_name: "VK_ERROR_PIPELINE_COMPILE_REQUIRED_EXT",
          name: "ERROR_PIPELINE_COMPILE_REQUIRED_EXT",
          origin: Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
          of: "VK_PIPELINE_COMPILE_REQUIRED",
        ),
      ],
    ),
    Enum(
      original_name: "VkDynamicState",
      name: "DynamicState",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_DYNAMIC_STATE_VIEWPORT",
          name: "VIEWPORT",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_SCISSOR",
          name: "SCISSOR",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_LINE_WIDTH",
          name: "LINE_WIDTH",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_DEPTH_BIAS",
          name: "DEPTH_BIAS",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_BLEND_CONSTANTS",
          name: "BLEND_CONSTANTS",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_DEPTH_BOUNDS",
          name: "DEPTH_BOUNDS",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_STENCIL_COMPARE_MASK",
          name: "STENCIL_COMPARE_MASK",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_STENCIL_WRITE_MASK",
          name: "STENCIL_WRITE_MASK",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_STENCIL_REFERENCE",
          name: "STENCIL_REFERENCE",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_CULL_MODE",
          name: "CULL_MODE",
          origin: Vulkan1_3,
          value: 1000267000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_FRONT_FACE",
          name: "FRONT_FACE",
          origin: Vulkan1_3,
          value: 1000267001,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY",
          name: "PRIMITIVE_TOPOLOGY",
          origin: Vulkan1_3,
          value: 1000267002,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT",
          name: "VIEWPORT_WITH_COUNT",
          origin: Vulkan1_3,
          value: 1000267003,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT",
          name: "SCISSOR_WITH_COUNT",
          origin: Vulkan1_3,
          value: 1000267004,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE",
          name: "VERTEX_INPUT_BINDING_STRIDE",
          origin: Vulkan1_3,
          value: 1000267005,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE",
          name: "DEPTH_TEST_ENABLE",
          origin: Vulkan1_3,
          value: 1000267006,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE",
          name: "DEPTH_WRITE_ENABLE",
          origin: Vulkan1_3,
          value: 1000267007,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_DEPTH_COMPARE_OP",
          name: "DEPTH_COMPARE_OP",
          origin: Vulkan1_3,
          value: 1000267008,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE",
          name: "DEPTH_BOUNDS_TEST_ENABLE",
          origin: Vulkan1_3,
          value: 1000267009,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE",
          name: "STENCIL_TEST_ENABLE",
          origin: Vulkan1_3,
          value: 1000267010,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_STENCIL_OP",
          name: "STENCIL_OP",
          origin: Vulkan1_3,
          value: 1000267011,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE",
          name: "RASTERIZER_DISCARD_ENABLE",
          origin: Vulkan1_3,
          value: 1000377001,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE",
          name: "DEPTH_BIAS_ENABLE",
          origin: Vulkan1_3,
          value: 1000377002,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE",
          name: "PRIMITIVE_RESTART_ENABLE",
          origin: Vulkan1_3,
          value: 1000377004,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_VIEWPORT_W_SCALING_NV",
          name: "VIEWPORT_W_SCALING_NV",
          origin: Extension("VK_NV_clip_space_w_scaling", 88, false),
          value: 1000087000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_DISCARD_RECTANGLE_EXT",
          name: "DISCARD_RECTANGLE_EXT",
          origin: Extension("VK_EXT_discard_rectangles", 100, false),
          value: 1000099000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_SAMPLE_LOCATIONS_EXT",
          name: "SAMPLE_LOCATIONS_EXT",
          origin: Extension("VK_EXT_sample_locations", 144, false),
          value: 1000143000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_RAY_TRACING_PIPELINE_STACK_SIZE_KHR",
          name: "RAY_TRACING_PIPELINE_STACK_SIZE_KHR",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1000347000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_VIEWPORT_SHADING_RATE_PALETTE_NV",
          name: "VIEWPORT_SHADING_RATE_PALETTE_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 1000164004,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_VIEWPORT_COARSE_SAMPLE_ORDER_NV",
          name: "VIEWPORT_COARSE_SAMPLE_ORDER_NV",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 1000164006,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_EXCLUSIVE_SCISSOR_NV",
          name: "EXCLUSIVE_SCISSOR_NV",
          origin: Extension("VK_NV_scissor_exclusive", 206, false),
          value: 1000205001,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_FRAGMENT_SHADING_RATE_KHR",
          name: "FRAGMENT_SHADING_RATE_KHR",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1000226000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_LINE_STIPPLE_EXT",
          name: "LINE_STIPPLE_EXT",
          origin: Extension("VK_EXT_line_rasterization", 260, false),
          value: 1000259000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_VERTEX_INPUT_EXT",
          name: "VERTEX_INPUT_EXT",
          origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
          value: 1000352000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_PATCH_CONTROL_POINTS_EXT",
          name: "PATCH_CONTROL_POINTS_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
          value: 1000377000,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_LOGIC_OP_EXT",
          name: "LOGIC_OP_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
          value: 1000377003,
        ),
        Bit(
          original_name: "VK_DYNAMIC_STATE_COLOR_WRITE_ENABLE_EXT",
          name: "COLOR_WRITE_ENABLE_EXT",
          origin: Extension("VK_EXT_color_write_enable", 382, false),
          value: 1000381000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DYNAMIC_STATE_CULL_MODE_EXT",
          name: "CULL_MODE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_CULL_MODE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_FRONT_FACE_EXT",
          name: "FRONT_FACE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_FRONT_FACE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY_EXT",
          name: "PRIMITIVE_TOPOLOGY_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_PRIMITIVE_TOPOLOGY",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT_EXT",
          name: "VIEWPORT_WITH_COUNT_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_VIEWPORT_WITH_COUNT",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT_EXT",
          name: "SCISSOR_WITH_COUNT_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_SCISSOR_WITH_COUNT",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE_EXT",
          name: "VERTEX_INPUT_BINDING_STRIDE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_VERTEX_INPUT_BINDING_STRIDE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE_EXT",
          name: "DEPTH_TEST_ENABLE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_DEPTH_TEST_ENABLE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE_EXT",
          name: "DEPTH_WRITE_ENABLE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_DEPTH_WRITE_ENABLE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_DEPTH_COMPARE_OP_EXT",
          name: "DEPTH_COMPARE_OP_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_DEPTH_COMPARE_OP",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE_EXT",
          name: "DEPTH_BOUNDS_TEST_ENABLE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_DEPTH_BOUNDS_TEST_ENABLE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE_EXT",
          name: "STENCIL_TEST_ENABLE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_STENCIL_TEST_ENABLE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_STENCIL_OP_EXT",
          name: "STENCIL_OP_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
          of: "VK_DYNAMIC_STATE_STENCIL_OP",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE_EXT",
          name: "RASTERIZER_DISCARD_ENABLE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
          of: "VK_DYNAMIC_STATE_RASTERIZER_DISCARD_ENABLE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE_EXT",
          name: "DEPTH_BIAS_ENABLE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
          of: "VK_DYNAMIC_STATE_DEPTH_BIAS_ENABLE",
        ),
        Alias(
          original_name: "VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE_EXT",
          name: "PRIMITIVE_RESTART_ENABLE_EXT",
          origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
          of: "VK_DYNAMIC_STATE_PRIMITIVE_RESTART_ENABLE",
        ),
      ],
    ),
    Enum(
      original_name: "VkDescriptorUpdateTemplateType",
      name: "DescriptorUpdateTemplateType",
      origin: Vulkan1_1,
      variants: [
        Bit(
          original_name: "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET",
          name: "DESCRIPTOR_SET",
          origin: Vulkan1_1,
          value: 0,
        ),
        Bit(
          original_name: "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_PUSH_DESCRIPTORS_KHR",
          name: "PUSH_DESCRIPTORS_KHR",
          origin: Extension("VK_KHR_descriptor_update_template", 86, false),
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET_KHR",
          name: "DESCRIPTOR_SET_KHR",
          origin: Extension("VK_KHR_descriptor_update_template", 86, false),
          of: "VK_DESCRIPTOR_UPDATE_TEMPLATE_TYPE_DESCRIPTOR_SET",
        ),
      ],
    ),
    Enum(
      original_name: "VkObjectType",
      name: "ObjectType",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_OBJECT_TYPE_UNKNOWN",
          name: "UNKNOWN",
          origin: Vulkan1_0,
          value: 0,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_INSTANCE",
          name: "INSTANCE",
          origin: Vulkan1_0,
          value: 1,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_PHYSICAL_DEVICE",
          name: "PHYSICAL_DEVICE",
          origin: Vulkan1_0,
          value: 2,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DEVICE",
          name: "DEVICE",
          origin: Vulkan1_0,
          value: 3,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_QUEUE",
          name: "QUEUE",
          origin: Vulkan1_0,
          value: 4,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_SEMAPHORE",
          name: "SEMAPHORE",
          origin: Vulkan1_0,
          value: 5,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_COMMAND_BUFFER",
          name: "COMMAND_BUFFER",
          origin: Vulkan1_0,
          value: 6,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_FENCE",
          name: "FENCE",
          origin: Vulkan1_0,
          value: 7,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DEVICE_MEMORY",
          name: "DEVICE_MEMORY",
          origin: Vulkan1_0,
          value: 8,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_BUFFER",
          name: "BUFFER",
          origin: Vulkan1_0,
          value: 9,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_IMAGE",
          name: "IMAGE",
          origin: Vulkan1_0,
          value: 10,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_EVENT",
          name: "EVENT",
          origin: Vulkan1_0,
          value: 11,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_QUERY_POOL",
          name: "QUERY_POOL",
          origin: Vulkan1_0,
          value: 12,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_BUFFER_VIEW",
          name: "BUFFER_VIEW",
          origin: Vulkan1_0,
          value: 13,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_IMAGE_VIEW",
          name: "IMAGE_VIEW",
          origin: Vulkan1_0,
          value: 14,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_SHADER_MODULE",
          name: "SHADER_MODULE",
          origin: Vulkan1_0,
          value: 15,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_PIPELINE_CACHE",
          name: "PIPELINE_CACHE",
          origin: Vulkan1_0,
          value: 16,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_PIPELINE_LAYOUT",
          name: "PIPELINE_LAYOUT",
          origin: Vulkan1_0,
          value: 17,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_RENDER_PASS",
          name: "RENDER_PASS",
          origin: Vulkan1_0,
          value: 18,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_PIPELINE",
          name: "PIPELINE",
          origin: Vulkan1_0,
          value: 19,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT",
          name: "DESCRIPTOR_SET_LAYOUT",
          origin: Vulkan1_0,
          value: 20,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_SAMPLER",
          name: "SAMPLER",
          origin: Vulkan1_0,
          value: 21,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DESCRIPTOR_POOL",
          name: "DESCRIPTOR_POOL",
          origin: Vulkan1_0,
          value: 22,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DESCRIPTOR_SET",
          name: "DESCRIPTOR_SET",
          origin: Vulkan1_0,
          value: 23,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_FRAMEBUFFER",
          name: "FRAMEBUFFER",
          origin: Vulkan1_0,
          value: 24,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_COMMAND_POOL",
          name: "COMMAND_POOL",
          origin: Vulkan1_0,
          value: 25,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION",
          name: "SAMPLER_YCBCR_CONVERSION",
          origin: Vulkan1_1,
          value: 1000156000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE",
          name: "DESCRIPTOR_UPDATE_TEMPLATE",
          origin: Vulkan1_1,
          value: 1000085000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_PRIVATE_DATA_SLOT",
          name: "PRIVATE_DATA_SLOT",
          origin: Vulkan1_3,
          value: 1000295000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_SURFACE_KHR",
          name: "SURFACE_KHR",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 1000000000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_SWAPCHAIN_KHR",
          name: "SWAPCHAIN_KHR",
          origin: Extension("VK_KHR_swapchain", 2, false),
          value: 1000001000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DISPLAY_KHR",
          name: "DISPLAY_KHR",
          origin: Extension("VK_KHR_display", 3, false),
          value: 1000002000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DISPLAY_MODE_KHR",
          name: "DISPLAY_MODE_KHR",
          origin: Extension("VK_KHR_display", 3, false),
          value: 1000002001,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT",
          name: "DEBUG_REPORT_CALLBACK_EXT",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 1000011000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_VIDEO_SESSION_KHR",
          name: "VIDEO_SESSION_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_VIDEO_SESSION_PARAMETERS_KHR",
          name: "VIDEO_SESSION_PARAMETERS_KHR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1000023001,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_CU_MODULE_NVX",
          name: "CU_MODULE_NVX",
          origin: Extension("VK_NVX_binary_import", 30, false),
          value: 1000029000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_CU_FUNCTION_NVX",
          name: "CU_FUNCTION_NVX",
          origin: Extension("VK_NVX_binary_import", 30, false),
          value: 1000029001,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DEBUG_UTILS_MESSENGER_EXT",
          name: "DEBUG_UTILS_MESSENGER_EXT",
          origin: Extension("VK_EXT_debug_utils", 129, false),
          value: 1000128000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR",
          name: "ACCELERATION_STRUCTURE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_VALIDATION_CACHE_EXT",
          name: "VALIDATION_CACHE_EXT",
          origin: Extension("VK_EXT_validation_cache", 161, false),
          value: 1000160000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV",
          name: "ACCELERATION_STRUCTURE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_PERFORMANCE_CONFIGURATION_INTEL",
          name: "PERFORMANCE_CONFIGURATION_INTEL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1000210000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_DEFERRED_OPERATION_KHR",
          name: "DEFERRED_OPERATION_KHR",
          origin: Extension("VK_KHR_deferred_host_operations", 269, false),
          value: 1000268000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_INDIRECT_COMMANDS_LAYOUT_NV",
          name: "INDIRECT_COMMANDS_LAYOUT_NV",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1000277000,
        ),
        Bit(
          original_name: "VK_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA",
          name: "BUFFER_COLLECTION_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR",
          name: "DESCRIPTOR_UPDATE_TEMPLATE_KHR",
          origin: Extension("VK_KHR_descriptor_update_template", 86, false),
          of: "VK_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE",
        ),
        Alias(
          original_name: "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR",
          name: "SAMPLER_YCBCR_CONVERSION_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION",
        ),
        Alias(
          original_name: "VK_OBJECT_TYPE_PRIVATE_DATA_SLOT_EXT",
          name: "PRIVATE_DATA_SLOT_EXT",
          origin: Extension("VK_EXT_private_data", 296, false),
          of: "VK_OBJECT_TYPE_PRIVATE_DATA_SLOT",
        ),
      ],
    ),
    Enum(
      original_name: "VkSemaphoreType",
      name: "SemaphoreType",
      origin: Vulkan1_2,
      variants: [
        Bit(
          original_name: "VK_SEMAPHORE_TYPE_BINARY",
          name: "BINARY",
          origin: Vulkan1_2,
          value: 0,
        ),
        Bit(
          original_name: "VK_SEMAPHORE_TYPE_TIMELINE",
          name: "TIMELINE",
          origin: Vulkan1_2,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SEMAPHORE_TYPE_BINARY_KHR",
          name: "BINARY_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_SEMAPHORE_TYPE_BINARY",
        ),
        Alias(
          original_name: "VK_SEMAPHORE_TYPE_TIMELINE_KHR",
          name: "TIMELINE_KHR",
          origin: Extension("VK_KHR_timeline_semaphore", 208, false),
          of: "VK_SEMAPHORE_TYPE_TIMELINE",
        ),
      ],
    ),
    Enum(
      original_name: "VkPresentModeKHR",
      name: "PresentModeKHR",
      origin: Extension("VK_KHR_surface", 1, false),
      variants: [
        Bit(
          original_name: "VK_PRESENT_MODE_IMMEDIATE_KHR",
          name: "IMMEDIATE",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PRESENT_MODE_MAILBOX_KHR",
          name: "MAILBOX",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_PRESENT_MODE_FIFO_KHR",
          name: "FIFO",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_PRESENT_MODE_FIFO_RELAXED_KHR",
          name: "FIFO_RELAXED",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_PRESENT_MODE_SHARED_DEMAND_REFRESH_KHR",
          name: "SHARED_DEMAND_REFRESH",
          origin: Extension("VK_KHR_shared_presentable_image", 112, false),
          value: 1000111000,
        ),
        Bit(
          original_name: "VK_PRESENT_MODE_SHARED_CONTINUOUS_REFRESH_KHR",
          name: "SHARED_CONTINUOUS_REFRESH",
          origin: Extension("VK_KHR_shared_presentable_image", 112, false),
          value: 1000111001,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkColorSpaceKHR",
      name: "ColorSpaceKHR",
      origin: Extension("VK_KHR_surface", 1, false),
      variants: [
        Bit(
          original_name: "VK_COLOR_SPACE_SRGB_NONLINEAR_KHR",
          name: "SRGB_NONLINEAR",
          origin: Extension("VK_KHR_surface", 1, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_DISPLAY_P3_NONLINEAR_EXT",
          name: "DISPLAY_P3_NONLINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104001,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_EXTENDED_SRGB_LINEAR_EXT",
          name: "EXTENDED_SRGB_LINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104002,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT",
          name: "DISPLAY_P3_LINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104003,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_DCI_P3_NONLINEAR_EXT",
          name: "DCI_P3_NONLINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104004,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_BT709_LINEAR_EXT",
          name: "BT709_LINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104005,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_BT709_NONLINEAR_EXT",
          name: "BT709_NONLINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104006,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_BT2020_LINEAR_EXT",
          name: "BT2020_LINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104007,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_HDR10_ST2084_EXT",
          name: "HDR10_ST2084_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104008,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_DOLBYVISION_EXT",
          name: "DOLBYVISION_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104009,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_HDR10_HLG_EXT",
          name: "HDR10_HLG_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104010,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_ADOBERGB_LINEAR_EXT",
          name: "ADOBERGB_LINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104011,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_ADOBERGB_NONLINEAR_EXT",
          name: "ADOBERGB_NONLINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104012,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_PASS_THROUGH_EXT",
          name: "PASS_THROUGH_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104013,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_EXTENDED_SRGB_NONLINEAR_EXT",
          name: "EXTENDED_SRGB_NONLINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          value: 1000104014,
        ),
        Bit(
          original_name: "VK_COLOR_SPACE_DISPLAY_NATIVE_AMD",
          name: "DISPLAY_NATIVE_AMD",
          origin: Extension("VK_AMD_display_native_hdr", 214, false),
          value: 1000213000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_COLORSPACE_SRGB_NONLINEAR_KHR",
          name: "COLORSPACE_SRGB_NONLINEAR",
          origin: Extension("VK_KHR_surface", 1, false),
          of: "VK_COLOR_SPACE_SRGB_NONLINEAR_KHR",
        ),
        Alias(
          original_name: "VK_COLOR_SPACE_DCI_P3_LINEAR_EXT",
          name: "DCI_P3_LINEAR_EXT",
          origin: Extension("VK_EXT_swapchain_colorspace", 105, false),
          of: "VK_COLOR_SPACE_DISPLAY_P3_LINEAR_EXT",
        ),
      ],
    ),
    Enum(
      original_name: "VkTimeDomainEXT",
      name: "TimeDomainEXT",
      origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
      variants: [
        Bit(
          original_name: "VK_TIME_DOMAIN_DEVICE_EXT",
          name: "DEVICE",
          origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_TIME_DOMAIN_CLOCK_MONOTONIC_EXT",
          name: "CLOCK_MONOTONIC",
          origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_TIME_DOMAIN_CLOCK_MONOTONIC_RAW_EXT",
          name: "CLOCK_MONOTONIC_RAW",
          origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_TIME_DOMAIN_QUERY_PERFORMANCE_COUNTER_EXT",
          name: "QUERY_PERFORMANCE_COUNTER",
          origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
          value: 3,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkDebugReportObjectTypeEXT",
      name: "DebugReportObjectTypeEXT",
      origin: Extension("VK_EXT_debug_marker", 23, false),
      variants: [
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_UNKNOWN_EXT",
          name: "UNKNOWN",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_INSTANCE_EXT",
          name: "INSTANCE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_PHYSICAL_DEVICE_EXT",
          name: "PHYSICAL_DEVICE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_EXT",
          name: "DEVICE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_QUEUE_EXT",
          name: "QUEUE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_SEMAPHORE_EXT",
          name: "SEMAPHORE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 5,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_BUFFER_EXT",
          name: "COMMAND_BUFFER",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 6,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_FENCE_EXT",
          name: "FENCE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 7,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DEVICE_MEMORY_EXT",
          name: "DEVICE_MEMORY",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 8,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_EXT",
          name: "BUFFER",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 9,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_EXT",
          name: "IMAGE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 10,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_EVENT_EXT",
          name: "EVENT",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 11,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_QUERY_POOL_EXT",
          name: "QUERY_POOL",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 12,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_VIEW_EXT",
          name: "BUFFER_VIEW",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 13,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_IMAGE_VIEW_EXT",
          name: "IMAGE_VIEW",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 14,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_SHADER_MODULE_EXT",
          name: "SHADER_MODULE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 15,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_CACHE_EXT",
          name: "PIPELINE_CACHE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 16,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_LAYOUT_EXT",
          name: "PIPELINE_LAYOUT",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 17,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_RENDER_PASS_EXT",
          name: "RENDER_PASS",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 18,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_PIPELINE_EXT",
          name: "PIPELINE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 19,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_LAYOUT_EXT",
          name: "DESCRIPTOR_SET_LAYOUT",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 20,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_EXT",
          name: "SAMPLER",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 21,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_POOL_EXT",
          name: "DESCRIPTOR_POOL",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 22,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_SET_EXT",
          name: "DESCRIPTOR_SET",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 23,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_FRAMEBUFFER_EXT",
          name: "FRAMEBUFFER",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 24,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_COMMAND_POOL_EXT",
          name: "COMMAND_POOL",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 25,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_SURFACE_KHR_EXT",
          name: "SURFACE_KHR",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 26,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_SWAPCHAIN_KHR_EXT",
          name: "SWAPCHAIN_KHR",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 27,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT",
          name: "DEBUG_REPORT_CALLBACK",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 28,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_KHR_EXT",
          name: "DISPLAY_KHR",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 29,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DISPLAY_MODE_KHR_EXT",
          name: "DISPLAY_MODE_KHR",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 30,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_VALIDATION_CACHE_EXT_EXT",
          name: "VALIDATION_CACHE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 33,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT",
          name: "SAMPLER_YCBCR_CONVERSION",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          value: 1000156000,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT",
          name: "DESCRIPTOR_UPDATE_TEMPLATE",
          origin: Extension("VK_EXT_debug_report", 12, false),
          value: 1000085000,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_CU_MODULE_NVX_EXT",
          name: "CU_MODULE_NVX",
          origin: Extension("VK_NVX_binary_import", 30, false),
          value: 1000029000,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_CU_FUNCTION_NVX_EXT",
          name: "CU_FUNCTION_NVX",
          origin: Extension("VK_NVX_binary_import", 30, false),
          value: 1000029001,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_KHR_EXT",
          name: "ACCELERATION_STRUCTURE_KHR",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1000150000,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_ACCELERATION_STRUCTURE_NV_EXT",
          name: "ACCELERATION_STRUCTURE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1000165000,
        ),
        Bit(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_BUFFER_COLLECTION_FUCHSIA_EXT",
          name: "BUFFER_COLLECTION_FUCHSIA",
          origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
          value: 1000366000,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_EXT",
          name: "DEBUG_REPORT",
          origin: Extension("VK_EXT_debug_report", 12, false),
          of: "VK_DEBUG_REPORT_OBJECT_TYPE_DEBUG_REPORT_CALLBACK_EXT_EXT",
        ),
        Alias(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_KHR_EXT",
          name: "DESCRIPTOR_UPDATE_TEMPLATE_KHR",
          origin: Extension("VK_KHR_descriptor_update_template", 86, false),
          of: "VK_DEBUG_REPORT_OBJECT_TYPE_DESCRIPTOR_UPDATE_TEMPLATE_EXT",
        ),
        Alias(
          original_name: "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_KHR_EXT",
          name: "SAMPLER_YCBCR_CONVERSION_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_DEBUG_REPORT_OBJECT_TYPE_SAMPLER_YCBCR_CONVERSION_EXT",
        ),
      ],
    ),
    Enum(
      original_name: "VkDeviceMemoryReportEventTypeEXT",
      name: "DeviceMemoryReportEventTypeEXT",
      origin: Extension("VK_EXT_device_memory_report", 285, false),
      variants: [
        Bit(
          original_name: "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATE_EXT",
          name: "ALLOCATE",
          origin: Extension("VK_EXT_device_memory_report", 285, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_FREE_EXT",
          name: "FREE",
          origin: Extension("VK_EXT_device_memory_report", 285, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_IMPORT_EXT",
          name: "IMPORT",
          origin: Extension("VK_EXT_device_memory_report", 285, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_UNIMPORT_EXT",
          name: "UNIMPORT",
          origin: Extension("VK_EXT_device_memory_report", 285, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_DEVICE_MEMORY_REPORT_EVENT_TYPE_ALLOCATION_FAILED_EXT",
          name: "ALLOCATION_FAILED",
          origin: Extension("VK_EXT_device_memory_report", 285, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkRasterizationOrderAMD",
      name: "RasterizationOrderAMD",
      origin: Extension("VK_AMD_rasterization_order", 19, false),
      variants: [
        Bit(
          original_name: "VK_RASTERIZATION_ORDER_STRICT_AMD",
          name: "STRICT",
          origin: Extension("VK_AMD_rasterization_order", 19, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_RASTERIZATION_ORDER_RELAXED_AMD",
          name: "RELAXED",
          origin: Extension("VK_AMD_rasterization_order", 19, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkValidationCheckEXT",
      name: "ValidationCheckEXT",
      origin: Extension("VK_EXT_validation_flags", 62, false),
      variants: [
        Bit(
          original_name: "VK_VALIDATION_CHECK_ALL_EXT",
          name: "ALL",
          origin: Extension("VK_EXT_validation_flags", 62, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VALIDATION_CHECK_SHADERS_EXT",
          name: "SHADERS",
          origin: Extension("VK_EXT_validation_flags", 62, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkValidationFeatureEnableEXT",
      name: "ValidationFeatureEnableEXT",
      origin: Extension("VK_EXT_validation_features", 248, false),
      variants: [
        Bit(
          original_name: "VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_EXT",
          name: "GPU_ASSISTED",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_ENABLE_GPU_ASSISTED_RESERVE_BINDING_SLOT_EXT",
          name: "GPU_ASSISTED_RESERVE_BINDING_SLOT",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_ENABLE_BEST_PRACTICES_EXT",
          name: "BEST_PRACTICES",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_ENABLE_DEBUG_PRINTF_EXT",
          name: "DEBUG_PRINTF",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_ENABLE_SYNCHRONIZATION_VALIDATION_EXT",
          name: "SYNCHRONIZATION_VALIDATION",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkValidationFeatureDisableEXT",
      name: "ValidationFeatureDisableEXT",
      origin: Extension("VK_EXT_validation_features", 248, false),
      variants: [
        Bit(
          original_name: "VK_VALIDATION_FEATURE_DISABLE_ALL_EXT",
          name: "ALL",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_DISABLE_SHADERS_EXT",
          name: "SHADERS",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_DISABLE_THREAD_SAFETY_EXT",
          name: "THREAD_SAFETY",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_DISABLE_API_PARAMETERS_EXT",
          name: "API_PARAMETERS",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_DISABLE_OBJECT_LIFETIMES_EXT",
          name: "OBJECT_LIFETIMES",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_DISABLE_CORE_CHECKS_EXT",
          name: "CORE_CHECKS",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 5,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_DISABLE_UNIQUE_HANDLES_EXT",
          name: "UNIQUE_HANDLES",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 6,
        ),
        Bit(
          original_name: "VK_VALIDATION_FEATURE_DISABLE_SHADER_VALIDATION_CACHE_EXT",
          name: "SHADER_VALIDATION_CACHE",
          origin: Extension("VK_EXT_validation_features", 248, false),
          value: 7,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkIndirectCommandsTokenTypeNV",
      name: "IndirectCommandsTokenTypeNV",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      variants: [
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_TOKEN_TYPE_SHADER_GROUP_NV",
          name: "SHADER_GROUP",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_TOKEN_TYPE_STATE_FLAGS_NV",
          name: "STATE_FLAGS",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_TOKEN_TYPE_INDEX_BUFFER_NV",
          name: "INDEX_BUFFER",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_TOKEN_TYPE_VERTEX_BUFFER_NV",
          name: "VERTEX_BUFFER",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_TOKEN_TYPE_PUSH_CONSTANT_NV",
          name: "PUSH_CONSTANT",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_INDEXED_NV",
          name: "DRAW_INDEXED",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 5,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_NV",
          name: "DRAW",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 6,
        ),
        Bit(
          original_name: "VK_INDIRECT_COMMANDS_TOKEN_TYPE_DRAW_TASKS_NV",
          name: "DRAW_TASKS",
          origin: Extension("VK_NV_device_generated_commands", 278, false),
          value: 7,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkDisplayPowerStateEXT",
      name: "DisplayPowerStateEXT",
      origin: Extension("VK_EXT_display_control", 92, false),
      variants: [
        Bit(
          original_name: "VK_DISPLAY_POWER_STATE_OFF_EXT",
          name: "OFF",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_DISPLAY_POWER_STATE_SUSPEND_EXT",
          name: "SUSPEND",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_DISPLAY_POWER_STATE_ON_EXT",
          name: "ON",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkDeviceEventTypeEXT",
      name: "DeviceEventTypeEXT",
      origin: Extension("VK_EXT_display_control", 92, false),
      variants: [
        Bit(
          original_name: "VK_DEVICE_EVENT_TYPE_DISPLAY_HOTPLUG_EXT",
          name: "DISPLAY_HOTPLUG",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 0,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkDisplayEventTypeEXT",
      name: "DisplayEventTypeEXT",
      origin: Extension("VK_EXT_display_control", 92, false),
      variants: [
        Bit(
          original_name: "VK_DISPLAY_EVENT_TYPE_FIRST_PIXEL_OUT_EXT",
          name: "FIRST_PIXEL_OUT",
          origin: Extension("VK_EXT_display_control", 92, false),
          value: 0,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkViewportCoordinateSwizzleNV",
      name: "ViewportCoordinateSwizzleNV",
      origin: Extension("VK_NV_viewport_swizzle", 99, false),
      variants: [
        Bit(
          original_name: "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_X_NV",
          name: "POSITIVE_X",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_X_NV",
          name: "NEGATIVE_X",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Y_NV",
          name: "POSITIVE_Y",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Y_NV",
          name: "NEGATIVE_Y",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_Z_NV",
          name: "POSITIVE_Z",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_Z_NV",
          name: "NEGATIVE_Z",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 5,
        ),
        Bit(
          original_name: "VK_VIEWPORT_COORDINATE_SWIZZLE_POSITIVE_W_NV",
          name: "POSITIVE_W",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 6,
        ),
        Bit(
          original_name: "VK_VIEWPORT_COORDINATE_SWIZZLE_NEGATIVE_W_NV",
          name: "NEGATIVE_W",
          origin: Extension("VK_NV_viewport_swizzle", 99, false),
          value: 7,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkDiscardRectangleModeEXT",
      name: "DiscardRectangleModeEXT",
      origin: Extension("VK_EXT_discard_rectangles", 100, false),
      variants: [
        Bit(
          original_name: "VK_DISCARD_RECTANGLE_MODE_INCLUSIVE_EXT",
          name: "INCLUSIVE",
          origin: Extension("VK_EXT_discard_rectangles", 100, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_DISCARD_RECTANGLE_MODE_EXCLUSIVE_EXT",
          name: "EXCLUSIVE",
          origin: Extension("VK_EXT_discard_rectangles", 100, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPointClippingBehavior",
      name: "PointClippingBehavior",
      origin: Vulkan1_1,
      variants: [
        Bit(
          original_name: "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES",
          name: "ALL_CLIP_PLANES",
          origin: Vulkan1_1,
          value: 0,
        ),
        Bit(
          original_name: "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY",
          name: "USER_CLIP_PLANES_ONLY",
          origin: Vulkan1_1,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES_KHR",
          name: "ALL_CLIP_PLANES_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_POINT_CLIPPING_BEHAVIOR_ALL_CLIP_PLANES",
        ),
        Alias(
          original_name: "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY_KHR",
          name: "USER_CLIP_PLANES_ONLY_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_POINT_CLIPPING_BEHAVIOR_USER_CLIP_PLANES_ONLY",
        ),
      ],
    ),
    Enum(
      original_name: "VkSamplerReductionMode",
      name: "SamplerReductionMode",
      origin: Vulkan1_2,
      variants: [
        Bit(
          original_name: "VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE",
          name: "WEIGHTED_AVERAGE",
          origin: Vulkan1_2,
          value: 0,
        ),
        Bit(
          original_name: "VK_SAMPLER_REDUCTION_MODE_MIN",
          name: "MIN",
          origin: Vulkan1_2,
          value: 1,
        ),
        Bit(
          original_name: "VK_SAMPLER_REDUCTION_MODE_MAX",
          name: "MAX",
          origin: Vulkan1_2,
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE_EXT",
          name: "WEIGHTED_AVERAGE_EXT",
          origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
          of: "VK_SAMPLER_REDUCTION_MODE_WEIGHTED_AVERAGE",
        ),
        Alias(
          original_name: "VK_SAMPLER_REDUCTION_MODE_MIN_EXT",
          name: "MIN_EXT",
          origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
          of: "VK_SAMPLER_REDUCTION_MODE_MIN",
        ),
        Alias(
          original_name: "VK_SAMPLER_REDUCTION_MODE_MAX_EXT",
          name: "MAX_EXT",
          origin: Extension("VK_EXT_sampler_filter_minmax", 131, false),
          of: "VK_SAMPLER_REDUCTION_MODE_MAX",
        ),
      ],
    ),
    Enum(
      original_name: "VkTessellationDomainOrigin",
      name: "TessellationDomainOrigin",
      origin: Vulkan1_1,
      variants: [
        Bit(
          original_name: "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT",
          name: "UPPER_LEFT",
          origin: Vulkan1_1,
          value: 0,
        ),
        Bit(
          original_name: "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT",
          name: "LOWER_LEFT",
          origin: Vulkan1_1,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT_KHR",
          name: "UPPER_LEFT_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_TESSELLATION_DOMAIN_ORIGIN_UPPER_LEFT",
        ),
        Alias(
          original_name: "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT_KHR",
          name: "LOWER_LEFT_KHR",
          origin: Extension("VK_KHR_maintenance2", 118, false),
          of: "VK_TESSELLATION_DOMAIN_ORIGIN_LOWER_LEFT",
        ),
      ],
    ),
    Enum(
      original_name: "VkSamplerYcbcrModelConversion",
      name: "SamplerYcbcrModelConversion",
      origin: Vulkan1_1,
      variants: [
        Bit(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY",
          name: "RGB_IDENTITY",
          origin: Vulkan1_1,
          value: 0,
        ),
        Bit(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY",
          name: "YCBCR_IDENTITY",
          origin: Vulkan1_1,
          value: 1,
        ),
        Bit(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709",
          name: "YCBCR709",
          origin: Vulkan1_1,
          value: 2,
        ),
        Bit(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601",
          name: "YCBCR601",
          origin: Vulkan1_1,
          value: 3,
        ),
        Bit(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020",
          name: "YCBCR2020",
          origin: Vulkan1_1,
          value: 4,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY_KHR",
          name: "RGB_IDENTITY_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_RGB_IDENTITY",
        ),
        Alias(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY_KHR",
          name: "YCBCR_IDENTITY_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_IDENTITY",
        ),
        Alias(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709_KHR",
          name: "YCBCR709_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_709",
        ),
        Alias(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601_KHR",
          name: "YCBCR601_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_601",
        ),
        Alias(
          original_name: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020_KHR",
          name: "YCBCR2020_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_SAMPLER_YCBCR_MODEL_CONVERSION_YCBCR_2020",
        ),
      ],
    ),
    Enum(
      original_name: "VkSamplerYcbcrRange",
      name: "SamplerYcbcrRange",
      origin: Vulkan1_1,
      variants: [
        Bit(
          original_name: "VK_SAMPLER_YCBCR_RANGE_ITU_FULL",
          name: "ITU_FULL",
          origin: Vulkan1_1,
          value: 0,
        ),
        Bit(
          original_name: "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW",
          name: "ITU_NARROW",
          origin: Vulkan1_1,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SAMPLER_YCBCR_RANGE_ITU_FULL_KHR",
          name: "ITU_FULL_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_SAMPLER_YCBCR_RANGE_ITU_FULL",
        ),
        Alias(
          original_name: "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW_KHR",
          name: "ITU_NARROW_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_SAMPLER_YCBCR_RANGE_ITU_NARROW",
        ),
      ],
    ),
    Enum(
      original_name: "VkChromaLocation",
      name: "ChromaLocation",
      origin: Vulkan1_1,
      variants: [
        Bit(
          original_name: "VK_CHROMA_LOCATION_COSITED_EVEN",
          name: "COSITED_EVEN",
          origin: Vulkan1_1,
          value: 0,
        ),
        Bit(
          original_name: "VK_CHROMA_LOCATION_MIDPOINT",
          name: "MIDPOINT",
          origin: Vulkan1_1,
          value: 1,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_CHROMA_LOCATION_COSITED_EVEN_KHR",
          name: "COSITED_EVEN_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_CHROMA_LOCATION_COSITED_EVEN",
        ),
        Alias(
          original_name: "VK_CHROMA_LOCATION_MIDPOINT_KHR",
          name: "MIDPOINT_KHR",
          origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
          of: "VK_CHROMA_LOCATION_MIDPOINT",
        ),
      ],
    ),
    Enum(
      original_name: "VkBlendOverlapEXT",
      name: "BlendOverlapEXT",
      origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
      variants: [
        Bit(
          original_name: "VK_BLEND_OVERLAP_UNCORRELATED_EXT",
          name: "UNCORRELATED",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_BLEND_OVERLAP_DISJOINT_EXT",
          name: "DISJOINT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_BLEND_OVERLAP_CONJOINT_EXT",
          name: "CONJOINT",
          origin: Extension("VK_EXT_blend_operation_advanced", 149, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkCoverageModulationModeNV",
      name: "CoverageModulationModeNV",
      origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
      variants: [
        Bit(
          original_name: "VK_COVERAGE_MODULATION_MODE_NONE_NV",
          name: "NONE",
          origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_COVERAGE_MODULATION_MODE_RGB_NV",
          name: "RGB",
          origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_COVERAGE_MODULATION_MODE_ALPHA_NV",
          name: "ALPHA",
          origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_COVERAGE_MODULATION_MODE_RGBA_NV",
          name: "RGBA",
          origin: Extension("VK_NV_framebuffer_mixed_samples", 153, false),
          value: 3,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkCoverageReductionModeNV",
      name: "CoverageReductionModeNV",
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
      variants: [
        Bit(
          original_name: "VK_COVERAGE_REDUCTION_MODE_MERGE_NV",
          name: "MERGE",
          origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_COVERAGE_REDUCTION_MODE_TRUNCATE_NV",
          name: "TRUNCATE",
          origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkValidationCacheHeaderVersionEXT",
      name: "ValidationCacheHeaderVersionEXT",
      origin: Extension("VK_EXT_validation_cache", 161, false),
      variants: [
        Bit(
          original_name: "VK_VALIDATION_CACHE_HEADER_VERSION_ONE_EXT",
          name: "ONE",
          origin: Extension("VK_EXT_validation_cache", 161, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkShaderInfoTypeAMD",
      name: "ShaderInfoTypeAMD",
      origin: Extension("VK_AMD_shader_info", 43, false),
      variants: [
        Bit(
          original_name: "VK_SHADER_INFO_TYPE_STATISTICS_AMD",
          name: "STATISTICS",
          origin: Extension("VK_AMD_shader_info", 43, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_SHADER_INFO_TYPE_BINARY_AMD",
          name: "BINARY",
          origin: Extension("VK_AMD_shader_info", 43, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_SHADER_INFO_TYPE_DISASSEMBLY_AMD",
          name: "DISASSEMBLY",
          origin: Extension("VK_AMD_shader_info", 43, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkQueueGlobalPriorityKHR",
      name: "QueueGlobalPriorityKHR",
      origin: Extension("VK_KHR_global_priority", 189, false),
      variants: [
        Bit(
          original_name: "VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR",
          name: "LOW",
          origin: Extension("VK_KHR_global_priority", 189, false),
          value: 128,
        ),
        Bit(
          original_name: "VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR",
          name: "MEDIUM",
          origin: Extension("VK_KHR_global_priority", 189, false),
          value: 256,
        ),
        Bit(
          original_name: "VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR",
          name: "HIGH",
          origin: Extension("VK_KHR_global_priority", 189, false),
          value: 512,
        ),
        Bit(
          original_name: "VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR",
          name: "REALTIME",
          origin: Extension("VK_KHR_global_priority", 189, false),
          value: 1024,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_QUEUE_GLOBAL_PRIORITY_LOW_EXT",
          name: "LOW_EXT",
          origin: Extension("VK_KHR_global_priority", 189, false),
          of: "VK_QUEUE_GLOBAL_PRIORITY_LOW_KHR",
        ),
        Alias(
          original_name: "VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_EXT",
          name: "MEDIUM_EXT",
          origin: Extension("VK_KHR_global_priority", 189, false),
          of: "VK_QUEUE_GLOBAL_PRIORITY_MEDIUM_KHR",
        ),
        Alias(
          original_name: "VK_QUEUE_GLOBAL_PRIORITY_HIGH_EXT",
          name: "HIGH_EXT",
          origin: Extension("VK_KHR_global_priority", 189, false),
          of: "VK_QUEUE_GLOBAL_PRIORITY_HIGH_KHR",
        ),
        Alias(
          original_name: "VK_QUEUE_GLOBAL_PRIORITY_REALTIME_EXT",
          name: "REALTIME_EXT",
          origin: Extension("VK_KHR_global_priority", 189, false),
          of: "VK_QUEUE_GLOBAL_PRIORITY_REALTIME_KHR",
        ),
      ],
    ),
    Enum(
      original_name: "VkConservativeRasterizationModeEXT",
      name: "ConservativeRasterizationModeEXT",
      origin: Extension("VK_EXT_conservative_rasterization", 102, false),
      variants: [
        Bit(
          original_name: "VK_CONSERVATIVE_RASTERIZATION_MODE_DISABLED_EXT",
          name: "DISABLED",
          origin: Extension("VK_EXT_conservative_rasterization", 102, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_CONSERVATIVE_RASTERIZATION_MODE_OVERESTIMATE_EXT",
          name: "OVERESTIMATE",
          origin: Extension("VK_EXT_conservative_rasterization", 102, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_CONSERVATIVE_RASTERIZATION_MODE_UNDERESTIMATE_EXT",
          name: "UNDERESTIMATE",
          origin: Extension("VK_EXT_conservative_rasterization", 102, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkVendorId",
      name: "VendorId",
      origin: Vulkan1_0,
      variants: [
        Bit(
          original_name: "VK_VENDOR_ID_VIV",
          name: "VIV",
          origin: Vulkan1_0,
          value: 65537,
        ),
        Bit(
          original_name: "VK_VENDOR_ID_VSI",
          name: "VSI",
          origin: Vulkan1_0,
          value: 65538,
        ),
        Bit(
          original_name: "VK_VENDOR_ID_KAZAN",
          name: "KAZAN",
          origin: Vulkan1_0,
          value: 65539,
        ),
        Bit(
          original_name: "VK_VENDOR_ID_CODEPLAY",
          name: "CODEPLAY",
          origin: Vulkan1_0,
          value: 65540,
        ),
        Bit(
          original_name: "VK_VENDOR_ID_MESA",
          name: "MESA",
          origin: Vulkan1_0,
          value: 65541,
        ),
        Bit(
          original_name: "VK_VENDOR_ID_POCL",
          name: "POCL",
          origin: Vulkan1_0,
          value: 65542,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkDriverId",
      name: "DriverId",
      origin: Vulkan1_2,
      variants: [
        Bit(
          original_name: "VK_DRIVER_ID_AMD_PROPRIETARY",
          name: "AMD_PROPRIETARY",
          origin: Vulkan1_2,
          value: 1,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_AMD_OPEN_SOURCE",
          name: "AMD_OPEN_SOURCE",
          origin: Vulkan1_2,
          value: 2,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_MESA_RADV",
          name: "MESA_RADV",
          origin: Vulkan1_2,
          value: 3,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_NVIDIA_PROPRIETARY",
          name: "NVIDIA_PROPRIETARY",
          origin: Vulkan1_2,
          value: 4,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS",
          name: "INTEL_PROPRIETARY_WINDOWS",
          origin: Vulkan1_2,
          value: 5,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA",
          name: "INTEL_OPEN_SOURCE_MESA",
          origin: Vulkan1_2,
          value: 6,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_IMAGINATION_PROPRIETARY",
          name: "IMAGINATION_PROPRIETARY",
          origin: Vulkan1_2,
          value: 7,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_QUALCOMM_PROPRIETARY",
          name: "QUALCOMM_PROPRIETARY",
          origin: Vulkan1_2,
          value: 8,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_ARM_PROPRIETARY",
          name: "ARM_PROPRIETARY",
          origin: Vulkan1_2,
          value: 9,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_GOOGLE_SWIFTSHADER",
          name: "GOOGLE_SWIFTSHADER",
          origin: Vulkan1_2,
          value: 10,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_GGP_PROPRIETARY",
          name: "GGP_PROPRIETARY",
          origin: Vulkan1_2,
          value: 11,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_BROADCOM_PROPRIETARY",
          name: "BROADCOM_PROPRIETARY",
          origin: Vulkan1_2,
          value: 12,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_MESA_LLVMPIPE",
          name: "MESA_LLVMPIPE",
          origin: Vulkan1_2,
          value: 13,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_MOLTENVK",
          name: "MOLTENVK",
          origin: Vulkan1_2,
          value: 14,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_COREAVI_PROPRIETARY",
          name: "COREAVI_PROPRIETARY",
          origin: Vulkan1_2,
          value: 15,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_JUICE_PROPRIETARY",
          name: "JUICE_PROPRIETARY",
          origin: Vulkan1_2,
          value: 16,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_VERISILICON_PROPRIETARY",
          name: "VERISILICON_PROPRIETARY",
          origin: Vulkan1_2,
          value: 17,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_MESA_TURNIP",
          name: "MESA_TURNIP",
          origin: Vulkan1_2,
          value: 18,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_MESA_V3DV",
          name: "MESA_V3DV",
          origin: Vulkan1_2,
          value: 19,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_MESA_PANVK",
          name: "MESA_PANVK",
          origin: Vulkan1_2,
          value: 20,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_SAMSUNG_PROPRIETARY",
          name: "SAMSUNG_PROPRIETARY",
          origin: Vulkan1_2,
          value: 21,
        ),
        Bit(
          original_name: "VK_DRIVER_ID_MESA_VENUS",
          name: "MESA_VENUS",
          origin: Vulkan1_2,
          value: 22,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_DRIVER_ID_AMD_PROPRIETARY_KHR",
          name: "AMD_PROPRIETARY_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_AMD_PROPRIETARY",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_AMD_OPEN_SOURCE_KHR",
          name: "AMD_OPEN_SOURCE_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_AMD_OPEN_SOURCE",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_MESA_RADV_KHR",
          name: "MESA_RADV_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_MESA_RADV",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_NVIDIA_PROPRIETARY_KHR",
          name: "NVIDIA_PROPRIETARY_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_NVIDIA_PROPRIETARY",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS_KHR",
          name: "INTEL_PROPRIETARY_WINDOWS_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_INTEL_PROPRIETARY_WINDOWS",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA_KHR",
          name: "INTEL_OPEN_SOURCE_MESA_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_INTEL_OPEN_SOURCE_MESA",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_IMAGINATION_PROPRIETARY_KHR",
          name: "IMAGINATION_PROPRIETARY_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_IMAGINATION_PROPRIETARY",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_QUALCOMM_PROPRIETARY_KHR",
          name: "QUALCOMM_PROPRIETARY_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_QUALCOMM_PROPRIETARY",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_ARM_PROPRIETARY_KHR",
          name: "ARM_PROPRIETARY_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_ARM_PROPRIETARY",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_GOOGLE_SWIFTSHADER_KHR",
          name: "GOOGLE_SWIFTSHADER_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_GOOGLE_SWIFTSHADER",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_GGP_PROPRIETARY_KHR",
          name: "GGP_PROPRIETARY_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_GGP_PROPRIETARY",
        ),
        Alias(
          original_name: "VK_DRIVER_ID_BROADCOM_PROPRIETARY_KHR",
          name: "BROADCOM_PROPRIETARY_KHR",
          origin: Extension("VK_KHR_driver_properties", 197, false),
          of: "VK_DRIVER_ID_BROADCOM_PROPRIETARY",
        ),
      ],
    ),
    Enum(
      original_name: "VkShadingRatePaletteEntryNV",
      name: "ShadingRatePaletteEntryNV",
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      variants: [
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_NO_INVOCATIONS_NV",
          name: "NO_INVOCATIONS",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_16_INVOCATIONS_PER_PIXEL_NV",
          name: "16_INVOCATIONS_PER_PIXEL",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_8_INVOCATIONS_PER_PIXEL_NV",
          name: "8_INVOCATIONS_PER_PIXEL",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_4_INVOCATIONS_PER_PIXEL_NV",
          name: "4_INVOCATIONS_PER_PIXEL",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_2_INVOCATIONS_PER_PIXEL_NV",
          name: "2_INVOCATIONS_PER_PIXEL",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_PIXEL_NV",
          name: "1_INVOCATION_PER_PIXEL",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 5,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X1_PIXELS_NV",
          name: "1_INVOCATION_PER2X1_PIXELS",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 6,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_1X2_PIXELS_NV",
          name: "1_INVOCATION_PER1X2_PIXELS",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 7,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X2_PIXELS_NV",
          name: "1_INVOCATION_PER2X2_PIXELS",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 8,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X2_PIXELS_NV",
          name: "1_INVOCATION_PER4X2_PIXELS",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 9,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_2X4_PIXELS_NV",
          name: "1_INVOCATION_PER2X4_PIXELS",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 10,
        ),
        Bit(
          original_name: "VK_SHADING_RATE_PALETTE_ENTRY_1_INVOCATION_PER_4X4_PIXELS_NV",
          name: "1_INVOCATION_PER4X4_PIXELS",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 11,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkCoarseSampleOrderTypeNV",
      name: "CoarseSampleOrderTypeNV",
      origin: Extension("VK_NV_shading_rate_image", 165, false),
      variants: [
        Bit(
          original_name: "VK_COARSE_SAMPLE_ORDER_TYPE_DEFAULT_NV",
          name: "DEFAULT",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_COARSE_SAMPLE_ORDER_TYPE_CUSTOM_NV",
          name: "CUSTOM",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_COARSE_SAMPLE_ORDER_TYPE_PIXEL_MAJOR_NV",
          name: "PIXEL_MAJOR",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_COARSE_SAMPLE_ORDER_TYPE_SAMPLE_MAJOR_NV",
          name: "SAMPLE_MAJOR",
          origin: Extension("VK_NV_shading_rate_image", 165, false),
          value: 3,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkCopyAccelerationStructureModeKHR",
      name: "CopyAccelerationStructureModeKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      variants: [
        Bit(
          original_name: "VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR",
          name: "CLONE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR",
          name: "COMPACT",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_COPY_ACCELERATION_STRUCTURE_MODE_SERIALIZE_KHR",
          name: "SERIALIZE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_COPY_ACCELERATION_STRUCTURE_MODE_DESERIALIZE_KHR",
          name: "DESERIALIZE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 3,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_NV",
          name: "CLONE_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_COPY_ACCELERATION_STRUCTURE_MODE_CLONE_KHR",
        ),
        Alias(
          original_name: "VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_NV",
          name: "COMPACT_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_COPY_ACCELERATION_STRUCTURE_MODE_COMPACT_KHR",
        ),
      ],
    ),
    Enum(
      original_name: "VkBuildAccelerationStructureModeKHR",
      name: "BuildAccelerationStructureModeKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      variants: [
        Bit(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_MODE_BUILD_KHR",
          name: "BUILD",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_BUILD_ACCELERATION_STRUCTURE_MODE_UPDATE_KHR",
          name: "UPDATE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkAccelerationStructureTypeKHR",
      name: "AccelerationStructureTypeKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      variants: [
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR",
          name: "TOP_LEVEL",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR",
          name: "BOTTOM_LEVEL",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_TYPE_GENERIC_KHR",
          name: "GENERIC",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_NV",
          name: "TOP_LEVEL_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_ACCELERATION_STRUCTURE_TYPE_TOP_LEVEL_KHR",
        ),
        Alias(
          original_name: "VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_NV",
          name: "BOTTOM_LEVEL_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_ACCELERATION_STRUCTURE_TYPE_BOTTOM_LEVEL_KHR",
        ),
      ],
    ),
    Enum(
      original_name: "VkGeometryTypeKHR",
      name: "GeometryTypeKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      variants: [
        Bit(
          original_name: "VK_GEOMETRY_TYPE_TRIANGLES_KHR",
          name: "TRIANGLES",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_GEOMETRY_TYPE_AABBS_KHR",
          name: "AABBS",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_GEOMETRY_TYPE_INSTANCES_KHR",
          name: "INSTANCES",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_GEOMETRY_TYPE_TRIANGLES_NV",
          name: "TRIANGLES_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_GEOMETRY_TYPE_TRIANGLES_KHR",
        ),
        Alias(
          original_name: "VK_GEOMETRY_TYPE_AABBS_NV",
          name: "AABBS_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_GEOMETRY_TYPE_AABBS_KHR",
        ),
      ],
    ),
    Enum(
      original_name: "VkAccelerationStructureMemoryRequirementsTypeNV",
      name: "AccelerationStructureMemoryRequirementsTypeNV",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      variants: [
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_OBJECT_NV",
          name: "OBJECT",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_BUILD_SCRATCH_NV",
          name: "BUILD_SCRATCH",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_MEMORY_REQUIREMENTS_TYPE_UPDATE_SCRATCH_NV",
          name: "UPDATE_SCRATCH",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkAccelerationStructureBuildTypeKHR",
      name: "AccelerationStructureBuildTypeKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      variants: [
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_KHR",
          name: "HOST",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_BUILD_TYPE_DEVICE_KHR",
          name: "DEVICE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_BUILD_TYPE_HOST_OR_DEVICE_KHR",
          name: "HOST_OR_DEVICE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkRayTracingShaderGroupTypeKHR",
      name: "RayTracingShaderGroupTypeKHR",
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      variants: [
        Bit(
          original_name: "VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR",
          name: "GENERAL",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR",
          name: "TRIANGLES_HIT_GROUP",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR",
          name: "PROCEDURAL_HIT_GROUP",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_NV",
          name: "GENERAL_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_RAY_TRACING_SHADER_GROUP_TYPE_GENERAL_KHR",
        ),
        Alias(
          original_name: "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_NV",
          name: "TRIANGLES_HIT_GROUP_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_RAY_TRACING_SHADER_GROUP_TYPE_TRIANGLES_HIT_GROUP_KHR",
        ),
        Alias(
          original_name: "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_NV",
          name: "PROCEDURAL_HIT_GROUP_NV",
          origin: Extension("VK_NV_ray_tracing", 166, false),
          of: "VK_RAY_TRACING_SHADER_GROUP_TYPE_PROCEDURAL_HIT_GROUP_KHR",
        ),
      ],
    ),
    Enum(
      original_name: "VkAccelerationStructureCompatibilityKHR",
      name: "AccelerationStructureCompatibilityKHR",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      variants: [
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_COMPATIBILITY_COMPATIBLE_KHR",
          name: "COMPATIBLE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_COMPATIBILITY_INCOMPATIBLE_KHR",
          name: "INCOMPATIBLE",
          origin: Extension("VK_KHR_acceleration_structure", 151, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkShaderGroupShaderKHR",
      name: "ShaderGroupShaderKHR",
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      variants: [
        Bit(
          original_name: "VK_SHADER_GROUP_SHADER_GENERAL_KHR",
          name: "GENERAL",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_SHADER_GROUP_SHADER_CLOSEST_HIT_KHR",
          name: "CLOSEST_HIT",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_SHADER_GROUP_SHADER_ANY_HIT_KHR",
          name: "ANY_HIT",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_SHADER_GROUP_SHADER_INTERSECTION_KHR",
          name: "INTERSECTION",
          origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
          value: 3,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkMemoryOverallocationBehaviorAMD",
      name: "MemoryOverallocationBehaviorAMD",
      origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
      variants: [
        Bit(
          original_name: "VK_MEMORY_OVERALLOCATION_BEHAVIOR_DEFAULT_AMD",
          name: "DEFAULT",
          origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_MEMORY_OVERALLOCATION_BEHAVIOR_ALLOWED_AMD",
          name: "ALLOWED",
          origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_MEMORY_OVERALLOCATION_BEHAVIOR_DISALLOWED_AMD",
          name: "DISALLOWED",
          origin: Extension("VK_AMD_memory_overallocation_behavior", 190, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkScopeNV",
      name: "ScopeNV",
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
      variants: [
        Bit(
          original_name: "VK_SCOPE_DEVICE_NV",
          name: "DEVICE",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_SCOPE_WORKGROUP_NV",
          name: "WORKGROUP",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_SCOPE_SUBGROUP_NV",
          name: "SUBGROUP",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_SCOPE_QUEUE_FAMILY_NV",
          name: "QUEUE_FAMILY",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 5,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkComponentTypeNV",
      name: "ComponentTypeNV",
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
      variants: [
        Bit(
          original_name: "VK_COMPONENT_TYPE_FLOAT16_NV",
          name: "FLOAT16",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_FLOAT32_NV",
          name: "FLOAT32",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_FLOAT64_NV",
          name: "FLOAT64",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_SINT8_NV",
          name: "SINT8",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_SINT16_NV",
          name: "SINT16",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_SINT32_NV",
          name: "SINT32",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 5,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_SINT64_NV",
          name: "SINT64",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 6,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_UINT8_NV",
          name: "UINT8",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 7,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_UINT16_NV",
          name: "UINT16",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 8,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_UINT32_NV",
          name: "UINT32",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 9,
        ),
        Bit(
          original_name: "VK_COMPONENT_TYPE_UINT64_NV",
          name: "UINT64",
          origin: Extension("VK_NV_cooperative_matrix", 250, false),
          value: 10,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkFullScreenExclusiveEXT",
      name: "FullScreenExclusiveEXT",
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      variants: [
        Bit(
          original_name: "VK_FULL_SCREEN_EXCLUSIVE_DEFAULT_EXT",
          name: "DEFAULT",
          origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_FULL_SCREEN_EXCLUSIVE_ALLOWED_EXT",
          name: "ALLOWED",
          origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_FULL_SCREEN_EXCLUSIVE_DISALLOWED_EXT",
          name: "DISALLOWED",
          origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_FULL_SCREEN_EXCLUSIVE_APPLICATION_CONTROLLED_EXT",
          name: "APPLICATION_CONTROLLED",
          origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
          value: 3,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPerformanceCounterScopeKHR",
      name: "PerformanceCounterScopeKHR",
      origin: Extension("VK_KHR_performance_query", 117, false),
      variants: [
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR",
          name: "COMMAND_BUFFER",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR",
          name: "RENDER_PASS",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR",
          name: "COMMAND",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_QUERY_SCOPE_COMMAND_BUFFER_KHR",
          name: "QUERY_SCOPE_COMMAND_BUFFER",
          origin: Extension("VK_KHR_performance_query", 117, false),
          of: "VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_BUFFER_KHR",
        ),
        Alias(
          original_name: "VK_QUERY_SCOPE_RENDER_PASS_KHR",
          name: "QUERY_SCOPE_RENDER_PASS",
          origin: Extension("VK_KHR_performance_query", 117, false),
          of: "VK_PERFORMANCE_COUNTER_SCOPE_RENDER_PASS_KHR",
        ),
        Alias(
          original_name: "VK_QUERY_SCOPE_COMMAND_KHR",
          name: "QUERY_SCOPE_COMMAND",
          origin: Extension("VK_KHR_performance_query", 117, false),
          of: "VK_PERFORMANCE_COUNTER_SCOPE_COMMAND_KHR",
        ),
      ],
    ),
    Enum(
      original_name: "VkPerformanceCounterUnitKHR",
      name: "PerformanceCounterUnitKHR",
      origin: Extension("VK_KHR_performance_query", 117, false),
      variants: [
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_GENERIC_KHR",
          name: "GENERIC",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_PERCENTAGE_KHR",
          name: "PERCENTAGE",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_NANOSECONDS_KHR",
          name: "NANOSECONDS",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_BYTES_KHR",
          name: "BYTES",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_BYTES_PER_SECOND_KHR",
          name: "BYTES_PER_SECOND",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_KELVIN_KHR",
          name: "KELVIN",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 5,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_WATTS_KHR",
          name: "WATTS",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 6,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_VOLTS_KHR",
          name: "VOLTS",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 7,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_AMPS_KHR",
          name: "AMPS",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 8,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_HERTZ_KHR",
          name: "HERTZ",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 9,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_UNIT_CYCLES_KHR",
          name: "CYCLES",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 10,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPerformanceCounterStorageKHR",
      name: "PerformanceCounterStorageKHR",
      origin: Extension("VK_KHR_performance_query", 117, false),
      variants: [
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_STORAGE_INT32_KHR",
          name: "INT32",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_STORAGE_INT64_KHR",
          name: "INT64",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_STORAGE_UINT32_KHR",
          name: "UINT32",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_STORAGE_UINT64_KHR",
          name: "UINT64",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_STORAGE_FLOAT32_KHR",
          name: "FLOAT32",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_COUNTER_STORAGE_FLOAT64_KHR",
          name: "FLOAT64",
          origin: Extension("VK_KHR_performance_query", 117, false),
          value: 5,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPerformanceConfigurationTypeINTEL",
      name: "PerformanceConfigurationTypeINTEL",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      variants: [
        Bit(
          original_name: "VK_PERFORMANCE_CONFIGURATION_TYPE_COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED_INTEL",
          name: "COMMAND_QUEUE_METRICS_DISCOVERY_ACTIVATED",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 0,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkQueryPoolSamplingModeINTEL",
      name: "QueryPoolSamplingModeINTEL",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      variants: [
        Bit(
          original_name: "VK_QUERY_POOL_SAMPLING_MODE_MANUAL_INTEL",
          name: "MANUAL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 0,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPerformanceOverrideTypeINTEL",
      name: "PerformanceOverrideTypeINTEL",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      variants: [
        Bit(
          original_name: "VK_PERFORMANCE_OVERRIDE_TYPE_NULL_HARDWARE_INTEL",
          name: "NULL_HARDWARE",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_OVERRIDE_TYPE_FLUSH_GPU_CACHES_INTEL",
          name: "FLUSH_GPU_CACHES",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPerformanceParameterTypeINTEL",
      name: "PerformanceParameterTypeINTEL",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      variants: [
        Bit(
          original_name: "VK_PERFORMANCE_PARAMETER_TYPE_HW_COUNTERS_SUPPORTED_INTEL",
          name: "HW_COUNTERS_SUPPORTED",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_PARAMETER_TYPE_STREAM_MARKER_VALID_BITS_INTEL",
          name: "STREAM_MARKER_VALID_BITS",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkPerformanceValueTypeINTEL",
      name: "PerformanceValueTypeINTEL",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      variants: [
        Bit(
          original_name: "VK_PERFORMANCE_VALUE_TYPE_UINT32_INTEL",
          name: "UINT32",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_VALUE_TYPE_UINT64_INTEL",
          name: "UINT64",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_VALUE_TYPE_FLOAT_INTEL",
          name: "FLOAT",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_VALUE_TYPE_BOOL_INTEL",
          name: "BOOL",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_PERFORMANCE_VALUE_TYPE_STRING_INTEL",
          name: "STRING",
          origin: Extension("VK_INTEL_performance_query", 211, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkShaderFloatControlsIndependence",
      name: "ShaderFloatControlsIndependence",
      origin: Vulkan1_2,
      variants: [
        Bit(
          original_name: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY",
          name: "32_BIT_ONLY",
          origin: Vulkan1_2,
          value: 0,
        ),
        Bit(
          original_name: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL",
          name: "ALL",
          origin: Vulkan1_2,
          value: 1,
        ),
        Bit(
          original_name: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE",
          name: "NONE",
          origin: Vulkan1_2,
          value: 2,
        ),
      ],
      aliases: [
        Alias(
          original_name: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY_KHR",
          name: "32_BIT_ONLY_KHR",
          origin: Extension("VK_KHR_shader_float_controls", 198, false),
          of: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_32_BIT_ONLY",
        ),
        Alias(
          original_name: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL_KHR",
          name: "ALL_KHR",
          origin: Extension("VK_KHR_shader_float_controls", 198, false),
          of: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_ALL",
        ),
        Alias(
          original_name: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE_KHR",
          name: "NONE_KHR",
          origin: Extension("VK_KHR_shader_float_controls", 198, false),
          of: "VK_SHADER_FLOAT_CONTROLS_INDEPENDENCE_NONE",
        ),
      ],
    ),
    Enum(
      original_name: "VkPipelineExecutableStatisticFormatKHR",
      name: "PipelineExecutableStatisticFormatKHR",
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      variants: [
        Bit(
          original_name: "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_BOOL32_KHR",
          name: "BOOL32",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_INT64_KHR",
          name: "INT64",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_UINT64_KHR",
          name: "UINT64",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_PIPELINE_EXECUTABLE_STATISTIC_FORMAT_FLOAT64_KHR",
          name: "FLOAT64",
          origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
          value: 3,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkLineRasterizationModeEXT",
      name: "LineRasterizationModeEXT",
      origin: Extension("VK_EXT_line_rasterization", 260, false),
      variants: [
        Bit(
          original_name: "VK_LINE_RASTERIZATION_MODE_DEFAULT_EXT",
          name: "DEFAULT",
          origin: Extension("VK_EXT_line_rasterization", 260, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_EXT",
          name: "RECTANGULAR",
          origin: Extension("VK_EXT_line_rasterization", 260, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_LINE_RASTERIZATION_MODE_BRESENHAM_EXT",
          name: "BRESENHAM",
          origin: Extension("VK_EXT_line_rasterization", 260, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_LINE_RASTERIZATION_MODE_RECTANGULAR_SMOOTH_EXT",
          name: "RECTANGULAR_SMOOTH",
          origin: Extension("VK_EXT_line_rasterization", 260, false),
          value: 3,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkFragmentShadingRateCombinerOpKHR",
      name: "FragmentShadingRateCombinerOpKHR",
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      variants: [
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_KEEP_KHR",
          name: "KEEP",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_REPLACE_KHR",
          name: "REPLACE",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MIN_KHR",
          name: "MIN",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 2,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MAX_KHR",
          name: "MAX",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 3,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_COMBINER_OP_MUL_KHR",
          name: "MUL",
          origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
          value: 4,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkFragmentShadingRateNV",
      name: "FragmentShadingRateNV",
      origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
      variants: [
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_PIXEL_NV",
          name: "1_INVOCATION_PER_PIXEL",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_1X2_PIXELS_NV",
          name: "1_INVOCATION_PER1X2_PIXELS",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X1_PIXELS_NV",
          name: "1_INVOCATION_PER2X1_PIXELS",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 4,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X2_PIXELS_NV",
          name: "1_INVOCATION_PER2X2_PIXELS",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 5,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_2X4_PIXELS_NV",
          name: "1_INVOCATION_PER2X4_PIXELS",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 6,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X2_PIXELS_NV",
          name: "1_INVOCATION_PER4X2_PIXELS",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 9,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_1_INVOCATION_PER_4X4_PIXELS_NV",
          name: "1_INVOCATION_PER4X4_PIXELS",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 10,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_2_INVOCATIONS_PER_PIXEL_NV",
          name: "2_INVOCATIONS_PER_PIXEL",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 11,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_4_INVOCATIONS_PER_PIXEL_NV",
          name: "4_INVOCATIONS_PER_PIXEL",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 12,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_8_INVOCATIONS_PER_PIXEL_NV",
          name: "8_INVOCATIONS_PER_PIXEL",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 13,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_16_INVOCATIONS_PER_PIXEL_NV",
          name: "16_INVOCATIONS_PER_PIXEL",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 14,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_NO_INVOCATIONS_NV",
          name: "NO_INVOCATIONS",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 15,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkFragmentShadingRateTypeNV",
      name: "FragmentShadingRateTypeNV",
      origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
      variants: [
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_TYPE_FRAGMENT_SIZE_NV",
          name: "FRAGMENT_SIZE",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_FRAGMENT_SHADING_RATE_TYPE_ENUMS_NV",
          name: "ENUMS",
          origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkProvokingVertexModeEXT",
      name: "ProvokingVertexModeEXT",
      origin: Extension("VK_EXT_provoking_vertex", 255, false),
      variants: [
        Bit(
          original_name: "VK_PROVOKING_VERTEX_MODE_FIRST_VERTEX_EXT",
          name: "FIRST_VERTEX",
          origin: Extension("VK_EXT_provoking_vertex", 255, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_PROVOKING_VERTEX_MODE_LAST_VERTEX_EXT",
          name: "LAST_VERTEX",
          origin: Extension("VK_EXT_provoking_vertex", 255, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkAccelerationStructureMotionInstanceTypeNV",
      name: "AccelerationStructureMotionInstanceTypeNV",
      origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
      variants: [
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_STATIC_NV",
          name: "STATIC",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_MATRIX_MOTION_NV",
          name: "MATRIX_MOTION",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 1,
        ),
        Bit(
          original_name: "VK_ACCELERATION_STRUCTURE_MOTION_INSTANCE_TYPE_SRT_MOTION_NV",
          name: "SRT_MOTION",
          origin: Extension("VK_NV_ray_tracing_motion_blur", 328, false),
          value: 2,
        ),
      ],
      aliases: [],
    ),
    Enum(
      original_name: "VkQueryResultStatusKHR",
      name: "QueryResultStatusKHR",
      origin: Extension("VK_KHR_video_queue", 24, false),
      variants: [
        Bit(
          original_name: "VK_QUERY_RESULT_STATUS_ERROR_KHR",
          name: "ERROR",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: -1,
        ),
        Bit(
          original_name: "VK_QUERY_RESULT_STATUS_NOT_READY_KHR",
          name: "NOT_READY",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 0,
        ),
        Bit(
          original_name: "VK_QUERY_RESULT_STATUS_COMPLETE_KHR",
          name: "COMPLETE",
          origin: Extension("VK_KHR_video_queue", 24, false),
          value: 1,
        ),
      ],
      aliases: [],
    ),
  ],
  command_aliases: [
    CommandAlias(
      original_name: "vkResetQueryPoolEXT",
      name: "reset_query_pool_ext",
      origin: Extension("VK_EXT_host_query_reset", 262, false),
      of: "vkResetQueryPool",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceFeatures2KHR",
      name: "get_physical_device_features2_khr",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "vkGetPhysicalDeviceFeatures2",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceProperties2KHR",
      name: "get_physical_device_properties2_khr",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "vkGetPhysicalDeviceProperties2",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceFormatProperties2KHR",
      name: "get_physical_device_format_properties2_khr",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "vkGetPhysicalDeviceFormatProperties2",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceImageFormatProperties2KHR",
      name: "get_physical_device_image_format_properties2_khr",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "vkGetPhysicalDeviceImageFormatProperties2",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceQueueFamilyProperties2KHR",
      name: "get_physical_device_queue_family_properties2_khr",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "vkGetPhysicalDeviceQueueFamilyProperties2",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceMemoryProperties2KHR",
      name: "get_physical_device_memory_properties2_khr",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "vkGetPhysicalDeviceMemoryProperties2",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceSparseImageFormatProperties2KHR",
      name: "get_physical_device_sparse_image_format_properties2_khr",
      origin: Extension("VK_KHR_get_physical_device_properties2", 60, false),
      of: "vkGetPhysicalDeviceSparseImageFormatProperties2",
    ),
    CommandAlias(
      original_name: "vkTrimCommandPoolKHR",
      name: "trim_command_pool_khr",
      origin: Extension("VK_KHR_maintenance1", 70, false),
      of: "vkTrimCommandPool",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceExternalBufferPropertiesKHR",
      name: "get_physical_device_external_buffer_properties_khr",
      origin: Extension("VK_KHR_external_memory_capabilities", 72, false),
      of: "vkGetPhysicalDeviceExternalBufferProperties",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR",
      name: "get_physical_device_external_semaphore_properties_khr",
      origin: Extension("VK_KHR_external_semaphore_capabilities", 77, false),
      of: "vkGetPhysicalDeviceExternalSemaphoreProperties",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceExternalFencePropertiesKHR",
      name: "get_physical_device_external_fence_properties_khr",
      origin: Extension("VK_KHR_external_fence_capabilities", 113, false),
      of: "vkGetPhysicalDeviceExternalFenceProperties",
    ),
    CommandAlias(
      original_name: "vkEnumeratePhysicalDeviceGroupsKHR",
      name: "enumerate_physical_device_groups_khr",
      origin: Extension("VK_KHR_device_group_creation", 71, false),
      of: "vkEnumeratePhysicalDeviceGroups",
    ),
    CommandAlias(
      original_name: "vkGetDeviceGroupPeerMemoryFeaturesKHR",
      name: "get_device_group_peer_memory_features_khr",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "vkGetDeviceGroupPeerMemoryFeatures",
    ),
    CommandAlias(
      original_name: "vkBindBufferMemory2KHR",
      name: "bind_buffer_memory2_khr",
      origin: Extension("VK_KHR_bind_memory2", 158, false),
      of: "vkBindBufferMemory2",
    ),
    CommandAlias(
      original_name: "vkBindImageMemory2KHR",
      name: "bind_image_memory2_khr",
      origin: Extension("VK_KHR_bind_memory2", 158, false),
      of: "vkBindImageMemory2",
    ),
    CommandAlias(
      original_name: "vkCmdSetDeviceMaskKHR",
      name: "cmd_set_device_mask_khr",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "vkCmdSetDeviceMask",
    ),
    CommandAlias(
      original_name: "vkCmdDispatchBaseKHR",
      name: "cmd_dispatch_base_khr",
      origin: Extension("VK_KHR_device_group", 61, false),
      of: "vkCmdDispatchBase",
    ),
    CommandAlias(
      original_name: "vkCreateDescriptorUpdateTemplateKHR",
      name: "create_descriptor_update_template_khr",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      of: "vkCreateDescriptorUpdateTemplate",
    ),
    CommandAlias(
      original_name: "vkDestroyDescriptorUpdateTemplateKHR",
      name: "destroy_descriptor_update_template_khr",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      of: "vkDestroyDescriptorUpdateTemplate",
    ),
    CommandAlias(
      original_name: "vkUpdateDescriptorSetWithTemplateKHR",
      name: "update_descriptor_set_with_template_khr",
      origin: Extension("VK_KHR_descriptor_update_template", 86, false),
      of: "vkUpdateDescriptorSetWithTemplate",
    ),
    CommandAlias(
      original_name: "vkGetBufferMemoryRequirements2KHR",
      name: "get_buffer_memory_requirements2_khr",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      of: "vkGetBufferMemoryRequirements2",
    ),
    CommandAlias(
      original_name: "vkGetImageMemoryRequirements2KHR",
      name: "get_image_memory_requirements2_khr",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      of: "vkGetImageMemoryRequirements2",
    ),
    CommandAlias(
      original_name: "vkGetImageSparseMemoryRequirements2KHR",
      name: "get_image_sparse_memory_requirements2_khr",
      origin: Extension("VK_KHR_get_memory_requirements2", 147, false),
      of: "vkGetImageSparseMemoryRequirements2",
    ),
    CommandAlias(
      original_name: "vkGetDeviceBufferMemoryRequirementsKHR",
      name: "get_device_buffer_memory_requirements_khr",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      of: "vkGetDeviceBufferMemoryRequirements",
    ),
    CommandAlias(
      original_name: "vkGetDeviceImageMemoryRequirementsKHR",
      name: "get_device_image_memory_requirements_khr",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      of: "vkGetDeviceImageMemoryRequirements",
    ),
    CommandAlias(
      original_name: "vkGetDeviceImageSparseMemoryRequirementsKHR",
      name: "get_device_image_sparse_memory_requirements_khr",
      origin: Extension("VK_KHR_maintenance4", 414, false),
      of: "vkGetDeviceImageSparseMemoryRequirements",
    ),
    CommandAlias(
      original_name: "vkCreateSamplerYcbcrConversionKHR",
      name: "create_sampler_ycbcr_conversion_khr",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "vkCreateSamplerYcbcrConversion",
    ),
    CommandAlias(
      original_name: "vkDestroySamplerYcbcrConversionKHR",
      name: "destroy_sampler_ycbcr_conversion_khr",
      origin: Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
      of: "vkDestroySamplerYcbcrConversion",
    ),
    CommandAlias(
      original_name: "vkGetDescriptorSetLayoutSupportKHR",
      name: "get_descriptor_set_layout_support_khr",
      origin: Extension("VK_KHR_maintenance3", 169, false),
      of: "vkGetDescriptorSetLayoutSupport",
    ),
    CommandAlias(
      original_name: "vkCreateRenderPass2KHR",
      name: "create_render_pass2_khr",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "vkCreateRenderPass2",
    ),
    CommandAlias(
      original_name: "vkCmdBeginRenderPass2KHR",
      name: "cmd_begin_render_pass2_khr",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "vkCmdBeginRenderPass2",
    ),
    CommandAlias(
      original_name: "vkCmdNextSubpass2KHR",
      name: "cmd_next_subpass2_khr",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "vkCmdNextSubpass2",
    ),
    CommandAlias(
      original_name: "vkCmdEndRenderPass2KHR",
      name: "cmd_end_render_pass2_khr",
      origin: Extension("VK_KHR_create_renderpass2", 110, false),
      of: "vkCmdEndRenderPass2",
    ),
    CommandAlias(
      original_name: "vkGetSemaphoreCounterValueKHR",
      name: "get_semaphore_counter_value_khr",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "vkGetSemaphoreCounterValue",
    ),
    CommandAlias(
      original_name: "vkWaitSemaphoresKHR",
      name: "wait_semaphores_khr",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "vkWaitSemaphores",
    ),
    CommandAlias(
      original_name: "vkSignalSemaphoreKHR",
      name: "signal_semaphore_khr",
      origin: Extension("VK_KHR_timeline_semaphore", 208, false),
      of: "vkSignalSemaphore",
    ),
    CommandAlias(
      original_name: "vkCmdDrawIndirectCountKHR",
      name: "cmd_draw_indirect_count_khr",
      origin: Extension("VK_KHR_draw_indirect_count", 170, false),
      of: "vkCmdDrawIndirectCount",
    ),
    CommandAlias(
      original_name: "vkCmdDrawIndirectCountAMD",
      name: "cmd_draw_indirect_count_amd",
      origin: Extension("VK_AMD_draw_indirect_count", 34, false),
      of: "vkCmdDrawIndirectCount",
    ),
    CommandAlias(
      original_name: "vkCmdDrawIndexedIndirectCountKHR",
      name: "cmd_draw_indexed_indirect_count_khr",
      origin: Extension("VK_KHR_draw_indirect_count", 170, false),
      of: "vkCmdDrawIndexedIndirectCount",
    ),
    CommandAlias(
      original_name: "vkCmdDrawIndexedIndirectCountAMD",
      name: "cmd_draw_indexed_indirect_count_amd",
      origin: Extension("VK_AMD_draw_indirect_count", 34, false),
      of: "vkCmdDrawIndexedIndirectCount",
    ),
    CommandAlias(
      original_name: "vkGetRayTracingShaderGroupHandlesNV",
      name: "get_ray_tracing_shader_group_handles_nv",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      of: "vkGetRayTracingShaderGroupHandlesKHR",
    ),
    CommandAlias(
      original_name: "vkGetBufferOpaqueCaptureAddressKHR",
      name: "get_buffer_opaque_capture_address_khr",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      of: "vkGetBufferOpaqueCaptureAddress",
    ),
    CommandAlias(
      original_name: "vkGetBufferDeviceAddressKHR",
      name: "get_buffer_device_address_khr",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      of: "vkGetBufferDeviceAddress",
    ),
    CommandAlias(
      original_name: "vkGetBufferDeviceAddressEXT",
      name: "get_buffer_device_address_ext",
      origin: Extension("VK_EXT_buffer_device_address", 245, false),
      of: "vkGetBufferDeviceAddress",
    ),
    CommandAlias(
      original_name: "vkGetDeviceMemoryOpaqueCaptureAddressKHR",
      name: "get_device_memory_opaque_capture_address_khr",
      origin: Extension("VK_KHR_buffer_device_address", 258, false),
      of: "vkGetDeviceMemoryOpaqueCaptureAddress",
    ),
    CommandAlias(
      original_name: "vkGetPhysicalDeviceToolPropertiesEXT",
      name: "get_physical_device_tool_properties_ext",
      origin: Extension("VK_EXT_tooling_info", 246, false),
      of: "vkGetPhysicalDeviceToolProperties",
    ),
    CommandAlias(
      original_name: "vkCmdSetCullModeEXT",
      name: "cmd_set_cull_mode_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetCullMode",
    ),
    CommandAlias(
      original_name: "vkCmdSetFrontFaceEXT",
      name: "cmd_set_front_face_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetFrontFace",
    ),
    CommandAlias(
      original_name: "vkCmdSetPrimitiveTopologyEXT",
      name: "cmd_set_primitive_topology_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetPrimitiveTopology",
    ),
    CommandAlias(
      original_name: "vkCmdSetViewportWithCountEXT",
      name: "cmd_set_viewport_with_count_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetViewportWithCount",
    ),
    CommandAlias(
      original_name: "vkCmdSetScissorWithCountEXT",
      name: "cmd_set_scissor_with_count_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetScissorWithCount",
    ),
    CommandAlias(
      original_name: "vkCmdBindVertexBuffers2EXT",
      name: "cmd_bind_vertex_buffers2_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdBindVertexBuffers2",
    ),
    CommandAlias(
      original_name: "vkCmdSetDepthTestEnableEXT",
      name: "cmd_set_depth_test_enable_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetDepthTestEnable",
    ),
    CommandAlias(
      original_name: "vkCmdSetDepthWriteEnableEXT",
      name: "cmd_set_depth_write_enable_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetDepthWriteEnable",
    ),
    CommandAlias(
      original_name: "vkCmdSetDepthCompareOpEXT",
      name: "cmd_set_depth_compare_op_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetDepthCompareOp",
    ),
    CommandAlias(
      original_name: "vkCmdSetDepthBoundsTestEnableEXT",
      name: "cmd_set_depth_bounds_test_enable_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetDepthBoundsTestEnable",
    ),
    CommandAlias(
      original_name: "vkCmdSetStencilTestEnableEXT",
      name: "cmd_set_stencil_test_enable_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetStencilTestEnable",
    ),
    CommandAlias(
      original_name: "vkCmdSetStencilOpEXT",
      name: "cmd_set_stencil_op_ext",
      origin: Extension("VK_EXT_extended_dynamic_state", 268, false),
      of: "vkCmdSetStencilOp",
    ),
    CommandAlias(
      original_name: "vkCmdSetRasterizerDiscardEnableEXT",
      name: "cmd_set_rasterizer_discard_enable_ext",
      origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
      of: "vkCmdSetRasterizerDiscardEnable",
    ),
    CommandAlias(
      original_name: "vkCmdSetDepthBiasEnableEXT",
      name: "cmd_set_depth_bias_enable_ext",
      origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
      of: "vkCmdSetDepthBiasEnable",
    ),
    CommandAlias(
      original_name: "vkCmdSetPrimitiveRestartEnableEXT",
      name: "cmd_set_primitive_restart_enable_ext",
      origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
      of: "vkCmdSetPrimitiveRestartEnable",
    ),
    CommandAlias(
      original_name: "vkCreatePrivateDataSlotEXT",
      name: "create_private_data_slot_ext",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "vkCreatePrivateDataSlot",
    ),
    CommandAlias(
      original_name: "vkDestroyPrivateDataSlotEXT",
      name: "destroy_private_data_slot_ext",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "vkDestroyPrivateDataSlot",
    ),
    CommandAlias(
      original_name: "vkSetPrivateDataEXT",
      name: "set_private_data_ext",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "vkSetPrivateData",
    ),
    CommandAlias(
      original_name: "vkGetPrivateDataEXT",
      name: "get_private_data_ext",
      origin: Extension("VK_EXT_private_data", 296, false),
      of: "vkGetPrivateData",
    ),
    CommandAlias(
      original_name: "vkCmdCopyBuffer2KHR",
      name: "cmd_copy_buffer2_khr",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "vkCmdCopyBuffer2",
    ),
    CommandAlias(
      original_name: "vkCmdCopyImage2KHR",
      name: "cmd_copy_image2_khr",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "vkCmdCopyImage2",
    ),
    CommandAlias(
      original_name: "vkCmdBlitImage2KHR",
      name: "cmd_blit_image2_khr",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "vkCmdBlitImage2",
    ),
    CommandAlias(
      original_name: "vkCmdCopyBufferToImage2KHR",
      name: "cmd_copy_buffer_to_image2_khr",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "vkCmdCopyBufferToImage2",
    ),
    CommandAlias(
      original_name: "vkCmdCopyImageToBuffer2KHR",
      name: "cmd_copy_image_to_buffer2_khr",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "vkCmdCopyImageToBuffer2",
    ),
    CommandAlias(
      original_name: "vkCmdResolveImage2KHR",
      name: "cmd_resolve_image2_khr",
      origin: Extension("VK_KHR_copy_commands2", 338, false),
      of: "vkCmdResolveImage2",
    ),
    CommandAlias(
      original_name: "vkCmdSetEvent2KHR",
      name: "cmd_set_event2_khr",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "vkCmdSetEvent2",
    ),
    CommandAlias(
      original_name: "vkCmdResetEvent2KHR",
      name: "cmd_reset_event2_khr",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "vkCmdResetEvent2",
    ),
    CommandAlias(
      original_name: "vkCmdWaitEvents2KHR",
      name: "cmd_wait_events2_khr",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "vkCmdWaitEvents2",
    ),
    CommandAlias(
      original_name: "vkCmdPipelineBarrier2KHR",
      name: "cmd_pipeline_barrier2_khr",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "vkCmdPipelineBarrier2",
    ),
    CommandAlias(
      original_name: "vkQueueSubmit2KHR",
      name: "queue_submit2_khr",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "vkQueueSubmit2",
    ),
    CommandAlias(
      original_name: "vkCmdWriteTimestamp2KHR",
      name: "cmd_write_timestamp2_khr",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      of: "vkCmdWriteTimestamp2",
    ),
    CommandAlias(
      original_name: "vkCmdBeginRenderingKHR",
      name: "cmd_begin_rendering_khr",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "vkCmdBeginRendering",
    ),
    CommandAlias(
      original_name: "vkCmdEndRenderingKHR",
      name: "cmd_end_rendering_khr",
      origin: Extension("VK_KHR_dynamic_rendering", 45, false),
      of: "vkCmdEndRendering",
    ),
  ],
  functions: [
    Function(
      original_name: "vkCreateInstance",
      rename: None,
      name: "create_instance",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_LAYER_NOT_PRESENT",
        "VK_ERROR_EXTENSION_NOT_PRESENT",
        "VK_ERROR_INCOMPATIBLE_DRIVER",
      ],
      arguments: [
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkInstanceCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInstance",
          name: "p_instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkInstance")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyInstance",
      rename: None,
      name: "destroy_instance",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkInstance"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEnumeratePhysicalDevices",
      rename: None,
      name: "enumerate_physical_devices",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPhysicalDeviceCount",
          name: "p_physical_device_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPhysicalDevices",
          name: "p_physical_devices",
          len: Some("pPhysicalDeviceCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPhysicalDevice"), Variable("pPhysicalDeviceCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeviceProcAddr",
      rename: None,
      name: "get_device_proc_addr",
      origin: Vulkan1_0,
      return_type: Named("PFN_vkVoidFunction"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pName",
          name: "p_name",
          len: Some("null-terminated"),
          no_auto_validity: false,
          optionality: No,
          ty: NullTerminatedString(Const),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetInstanceProcAddr",
      rename: None,
      name: "get_instance_proc_addr",
      origin: Vulkan1_0,
      return_type: Named("PFN_vkVoidFunction"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pName",
          name: "p_name",
          len: Some("null-terminated"),
          no_auto_validity: false,
          optionality: No,
          ty: NullTerminatedString(Const),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceProperties",
      rename: None,
      name: "get_physical_device_properties",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPhysicalDeviceProperties")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceQueueFamilyProperties",
      rename: None,
      name: "get_physical_device_queue_family_properties",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pQueueFamilyPropertyCount",
          name: "p_queue_family_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pQueueFamilyProperties",
          name: "p_queue_family_properties",
          len: Some("pQueueFamilyPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkQueueFamilyProperties"), Variable("pQueueFamilyPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceMemoryProperties",
      rename: None,
      name: "get_physical_device_memory_properties",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryProperties",
          name: "p_memory_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPhysicalDeviceMemoryProperties")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceFeatures",
      rename: None,
      name: "get_physical_device_features",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFeatures",
          name: "p_features",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPhysicalDeviceFeatures")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceFormatProperties",
      rename: None,
      name: "get_physical_device_format_properties",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "format",
          name: "format",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFormat"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFormatProperties",
          name: "p_format_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkFormatProperties")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceImageFormatProperties",
      rename: None,
      name: "get_physical_device_image_format_properties",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_FORMAT_NOT_SUPPORTED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "format",
          name: "format",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFormat"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "type",
          name: "type_",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageType"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "tiling",
          name: "tiling",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageTiling"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "usage",
          name: "usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageUsageFlags"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkImageCreateFlags"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImageFormatProperties",
          name: "p_image_format_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkImageFormatProperties")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDevice",
      rename: None,
      name: "create_device",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_EXTENSION_NOT_PRESENT",
        "VK_ERROR_FEATURE_NOT_PRESENT",
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDeviceCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDevice",
          name: "p_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDevice")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyDevice",
      rename: None,
      name: "destroy_device",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDevice"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEnumerateInstanceVersion",
      rename: None,
      name: "enumerate_instance_version",
      origin: Vulkan1_1,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "pApiVersion",
          name: "p_api_version",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEnumerateInstanceLayerProperties",
      rename: None,
      name: "enumerate_instance_layer_properties",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkLayerProperties"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEnumerateInstanceExtensionProperties",
      rename: None,
      name: "enumerate_instance_extension_properties",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_LAYER_NOT_PRESENT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "pLayerName",
          name: "p_layer_name",
          len: Some("null-terminated"),
          no_auto_validity: false,
          optionality: Yes,
          ty: NullTerminatedString(Const),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkExtensionProperties"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEnumerateDeviceLayerProperties",
      rename: None,
      name: "enumerate_device_layer_properties",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkLayerProperties"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEnumerateDeviceExtensionProperties",
      rename: None,
      name: "enumerate_device_extension_properties",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_LAYER_NOT_PRESENT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pLayerName",
          name: "p_layer_name",
          len: Some("null-terminated"),
          no_auto_validity: false,
          optionality: Yes,
          ty: NullTerminatedString(Const),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkExtensionProperties"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeviceQueue",
      rename: None,
      name: "get_device_queue",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueIndex",
          name: "queue_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pQueue",
          name: "p_queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkQueue")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueSubmit",
      rename: None,
      name: "queue_submit",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "submitCount",
          name: "submit_count",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSubmits",
          name: "p_submits",
          len: Some("submitCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkSubmitInfo"), Variable("submitCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fence",
          name: "fence",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkFence"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueWaitIdle",
      rename: None,
      name: "queue_wait_idle",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDeviceWaitIdle",
      rename: None,
      name: "device_wait_idle",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAllocateMemory",
      rename: None,
      name: "allocate_memory",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
        "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocateInfo",
          name: "p_allocate_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkMemoryAllocateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemory",
          name: "p_memory",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDeviceMemory")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkFreeMemory",
      rename: None,
      name: "free_memory",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memory",
          name: "memory",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDeviceMemory"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkMapMemory",
      rename: None,
      name: "map_memory",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_MEMORY_MAP_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memory",
          name: "memory",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceMemory"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "offset",
          name: "offset",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceSize"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "size",
          name: "size",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceSize"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkMemoryMapFlags"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "ppData",
          name: "pp_data",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Pointer(Mutable, Native(Void))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkUnmapMemory",
      rename: None,
      name: "unmap_memory",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memory",
          name: "memory",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceMemory"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkFlushMappedMemoryRanges",
      rename: None,
      name: "flush_mapped_memory_ranges",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memoryRangeCount",
          name: "memory_range_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRanges",
          name: "p_memory_ranges",
          len: Some("memoryRangeCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkMappedMemoryRange"), Variable("memoryRangeCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkInvalidateMappedMemoryRanges",
      rename: None,
      name: "invalidate_mapped_memory_ranges",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memoryRangeCount",
          name: "memory_range_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRanges",
          name: "p_memory_ranges",
          len: Some("memoryRangeCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkMappedMemoryRange"), Variable("memoryRangeCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeviceMemoryCommitment",
      rename: None,
      name: "get_device_memory_commitment",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memory",
          name: "memory",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceMemory"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCommittedMemoryInBytes",
          name: "p_committed_memory_in_bytes",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDeviceSize")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetBufferMemoryRequirements",
      rename: None,
      name: "get_buffer_memory_requirements",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "buffer",
          name: "buffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkBuffer"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRequirements",
          name: "p_memory_requirements",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryRequirements")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkBindBufferMemory",
      rename: None,
      name: "bind_buffer_memory",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "buffer",
          name: "buffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkBuffer"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "memory",
          name: "memory",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceMemory"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memoryOffset",
          name: "memory_offset",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceSize"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetImageMemoryRequirements",
      rename: None,
      name: "get_image_memory_requirements",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "image",
          name: "image",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImage"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRequirements",
          name: "p_memory_requirements",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryRequirements")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkBindImageMemory",
      rename: None,
      name: "bind_image_memory",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "image",
          name: "image",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImage"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "memory",
          name: "memory",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceMemory"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memoryOffset",
          name: "memory_offset",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceSize"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetImageSparseMemoryRequirements",
      rename: None,
      name: "get_image_sparse_memory_requirements",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "image",
          name: "image",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImage"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSparseMemoryRequirementCount",
          name: "p_sparse_memory_requirement_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSparseMemoryRequirements",
          name: "p_sparse_memory_requirements",
          len: Some("pSparseMemoryRequirementCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkSparseImageMemoryRequirements"), Variable("pSparseMemoryRequirementCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSparseImageFormatProperties",
      rename: None,
      name: "get_physical_device_sparse_image_format_properties",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "format",
          name: "format",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFormat"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "type",
          name: "type_",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageType"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "samples",
          name: "samples",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSampleCountFlagBits"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "usage",
          name: "usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageUsageFlags"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "tiling",
          name: "tiling",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageTiling"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkSparseImageFormatProperties"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueBindSparse",
      rename: None,
      name: "queue_bind_sparse",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "bindInfoCount",
          name: "bind_info_count",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBindInfo",
          name: "p_bind_info",
          len: Some("bindInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkBindSparseInfo"), Variable("bindInfoCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fence",
          name: "fence",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkFence"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateFence",
      rename: None,
      name: "create_fence",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkFenceCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFence",
          name: "p_fence",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkFence")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyFence",
      rename: None,
      name: "destroy_fence",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fence",
          name: "fence",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkFence"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkResetFences",
      rename: None,
      name: "reset_fences",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fenceCount",
          name: "fence_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFences",
          name: "p_fences",
          len: Some("fenceCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkFence"), Variable("fenceCount")),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetFenceStatus",
      rename: None,
      name: "get_fence_status",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_NOT_READY",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fence",
          name: "fence",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFence"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkWaitForFences",
      rename: None,
      name: "wait_for_fences",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_TIMEOUT",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fenceCount",
          name: "fence_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFences",
          name: "p_fences",
          len: Some("fenceCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkFence"), Variable("fenceCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "waitAll",
          name: "wait_all",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkBool32"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "timeout",
          name: "timeout",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateSemaphore",
      rename: None,
      name: "create_semaphore",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSemaphoreCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSemaphore",
          name: "p_semaphore",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSemaphore")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroySemaphore",
      rename: None,
      name: "destroy_semaphore",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "semaphore",
          name: "semaphore",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkSemaphore"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateEvent",
      rename: None,
      name: "create_event",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkEventCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pEvent",
          name: "p_event",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkEvent")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyEvent",
      rename: None,
      name: "destroy_event",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "event",
          name: "event",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkEvent"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetEventStatus",
      rename: None,
      name: "get_event_status",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_EVENT_SET",
        "VK_EVENT_RESET",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "event",
          name: "event",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkEvent"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkSetEvent",
      rename: None,
      name: "set_event",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "event",
          name: "event",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkEvent"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkResetEvent",
      rename: None,
      name: "reset_event",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "event",
          name: "event",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkEvent"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateQueryPool",
      rename: None,
      name: "create_query_pool",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkQueryPoolCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pQueryPool",
          name: "p_query_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkQueryPool")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyQueryPool",
      rename: None,
      name: "destroy_query_pool",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queryPool",
          name: "query_pool",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkQueryPool"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetQueryPoolResults",
      rename: None,
      name: "get_query_pool_results",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_NOT_READY",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queryPool",
          name: "query_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueryPool"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "firstQuery",
          name: "first_query",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queryCount",
          name: "query_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dataSize",
          name: "data_size",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(USize),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: Some("dataSize"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Native(Void), Variable("dataSize")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "stride",
          name: "stride",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceSize"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkQueryResultFlags"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkResetQueryPool",
      rename: None,
      name: "reset_query_pool",
      origin: Vulkan1_2,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queryPool",
          name: "query_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueryPool"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "firstQuery",
          name: "first_query",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queryCount",
          name: "query_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkResetQueryPoolEXT",
      ],
    ),
    Function(
      original_name: "vkCreateBuffer",
      rename: None,
      name: "create_buffer",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkBufferCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBuffer",
          name: "p_buffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkBuffer")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyBuffer",
      rename: None,
      name: "destroy_buffer",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "buffer",
          name: "buffer",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkBuffer"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateBufferView",
      rename: None,
      name: "create_buffer_view",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkBufferViewCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pView",
          name: "p_view",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkBufferView")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyBufferView",
      rename: None,
      name: "destroy_buffer_view",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "bufferView",
          name: "buffer_view",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkBufferView"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateImage",
      rename: None,
      name: "create_image",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImageCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImage",
          name: "p_image",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkImage")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyImage",
      rename: None,
      name: "destroy_image",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "image",
          name: "image",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkImage"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetImageSubresourceLayout",
      rename: None,
      name: "get_image_subresource_layout",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "image",
          name: "image",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImage"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSubresource",
          name: "p_subresource",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImageSubresource")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pLayout",
          name: "p_layout",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSubresourceLayout")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateImageView",
      rename: None,
      name: "create_image_view",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImageViewCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pView",
          name: "p_view",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkImageView")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyImageView",
      rename: None,
      name: "destroy_image_view",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "imageView",
          name: "image_view",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkImageView"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateShaderModule",
      rename: None,
      name: "create_shader_module",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_SHADER_NV",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkShaderModuleCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pShaderModule",
          name: "p_shader_module",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkShaderModule")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyShaderModule",
      rename: None,
      name: "destroy_shader_module",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "shaderModule",
          name: "shader_module",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkShaderModule"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreatePipelineCache",
      rename: None,
      name: "create_pipeline_cache",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPipelineCacheCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPipelineCache",
          name: "p_pipeline_cache",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPipelineCache")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyPipelineCache",
      rename: None,
      name: "destroy_pipeline_cache",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipelineCache",
          name: "pipeline_cache",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPipelineCache"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPipelineCacheData",
      rename: None,
      name: "get_pipeline_cache_data",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipelineCache",
          name: "pipeline_cache",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPipelineCache"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDataSize",
          name: "p_data_size",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(USize)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: Some("pDataSize"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Native(Void), Variable("pDataSize")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkMergePipelineCaches",
      rename: None,
      name: "merge_pipeline_caches",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dstCache",
          name: "dst_cache",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPipelineCache"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "srcCacheCount",
          name: "src_cache_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSrcCaches",
          name: "p_src_caches",
          len: Some("srcCacheCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkPipelineCache"), Variable("srcCacheCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateGraphicsPipelines",
      rename: None,
      name: "create_graphics_pipelines",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_PIPELINE_COMPILE_REQUIRED_EXT",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_SHADER_NV",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipelineCache",
          name: "pipeline_cache",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPipelineCache"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "createInfoCount",
          name: "create_info_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfos",
          name: "p_create_infos",
          len: Some("createInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkGraphicsPipelineCreateInfo"), Variable("createInfoCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPipelines",
          name: "p_pipelines",
          len: Some("createInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Named("VkPipeline"), Variable("createInfoCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateComputePipelines",
      rename: None,
      name: "create_compute_pipelines",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_PIPELINE_COMPILE_REQUIRED_EXT",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_SHADER_NV",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipelineCache",
          name: "pipeline_cache",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPipelineCache"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "createInfoCount",
          name: "create_info_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfos",
          name: "p_create_infos",
          len: Some("createInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkComputePipelineCreateInfo"), Variable("createInfoCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPipelines",
          name: "p_pipelines",
          len: Some("createInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Named("VkPipeline"), Variable("createInfoCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeviceSubpassShadingMaxWorkgroupSizeHUAWEI",
      rename: None,
      name: "get_device_subpass_shading_max_workgroup_size_huawei",
      origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "renderpass",
          name: "renderpass",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkRenderPass"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMaxWorkgroupSize",
          name: "p_max_workgroup_size",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkExtent2D")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyPipeline",
      rename: None,
      name: "destroy_pipeline",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipeline",
          name: "pipeline",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPipeline"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreatePipelineLayout",
      rename: None,
      name: "create_pipeline_layout",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPipelineLayoutCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPipelineLayout",
          name: "p_pipeline_layout",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPipelineLayout")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyPipelineLayout",
      rename: None,
      name: "destroy_pipeline_layout",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipelineLayout",
          name: "pipeline_layout",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPipelineLayout"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateSampler",
      rename: None,
      name: "create_sampler",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSamplerCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSampler",
          name: "p_sampler",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSampler")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroySampler",
      rename: None,
      name: "destroy_sampler",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "sampler",
          name: "sampler",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkSampler"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDescriptorSetLayout",
      rename: None,
      name: "create_descriptor_set_layout",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDescriptorSetLayoutCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSetLayout",
          name: "p_set_layout",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDescriptorSetLayout")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyDescriptorSetLayout",
      rename: None,
      name: "destroy_descriptor_set_layout",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "descriptorSetLayout",
          name: "descriptor_set_layout",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDescriptorSetLayout"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDescriptorPool",
      rename: None,
      name: "create_descriptor_pool",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_FRAGMENTATION_EXT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDescriptorPoolCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDescriptorPool",
          name: "p_descriptor_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDescriptorPool")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyDescriptorPool",
      rename: None,
      name: "destroy_descriptor_pool",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "descriptorPool",
          name: "descriptor_pool",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDescriptorPool"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkResetDescriptorPool",
      rename: None,
      name: "reset_descriptor_pool",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "descriptorPool",
          name: "descriptor_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDescriptorPool"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDescriptorPoolResetFlags"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAllocateDescriptorSets",
      rename: None,
      name: "allocate_descriptor_sets",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_FRAGMENTED_POOL",
        "VK_ERROR_OUT_OF_POOL_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocateInfo",
          name: "p_allocate_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDescriptorSetAllocateInfo")),
          externally_synced: Resolve(Variable("pAllocateInfo"), Variable("descriptorPool")),
        ),
        FunctionArgument(
          original_name: "pDescriptorSets",
          name: "p_descriptor_sets",
          len: Some("pAllocateInfo->descriptorSetCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Named("VkDescriptorSet"), Resolve(Variable("pAllocateInfo"), Variable("descriptorSetCount"))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkFreeDescriptorSets",
      rename: None,
      name: "free_descriptor_sets",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "descriptorPool",
          name: "descriptor_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDescriptorPool"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "descriptorSetCount",
          name: "descriptor_set_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDescriptorSets",
          name: "p_descriptor_sets",
          len: Some("descriptorSetCount"),
          no_auto_validity: true,
          optionality: No,
          ty: Slice(Const, Named("VkDescriptorSet"), Variable("descriptorSetCount")),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkUpdateDescriptorSets",
      rename: None,
      name: "update_descriptor_sets",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "descriptorWriteCount",
          name: "descriptor_write_count",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDescriptorWrites",
          name: "p_descriptor_writes",
          len: Some("descriptorWriteCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkWriteDescriptorSet"), Variable("descriptorWriteCount")),
          externally_synced: ForEach(Variable("pDescriptorWrites"), Variable("dstSet")),
        ),
        FunctionArgument(
          original_name: "descriptorCopyCount",
          name: "descriptor_copy_count",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDescriptorCopies",
          name: "p_descriptor_copies",
          len: Some("descriptorCopyCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkCopyDescriptorSet"), Variable("descriptorCopyCount")),
          externally_synced: ForEach(Variable("pDescriptorCopies"), Variable("dstSet")),
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateFramebuffer",
      rename: None,
      name: "create_framebuffer",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkFramebufferCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFramebuffer",
          name: "p_framebuffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkFramebuffer")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyFramebuffer",
      rename: None,
      name: "destroy_framebuffer",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "framebuffer",
          name: "framebuffer",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkFramebuffer"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateRenderPass",
      rename: None,
      name: "create_render_pass",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkRenderPassCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pRenderPass",
          name: "p_render_pass",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkRenderPass")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyRenderPass",
      rename: None,
      name: "destroy_render_pass",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "renderPass",
          name: "render_pass",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkRenderPass"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetRenderAreaGranularity",
      rename: None,
      name: "get_render_area_granularity",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "renderPass",
          name: "render_pass",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkRenderPass"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGranularity",
          name: "p_granularity",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkExtent2D")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateCommandPool",
      rename: None,
      name: "create_command_pool",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkCommandPoolCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCommandPool",
          name: "p_command_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkCommandPool")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyCommandPool",
      rename: None,
      name: "destroy_command_pool",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "commandPool",
          name: "command_pool",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkCommandPool"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkResetCommandPool",
      rename: None,
      name: "reset_command_pool",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "commandPool",
          name: "command_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkCommandPool"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkCommandPoolResetFlags"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAllocateCommandBuffers",
      rename: None,
      name: "allocate_command_buffers",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocateInfo",
          name: "p_allocate_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkCommandBufferAllocateInfo")),
          externally_synced: Resolve(Variable("pAllocateInfo"), Variable("commandPool")),
        ),
        FunctionArgument(
          original_name: "pCommandBuffers",
          name: "p_command_buffers",
          len: Some("pAllocateInfo->commandBufferCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Named("VkCommandBuffer"), Resolve(Variable("pAllocateInfo"), Variable("commandBufferCount"))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkFreeCommandBuffers",
      rename: None,
      name: "free_command_buffers",
      origin: Vulkan1_0,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "commandPool",
          name: "command_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkCommandPool"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "commandBufferCount",
          name: "command_buffer_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCommandBuffers",
          name: "p_command_buffers",
          len: Some("commandBufferCount"),
          no_auto_validity: true,
          optionality: No,
          ty: Slice(Const, Named("VkCommandBuffer"), Variable("commandBufferCount")),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkBeginCommandBuffer",
      rename: None,
      name: "begin_command_buffer",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "commandBuffer",
          name: "command_buffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkCommandBuffer"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pBeginInfo",
          name: "p_begin_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkCommandBufferBeginInfo")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEndCommandBuffer",
      rename: None,
      name: "end_command_buffer",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "commandBuffer",
          name: "command_buffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkCommandBuffer"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkResetCommandBuffer",
      rename: None,
      name: "reset_command_buffer",
      origin: Vulkan1_0,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "commandBuffer",
          name: "command_buffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkCommandBuffer"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkCommandBufferResetFlags"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateAndroidSurfaceKHR",
      rename: None,
      name: "create_android_surface_khr",
      origin: Extension("VK_KHR_android_surface", 9, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAndroidSurfaceCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceDisplayPropertiesKHR",
      rename: None,
      name: "get_physical_device_display_properties_khr",
      origin: Extension("VK_KHR_display", 3, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkDisplayPropertiesKHR"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceDisplayPlanePropertiesKHR",
      rename: None,
      name: "get_physical_device_display_plane_properties_khr",
      origin: Extension("VK_KHR_display", 3, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkDisplayPlanePropertiesKHR"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDisplayPlaneSupportedDisplaysKHR",
      rename: None,
      name: "get_display_plane_supported_displays_khr",
      origin: Extension("VK_KHR_display", 3, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "planeIndex",
          name: "plane_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDisplayCount",
          name: "p_display_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDisplays",
          name: "p_displays",
          len: Some("pDisplayCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkDisplayKHR"), Variable("pDisplayCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDisplayModePropertiesKHR",
      rename: None,
      name: "get_display_mode_properties_khr",
      origin: Extension("VK_KHR_display", 3, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkDisplayModePropertiesKHR"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDisplayModeKHR",
      rename: None,
      name: "create_display_mode_khr",
      origin: Extension("VK_KHR_display", 3, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDisplayModeCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMode",
          name: "p_mode",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDisplayModeKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDisplayPlaneCapabilitiesKHR",
      rename: None,
      name: "get_display_plane_capabilities_khr",
      origin: Extension("VK_KHR_display", 3, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "mode",
          name: "mode",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayModeKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "planeIndex",
          name: "plane_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCapabilities",
          name: "p_capabilities",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDisplayPlaneCapabilitiesKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDisplayPlaneSurfaceKHR",
      rename: None,
      name: "create_display_plane_surface_khr",
      origin: Extension("VK_KHR_display", 3, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDisplaySurfaceCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateSharedSwapchainsKHR",
      rename: None,
      name: "create_shared_swapchains_khr",
      origin: Extension("VK_KHR_display_swapchain", 4, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INCOMPATIBLE_DISPLAY_KHR",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchainCount",
          name: "swapchain_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfos",
          name: "p_create_infos",
          len: Some("swapchainCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkSwapchainCreateInfoKHR"), Variable("swapchainCount")),
          externally_synced: Multiple([
            ForEach(Variable("pCreateInfos"), Variable("surface")),
            ForEach(Variable("pCreateInfos"), Variable("oldSwapchain")),
          ]),
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSwapchains",
          name: "p_swapchains",
          len: Some("swapchainCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Named("VkSwapchainKHR"), Variable("swapchainCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroySurfaceKHR",
      rename: None,
      name: "destroy_surface_khr",
      origin: Extension("VK_KHR_surface", 1, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "surface",
          name: "surface",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkSurfaceKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSurfaceSupportKHR",
      rename: None,
      name: "get_physical_device_surface_support_khr",
      origin: Extension("VK_KHR_surface", 1, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "surface",
          name: "surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSurfaceKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSupported",
          name: "p_supported",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkBool32")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSurfaceCapabilitiesKHR",
      rename: None,
      name: "get_physical_device_surface_capabilities_khr",
      origin: Extension("VK_KHR_surface", 1, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "surface",
          name: "surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSurfaceKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceCapabilities",
          name: "p_surface_capabilities",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceCapabilitiesKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSurfaceFormatsKHR",
      rename: None,
      name: "get_physical_device_surface_formats_khr",
      origin: Extension("VK_KHR_surface", 1, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "surface",
          name: "surface",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkSurfaceKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceFormatCount",
          name: "p_surface_format_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceFormats",
          name: "p_surface_formats",
          len: Some("pSurfaceFormatCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkSurfaceFormatKHR"), Variable("pSurfaceFormatCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSurfacePresentModesKHR",
      rename: None,
      name: "get_physical_device_surface_present_modes_khr",
      origin: Extension("VK_KHR_surface", 1, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "surface",
          name: "surface",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkSurfaceKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPresentModeCount",
          name: "p_present_mode_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPresentModes",
          name: "p_present_modes",
          len: Some("pPresentModeCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPresentModeKHR"), Variable("pPresentModeCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateSwapchainKHR",
      rename: None,
      name: "create_swapchain_khr",
      origin: Extension("VK_KHR_swapchain", 2, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_SURFACE_LOST_KHR",
        "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSwapchainCreateInfoKHR")),
          externally_synced: Multiple([
            Resolve(Variable("pCreateInfo"), Variable("surface")),
            Resolve(Variable("pCreateInfo"), Variable("oldSwapchain")),
          ]),
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSwapchain",
          name: "p_swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSwapchainKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroySwapchainKHR",
      rename: None,
      name: "destroy_swapchain_khr",
      origin: Extension("VK_KHR_swapchain", 2, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkSwapchainKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetSwapchainImagesKHR",
      rename: None,
      name: "get_swapchain_images_khr",
      origin: Extension("VK_KHR_swapchain", 2, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSwapchainImageCount",
          name: "p_swapchain_image_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSwapchainImages",
          name: "p_swapchain_images",
          len: Some("pSwapchainImageCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkImage"), Variable("pSwapchainImageCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquireNextImageKHR",
      rename: None,
      name: "acquire_next_image_khr",
      origin: Extension("VK_KHR_swapchain", 2, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_TIMEOUT",
        "VK_NOT_READY",
        "VK_SUBOPTIMAL_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_OUT_OF_DATE_KHR",
        "VK_ERROR_SURFACE_LOST_KHR",
        "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "timeout",
          name: "timeout",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "semaphore",
          name: "semaphore",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkSemaphore"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "fence",
          name: "fence",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkFence"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pImageIndex",
          name: "p_image_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueuePresentKHR",
      rename: None,
      name: "queue_present_khr",
      origin: Extension("VK_KHR_swapchain", 2, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_SUBOPTIMAL_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_OUT_OF_DATE_KHR",
        "VK_ERROR_SURFACE_LOST_KHR",
        "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pPresentInfo",
          name: "p_present_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPresentInfoKHR")),
          externally_synced: Multiple([
            Resolve(Variable("pPresentInfo"), All(Variable("pWaitSemaphores"))),
            Resolve(Variable("pPresentInfo"), All(Variable("pSwapchains"))),
          ]),
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateViSurfaceNN",
      rename: None,
      name: "create_vi_surface_nn",
      origin: Extension("VK_NN_vi_surface", 63, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkViSurfaceCreateInfoNN")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateWaylandSurfaceKHR",
      rename: None,
      name: "create_wayland_surface_khr",
      origin: Extension("VK_KHR_wayland_surface", 7, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkWaylandSurfaceCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceWaylandPresentationSupportKHR",
      rename: None,
      name: "get_physical_device_wayland_presentation_support_khr",
      origin: Extension("VK_KHR_wayland_surface", 7, false),
      return_type: Named("VkBool32"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("wl_display")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateWin32SurfaceKHR",
      rename: None,
      name: "create_win32_surface_khr",
      origin: Extension("VK_KHR_win32_surface", 10, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkWin32SurfaceCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceWin32PresentationSupportKHR",
      rename: None,
      name: "get_physical_device_win32_presentation_support_khr",
      origin: Extension("VK_KHR_win32_surface", 10, false),
      return_type: Named("VkBool32"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateXlibSurfaceKHR",
      rename: None,
      name: "create_xlib_surface_khr",
      origin: Extension("VK_KHR_xlib_surface", 5, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkXlibSurfaceCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceXlibPresentationSupportKHR",
      rename: None,
      name: "get_physical_device_xlib_presentation_support_khr",
      origin: Extension("VK_KHR_xlib_surface", 5, false),
      return_type: Named("VkBool32"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dpy",
          name: "dpy",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("Display")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "visualID",
          name: "visual_id",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VisualID"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateXcbSurfaceKHR",
      rename: None,
      name: "create_xcb_surface_khr",
      origin: Extension("VK_KHR_xcb_surface", 6, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkXcbSurfaceCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceXcbPresentationSupportKHR",
      rename: None,
      name: "get_physical_device_xcb_presentation_support_khr",
      origin: Extension("VK_KHR_xcb_surface", 6, false),
      return_type: Named("VkBool32"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "connection",
          name: "connection",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("xcb_connection_t")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "visual_id",
          name: "visual_id",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("xcb_visualid_t"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDirectFBSurfaceEXT",
      rename: None,
      name: "create_direct_fb_surface_ext",
      origin: Extension("VK_EXT_directfb_surface", 347, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDirectFBSurfaceCreateInfoEXT")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceDirectFBPresentationSupportEXT",
      rename: None,
      name: "get_physical_device_direct_fb_presentation_support_ext",
      origin: Extension("VK_EXT_directfb_surface", 347, false),
      return_type: Named("VkBool32"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dfb",
          name: "dfb",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("IDirectFB")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateImagePipeSurfaceFUCHSIA",
      rename: None,
      name: "create_image_pipe_surface_fuchsia",
      origin: Extension("VK_FUCHSIA_imagepipe_surface", 215, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImagePipeSurfaceCreateInfoFUCHSIA")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateStreamDescriptorSurfaceGGP",
      rename: None,
      name: "create_stream_descriptor_surface_ggp",
      origin: Extension("VK_GGP_stream_descriptor_surface", 50, true),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkStreamDescriptorSurfaceCreateInfoGGP")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateScreenSurfaceQNX",
      rename: None,
      name: "create_screen_surface_qnx",
      origin: Extension("VK_QNX_screen_surface", 379, true),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkScreenSurfaceCreateInfoQNX")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceScreenPresentationSupportQNX",
      rename: None,
      name: "get_physical_device_screen_presentation_support_qnx",
      origin: Extension("VK_QNX_screen_surface", 379, true),
      return_type: Named("VkBool32"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "window",
          name: "window",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("_screen_window")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDebugReportCallbackEXT",
      rename: None,
      name: "create_debug_report_callback_ext",
      origin: Extension("VK_EXT_debug_report", 12, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugReportCallbackCreateInfoEXT")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCallback",
          name: "p_callback",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDebugReportCallbackEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyDebugReportCallbackEXT",
      rename: None,
      name: "destroy_debug_report_callback_ext",
      origin: Extension("VK_EXT_debug_report", 12, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "callback",
          name: "callback",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDebugReportCallbackEXT"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDebugReportMessageEXT",
      rename: None,
      name: "debug_report_message_ext",
      origin: Extension("VK_EXT_debug_report", 12, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDebugReportFlagsEXT"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "objectType",
          name: "object_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDebugReportObjectTypeEXT"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "object",
          name: "object",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "location",
          name: "location",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(USize),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "messageCode",
          name: "message_code",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(Int(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pLayerPrefix",
          name: "p_layer_prefix",
          len: Some("null-terminated"),
          no_auto_validity: false,
          optionality: No,
          ty: NullTerminatedString(Const),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMessage",
          name: "p_message",
          len: Some("null-terminated"),
          no_auto_validity: false,
          optionality: No,
          ty: NullTerminatedString(Const),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDebugMarkerSetObjectNameEXT",
      rename: None,
      name: "debug_marker_set_object_name_ext",
      origin: Extension("VK_EXT_debug_marker", 23, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pNameInfo",
          name: "p_name_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugMarkerObjectNameInfoEXT")),
          externally_synced: Resolve(Variable("pNameInfo"), Variable("object")),
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDebugMarkerSetObjectTagEXT",
      rename: None,
      name: "debug_marker_set_object_tag_ext",
      origin: Extension("VK_EXT_debug_marker", 23, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pTagInfo",
          name: "p_tag_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugMarkerObjectTagInfoEXT")),
          externally_synced: Resolve(Variable("pTagInfo"), Variable("object")),
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceExternalImageFormatPropertiesNV",
      rename: None,
      name: "get_physical_device_external_image_format_properties_nv",
      origin: Extension("VK_NV_external_memory_capabilities", 56, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_FORMAT_NOT_SUPPORTED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "format",
          name: "format",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFormat"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "type",
          name: "type_",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageType"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "tiling",
          name: "tiling",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageTiling"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "usage",
          name: "usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageUsageFlags"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkImageCreateFlags"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "externalHandleType",
          name: "external_handle_type",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkExternalMemoryHandleTypeFlagsNV"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExternalImageFormatProperties",
          name: "p_external_image_format_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkExternalImageFormatPropertiesNV")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryWin32HandleNV",
      rename: None,
      name: "get_memory_win32_handle_nv",
      origin: Extension("VK_NV_external_memory_win32", 58, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memory",
          name: "memory",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceMemory"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "handleType",
          name: "handle_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkExternalMemoryHandleTypeFlagsNV"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pHandle",
          name: "p_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("HANDLE")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetGeneratedCommandsMemoryRequirementsNV",
      rename: None,
      name: "get_generated_commands_memory_requirements_nv",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkGeneratedCommandsMemoryRequirementsInfoNV")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRequirements",
          name: "p_memory_requirements",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryRequirements2")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateIndirectCommandsLayoutNV",
      rename: None,
      name: "create_indirect_commands_layout_nv",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkIndirectCommandsLayoutCreateInfoNV")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pIndirectCommandsLayout",
          name: "p_indirect_commands_layout",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkIndirectCommandsLayoutNV")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyIndirectCommandsLayoutNV",
      rename: None,
      name: "destroy_indirect_commands_layout_nv",
      origin: Extension("VK_NV_device_generated_commands", 278, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "indirectCommandsLayout",
          name: "indirect_commands_layout",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkIndirectCommandsLayoutNV"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceFeatures2",
      rename: None,
      name: "get_physical_device_features2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFeatures",
          name: "p_features",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPhysicalDeviceFeatures2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceFeatures2KHR",
      ],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceProperties2",
      rename: None,
      name: "get_physical_device_properties2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPhysicalDeviceProperties2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceProperties2KHR",
      ],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceFormatProperties2",
      rename: None,
      name: "get_physical_device_format_properties2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "format",
          name: "format",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFormat"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFormatProperties",
          name: "p_format_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkFormatProperties2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceFormatProperties2KHR",
      ],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceImageFormatProperties2",
      rename: None,
      name: "get_physical_device_image_format_properties2",
      origin: Vulkan1_1,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_FORMAT_NOT_SUPPORTED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImageFormatInfo",
          name: "p_image_format_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceImageFormatInfo2")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImageFormatProperties",
          name: "p_image_format_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkImageFormatProperties2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceImageFormatProperties2KHR",
      ],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceQueueFamilyProperties2",
      rename: None,
      name: "get_physical_device_queue_family_properties2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pQueueFamilyPropertyCount",
          name: "p_queue_family_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pQueueFamilyProperties",
          name: "p_queue_family_properties",
          len: Some("pQueueFamilyPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkQueueFamilyProperties2"), Variable("pQueueFamilyPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceQueueFamilyProperties2KHR",
      ],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceMemoryProperties2",
      rename: None,
      name: "get_physical_device_memory_properties2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryProperties",
          name: "p_memory_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPhysicalDeviceMemoryProperties2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceMemoryProperties2KHR",
      ],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSparseImageFormatProperties2",
      rename: None,
      name: "get_physical_device_sparse_image_format_properties2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFormatInfo",
          name: "p_format_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceSparseImageFormatInfo2")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkSparseImageFormatProperties2"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceSparseImageFormatProperties2KHR",
      ],
    ),
    Function(
      original_name: "vkTrimCommandPool",
      rename: None,
      name: "trim_command_pool",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "commandPool",
          name: "command_pool",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkCommandPool"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "flags",
          name: "flags",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkCommandPoolTrimFlags"),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkTrimCommandPoolKHR",
      ],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceExternalBufferProperties",
      rename: None,
      name: "get_physical_device_external_buffer_properties",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExternalBufferInfo",
          name: "p_external_buffer_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceExternalBufferInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExternalBufferProperties",
          name: "p_external_buffer_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkExternalBufferProperties")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceExternalBufferPropertiesKHR",
      ],
    ),
    Function(
      original_name: "vkGetMemoryWin32HandleKHR",
      rename: None,
      name: "get_memory_win32_handle_khr",
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGetWin32HandleInfo",
          name: "p_get_win32_handle_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkMemoryGetWin32HandleInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pHandle",
          name: "p_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("HANDLE")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryWin32HandlePropertiesKHR",
      rename: None,
      name: "get_memory_win32_handle_properties_khr",
      origin: Extension("VK_KHR_external_memory_win32", 74, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "handleType",
          name: "handle_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "handle",
          name: "handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("HANDLE"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryWin32HandleProperties",
          name: "p_memory_win32_handle_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryWin32HandlePropertiesKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryFdKHR",
      rename: None,
      name: "get_memory_fd_khr",
      origin: Extension("VK_KHR_external_memory_fd", 75, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGetFdInfo",
          name: "p_get_fd_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkMemoryGetFdInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFd",
          name: "p_fd",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(Int(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryFdPropertiesKHR",
      rename: None,
      name: "get_memory_fd_properties_khr",
      origin: Extension("VK_KHR_external_memory_fd", 75, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "handleType",
          name: "handle_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fd",
          name: "fd",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(Int(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryFdProperties",
          name: "p_memory_fd_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryFdPropertiesKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryZirconHandleFUCHSIA",
      rename: None,
      name: "get_memory_zircon_handle_fuchsia",
      origin: Extension("VK_FUCHSIA_external_memory", 365, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGetZirconHandleInfo",
          name: "p_get_zircon_handle_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkMemoryGetZirconHandleInfoFUCHSIA")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pZirconHandle",
          name: "p_zircon_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("zx_handle_t")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryZirconHandlePropertiesFUCHSIA",
      rename: None,
      name: "get_memory_zircon_handle_properties_fuchsia",
      origin: Extension("VK_FUCHSIA_external_memory", 365, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "handleType",
          name: "handle_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "zirconHandle",
          name: "zircon_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("zx_handle_t"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryZirconHandleProperties",
          name: "p_memory_zircon_handle_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryZirconHandlePropertiesFUCHSIA")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryRemoteAddressNV",
      rename: None,
      name: "get_memory_remote_address_nv",
      origin: Extension("VK_NV_external_memory_rdma", 372, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryGetRemoteAddressInfo",
          name: "p_memory_get_remote_address_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkMemoryGetRemoteAddressInfoNV")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAddress",
          name: "p_address",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkRemoteAddressNV")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceExternalSemaphoreProperties",
      rename: None,
      name: "get_physical_device_external_semaphore_properties",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExternalSemaphoreInfo",
          name: "p_external_semaphore_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceExternalSemaphoreInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExternalSemaphoreProperties",
          name: "p_external_semaphore_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkExternalSemaphoreProperties")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceExternalSemaphorePropertiesKHR",
      ],
    ),
    Function(
      original_name: "vkGetSemaphoreWin32HandleKHR",
      rename: None,
      name: "get_semaphore_win32_handle_khr",
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGetWin32HandleInfo",
          name: "p_get_win32_handle_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSemaphoreGetWin32HandleInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pHandle",
          name: "p_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("HANDLE")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkImportSemaphoreWin32HandleKHR",
      rename: None,
      name: "import_semaphore_win32_handle_khr",
      origin: Extension("VK_KHR_external_semaphore_win32", 79, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImportSemaphoreWin32HandleInfo",
          name: "p_import_semaphore_win32_handle_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImportSemaphoreWin32HandleInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetSemaphoreFdKHR",
      rename: None,
      name: "get_semaphore_fd_khr",
      origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGetFdInfo",
          name: "p_get_fd_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSemaphoreGetFdInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFd",
          name: "p_fd",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(Int(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkImportSemaphoreFdKHR",
      rename: None,
      name: "import_semaphore_fd_khr",
      origin: Extension("VK_KHR_external_semaphore_fd", 80, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImportSemaphoreFdInfo",
          name: "p_import_semaphore_fd_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImportSemaphoreFdInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetSemaphoreZirconHandleFUCHSIA",
      rename: None,
      name: "get_semaphore_zircon_handle_fuchsia",
      origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGetZirconHandleInfo",
          name: "p_get_zircon_handle_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSemaphoreGetZirconHandleInfoFUCHSIA")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pZirconHandle",
          name: "p_zircon_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("zx_handle_t")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkImportSemaphoreZirconHandleFUCHSIA",
      rename: None,
      name: "import_semaphore_zircon_handle_fuchsia",
      origin: Extension("VK_FUCHSIA_external_semaphore", 366, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImportSemaphoreZirconHandleInfo",
          name: "p_import_semaphore_zircon_handle_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImportSemaphoreZirconHandleInfoFUCHSIA")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceExternalFenceProperties",
      rename: None,
      name: "get_physical_device_external_fence_properties",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExternalFenceInfo",
          name: "p_external_fence_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceExternalFenceInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExternalFenceProperties",
          name: "p_external_fence_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkExternalFenceProperties")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceExternalFencePropertiesKHR",
      ],
    ),
    Function(
      original_name: "vkGetFenceWin32HandleKHR",
      rename: None,
      name: "get_fence_win32_handle_khr",
      origin: Extension("VK_KHR_external_fence_win32", 115, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGetWin32HandleInfo",
          name: "p_get_win32_handle_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkFenceGetWin32HandleInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pHandle",
          name: "p_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("HANDLE")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkImportFenceWin32HandleKHR",
      rename: None,
      name: "import_fence_win32_handle_khr",
      origin: Extension("VK_KHR_external_fence_win32", 115, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImportFenceWin32HandleInfo",
          name: "p_import_fence_win32_handle_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImportFenceWin32HandleInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetFenceFdKHR",
      rename: None,
      name: "get_fence_fd_khr",
      origin: Extension("VK_KHR_external_fence_fd", 116, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pGetFdInfo",
          name: "p_get_fd_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkFenceGetFdInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFd",
          name: "p_fd",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(Int(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkImportFenceFdKHR",
      rename: None,
      name: "import_fence_fd_khr",
      origin: Extension("VK_KHR_external_fence_fd", 116, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImportFenceFdInfo",
          name: "p_import_fence_fd_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImportFenceFdInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkReleaseDisplayEXT",
      rename: None,
      name: "release_display_ext",
      origin: Extension("VK_EXT_direct_mode_display", 89, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquireXlibDisplayEXT",
      rename: None,
      name: "acquire_xlib_display_ext",
      origin: Extension("VK_EXT_acquire_xlib_display", 90, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dpy",
          name: "dpy",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("Display")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetRandROutputDisplayEXT",
      rename: None,
      name: "get_rand_r_output_display_ext",
      origin: Extension("VK_EXT_acquire_xlib_display", 90, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dpy",
          name: "dpy",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("Display")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "rrOutput",
          name: "rr_output",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("RROutput"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDisplay",
          name: "p_display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDisplayKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquireWinrtDisplayNV",
      rename: None,
      name: "acquire_winrt_display_nv",
      origin: Extension("VK_NV_acquire_winrt_display", 346, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetWinrtDisplayNV",
      rename: None,
      name: "get_winrt_display_nv",
      origin: Extension("VK_NV_acquire_winrt_display", 346, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "deviceRelativeId",
          name: "device_relative_id",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDisplay",
          name: "p_display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDisplayKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDisplayPowerControlEXT",
      rename: None,
      name: "display_power_control_ext",
      origin: Extension("VK_EXT_display_control", 92, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDisplayPowerInfo",
          name: "p_display_power_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDisplayPowerInfoEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkRegisterDeviceEventEXT",
      rename: None,
      name: "register_device_event_ext",
      origin: Extension("VK_EXT_display_control", 92, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDeviceEventInfo",
          name: "p_device_event_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDeviceEventInfoEXT")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFence",
          name: "p_fence",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkFence")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkRegisterDisplayEventEXT",
      rename: None,
      name: "register_display_event_ext",
      origin: Extension("VK_EXT_display_control", 92, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDisplayEventInfo",
          name: "p_display_event_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDisplayEventInfoEXT")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFence",
          name: "p_fence",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkFence")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetSwapchainCounterEXT",
      rename: None,
      name: "get_swapchain_counter_ext",
      origin: Extension("VK_EXT_display_control", 92, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_OUT_OF_DATE_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "counter",
          name: "counter",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSurfaceCounterFlagBitsEXT"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCounterValue",
          name: "p_counter_value",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(8))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSurfaceCapabilities2EXT",
      rename: None,
      name: "get_physical_device_surface_capabilities2_ext",
      origin: Extension("VK_EXT_display_surface_counter", 91, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "surface",
          name: "surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSurfaceKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceCapabilities",
          name: "p_surface_capabilities",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceCapabilities2EXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEnumeratePhysicalDeviceGroups",
      rename: None,
      name: "enumerate_physical_device_groups",
      origin: Vulkan1_1,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPhysicalDeviceGroupCount",
          name: "p_physical_device_group_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPhysicalDeviceGroupProperties",
          name: "p_physical_device_group_properties",
          len: Some("pPhysicalDeviceGroupCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPhysicalDeviceGroupProperties"), Variable("pPhysicalDeviceGroupCount")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkEnumeratePhysicalDeviceGroupsKHR",
      ],
    ),
    Function(
      original_name: "vkGetDeviceGroupPeerMemoryFeatures",
      rename: None,
      name: "get_device_group_peer_memory_features",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "heapIndex",
          name: "heap_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "localDeviceIndex",
          name: "local_device_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "remoteDeviceIndex",
          name: "remote_device_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPeerMemoryFeatures",
          name: "p_peer_memory_features",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPeerMemoryFeatureFlags")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetDeviceGroupPeerMemoryFeaturesKHR",
      ],
    ),
    Function(
      original_name: "vkBindBufferMemory2",
      rename: None,
      name: "bind_buffer_memory2",
      origin: Vulkan1_1,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "bindInfoCount",
          name: "bind_info_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBindInfos",
          name: "p_bind_infos",
          len: Some("bindInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkBindBufferMemoryInfo"), Variable("bindInfoCount")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkBindBufferMemory2KHR",
      ],
    ),
    Function(
      original_name: "vkBindImageMemory2",
      rename: None,
      name: "bind_image_memory2",
      origin: Vulkan1_1,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "bindInfoCount",
          name: "bind_info_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBindInfos",
          name: "p_bind_infos",
          len: Some("bindInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkBindImageMemoryInfo"), Variable("bindInfoCount")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkBindImageMemory2KHR",
      ],
    ),
    Function(
      original_name: "vkGetDeviceGroupPresentCapabilitiesKHR",
      rename: None,
      name: "get_device_group_present_capabilities_khr",
      origin: Extension("VK_KHR_device_group", 61, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDeviceGroupPresentCapabilities",
          name: "p_device_group_present_capabilities",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDeviceGroupPresentCapabilitiesKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeviceGroupSurfacePresentModesKHR",
      rename: None,
      name: "get_device_group_surface_present_modes_khr",
      origin: Extension("VK_KHR_device_group", 61, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "surface",
          name: "surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSurfaceKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pModes",
          name: "p_modes",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Named("VkDeviceGroupPresentModeFlagsKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquireNextImage2KHR",
      rename: None,
      name: "acquire_next_image2_khr",
      origin: Extension("VK_KHR_device_group", 61, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_TIMEOUT",
        "VK_NOT_READY",
        "VK_SUBOPTIMAL_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_OUT_OF_DATE_KHR",
        "VK_ERROR_SURFACE_LOST_KHR",
        "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAcquireInfo",
          name: "p_acquire_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAcquireNextImageInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImageIndex",
          name: "p_image_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDevicePresentRectanglesKHR",
      rename: None,
      name: "get_physical_device_present_rectangles_khr",
      origin: Extension("VK_KHR_device_group", 61, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "surface",
          name: "surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSurfaceKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pRectCount",
          name: "p_rect_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pRects",
          name: "p_rects",
          len: Some("pRectCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkRect2D"), Variable("pRectCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDescriptorUpdateTemplate",
      rename: None,
      name: "create_descriptor_update_template",
      origin: Vulkan1_1,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDescriptorUpdateTemplateCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDescriptorUpdateTemplate",
          name: "p_descriptor_update_template",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDescriptorUpdateTemplate")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkCreateDescriptorUpdateTemplateKHR",
      ],
    ),
    Function(
      original_name: "vkDestroyDescriptorUpdateTemplate",
      rename: None,
      name: "destroy_descriptor_update_template",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "descriptorUpdateTemplate",
          name: "descriptor_update_template",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDescriptorUpdateTemplate"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkDestroyDescriptorUpdateTemplateKHR",
      ],
    ),
    Function(
      original_name: "vkUpdateDescriptorSetWithTemplate",
      rename: None,
      name: "update_descriptor_set_with_template",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "descriptorSet",
          name: "descriptor_set",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDescriptorSet"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "descriptorUpdateTemplate",
          name: "descriptor_update_template",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDescriptorUpdateTemplate"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: None,
          no_auto_validity: true,
          optionality: No,
          ty: Pointer(Const, Native(Void)),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkUpdateDescriptorSetWithTemplateKHR",
      ],
    ),
    Function(
      original_name: "vkSetHdrMetadataEXT",
      rename: None,
      name: "set_hdr_metadata_ext",
      origin: Extension("VK_EXT_hdr_metadata", 106, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchainCount",
          name: "swapchain_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSwapchains",
          name: "p_swapchains",
          len: Some("swapchainCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkSwapchainKHR"), Variable("swapchainCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMetadata",
          name: "p_metadata",
          len: Some("swapchainCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkHdrMetadataEXT"), Variable("swapchainCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetSwapchainStatusKHR",
      rename: None,
      name: "get_swapchain_status_khr",
      origin: Extension("VK_KHR_shared_presentable_image", 112, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_SUBOPTIMAL_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_OUT_OF_DATE_KHR",
        "VK_ERROR_SURFACE_LOST_KHR",
        "VK_ERROR_FULL_SCREEN_EXCLUSIVE_MODE_LOST_EXT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetRefreshCycleDurationGOOGLE",
      rename: None,
      name: "get_refresh_cycle_duration_google",
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pDisplayTimingProperties",
          name: "p_display_timing_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkRefreshCycleDurationGOOGLE")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPastPresentationTimingGOOGLE",
      rename: None,
      name: "get_past_presentation_timing_google",
      origin: Extension("VK_GOOGLE_display_timing", 93, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_DEVICE_LOST",
        "VK_ERROR_OUT_OF_DATE_KHR",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pPresentationTimingCount",
          name: "p_presentation_timing_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPresentationTimings",
          name: "p_presentation_timings",
          len: Some("pPresentationTimingCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPastPresentationTimingGOOGLE"), Variable("pPresentationTimingCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateIOSSurfaceMVK",
      rename: None,
      name: "create_ios_surface_mvk",
      origin: Extension("VK_MVK_ios_surface", 123, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkIOSSurfaceCreateInfoMVK")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateMacOSSurfaceMVK",
      rename: None,
      name: "create_mac_os_surface_mvk",
      origin: Extension("VK_MVK_macos_surface", 124, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkMacOSSurfaceCreateInfoMVK")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateMetalSurfaceEXT",
      rename: None,
      name: "create_metal_surface_ext",
      origin: Extension("VK_EXT_metal_surface", 218, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_NATIVE_WINDOW_IN_USE_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkMetalSurfaceCreateInfoEXT")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceMultisamplePropertiesEXT",
      rename: None,
      name: "get_physical_device_multisample_properties_ext",
      origin: Extension("VK_EXT_sample_locations", 144, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "samples",
          name: "samples",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSampleCountFlagBits"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMultisampleProperties",
          name: "p_multisample_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMultisamplePropertiesEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSurfaceCapabilities2KHR",
      rename: None,
      name: "get_physical_device_surface_capabilities2_khr",
      origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceInfo",
          name: "p_surface_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceSurfaceInfo2KHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceCapabilities",
          name: "p_surface_capabilities",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceCapabilities2KHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSurfaceFormats2KHR",
      rename: None,
      name: "get_physical_device_surface_formats2_khr",
      origin: Extension("VK_KHR_get_surface_capabilities2", 120, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceInfo",
          name: "p_surface_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceSurfaceInfo2KHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceFormatCount",
          name: "p_surface_format_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceFormats",
          name: "p_surface_formats",
          len: Some("pSurfaceFormatCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkSurfaceFormat2KHR"), Variable("pSurfaceFormatCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceDisplayProperties2KHR",
      rename: None,
      name: "get_physical_device_display_properties2_khr",
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkDisplayProperties2KHR"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceDisplayPlaneProperties2KHR",
      rename: None,
      name: "get_physical_device_display_plane_properties2_khr",
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkDisplayPlaneProperties2KHR"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDisplayModeProperties2KHR",
      rename: None,
      name: "get_display_mode_properties2_khr",
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkDisplayModeProperties2KHR"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDisplayPlaneCapabilities2KHR",
      rename: None,
      name: "get_display_plane_capabilities2_khr",
      origin: Extension("VK_KHR_get_display_properties2", 122, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDisplayPlaneInfo",
          name: "p_display_plane_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDisplayPlaneInfo2KHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCapabilities",
          name: "p_capabilities",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDisplayPlaneCapabilities2KHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetBufferMemoryRequirements2",
      rename: None,
      name: "get_buffer_memory_requirements2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkBufferMemoryRequirementsInfo2")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRequirements",
          name: "p_memory_requirements",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryRequirements2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetBufferMemoryRequirements2KHR",
      ],
    ),
    Function(
      original_name: "vkGetImageMemoryRequirements2",
      rename: None,
      name: "get_image_memory_requirements2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImageMemoryRequirementsInfo2")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRequirements",
          name: "p_memory_requirements",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryRequirements2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetImageMemoryRequirements2KHR",
      ],
    ),
    Function(
      original_name: "vkGetImageSparseMemoryRequirements2",
      rename: None,
      name: "get_image_sparse_memory_requirements2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImageSparseMemoryRequirementsInfo2")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSparseMemoryRequirementCount",
          name: "p_sparse_memory_requirement_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSparseMemoryRequirements",
          name: "p_sparse_memory_requirements",
          len: Some("pSparseMemoryRequirementCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkSparseImageMemoryRequirements2"), Variable("pSparseMemoryRequirementCount")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetImageSparseMemoryRequirements2KHR",
      ],
    ),
    Function(
      original_name: "vkGetDeviceBufferMemoryRequirements",
      rename: None,
      name: "get_device_buffer_memory_requirements",
      origin: Vulkan1_3,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDeviceBufferMemoryRequirements")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRequirements",
          name: "p_memory_requirements",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryRequirements2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetDeviceBufferMemoryRequirementsKHR",
      ],
    ),
    Function(
      original_name: "vkGetDeviceImageMemoryRequirements",
      rename: None,
      name: "get_device_image_memory_requirements",
      origin: Vulkan1_3,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDeviceImageMemoryRequirements")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRequirements",
          name: "p_memory_requirements",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryRequirements2")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetDeviceImageMemoryRequirementsKHR",
      ],
    ),
    Function(
      original_name: "vkGetDeviceImageSparseMemoryRequirements",
      rename: None,
      name: "get_device_image_sparse_memory_requirements",
      origin: Vulkan1_3,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDeviceImageMemoryRequirements")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSparseMemoryRequirementCount",
          name: "p_sparse_memory_requirement_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSparseMemoryRequirements",
          name: "p_sparse_memory_requirements",
          len: Some("pSparseMemoryRequirementCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkSparseImageMemoryRequirements2"), Variable("pSparseMemoryRequirementCount")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetDeviceImageSparseMemoryRequirementsKHR",
      ],
    ),
    Function(
      original_name: "vkCreateSamplerYcbcrConversion",
      rename: None,
      name: "create_sampler_ycbcr_conversion",
      origin: Vulkan1_1,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSamplerYcbcrConversionCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pYcbcrConversion",
          name: "p_ycbcr_conversion",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSamplerYcbcrConversion")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkCreateSamplerYcbcrConversionKHR",
      ],
    ),
    Function(
      original_name: "vkDestroySamplerYcbcrConversion",
      rename: None,
      name: "destroy_sampler_ycbcr_conversion",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "ycbcrConversion",
          name: "ycbcr_conversion",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkSamplerYcbcrConversion"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkDestroySamplerYcbcrConversionKHR",
      ],
    ),
    Function(
      original_name: "vkGetDeviceQueue2",
      rename: None,
      name: "get_device_queue2",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pQueueInfo",
          name: "p_queue_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDeviceQueueInfo2")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pQueue",
          name: "p_queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkQueue")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateValidationCacheEXT",
      rename: None,
      name: "create_validation_cache_ext",
      origin: Extension("VK_EXT_validation_cache", 161, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkValidationCacheCreateInfoEXT")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pValidationCache",
          name: "p_validation_cache",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkValidationCacheEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyValidationCacheEXT",
      rename: None,
      name: "destroy_validation_cache_ext",
      origin: Extension("VK_EXT_validation_cache", 161, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "validationCache",
          name: "validation_cache",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkValidationCacheEXT"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetValidationCacheDataEXT",
      rename: None,
      name: "get_validation_cache_data_ext",
      origin: Extension("VK_EXT_validation_cache", 161, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "validationCache",
          name: "validation_cache",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkValidationCacheEXT"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDataSize",
          name: "p_data_size",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(USize)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: Some("pDataSize"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Native(Void), Variable("pDataSize")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkMergeValidationCachesEXT",
      rename: None,
      name: "merge_validation_caches_ext",
      origin: Extension("VK_EXT_validation_cache", 161, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dstCache",
          name: "dst_cache",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkValidationCacheEXT"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "srcCacheCount",
          name: "src_cache_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSrcCaches",
          name: "p_src_caches",
          len: Some("srcCacheCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkValidationCacheEXT"), Variable("srcCacheCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDescriptorSetLayoutSupport",
      rename: None,
      name: "get_descriptor_set_layout_support",
      origin: Vulkan1_1,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDescriptorSetLayoutCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSupport",
          name: "p_support",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDescriptorSetLayoutSupport")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetDescriptorSetLayoutSupportKHR",
      ],
    ),
    Function(
      original_name: "vkGetSwapchainGrallocUsageANDROID",
      rename: None,
      name: "get_swapchain_gralloc_usage_android",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      return_type: Named("VkResult"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "format",
          name: "format",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFormat"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "imageUsage",
          name: "image_usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageUsageFlags"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "grallocUsage",
          name: "gralloc_usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(Int(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetSwapchainGrallocUsage2ANDROID",
      rename: None,
      name: "get_swapchain_gralloc_usage2_android",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      return_type: Named("VkResult"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "format",
          name: "format",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFormat"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "imageUsage",
          name: "image_usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageUsageFlags"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchainImageUsage",
          name: "swapchain_image_usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainImageUsageFlagsANDROID"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "grallocConsumerUsage",
          name: "gralloc_consumer_usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(8))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "grallocProducerUsage",
          name: "gralloc_producer_usage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(8))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquireImageANDROID",
      rename: None,
      name: "acquire_image_android",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      return_type: Named("VkResult"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "image",
          name: "image",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImage"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "nativeFenceFd",
          name: "native_fence_fd",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(Int(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "semaphore",
          name: "semaphore",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSemaphore"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fence",
          name: "fence",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkFence"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueSignalReleaseImageANDROID",
      rename: None,
      name: "queue_signal_release_image_android",
      origin: Extension("VK_ANDROID_native_buffer", 11, true),
      return_type: Named("VkResult"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "waitSemaphoreCount",
          name: "wait_semaphore_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pWaitSemaphores",
          name: "p_wait_semaphores",
          len: Some("waitSemaphoreCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkSemaphore"), Variable("waitSemaphoreCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "image",
          name: "image",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImage"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pNativeFenceFd",
          name: "p_native_fence_fd",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(Int(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetShaderInfoAMD",
      rename: None,
      name: "get_shader_info_amd",
      origin: Extension("VK_AMD_shader_info", 43, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_FEATURE_NOT_PRESENT",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipeline",
          name: "pipeline",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPipeline"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "shaderStage",
          name: "shader_stage",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkShaderStageFlagBits"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "infoType",
          name: "info_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkShaderInfoTypeAMD"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfoSize",
          name: "p_info_size",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(USize)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: Some("pInfoSize"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Native(Void), Variable("pInfoSize")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkSetLocalDimmingAMD",
      rename: None,
      name: "set_local_dimming_amd",
      origin: Extension("VK_AMD_display_native_hdr", 214, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapChain",
          name: "swap_chain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "localDimmingEnable",
          name: "local_dimming_enable",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkBool32"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceCalibrateableTimeDomainsEXT",
      rename: None,
      name: "get_physical_device_calibrateable_time_domains_ext",
      origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pTimeDomainCount",
          name: "p_time_domain_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pTimeDomains",
          name: "p_time_domains",
          len: Some("pTimeDomainCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkTimeDomainEXT"), Variable("pTimeDomainCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetCalibratedTimestampsEXT",
      rename: None,
      name: "get_calibrated_timestamps_ext",
      origin: Extension("VK_EXT_calibrated_timestamps", 185, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "timestampCount",
          name: "timestamp_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pTimestampInfos",
          name: "p_timestamp_infos",
          len: Some("timestampCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkCalibratedTimestampInfoEXT"), Variable("timestampCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pTimestamps",
          name: "p_timestamps",
          len: Some("timestampCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Native(UInt(8)), Variable("timestampCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMaxDeviation",
          name: "p_max_deviation",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(8))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkSetDebugUtilsObjectNameEXT",
      rename: None,
      name: "set_debug_utils_object_name_ext",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pNameInfo",
          name: "p_name_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugUtilsObjectNameInfoEXT")),
          externally_synced: Resolve(Variable("pNameInfo"), Variable("objectHandle")),
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkSetDebugUtilsObjectTagEXT",
      rename: None,
      name: "set_debug_utils_object_tag_ext",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pTagInfo",
          name: "p_tag_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugUtilsObjectTagInfoEXT")),
          externally_synced: Resolve(Variable("pTagInfo"), Variable("objectHandle")),
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueBeginDebugUtilsLabelEXT",
      rename: None,
      name: "queue_begin_debug_utils_label_ext",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pLabelInfo",
          name: "p_label_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugUtilsLabelEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueEndDebugUtilsLabelEXT",
      rename: None,
      name: "queue_end_debug_utils_label_ext",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueInsertDebugUtilsLabelEXT",
      rename: None,
      name: "queue_insert_debug_utils_label_ext",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pLabelInfo",
          name: "p_label_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugUtilsLabelEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDebugUtilsMessengerEXT",
      rename: None,
      name: "create_debug_utils_messenger_ext",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugUtilsMessengerCreateInfoEXT")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMessenger",
          name: "p_messenger",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDebugUtilsMessengerEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyDebugUtilsMessengerEXT",
      rename: None,
      name: "destroy_debug_utils_messenger_ext",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "messenger",
          name: "messenger",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDebugUtilsMessengerEXT"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkSubmitDebugUtilsMessageEXT",
      rename: None,
      name: "submit_debug_utils_message_ext",
      origin: Extension("VK_EXT_debug_utils", 129, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "messageSeverity",
          name: "message_severity",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDebugUtilsMessageSeverityFlagBitsEXT"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "messageTypes",
          name: "message_types",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDebugUtilsMessageTypeFlagsEXT"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCallbackData",
          name: "p_callback_data",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDebugUtilsMessengerCallbackDataEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryHostPointerPropertiesEXT",
      rename: None,
      name: "get_memory_host_pointer_properties_ext",
      origin: Extension("VK_EXT_external_memory_host", 179, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "handleType",
          name: "handle_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkExternalMemoryHandleTypeFlagBits"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pHostPointer",
          name: "p_host_pointer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Native(Void)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryHostPointerProperties",
          name: "p_memory_host_pointer_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryHostPointerPropertiesEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateRenderPass2",
      rename: None,
      name: "create_render_pass2",
      origin: Vulkan1_2,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkRenderPassCreateInfo2")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pRenderPass",
          name: "p_render_pass",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkRenderPass")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkCreateRenderPass2KHR",
      ],
    ),
    Function(
      original_name: "vkGetSemaphoreCounterValue",
      rename: None,
      name: "get_semaphore_counter_value",
      origin: Vulkan1_2,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "semaphore",
          name: "semaphore",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSemaphore"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pValue",
          name: "p_value",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(8))),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetSemaphoreCounterValueKHR",
      ],
    ),
    Function(
      original_name: "vkWaitSemaphores",
      rename: None,
      name: "wait_semaphores",
      origin: Vulkan1_2,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_TIMEOUT",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pWaitInfo",
          name: "p_wait_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSemaphoreWaitInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "timeout",
          name: "timeout",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkWaitSemaphoresKHR",
      ],
    ),
    Function(
      original_name: "vkSignalSemaphore",
      rename: None,
      name: "signal_semaphore",
      origin: Vulkan1_2,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSignalInfo",
          name: "p_signal_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkSemaphoreSignalInfo")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkSignalSemaphoreKHR",
      ],
    ),
    Function(
      original_name: "vkGetAndroidHardwareBufferPropertiesANDROID",
      rename: None,
      name: "get_android_hardware_buffer_properties_android",
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "buffer",
          name: "buffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("AHardwareBuffer")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkAndroidHardwareBufferPropertiesANDROID")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetMemoryAndroidHardwareBufferANDROID",
      rename: None,
      name: "get_memory_android_hardware_buffer_android",
      origin: Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkMemoryGetAndroidHardwareBufferInfoANDROID")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBuffer",
          name: "p_buffer",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Pointer(Mutable, Named("AHardwareBuffer"))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetQueueCheckpointDataNV",
      rename: None,
      name: "get_queue_checkpoint_data_nv",
      origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCheckpointDataCount",
          name: "p_checkpoint_data_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCheckpointData",
          name: "p_checkpoint_data",
          len: Some("pCheckpointDataCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkCheckpointDataNV"), Variable("pCheckpointDataCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCompileDeferredNV",
      rename: None,
      name: "compile_deferred_nv",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipeline",
          name: "pipeline",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPipeline"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "shader",
          name: "shader",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateAccelerationStructureNV",
      rename: None,
      name: "create_acceleration_structure_nv",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAccelerationStructureCreateInfoNV")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAccelerationStructure",
          name: "p_acceleration_structure",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkAccelerationStructureNV")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyAccelerationStructureKHR",
      rename: None,
      name: "destroy_acceleration_structure_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "accelerationStructure",
          name: "acceleration_structure",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkAccelerationStructureKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyAccelerationStructureNV",
      rename: None,
      name: "destroy_acceleration_structure_nv",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "accelerationStructure",
          name: "acceleration_structure",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkAccelerationStructureNV"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetAccelerationStructureMemoryRequirementsNV",
      rename: None,
      name: "get_acceleration_structure_memory_requirements_nv",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAccelerationStructureMemoryRequirementsInfoNV")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMemoryRequirements",
          name: "p_memory_requirements",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkMemoryRequirements2KHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkBindAccelerationStructureMemoryNV",
      rename: None,
      name: "bind_acceleration_structure_memory_nv",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "bindInfoCount",
          name: "bind_info_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBindInfos",
          name: "p_bind_infos",
          len: Some("bindInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkBindAccelerationStructureMemoryInfoNV"), Variable("bindInfoCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCopyAccelerationStructureKHR",
      rename: None,
      name: "copy_acceleration_structure_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_OPERATION_DEFERRED_KHR",
        "VK_OPERATION_NOT_DEFERRED_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "deferredOperation",
          name: "deferred_operation",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkCopyAccelerationStructureInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCopyAccelerationStructureToMemoryKHR",
      rename: None,
      name: "copy_acceleration_structure_to_memory_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_OPERATION_DEFERRED_KHR",
        "VK_OPERATION_NOT_DEFERRED_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "deferredOperation",
          name: "deferred_operation",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkCopyAccelerationStructureToMemoryInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCopyMemoryToAccelerationStructureKHR",
      rename: None,
      name: "copy_memory_to_acceleration_structure_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_OPERATION_DEFERRED_KHR",
        "VK_OPERATION_NOT_DEFERRED_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "deferredOperation",
          name: "deferred_operation",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkCopyMemoryToAccelerationStructureInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkWriteAccelerationStructuresPropertiesKHR",
      rename: None,
      name: "write_acceleration_structures_properties_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "accelerationStructureCount",
          name: "acceleration_structure_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAccelerationStructures",
          name: "p_acceleration_structures",
          len: Some("accelerationStructureCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkAccelerationStructureKHR"), Variable("accelerationStructureCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queryType",
          name: "query_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueryType"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dataSize",
          name: "data_size",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(USize),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: Some("dataSize"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Native(Void), Variable("dataSize")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "stride",
          name: "stride",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(USize),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetRayTracingShaderGroupHandlesKHR",
      rename: None,
      name: "get_ray_tracing_shader_group_handles_khr",
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipeline",
          name: "pipeline",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPipeline"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "firstGroup",
          name: "first_group",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "groupCount",
          name: "group_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dataSize",
          name: "data_size",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(USize),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: Some("dataSize"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Native(Void), Variable("dataSize")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetRayTracingShaderGroupHandlesNV",
      ],
    ),
    Function(
      original_name: "vkGetRayTracingCaptureReplayShaderGroupHandlesKHR",
      rename: None,
      name: "get_ray_tracing_capture_replay_shader_group_handles_khr",
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipeline",
          name: "pipeline",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPipeline"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "firstGroup",
          name: "first_group",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "groupCount",
          name: "group_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dataSize",
          name: "data_size",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(USize),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: Some("dataSize"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Native(Void), Variable("dataSize")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetAccelerationStructureHandleNV",
      rename: None,
      name: "get_acceleration_structure_handle_nv",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "accelerationStructure",
          name: "acceleration_structure",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkAccelerationStructureNV"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "dataSize",
          name: "data_size",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(USize),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: Some("dataSize"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Native(Void), Variable("dataSize")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateRayTracingPipelinesNV",
      rename: None,
      name: "create_ray_tracing_pipelines_nv",
      origin: Extension("VK_NV_ray_tracing", 166, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_PIPELINE_COMPILE_REQUIRED_EXT",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_SHADER_NV",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipelineCache",
          name: "pipeline_cache",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPipelineCache"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "createInfoCount",
          name: "create_info_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfos",
          name: "p_create_infos",
          len: Some("createInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkRayTracingPipelineCreateInfoNV"), Variable("createInfoCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPipelines",
          name: "p_pipelines",
          len: Some("createInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Named("VkPipeline"), Variable("createInfoCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateRayTracingPipelinesKHR",
      rename: None,
      name: "create_ray_tracing_pipelines_khr",
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_OPERATION_DEFERRED_KHR",
        "VK_OPERATION_NOT_DEFERRED_KHR",
        "VK_PIPELINE_COMPILE_REQUIRED_EXT",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "deferredOperation",
          name: "deferred_operation",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipelineCache",
          name: "pipeline_cache",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPipelineCache"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "createInfoCount",
          name: "create_info_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfos",
          name: "p_create_infos",
          len: Some("createInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkRayTracingPipelineCreateInfoKHR"), Variable("createInfoCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPipelines",
          name: "p_pipelines",
          len: Some("createInfoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Mutable, Named("VkPipeline"), Variable("createInfoCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceCooperativeMatrixPropertiesNV",
      rename: None,
      name: "get_physical_device_cooperative_matrix_properties_nv",
      origin: Extension("VK_NV_cooperative_matrix", 250, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPropertyCount",
          name: "p_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkCooperativeMatrixPropertiesNV"), Variable("pPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeviceAccelerationStructureCompatibilityKHR",
      rename: None,
      name: "get_device_acceleration_structure_compatibility_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVersionInfo",
          name: "p_version_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAccelerationStructureVersionInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCompatibility",
          name: "p_compatibility",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkAccelerationStructureCompatibilityKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetRayTracingShaderGroupStackSizeKHR",
      rename: None,
      name: "get_ray_tracing_shader_group_stack_size_khr",
      origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
      return_type: Named("VkDeviceSize"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pipeline",
          name: "pipeline",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPipeline"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "group",
          name: "group",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "groupShader",
          name: "group_shader",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkShaderGroupShaderKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetImageViewHandleNVX",
      rename: None,
      name: "get_image_view_handle_nvx",
      origin: Extension("VK_NVX_image_view_handle", 31, false),
      return_type: Native(UInt(4)),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImageViewHandleInfoNVX")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetImageViewAddressNVX",
      rename: None,
      name: "get_image_view_address_nvx",
      origin: Extension("VK_NVX_image_view_handle", 31, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_UNKNOWN",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "imageView",
          name: "image_view",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImageView"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkImageViewAddressPropertiesNVX")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSurfacePresentModes2EXT",
      rename: None,
      name: "get_physical_device_surface_present_modes2_ext",
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceInfo",
          name: "p_surface_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceSurfaceInfo2KHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPresentModeCount",
          name: "p_present_mode_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPresentModes",
          name: "p_present_modes",
          len: Some("pPresentModeCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPresentModeKHR"), Variable("pPresentModeCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeviceGroupSurfacePresentModes2EXT",
      rename: None,
      name: "get_device_group_surface_present_modes2_ext",
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurfaceInfo",
          name: "p_surface_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceSurfaceInfo2KHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pModes",
          name: "p_modes",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Named("VkDeviceGroupPresentModeFlagsKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquireFullScreenExclusiveModeEXT",
      rename: None,
      name: "acquire_full_screen_exclusive_mode_ext",
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkReleaseFullScreenExclusiveModeEXT",
      rename: None,
      name: "release_full_screen_exclusive_mode_ext",
      origin: Extension("VK_EXT_full_screen_exclusive", 256, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_SURFACE_LOST_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkEnumeratePhysicalDeviceQueueFamilyPerformanceQueryCountersKHR",
      rename: None,
      name: "enumerate_physical_device_queue_family_performance_query_counters_khr",
      origin: Extension("VK_KHR_performance_query", 117, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "queueFamilyIndex",
          name: "queue_family_index",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCounterCount",
          name: "p_counter_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCounters",
          name: "p_counters",
          len: Some("pCounterCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPerformanceCounterKHR"), Variable("pCounterCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCounterDescriptions",
          name: "p_counter_descriptions",
          len: Some("pCounterCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPerformanceCounterDescriptionKHR"), Variable("pCounterCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceQueueFamilyPerformanceQueryPassesKHR",
      rename: None,
      name: "get_physical_device_queue_family_performance_query_passes_khr",
      origin: Extension("VK_KHR_performance_query", 117, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPerformanceQueryCreateInfo",
          name: "p_performance_query_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkQueryPoolPerformanceCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pNumPasses",
          name: "p_num_passes",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquireProfilingLockKHR",
      rename: None,
      name: "acquire_profiling_lock_khr",
      origin: Extension("VK_KHR_performance_query", 117, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_TIMEOUT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAcquireProfilingLockInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkReleaseProfilingLockKHR",
      rename: None,
      name: "release_profiling_lock_khr",
      origin: Extension("VK_KHR_performance_query", 117, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetImageDrmFormatModifierPropertiesEXT",
      rename: None,
      name: "get_image_drm_format_modifier_properties_ext",
      origin: Extension("VK_EXT_image_drm_format_modifier", 159, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "image",
          name: "image",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkImage"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkImageDrmFormatModifierPropertiesEXT")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetBufferOpaqueCaptureAddress",
      rename: None,
      name: "get_buffer_opaque_capture_address",
      origin: Vulkan1_2,
      return_type: Native(UInt(8)),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkBufferDeviceAddressInfo")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetBufferOpaqueCaptureAddressKHR",
      ],
    ),
    Function(
      original_name: "vkGetBufferDeviceAddress",
      rename: None,
      name: "get_buffer_device_address",
      origin: Vulkan1_2,
      return_type: Named("VkDeviceAddress"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkBufferDeviceAddressInfo")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetBufferDeviceAddressKHR",
        "vkGetBufferDeviceAddressEXT",
      ],
    ),
    Function(
      original_name: "vkCreateHeadlessSurfaceEXT",
      rename: None,
      name: "create_headless_surface_ext",
      origin: Extension("VK_EXT_headless_surface", 257, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "instance",
          name: "instance",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkInstance"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkHeadlessSurfaceCreateInfoEXT")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSurface",
          name: "p_surface",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkSurfaceKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceSupportedFramebufferMixedSamplesCombinationsNV",
      rename: None,
      name: "get_physical_device_supported_framebuffer_mixed_samples_combinations_nv",
      origin: Extension("VK_NV_coverage_reduction_mode", 251, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCombinationCount",
          name: "p_combination_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCombinations",
          name: "p_combinations",
          len: Some("pCombinationCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkFramebufferMixedSamplesCombinationNV"), Variable("pCombinationCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkInitializePerformanceApiINTEL",
      rename: None,
      name: "initialize_performance_api_intel",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInitializeInfo",
          name: "p_initialize_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkInitializePerformanceApiInfoINTEL")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkUninitializePerformanceApiINTEL",
      rename: None,
      name: "uninitialize_performance_api_intel",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquirePerformanceConfigurationINTEL",
      rename: None,
      name: "acquire_performance_configuration_intel",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAcquireInfo",
          name: "p_acquire_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPerformanceConfigurationAcquireInfoINTEL")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pConfiguration",
          name: "p_configuration",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPerformanceConfigurationINTEL")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkReleasePerformanceConfigurationINTEL",
      rename: None,
      name: "release_performance_configuration_intel",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "configuration",
          name: "configuration",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPerformanceConfigurationINTEL"),
          externally_synced: Yes,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueSetPerformanceConfigurationINTEL",
      rename: None,
      name: "queue_set_performance_configuration_intel",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "configuration",
          name: "configuration",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPerformanceConfigurationINTEL"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPerformanceParameterINTEL",
      rename: None,
      name: "get_performance_parameter_intel",
      origin: Extension("VK_INTEL_performance_query", 211, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_TOO_MANY_OBJECTS",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "parameter",
          name: "parameter",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPerformanceParameterTypeINTEL"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pValue",
          name: "p_value",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPerformanceValueINTEL")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeviceMemoryOpaqueCaptureAddress",
      rename: None,
      name: "get_device_memory_opaque_capture_address",
      origin: Vulkan1_2,
      return_type: Native(UInt(8)),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDeviceMemoryOpaqueCaptureAddressInfo")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetDeviceMemoryOpaqueCaptureAddressKHR",
      ],
    ),
    Function(
      original_name: "vkGetPipelineExecutablePropertiesKHR",
      rename: None,
      name: "get_pipeline_executable_properties_khr",
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPipelineInfo",
          name: "p_pipeline_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPipelineInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExecutableCount",
          name: "p_executable_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: Some("pExecutableCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPipelineExecutablePropertiesKHR"), Variable("pExecutableCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPipelineExecutableStatisticsKHR",
      rename: None,
      name: "get_pipeline_executable_statistics_khr",
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExecutableInfo",
          name: "p_executable_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPipelineExecutableInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pStatisticCount",
          name: "p_statistic_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pStatistics",
          name: "p_statistics",
          len: Some("pStatisticCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPipelineExecutableStatisticKHR"), Variable("pStatisticCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPipelineExecutableInternalRepresentationsKHR",
      rename: None,
      name: "get_pipeline_executable_internal_representations_khr",
      origin: Extension("VK_KHR_pipeline_executable_properties", 270, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pExecutableInfo",
          name: "p_executable_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPipelineExecutableInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInternalRepresentationCount",
          name: "p_internal_representation_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInternalRepresentations",
          name: "p_internal_representations",
          len: Some("pInternalRepresentationCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPipelineExecutableInternalRepresentationKHR"), Variable("pInternalRepresentationCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceToolProperties",
      rename: None,
      name: "get_physical_device_tool_properties",
      origin: Vulkan1_3,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pToolCount",
          name: "p_tool_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pToolProperties",
          name: "p_tool_properties",
          len: Some("pToolCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPhysicalDeviceToolProperties"), Variable("pToolCount")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPhysicalDeviceToolPropertiesEXT",
      ],
    ),
    Function(
      original_name: "vkCreateAccelerationStructureKHR",
      rename: None,
      name: "create_acceleration_structure_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_OPAQUE_CAPTURE_ADDRESS_KHR",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAccelerationStructureCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAccelerationStructure",
          name: "p_acceleration_structure",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkAccelerationStructureKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkBuildAccelerationStructuresKHR",
      rename: None,
      name: "build_acceleration_structures_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_OPERATION_DEFERRED_KHR",
        "VK_OPERATION_NOT_DEFERRED_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "deferredOperation",
          name: "deferred_operation",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "infoCount",
          name: "info_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfos",
          name: "p_infos",
          len: Some("infoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkAccelerationStructureBuildGeometryInfoKHR"), Variable("infoCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "ppBuildRangeInfos",
          name: "pp_build_range_infos",
          len: Some("infoCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Pointer(Const, Named("VkAccelerationStructureBuildRangeInfoKHR")), Variable("infoCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetAccelerationStructureDeviceAddressKHR",
      rename: None,
      name: "get_acceleration_structure_device_address_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Named("VkDeviceAddress"),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pInfo",
          name: "p_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAccelerationStructureDeviceAddressInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateDeferredOperationKHR",
      rename: None,
      name: "create_deferred_operation_khr",
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pDeferredOperation",
          name: "p_deferred_operation",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDeferredOperationKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyDeferredOperationKHR",
      rename: None,
      name: "destroy_deferred_operation_khr",
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "operation",
          name: "operation",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeferredOperationMaxConcurrencyKHR",
      rename: None,
      name: "get_deferred_operation_max_concurrency_khr",
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
      return_type: Native(UInt(4)),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "operation",
          name: "operation",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDeferredOperationResultKHR",
      rename: None,
      name: "get_deferred_operation_result_khr",
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_NOT_READY",
      ],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "operation",
          name: "operation",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDeferredOperationJoinKHR",
      rename: None,
      name: "deferred_operation_join_khr",
      origin: Extension("VK_KHR_deferred_host_operations", 269, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_THREAD_DONE_KHR",
        "VK_THREAD_IDLE_KHR",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "operation",
          name: "operation",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeferredOperationKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreatePrivateDataSlot",
      rename: None,
      name: "create_private_data_slot",
      origin: Vulkan1_3,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPrivateDataSlotCreateInfo")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pPrivateDataSlot",
          name: "p_private_data_slot",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkPrivateDataSlot")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkCreatePrivateDataSlotEXT",
      ],
    ),
    Function(
      original_name: "vkDestroyPrivateDataSlot",
      rename: None,
      name: "destroy_private_data_slot",
      origin: Vulkan1_3,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "privateDataSlot",
          name: "private_data_slot",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkPrivateDataSlot"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkDestroyPrivateDataSlotEXT",
      ],
    ),
    Function(
      original_name: "vkSetPrivateData",
      rename: None,
      name: "set_private_data",
      origin: Vulkan1_3,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "objectType",
          name: "object_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkObjectType"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "objectHandle",
          name: "object_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "privateDataSlot",
          name: "private_data_slot",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPrivateDataSlot"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "data",
          name: "data",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkSetPrivateDataEXT",
      ],
    ),
    Function(
      original_name: "vkGetPrivateData",
      rename: None,
      name: "get_private_data",
      origin: Vulkan1_3,
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "objectType",
          name: "object_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkObjectType"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "objectHandle",
          name: "object_handle",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "privateDataSlot",
          name: "private_data_slot",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPrivateDataSlot"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pData",
          name: "p_data",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Native(UInt(8))),
          externally_synced: No,
        ),
      ],
      aliases: [
        "vkGetPrivateDataEXT",
      ],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceFragmentShadingRatesKHR",
      rename: None,
      name: "get_physical_device_fragment_shading_rates_khr",
      origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFragmentShadingRateCount",
          name: "p_fragment_shading_rate_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFragmentShadingRates",
          name: "p_fragment_shading_rates",
          len: Some("pFragmentShadingRateCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkPhysicalDeviceFragmentShadingRateKHR"), Variable("pFragmentShadingRateCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetAccelerationStructureBuildSizesKHR",
      rename: None,
      name: "get_acceleration_structure_build_sizes_khr",
      origin: Extension("VK_KHR_acceleration_structure", 151, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "buildType",
          name: "build_type",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkAccelerationStructureBuildTypeKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBuildInfo",
          name: "p_build_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkAccelerationStructureBuildGeometryInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pMaxPrimitiveCounts",
          name: "p_max_primitive_counts",
          len: Some("pBuildInfo->geometryCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Const, Native(UInt(4)), Resolve(Variable("pBuildInfo"), Variable("geometryCount"))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSizeInfo",
          name: "p_size_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkAccelerationStructureBuildSizesInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkQueueSubmit2",
      rename: None,
      name: "queue_submit2",
      origin: Vulkan1_3,
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "submitCount",
          name: "submit_count",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pSubmits",
          name: "p_submits",
          len: Some("submitCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkSubmitInfo2"), Variable("submitCount")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "fence",
          name: "fence",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Named("VkFence"),
          externally_synced: Yes,
        ),
      ],
      aliases: [
        "vkQueueSubmit2KHR",
      ],
    ),
    Function(
      original_name: "vkGetQueueCheckpointData2NV",
      rename: None,
      name: "get_queue_checkpoint_data2_nv",
      origin: Extension("VK_KHR_synchronization2", 315, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "queue",
          name: "queue",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkQueue"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCheckpointDataCount",
          name: "p_checkpoint_data_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCheckpointData",
          name: "p_checkpoint_data",
          len: Some("pCheckpointDataCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkCheckpointData2NV"), Variable("pCheckpointDataCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceVideoCapabilitiesKHR",
      rename: None,
      name: "get_physical_device_video_capabilities_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_EXTENSION_NOT_PRESENT",
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_FEATURE_NOT_PRESENT",
        "VK_ERROR_FORMAT_NOT_SUPPORTED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoProfile",
          name: "p_video_profile",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkVideoProfileKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCapabilities",
          name: "p_capabilities",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkVideoCapabilitiesKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetPhysicalDeviceVideoFormatPropertiesKHR",
      rename: None,
      name: "get_physical_device_video_format_properties_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_EXTENSION_NOT_PRESENT",
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_FORMAT_NOT_SUPPORTED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoFormatInfo",
          name: "p_video_format_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkPhysicalDeviceVideoFormatInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoFormatPropertyCount",
          name: "p_video_format_property_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoFormatProperties",
          name: "p_video_format_properties",
          len: Some("pVideoFormatPropertyCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkVideoFormatPropertiesKHR"), Variable("pVideoFormatPropertyCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateVideoSessionKHR",
      rename: None,
      name: "create_video_session_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_INCOMPATIBLE_DRIVER",
        "VK_ERROR_FEATURE_NOT_PRESENT",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkVideoSessionCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoSession",
          name: "p_video_session",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkVideoSessionKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyVideoSessionKHR",
      rename: None,
      name: "destroy_video_session_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "videoSession",
          name: "video_session",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkVideoSessionKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateVideoSessionParametersKHR",
      rename: None,
      name: "create_video_session_parameters_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_TOO_MANY_OBJECTS",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkVideoSessionParametersCreateInfoKHR")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoSessionParameters",
          name: "p_video_session_parameters",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkVideoSessionParametersKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkUpdateVideoSessionParametersKHR",
      rename: None,
      name: "update_video_session_parameters_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_TOO_MANY_OBJECTS",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "videoSessionParameters",
          name: "video_session_parameters",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkVideoSessionParametersKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pUpdateInfo",
          name: "p_update_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkVideoSessionParametersUpdateInfoKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyVideoSessionParametersKHR",
      rename: None,
      name: "destroy_video_session_parameters_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "videoSessionParameters",
          name: "video_session_parameters",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkVideoSessionParametersKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetVideoSessionMemoryRequirementsKHR",
      rename: None,
      name: "get_video_session_memory_requirements_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_INCOMPLETE",
      ],
      error_codes: [
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "videoSession",
          name: "video_session",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkVideoSessionKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoSessionMemoryRequirementsCount",
          name: "p_video_session_memory_requirements_count",
          len: None,
          no_auto_validity: false,
          optionality: Sometimes,
          ty: Pointer(Mutable, Native(UInt(4))),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoSessionMemoryRequirements",
          name: "p_video_session_memory_requirements",
          len: Some("pVideoSessionMemoryRequirementsCount"),
          no_auto_validity: false,
          optionality: Yes,
          ty: Slice(Mutable, Named("VkVideoGetMemoryPropertiesKHR"), Variable("pVideoSessionMemoryRequirementsCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkBindVideoSessionMemoryKHR",
      rename: None,
      name: "bind_video_session_memory_khr",
      origin: Extension("VK_KHR_video_queue", 24, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "videoSession",
          name: "video_session",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkVideoSessionKHR"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "videoSessionBindMemoryCount",
          name: "video_session_bind_memory_count",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pVideoSessionBindMemories",
          name: "p_video_session_bind_memories",
          len: Some("videoSessionBindMemoryCount"),
          no_auto_validity: false,
          optionality: No,
          ty: Slice(Const, Named("VkVideoBindMemoryKHR"), Variable("videoSessionBindMemoryCount")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateCuModuleNVX",
      rename: None,
      name: "create_cu_module_nvx",
      origin: Extension("VK_NVX_binary_import", 30, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkCuModuleCreateInfoNVX")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pModule",
          name: "p_module",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkCuModuleNVX")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateCuFunctionNVX",
      rename: None,
      name: "create_cu_function_nvx",
      origin: Extension("VK_NVX_binary_import", 30, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkCuFunctionCreateInfoNVX")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pFunction",
          name: "p_function",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkCuFunctionNVX")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyCuModuleNVX",
      rename: None,
      name: "destroy_cu_module_nvx",
      origin: Extension("VK_NVX_binary_import", 30, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "module",
          name: "module",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkCuModuleNVX"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyCuFunctionNVX",
      rename: None,
      name: "destroy_cu_function_nvx",
      origin: Extension("VK_NVX_binary_import", 30, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "function",
          name: "function",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkCuFunctionNVX"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkSetDeviceMemoryPriorityEXT",
      rename: None,
      name: "set_device_memory_priority_ext",
      origin: Extension("VK_EXT_pageable_device_local_memory", 413, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "memory",
          name: "memory",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDeviceMemory"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "priority",
          name: "priority",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(Float),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkAcquireDrmDisplayEXT",
      rename: None,
      name: "acquire_drm_display_ext",
      origin: Extension("VK_EXT_acquire_drm_display", 286, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "drmFd",
          name: "drm_fd",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(Int(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDisplayKHR"),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDrmDisplayEXT",
      rename: None,
      name: "get_drm_display_ext",
      origin: Extension("VK_EXT_acquire_drm_display", 286, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
      ],
      arguments: [
        FunctionArgument(
          original_name: "physicalDevice",
          name: "physical_device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkPhysicalDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "drmFd",
          name: "drm_fd",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(Int(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "connectorId",
          name: "connector_id",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(4)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "display",
          name: "display",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDisplayKHR")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkWaitForPresentKHR",
      rename: None,
      name: "wait_for_present_khr",
      origin: Extension("VK_KHR_present_wait", 249, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
        "VK_TIMEOUT",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_OUT_OF_DEVICE_MEMORY",
        "VK_ERROR_DEVICE_LOST",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "swapchain",
          name: "swapchain",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkSwapchainKHR"),
          externally_synced: Yes,
        ),
        FunctionArgument(
          original_name: "presentId",
          name: "present_id",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "timeout",
          name: "timeout",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Native(UInt(8)),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkCreateBufferCollectionFUCHSIA",
      rename: None,
      name: "create_buffer_collection_fuchsia",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INVALID_EXTERNAL_HANDLE",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCreateInfo",
          name: "p_create_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkBufferCollectionCreateInfoFUCHSIA")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pCollection",
          name: "p_collection",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkBufferCollectionFUCHSIA")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkSetBufferCollectionBufferConstraintsFUCHSIA",
      rename: None,
      name: "set_buffer_collection_buffer_constraints_fuchsia",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_FORMAT_NOT_SUPPORTED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "collection",
          name: "collection",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkBufferCollectionFUCHSIA"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBufferConstraintsInfo",
          name: "p_buffer_constraints_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkBufferConstraintsInfoFUCHSIA")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkSetBufferCollectionImageConstraintsFUCHSIA",
      rename: None,
      name: "set_buffer_collection_image_constraints_fuchsia",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_INITIALIZATION_FAILED",
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_FORMAT_NOT_SUPPORTED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "collection",
          name: "collection",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkBufferCollectionFUCHSIA"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pImageConstraintsInfo",
          name: "p_image_constraints_info",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkImageConstraintsInfoFUCHSIA")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkDestroyBufferCollectionFUCHSIA",
      rename: None,
      name: "destroy_buffer_collection_fuchsia",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "collection",
          name: "collection",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkBufferCollectionFUCHSIA"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pAllocator",
          name: "p_allocator",
          len: None,
          no_auto_validity: false,
          optionality: Yes,
          ty: Pointer(Const, Named("VkAllocationCallbacks")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetBufferCollectionPropertiesFUCHSIA",
      rename: None,
      name: "get_buffer_collection_properties_fuchsia",
      origin: Extension("VK_FUCHSIA_buffer_collection", 367, false),
      return_type: Named("VkResult"),
      success_codes: [
        "VK_SUCCESS",
      ],
      error_codes: [
        "VK_ERROR_OUT_OF_HOST_MEMORY",
        "VK_ERROR_INITIALIZATION_FAILED",
      ],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "collection",
          name: "collection",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkBufferCollectionFUCHSIA"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pProperties",
          name: "p_properties",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkBufferCollectionPropertiesFUCHSIA")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDescriptorSetLayoutHostMappingInfoVALVE",
      rename: None,
      name: "get_descriptor_set_layout_host_mapping_info_valve",
      origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pBindingReference",
          name: "p_binding_reference",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Const, Named("VkDescriptorSetBindingReferenceVALVE")),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "pHostMapping",
          name: "p_host_mapping",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Named("VkDescriptorSetLayoutHostMappingInfoVALVE")),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
    Function(
      original_name: "vkGetDescriptorSetHostMappingVALVE",
      rename: None,
      name: "get_descriptor_set_host_mapping_valve",
      origin: Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
      return_type: Native(Void),
      success_codes: [],
      error_codes: [],
      arguments: [
        FunctionArgument(
          original_name: "device",
          name: "device",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDevice"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "descriptorSet",
          name: "descriptor_set",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Named("VkDescriptorSet"),
          externally_synced: No,
        ),
        FunctionArgument(
          original_name: "ppData",
          name: "pp_data",
          len: None,
          no_auto_validity: false,
          optionality: No,
          ty: Pointer(Mutable, Pointer(Mutable, Native(Void))),
          externally_synced: No,
        ),
      ],
      aliases: [],
    ),
  ],
  commands: [
    Command(
      function: Function(
        original_name: "vkCmdBindPipeline",
        rename: None,
        name: "cmd_bind_pipeline",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pipelineBindPoint",
            name: "pipeline_bind_point",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineBindPoint"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pipeline",
            name: "pipeline",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipeline"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetViewport",
        rename: None,
        name: "cmd_set_viewport",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstViewport",
            name: "first_viewport",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "viewportCount",
            name: "viewport_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pViewports",
            name: "p_viewports",
            len: Some("viewportCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkViewport"), Variable("viewportCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetScissor",
        rename: None,
        name: "cmd_set_scissor",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstScissor",
            name: "first_scissor",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "scissorCount",
            name: "scissor_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pScissors",
            name: "p_scissors",
            len: Some("scissorCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkRect2D"), Variable("scissorCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetLineWidth",
        rename: None,
        name: "cmd_set_line_width",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "lineWidth",
            name: "line_width",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(Float),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDepthBias",
        rename: None,
        name: "cmd_set_depth_bias",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "depthBiasConstantFactor",
            name: "depth_bias_constant_factor",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(Float),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "depthBiasClamp",
            name: "depth_bias_clamp",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(Float),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "depthBiasSlopeFactor",
            name: "depth_bias_slope_factor",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(Float),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetBlendConstants",
        rename: None,
        name: "cmd_set_blend_constants",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "blendConstants",
            name: "blend_constants",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Array(Native(Float), ConstantInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDepthBounds",
        rename: None,
        name: "cmd_set_depth_bounds",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "minDepthBounds",
            name: "min_depth_bounds",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(Float),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "maxDepthBounds",
            name: "max_depth_bounds",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(Float),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetStencilCompareMask",
        rename: None,
        name: "cmd_set_stencil_compare_mask",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "faceMask",
            name: "face_mask",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkStencilFaceFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "compareMask",
            name: "compare_mask",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetStencilWriteMask",
        rename: None,
        name: "cmd_set_stencil_write_mask",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "faceMask",
            name: "face_mask",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkStencilFaceFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "writeMask",
            name: "write_mask",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetStencilReference",
        rename: None,
        name: "cmd_set_stencil_reference",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "faceMask",
            name: "face_mask",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkStencilFaceFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "reference",
            name: "reference",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBindDescriptorSets",
        rename: None,
        name: "cmd_bind_descriptor_sets",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pipelineBindPoint",
            name: "pipeline_bind_point",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineBindPoint"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "layout",
            name: "layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstSet",
            name: "first_set",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "descriptorSetCount",
            name: "descriptor_set_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pDescriptorSets",
            name: "p_descriptor_sets",
            len: Some("descriptorSetCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkDescriptorSet"), Variable("descriptorSetCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dynamicOffsetCount",
            name: "dynamic_offset_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pDynamicOffsets",
            name: "p_dynamic_offsets",
            len: Some("dynamicOffsetCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Native(UInt(4)), Variable("dynamicOffsetCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBindIndexBuffer",
        rename: None,
        name: "cmd_bind_index_buffer",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "buffer",
            name: "buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "indexType",
            name: "index_type",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkIndexType"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBindVertexBuffers",
        rename: None,
        name: "cmd_bind_vertex_buffers",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstBinding",
            name: "first_binding",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "bindingCount",
            name: "binding_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pBuffers",
            name: "p_buffers",
            len: Some("bindingCount"),
            no_auto_validity: false,
            optionality: Sometimes,
            ty: Slice(Const, Named("VkBuffer"), Variable("bindingCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pOffsets",
            name: "p_offsets",
            len: Some("bindingCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkDeviceSize"), Variable("bindingCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDraw",
        rename: None,
        name: "cmd_draw",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "vertexCount",
            name: "vertex_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "instanceCount",
            name: "instance_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstVertex",
            name: "first_vertex",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstInstance",
            name: "first_instance",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawIndexed",
        rename: None,
        name: "cmd_draw_indexed",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "indexCount",
            name: "index_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "instanceCount",
            name: "instance_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstIndex",
            name: "first_index",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "vertexOffset",
            name: "vertex_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(Int(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstInstance",
            name: "first_instance",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawMultiEXT",
        rename: None,
        name: "cmd_draw_multi_ext",
        origin: Extension("VK_EXT_multi_draw", 393, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "drawCount",
            name: "draw_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pVertexInfo",
            name: "p_vertex_info",
            len: Some("drawCount"),
            no_auto_validity: true,
            optionality: No,
            ty: Slice(Const, Named("VkMultiDrawInfoEXT"), Variable("drawCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "instanceCount",
            name: "instance_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstInstance",
            name: "first_instance",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawMultiIndexedEXT",
        rename: None,
        name: "cmd_draw_multi_indexed_ext",
        origin: Extension("VK_EXT_multi_draw", 393, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "drawCount",
            name: "draw_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pIndexInfo",
            name: "p_index_info",
            len: Some("drawCount"),
            no_auto_validity: true,
            optionality: No,
            ty: Slice(Const, Named("VkMultiDrawIndexedInfoEXT"), Variable("drawCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "instanceCount",
            name: "instance_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstInstance",
            name: "first_instance",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pVertexOffset",
            name: "p_vertex_offset",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Pointer(Const, Native(Int(4))),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawIndirect",
        rename: None,
        name: "cmd_draw_indirect",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "buffer",
            name: "buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "drawCount",
            name: "draw_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawIndexedIndirect",
        rename: None,
        name: "cmd_draw_indexed_indirect",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "buffer",
            name: "buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "drawCount",
            name: "draw_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDispatch",
        rename: None,
        name: "cmd_dispatch",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "groupCountX",
            name: "group_count_x",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "groupCountY",
            name: "group_count_y",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "groupCountZ",
            name: "group_count_z",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDispatchIndirect",
        rename: None,
        name: "cmd_dispatch_indirect",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "buffer",
            name: "buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSubpassShadingHUAWEI",
        rename: None,
        name: "cmd_subpass_shading_huawei",
        origin: Extension("VK_HUAWEI_subpass_shading", 370, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyBuffer",
        rename: None,
        name: "cmd_copy_buffer",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "srcBuffer",
            name: "src_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstBuffer",
            name: "dst_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "regionCount",
            name: "region_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRegions",
            name: "p_regions",
            len: Some("regionCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkBufferCopy"), Variable("regionCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyImage",
        rename: None,
        name: "cmd_copy_image",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "srcImage",
            name: "src_image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "srcImageLayout",
            name: "src_image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstImage",
            name: "dst_image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstImageLayout",
            name: "dst_image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "regionCount",
            name: "region_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRegions",
            name: "p_regions",
            len: Some("regionCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkImageCopy"), Variable("regionCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBlitImage",
        rename: None,
        name: "cmd_blit_image",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "srcImage",
            name: "src_image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "srcImageLayout",
            name: "src_image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstImage",
            name: "dst_image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstImageLayout",
            name: "dst_image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "regionCount",
            name: "region_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRegions",
            name: "p_regions",
            len: Some("regionCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkImageBlit"), Variable("regionCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "filter",
            name: "filter",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkFilter"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyBufferToImage",
        rename: None,
        name: "cmd_copy_buffer_to_image",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "srcBuffer",
            name: "src_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstImage",
            name: "dst_image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstImageLayout",
            name: "dst_image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "regionCount",
            name: "region_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRegions",
            name: "p_regions",
            len: Some("regionCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkBufferImageCopy"), Variable("regionCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyImageToBuffer",
        rename: None,
        name: "cmd_copy_image_to_buffer",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "srcImage",
            name: "src_image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "srcImageLayout",
            name: "src_image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstBuffer",
            name: "dst_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "regionCount",
            name: "region_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRegions",
            name: "p_regions",
            len: Some("regionCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkBufferImageCopy"), Variable("regionCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdUpdateBuffer",
        rename: None,
        name: "cmd_update_buffer",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "dstBuffer",
            name: "dst_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstOffset",
            name: "dst_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dataSize",
            name: "data_size",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pData",
            name: "p_data",
            len: Some("dataSize"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Native(Void), Variable("dataSize")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdFillBuffer",
        rename: None,
        name: "cmd_fill_buffer",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "dstBuffer",
            name: "dst_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstOffset",
            name: "dst_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "size",
            name: "size",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "data",
            name: "data",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdClearColorImage",
        rename: None,
        name: "cmd_clear_color_image",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "image",
            name: "image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "imageLayout",
            name: "image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pColor",
            name: "p_color",
            len: None,
            no_auto_validity: true,
            optionality: No,
            ty: Pointer(Const, Named("VkClearColorValue")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "rangeCount",
            name: "range_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRanges",
            name: "p_ranges",
            len: Some("rangeCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkImageSubresourceRange"), Variable("rangeCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdClearDepthStencilImage",
        rename: None,
        name: "cmd_clear_depth_stencil_image",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "image",
            name: "image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "imageLayout",
            name: "image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pDepthStencil",
            name: "p_depth_stencil",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkClearDepthStencilValue")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "rangeCount",
            name: "range_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRanges",
            name: "p_ranges",
            len: Some("rangeCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkImageSubresourceRange"), Variable("rangeCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdClearAttachments",
        rename: None,
        name: "cmd_clear_attachments",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "attachmentCount",
            name: "attachment_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pAttachments",
            name: "p_attachments",
            len: Some("attachmentCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkClearAttachment"), Variable("attachmentCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "rectCount",
            name: "rect_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRects",
            name: "p_rects",
            len: Some("rectCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkClearRect"), Variable("rectCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdResolveImage",
        rename: None,
        name: "cmd_resolve_image",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "srcImage",
            name: "src_image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "srcImageLayout",
            name: "src_image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstImage",
            name: "dst_image",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImage"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstImageLayout",
            name: "dst_image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "regionCount",
            name: "region_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pRegions",
            name: "p_regions",
            len: Some("regionCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkImageResolve"), Variable("regionCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetEvent",
        rename: None,
        name: "cmd_set_event",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "event",
            name: "event",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkEvent"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stageMask",
            name: "stage_mask",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdResetEvent",
        rename: None,
        name: "cmd_reset_event",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "event",
            name: "event",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkEvent"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stageMask",
            name: "stage_mask",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdWaitEvents",
        rename: None,
        name: "cmd_wait_events",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "eventCount",
            name: "event_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pEvents",
            name: "p_events",
            len: Some("eventCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkEvent"), Variable("eventCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "srcStageMask",
            name: "src_stage_mask",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstStageMask",
            name: "dst_stage_mask",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "memoryBarrierCount",
            name: "memory_barrier_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pMemoryBarriers",
            name: "p_memory_barriers",
            len: Some("memoryBarrierCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkMemoryBarrier"), Variable("memoryBarrierCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "bufferMemoryBarrierCount",
            name: "buffer_memory_barrier_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pBufferMemoryBarriers",
            name: "p_buffer_memory_barriers",
            len: Some("bufferMemoryBarrierCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkBufferMemoryBarrier"), Variable("bufferMemoryBarrierCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "imageMemoryBarrierCount",
            name: "image_memory_barrier_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pImageMemoryBarriers",
            name: "p_image_memory_barriers",
            len: Some("imageMemoryBarrierCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkImageMemoryBarrier"), Variable("imageMemoryBarrierCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdPipelineBarrier",
        rename: None,
        name: "cmd_pipeline_barrier",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "srcStageMask",
            name: "src_stage_mask",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstStageMask",
            name: "dst_stage_mask",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dependencyFlags",
            name: "dependency_flags",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkDependencyFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "memoryBarrierCount",
            name: "memory_barrier_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pMemoryBarriers",
            name: "p_memory_barriers",
            len: Some("memoryBarrierCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkMemoryBarrier"), Variable("memoryBarrierCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "bufferMemoryBarrierCount",
            name: "buffer_memory_barrier_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pBufferMemoryBarriers",
            name: "p_buffer_memory_barriers",
            len: Some("bufferMemoryBarrierCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkBufferMemoryBarrier"), Variable("bufferMemoryBarrierCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "imageMemoryBarrierCount",
            name: "image_memory_barrier_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pImageMemoryBarriers",
            name: "p_image_memory_barriers",
            len: Some("imageMemoryBarrierCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkImageMemoryBarrier"), Variable("imageMemoryBarrierCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginQuery",
        rename: None,
        name: "cmd_begin_query",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "query",
            name: "query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "flags",
            name: "flags",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkQueryControlFlags"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 27,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndQuery",
        rename: None,
        name: "cmd_end_query",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "query",
            name: "query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 27,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginConditionalRenderingEXT",
        rename: None,
        name: "cmd_begin_conditional_rendering_ext",
        origin: Extension("VK_EXT_conditional_rendering", 82, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pConditionalRenderingBegin",
            name: "p_conditional_rendering_begin",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkConditionalRenderingBeginInfoEXT")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndConditionalRenderingEXT",
        rename: None,
        name: "cmd_end_conditional_rendering_ext",
        origin: Extension("VK_EXT_conditional_rendering", 82, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdResetQueryPool",
        rename: None,
        name: "cmd_reset_query_pool",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstQuery",
            name: "first_query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "queryCount",
            name: "query_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 27,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdWriteTimestamp",
        rename: None,
        name: "cmd_write_timestamp",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pipelineStage",
            name: "pipeline_stage",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineStageFlagBits"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "query",
            name: "query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 31,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyQueryPoolResults",
        rename: None,
        name: "cmd_copy_query_pool_results",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstQuery",
            name: "first_query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "queryCount",
            name: "query_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstBuffer",
            name: "dst_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstOffset",
            name: "dst_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "flags",
            name: "flags",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkQueryResultFlags"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdPushConstants",
        rename: None,
        name: "cmd_push_constants",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "layout",
            name: "layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stageFlags",
            name: "stage_flags",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkShaderStageFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "size",
            name: "size",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pValues",
            name: "p_values",
            len: Some("size"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Native(Void), Variable("size")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginRenderPass",
        rename: None,
        name: "cmd_begin_render_pass",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pRenderPassBegin",
            name: "p_render_pass_begin",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkRenderPassBeginInfo")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "contents",
            name: "contents",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkSubpassContents"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdNextSubpass",
        rename: None,
        name: "cmd_next_subpass",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "contents",
            name: "contents",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkSubpassContents"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndRenderPass",
        rename: None,
        name: "cmd_end_render_pass",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdExecuteCommands",
        rename: None,
        name: "cmd_execute_commands",
        origin: Vulkan1_0,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "commandBufferCount",
            name: "command_buffer_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCommandBuffers",
            name: "p_command_buffers",
            len: Some("commandBufferCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkCommandBuffer"), Variable("commandBufferCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDebugMarkerBeginEXT",
        rename: None,
        name: "cmd_debug_marker_begin_ext",
        origin: Extension("VK_EXT_debug_marker", 23, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pMarkerInfo",
            name: "p_marker_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkDebugMarkerMarkerInfoEXT")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDebugMarkerEndEXT",
        rename: None,
        name: "cmd_debug_marker_end_ext",
        origin: Extension("VK_EXT_debug_marker", 23, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDebugMarkerInsertEXT",
        rename: None,
        name: "cmd_debug_marker_insert_ext",
        origin: Extension("VK_EXT_debug_marker", 23, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pMarkerInfo",
            name: "p_marker_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkDebugMarkerMarkerInfoEXT")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdExecuteGeneratedCommandsNV",
        rename: None,
        name: "cmd_execute_generated_commands_nv",
        origin: Extension("VK_NV_device_generated_commands", 278, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "isPreprocessed",
            name: "is_preprocessed",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pGeneratedCommandsInfo",
            name: "p_generated_commands_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkGeneratedCommandsInfoNV")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdPreprocessGeneratedCommandsNV",
        rename: None,
        name: "cmd_preprocess_generated_commands_nv",
        origin: Extension("VK_NV_device_generated_commands", 278, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pGeneratedCommandsInfo",
            name: "p_generated_commands_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkGeneratedCommandsInfoNV")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBindPipelineShaderGroupNV",
        rename: None,
        name: "cmd_bind_pipeline_shader_group_nv",
        origin: Extension("VK_NV_device_generated_commands", 278, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pipelineBindPoint",
            name: "pipeline_bind_point",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineBindPoint"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pipeline",
            name: "pipeline",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipeline"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "groupIndex",
            name: "group_index",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdPushDescriptorSetKHR",
        rename: None,
        name: "cmd_push_descriptor_set_khr",
        origin: Extension("VK_KHR_push_descriptor", 81, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pipelineBindPoint",
            name: "pipeline_bind_point",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineBindPoint"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "layout",
            name: "layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "set",
            name: "set",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "descriptorWriteCount",
            name: "descriptor_write_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pDescriptorWrites",
            name: "p_descriptor_writes",
            len: Some("descriptorWriteCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkWriteDescriptorSet"), Variable("descriptorWriteCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDeviceMask",
        rename: None,
        name: "cmd_set_device_mask",
        origin: Vulkan1_1,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "deviceMask",
            name: "device_mask",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetDeviceMaskKHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDispatchBase",
        rename: None,
        name: "cmd_dispatch_base",
        origin: Vulkan1_1,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "baseGroupX",
            name: "base_group_x",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "baseGroupY",
            name: "base_group_y",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "baseGroupZ",
            name: "base_group_z",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "groupCountX",
            name: "group_count_x",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "groupCountY",
            name: "group_count_y",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "groupCountZ",
            name: "group_count_z",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdDispatchBaseKHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdPushDescriptorSetWithTemplateKHR",
        rename: None,
        name: "cmd_push_descriptor_set_with_template_khr",
        origin: Extension("VK_KHR_descriptor_update_template", 86, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "descriptorUpdateTemplate",
            name: "descriptor_update_template",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDescriptorUpdateTemplate"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "layout",
            name: "layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPipelineLayout"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "set",
            name: "set",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pData",
            name: "p_data",
            len: None,
            no_auto_validity: true,
            optionality: No,
            ty: Pointer(Const, Native(Void)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetViewportWScalingNV",
        rename: None,
        name: "cmd_set_viewport_w_scaling_nv",
        origin: Extension("VK_NV_clip_space_w_scaling", 88, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstViewport",
            name: "first_viewport",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "viewportCount",
            name: "viewport_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pViewportWScalings",
            name: "p_viewport_w_scalings",
            len: Some("viewportCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkViewportWScalingNV"), Variable("viewportCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDiscardRectangleEXT",
        rename: None,
        name: "cmd_set_discard_rectangle_ext",
        origin: Extension("VK_EXT_discard_rectangles", 100, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstDiscardRectangle",
            name: "first_discard_rectangle",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "discardRectangleCount",
            name: "discard_rectangle_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pDiscardRectangles",
            name: "p_discard_rectangles",
            len: Some("discardRectangleCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkRect2D"), Variable("discardRectangleCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetSampleLocationsEXT",
        rename: None,
        name: "cmd_set_sample_locations_ext",
        origin: Extension("VK_EXT_sample_locations", 144, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pSampleLocationsInfo",
            name: "p_sample_locations_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkSampleLocationsInfoEXT")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginDebugUtilsLabelEXT",
        rename: None,
        name: "cmd_begin_debug_utils_label_ext",
        origin: Extension("VK_EXT_debug_utils", 129, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pLabelInfo",
            name: "p_label_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkDebugUtilsLabelEXT")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndDebugUtilsLabelEXT",
        rename: None,
        name: "cmd_end_debug_utils_label_ext",
        origin: Extension("VK_EXT_debug_utils", 129, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdInsertDebugUtilsLabelEXT",
        rename: None,
        name: "cmd_insert_debug_utils_label_ext",
        origin: Extension("VK_EXT_debug_utils", 129, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pLabelInfo",
            name: "p_label_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkDebugUtilsLabelEXT")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdWriteBufferMarkerAMD",
        rename: None,
        name: "cmd_write_buffer_marker_amd",
        origin: Extension("VK_AMD_buffer_marker", 180, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pipelineStage",
            name: "pipeline_stage",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlagBits"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstBuffer",
            name: "dst_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstOffset",
            name: "dst_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "marker",
            name: "marker",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginRenderPass2",
        rename: None,
        name: "cmd_begin_render_pass2",
        origin: Vulkan1_2,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pRenderPassBegin",
            name: "p_render_pass_begin",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkRenderPassBeginInfo")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pSubpassBeginInfo",
            name: "p_subpass_begin_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkSubpassBeginInfo")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdBeginRenderPass2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdNextSubpass2",
        rename: None,
        name: "cmd_next_subpass2",
        origin: Vulkan1_2,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pSubpassBeginInfo",
            name: "p_subpass_begin_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkSubpassBeginInfo")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pSubpassEndInfo",
            name: "p_subpass_end_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkSubpassEndInfo")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdNextSubpass2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndRenderPass2",
        rename: None,
        name: "cmd_end_render_pass2",
        origin: Vulkan1_2,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pSubpassEndInfo",
            name: "p_subpass_end_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkSubpassEndInfo")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdEndRenderPass2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawIndirectCount",
        rename: None,
        name: "cmd_draw_indirect_count",
        origin: Vulkan1_2,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "buffer",
            name: "buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "countBuffer",
            name: "count_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "countBufferOffset",
            name: "count_buffer_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "maxDrawCount",
            name: "max_draw_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdDrawIndirectCountKHR",
          "vkCmdDrawIndirectCountAMD",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawIndexedIndirectCount",
        rename: None,
        name: "cmd_draw_indexed_indirect_count",
        origin: Vulkan1_2,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "buffer",
            name: "buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "countBuffer",
            name: "count_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "countBufferOffset",
            name: "count_buffer_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "maxDrawCount",
            name: "max_draw_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdDrawIndexedIndirectCountKHR",
          "vkCmdDrawIndexedIndirectCountAMD",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetCheckpointNV",
        rename: None,
        name: "cmd_set_checkpoint_nv",
        origin: Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pCheckpointMarker",
            name: "p_checkpoint_marker",
            len: None,
            no_auto_validity: true,
            optionality: No,
            ty: Pointer(Const, Native(Void)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBindTransformFeedbackBuffersEXT",
        rename: None,
        name: "cmd_bind_transform_feedback_buffers_ext",
        origin: Extension("VK_EXT_transform_feedback", 29, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstBinding",
            name: "first_binding",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "bindingCount",
            name: "binding_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pBuffers",
            name: "p_buffers",
            len: Some("bindingCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkBuffer"), Variable("bindingCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pOffsets",
            name: "p_offsets",
            len: Some("bindingCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkDeviceSize"), Variable("bindingCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pSizes",
            name: "p_sizes",
            len: Some("bindingCount"),
            no_auto_validity: true,
            optionality: Yes,
            ty: Slice(Const, Named("VkDeviceSize"), Variable("bindingCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginTransformFeedbackEXT",
        rename: None,
        name: "cmd_begin_transform_feedback_ext",
        origin: Extension("VK_EXT_transform_feedback", 29, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstCounterBuffer",
            name: "first_counter_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "counterBufferCount",
            name: "counter_buffer_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCounterBuffers",
            name: "p_counter_buffers",
            len: Some("counterBufferCount"),
            no_auto_validity: true,
            optionality: No,
            ty: Slice(Const, Named("VkBuffer"), Variable("counterBufferCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCounterBufferOffsets",
            name: "p_counter_buffer_offsets",
            len: Some("counterBufferCount"),
            no_auto_validity: false,
            optionality: Yes,
            ty: Slice(Const, Named("VkDeviceSize"), Variable("counterBufferCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndTransformFeedbackEXT",
        rename: None,
        name: "cmd_end_transform_feedback_ext",
        origin: Extension("VK_EXT_transform_feedback", 29, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstCounterBuffer",
            name: "first_counter_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "counterBufferCount",
            name: "counter_buffer_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCounterBuffers",
            name: "p_counter_buffers",
            len: Some("counterBufferCount"),
            no_auto_validity: true,
            optionality: No,
            ty: Slice(Const, Named("VkBuffer"), Variable("counterBufferCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCounterBufferOffsets",
            name: "p_counter_buffer_offsets",
            len: Some("counterBufferCount"),
            no_auto_validity: false,
            optionality: Yes,
            ty: Slice(Const, Named("VkDeviceSize"), Variable("counterBufferCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginQueryIndexedEXT",
        rename: None,
        name: "cmd_begin_query_indexed_ext",
        origin: Extension("VK_EXT_transform_feedback", 29, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "query",
            name: "query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "flags",
            name: "flags",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkQueryControlFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "index",
            name: "index",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndQueryIndexedEXT",
        rename: None,
        name: "cmd_end_query_indexed_ext",
        origin: Extension("VK_EXT_transform_feedback", 29, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "query",
            name: "query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "index",
            name: "index",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawIndirectByteCountEXT",
        rename: None,
        name: "cmd_draw_indirect_byte_count_ext",
        origin: Extension("VK_EXT_transform_feedback", 29, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "instanceCount",
            name: "instance_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstInstance",
            name: "first_instance",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "counterBuffer",
            name: "counter_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "counterBufferOffset",
            name: "counter_buffer_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "counterOffset",
            name: "counter_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "vertexStride",
            name: "vertex_stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetExclusiveScissorNV",
        rename: None,
        name: "cmd_set_exclusive_scissor_nv",
        origin: Extension("VK_NV_scissor_exclusive", 206, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstExclusiveScissor",
            name: "first_exclusive_scissor",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "exclusiveScissorCount",
            name: "exclusive_scissor_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pExclusiveScissors",
            name: "p_exclusive_scissors",
            len: Some("exclusiveScissorCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkRect2D"), Variable("exclusiveScissorCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBindShadingRateImageNV",
        rename: None,
        name: "cmd_bind_shading_rate_image_nv",
        origin: Extension("VK_NV_shading_rate_image", 165, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "imageView",
            name: "image_view",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkImageView"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "imageLayout",
            name: "image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetViewportShadingRatePaletteNV",
        rename: None,
        name: "cmd_set_viewport_shading_rate_palette_nv",
        origin: Extension("VK_NV_shading_rate_image", 165, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstViewport",
            name: "first_viewport",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "viewportCount",
            name: "viewport_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pShadingRatePalettes",
            name: "p_shading_rate_palettes",
            len: Some("viewportCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkShadingRatePaletteNV"), Variable("viewportCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetCoarseSampleOrderNV",
        rename: None,
        name: "cmd_set_coarse_sample_order_nv",
        origin: Extension("VK_NV_shading_rate_image", 165, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "sampleOrderType",
            name: "sample_order_type",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCoarseSampleOrderTypeNV"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "customSampleOrderCount",
            name: "custom_sample_order_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCustomSampleOrders",
            name: "p_custom_sample_orders",
            len: Some("customSampleOrderCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkCoarseSampleOrderCustomNV"), Variable("customSampleOrderCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawMeshTasksNV",
        rename: None,
        name: "cmd_draw_mesh_tasks_nv",
        origin: Extension("VK_NV_mesh_shader", 203, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "taskCount",
            name: "task_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstTask",
            name: "first_task",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawMeshTasksIndirectNV",
        rename: None,
        name: "cmd_draw_mesh_tasks_indirect_nv",
        origin: Extension("VK_NV_mesh_shader", 203, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "buffer",
            name: "buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "drawCount",
            name: "draw_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDrawMeshTasksIndirectCountNV",
        rename: None,
        name: "cmd_draw_mesh_tasks_indirect_count_nv",
        origin: Extension("VK_NV_mesh_shader", 203, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "buffer",
            name: "buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "offset",
            name: "offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "countBuffer",
            name: "count_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "countBufferOffset",
            name: "count_buffer_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "maxDrawCount",
            name: "max_draw_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stride",
            name: "stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBindInvocationMaskHUAWEI",
        rename: None,
        name: "cmd_bind_invocation_mask_huawei",
        origin: Extension("VK_HUAWEI_invocation_mask", 371, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "imageView",
            name: "image_view",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkImageView"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "imageLayout",
            name: "image_layout",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkImageLayout"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyAccelerationStructureNV",
        rename: None,
        name: "cmd_copy_acceleration_structure_nv",
        origin: Extension("VK_NV_ray_tracing", 166, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "dst",
            name: "dst",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkAccelerationStructureNV"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "src",
            name: "src",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkAccelerationStructureNV"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "mode",
            name: "mode",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCopyAccelerationStructureModeKHR"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyAccelerationStructureKHR",
        rename: None,
        name: "cmd_copy_acceleration_structure_khr",
        origin: Extension("VK_KHR_acceleration_structure", 151, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pInfo",
            name: "p_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkCopyAccelerationStructureInfoKHR")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyAccelerationStructureToMemoryKHR",
        rename: None,
        name: "cmd_copy_acceleration_structure_to_memory_khr",
        origin: Extension("VK_KHR_acceleration_structure", 151, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pInfo",
            name: "p_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkCopyAccelerationStructureToMemoryInfoKHR")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyMemoryToAccelerationStructureKHR",
        rename: None,
        name: "cmd_copy_memory_to_acceleration_structure_khr",
        origin: Extension("VK_KHR_acceleration_structure", 151, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pInfo",
            name: "p_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkCopyMemoryToAccelerationStructureInfoKHR")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdWriteAccelerationStructuresPropertiesKHR",
        rename: None,
        name: "cmd_write_acceleration_structures_properties_khr",
        origin: Extension("VK_KHR_acceleration_structure", 151, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "accelerationStructureCount",
            name: "acceleration_structure_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pAccelerationStructures",
            name: "p_acceleration_structures",
            len: Some("accelerationStructureCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkAccelerationStructureKHR"), Variable("accelerationStructureCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "queryType",
            name: "query_type",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryType"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstQuery",
            name: "first_query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdWriteAccelerationStructuresPropertiesNV",
        rename: None,
        name: "cmd_write_acceleration_structures_properties_nv",
        origin: Extension("VK_NV_ray_tracing", 166, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "accelerationStructureCount",
            name: "acceleration_structure_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pAccelerationStructures",
            name: "p_acceleration_structures",
            len: Some("accelerationStructureCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkAccelerationStructureNV"), Variable("accelerationStructureCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "queryType",
            name: "query_type",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryType"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "firstQuery",
            name: "first_query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBuildAccelerationStructureNV",
        rename: None,
        name: "cmd_build_acceleration_structure_nv",
        origin: Extension("VK_NV_ray_tracing", 166, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pInfo",
            name: "p_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkAccelerationStructureInfoNV")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "instanceData",
            name: "instance_data",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "instanceOffset",
            name: "instance_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "update",
            name: "update",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dst",
            name: "dst",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkAccelerationStructureNV"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "src",
            name: "src",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkAccelerationStructureNV"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "scratch",
            name: "scratch",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "scratchOffset",
            name: "scratch_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdTraceRaysKHR",
        rename: None,
        name: "cmd_trace_rays_khr",
        origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pRaygenShaderBindingTable",
            name: "p_raygen_shader_binding_table",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkStridedDeviceAddressRegionKHR")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pMissShaderBindingTable",
            name: "p_miss_shader_binding_table",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkStridedDeviceAddressRegionKHR")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pHitShaderBindingTable",
            name: "p_hit_shader_binding_table",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkStridedDeviceAddressRegionKHR")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCallableShaderBindingTable",
            name: "p_callable_shader_binding_table",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkStridedDeviceAddressRegionKHR")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "width",
            name: "width",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "height",
            name: "height",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "depth",
            name: "depth",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdTraceRaysNV",
        rename: None,
        name: "cmd_trace_rays_nv",
        origin: Extension("VK_NV_ray_tracing", 166, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "raygenShaderBindingTableBuffer",
            name: "raygen_shader_binding_table_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "raygenShaderBindingOffset",
            name: "raygen_shader_binding_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "missShaderBindingTableBuffer",
            name: "miss_shader_binding_table_buffer",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "missShaderBindingOffset",
            name: "miss_shader_binding_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "missShaderBindingStride",
            name: "miss_shader_binding_stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "hitShaderBindingTableBuffer",
            name: "hit_shader_binding_table_buffer",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "hitShaderBindingOffset",
            name: "hit_shader_binding_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "hitShaderBindingStride",
            name: "hit_shader_binding_stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "callableShaderBindingTableBuffer",
            name: "callable_shader_binding_table_buffer",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "callableShaderBindingOffset",
            name: "callable_shader_binding_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "callableShaderBindingStride",
            name: "callable_shader_binding_stride",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "width",
            name: "width",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "height",
            name: "height",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "depth",
            name: "depth",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdTraceRaysIndirectKHR",
        rename: None,
        name: "cmd_trace_rays_indirect_khr",
        origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pRaygenShaderBindingTable",
            name: "p_raygen_shader_binding_table",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkStridedDeviceAddressRegionKHR")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pMissShaderBindingTable",
            name: "p_miss_shader_binding_table",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkStridedDeviceAddressRegionKHR")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pHitShaderBindingTable",
            name: "p_hit_shader_binding_table",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkStridedDeviceAddressRegionKHR")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCallableShaderBindingTable",
            name: "p_callable_shader_binding_table",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkStridedDeviceAddressRegionKHR")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "indirectDeviceAddress",
            name: "indirect_device_address",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceAddress"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetRayTracingPipelineStackSizeKHR",
        rename: None,
        name: "cmd_set_ray_tracing_pipeline_stack_size_khr",
        origin: Extension("VK_KHR_ray_tracing_pipeline", 348, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pipelineStackSize",
            name: "pipeline_stack_size",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetPerformanceMarkerINTEL",
        rename: None,
        name: "cmd_set_performance_marker_intel",
        origin: Extension("VK_INTEL_performance_query", 211, false),
        return_type: Named("VkResult"),
        success_codes: [
          "VK_SUCCESS",
        ],
        error_codes: [
          "VK_ERROR_TOO_MANY_OBJECTS",
          "VK_ERROR_OUT_OF_HOST_MEMORY",
        ],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pMarkerInfo",
            name: "p_marker_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkPerformanceMarkerInfoINTEL")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetPerformanceStreamMarkerINTEL",
        rename: None,
        name: "cmd_set_performance_stream_marker_intel",
        origin: Extension("VK_INTEL_performance_query", 211, false),
        return_type: Named("VkResult"),
        success_codes: [
          "VK_SUCCESS",
        ],
        error_codes: [
          "VK_ERROR_TOO_MANY_OBJECTS",
          "VK_ERROR_OUT_OF_HOST_MEMORY",
        ],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pMarkerInfo",
            name: "p_marker_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkPerformanceStreamMarkerInfoINTEL")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetPerformanceOverrideINTEL",
        rename: None,
        name: "cmd_set_performance_override_intel",
        origin: Extension("VK_INTEL_performance_query", 211, false),
        return_type: Named("VkResult"),
        success_codes: [
          "VK_SUCCESS",
        ],
        error_codes: [
          "VK_ERROR_TOO_MANY_OBJECTS",
          "VK_ERROR_OUT_OF_HOST_MEMORY",
        ],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pOverrideInfo",
            name: "p_override_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkPerformanceOverrideInfoINTEL")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetLineStippleEXT",
        rename: None,
        name: "cmd_set_line_stipple_ext",
        origin: Extension("VK_EXT_line_rasterization", 260, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "lineStippleFactor",
            name: "line_stipple_factor",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "lineStipplePattern",
            name: "line_stipple_pattern",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(2)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBuildAccelerationStructuresKHR",
        rename: None,
        name: "cmd_build_acceleration_structures_khr",
        origin: Extension("VK_KHR_acceleration_structure", 151, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "infoCount",
            name: "info_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pInfos",
            name: "p_infos",
            len: Some("infoCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkAccelerationStructureBuildGeometryInfoKHR"), Variable("infoCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "ppBuildRangeInfos",
            name: "pp_build_range_infos",
            len: Some("infoCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Pointer(Const, Named("VkAccelerationStructureBuildRangeInfoKHR")), Variable("infoCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBuildAccelerationStructuresIndirectKHR",
        rename: None,
        name: "cmd_build_acceleration_structures_indirect_khr",
        origin: Extension("VK_KHR_acceleration_structure", 151, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "infoCount",
            name: "info_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pInfos",
            name: "p_infos",
            len: Some("infoCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkAccelerationStructureBuildGeometryInfoKHR"), Variable("infoCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pIndirectDeviceAddresses",
            name: "p_indirect_device_addresses",
            len: Some("infoCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkDeviceAddress"), Variable("infoCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pIndirectStrides",
            name: "p_indirect_strides",
            len: Some("infoCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Native(UInt(4)), Variable("infoCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "ppMaxPrimitiveCounts",
            name: "pp_max_primitive_counts",
            len: Some("infoCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Pointer(Const, Native(UInt(4))), Variable("infoCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 2,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetCullMode",
        rename: None,
        name: "cmd_set_cull_mode",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "cullMode",
            name: "cull_mode",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkCullModeFlags"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetCullModeEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetFrontFace",
        rename: None,
        name: "cmd_set_front_face",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "frontFace",
            name: "front_face",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkFrontFace"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetFrontFaceEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetPrimitiveTopology",
        rename: None,
        name: "cmd_set_primitive_topology",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "primitiveTopology",
            name: "primitive_topology",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkPrimitiveTopology"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetPrimitiveTopologyEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetViewportWithCount",
        rename: None,
        name: "cmd_set_viewport_with_count",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "viewportCount",
            name: "viewport_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pViewports",
            name: "p_viewports",
            len: Some("viewportCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkViewport"), Variable("viewportCount")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetViewportWithCountEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetScissorWithCount",
        rename: None,
        name: "cmd_set_scissor_with_count",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "scissorCount",
            name: "scissor_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pScissors",
            name: "p_scissors",
            len: Some("scissorCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkRect2D"), Variable("scissorCount")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetScissorWithCountEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBindVertexBuffers2",
        rename: None,
        name: "cmd_bind_vertex_buffers2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "firstBinding",
            name: "first_binding",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "bindingCount",
            name: "binding_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pBuffers",
            name: "p_buffers",
            len: Some("bindingCount"),
            no_auto_validity: false,
            optionality: Sometimes,
            ty: Slice(Const, Named("VkBuffer"), Variable("bindingCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pOffsets",
            name: "p_offsets",
            len: Some("bindingCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkDeviceSize"), Variable("bindingCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pSizes",
            name: "p_sizes",
            len: Some("bindingCount"),
            no_auto_validity: false,
            optionality: Yes,
            ty: Slice(Const, Named("VkDeviceSize"), Variable("bindingCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pStrides",
            name: "p_strides",
            len: Some("bindingCount"),
            no_auto_validity: false,
            optionality: Yes,
            ty: Slice(Const, Named("VkDeviceSize"), Variable("bindingCount")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdBindVertexBuffers2EXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDepthTestEnable",
        rename: None,
        name: "cmd_set_depth_test_enable",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "depthTestEnable",
            name: "depth_test_enable",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetDepthTestEnableEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDepthWriteEnable",
        rename: None,
        name: "cmd_set_depth_write_enable",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "depthWriteEnable",
            name: "depth_write_enable",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetDepthWriteEnableEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDepthCompareOp",
        rename: None,
        name: "cmd_set_depth_compare_op",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "depthCompareOp",
            name: "depth_compare_op",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCompareOp"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetDepthCompareOpEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDepthBoundsTestEnable",
        rename: None,
        name: "cmd_set_depth_bounds_test_enable",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "depthBoundsTestEnable",
            name: "depth_bounds_test_enable",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetDepthBoundsTestEnableEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetStencilTestEnable",
        rename: None,
        name: "cmd_set_stencil_test_enable",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "stencilTestEnable",
            name: "stencil_test_enable",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetStencilTestEnableEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetStencilOp",
        rename: None,
        name: "cmd_set_stencil_op",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "faceMask",
            name: "face_mask",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkStencilFaceFlags"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "failOp",
            name: "fail_op",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkStencilOp"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "passOp",
            name: "pass_op",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkStencilOp"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "depthFailOp",
            name: "depth_fail_op",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkStencilOp"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "compareOp",
            name: "compare_op",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCompareOp"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetStencilOpEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetPatchControlPointsEXT",
        rename: None,
        name: "cmd_set_patch_control_points_ext",
        origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "patchControlPoints",
            name: "patch_control_points",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetRasterizerDiscardEnable",
        rename: None,
        name: "cmd_set_rasterizer_discard_enable",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "rasterizerDiscardEnable",
            name: "rasterizer_discard_enable",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetRasterizerDiscardEnableEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetDepthBiasEnable",
        rename: None,
        name: "cmd_set_depth_bias_enable",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "depthBiasEnable",
            name: "depth_bias_enable",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetDepthBiasEnableEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetLogicOpEXT",
        rename: None,
        name: "cmd_set_logic_op_ext",
        origin: Extension("VK_EXT_extended_dynamic_state2", 378, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "logicOp",
            name: "logic_op",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkLogicOp"),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetPrimitiveRestartEnable",
        rename: None,
        name: "cmd_set_primitive_restart_enable",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "primitiveRestartEnable",
            name: "primitive_restart_enable",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBool32"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetPrimitiveRestartEnableEXT",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyBuffer2",
        rename: None,
        name: "cmd_copy_buffer2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pCopyBufferInfo",
            name: "p_copy_buffer_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkCopyBufferInfo2")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdCopyBuffer2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyImage2",
        rename: None,
        name: "cmd_copy_image2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pCopyImageInfo",
            name: "p_copy_image_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkCopyImageInfo2")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdCopyImage2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBlitImage2",
        rename: None,
        name: "cmd_blit_image2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pBlitImageInfo",
            name: "p_blit_image_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkBlitImageInfo2")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdBlitImage2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyBufferToImage2",
        rename: None,
        name: "cmd_copy_buffer_to_image2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pCopyBufferToImageInfo",
            name: "p_copy_buffer_to_image_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkCopyBufferToImageInfo2")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdCopyBufferToImage2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCopyImageToBuffer2",
        rename: None,
        name: "cmd_copy_image_to_buffer2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pCopyImageToBufferInfo",
            name: "p_copy_image_to_buffer_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkCopyImageToBufferInfo2")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdCopyImageToBuffer2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdResolveImage2",
        rename: None,
        name: "cmd_resolve_image2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pResolveImageInfo",
            name: "p_resolve_image_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkResolveImageInfo2")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdResolveImage2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetFragmentShadingRateKHR",
        rename: None,
        name: "cmd_set_fragment_shading_rate_khr",
        origin: Extension("VK_KHR_fragment_shading_rate", 227, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pFragmentSize",
            name: "p_fragment_size",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkExtent2D")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "combinerOps",
            name: "combiner_ops",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Array(Named("VkFragmentShadingRateCombinerOpKHR"), ConstantInt(2)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetFragmentShadingRateEnumNV",
        rename: None,
        name: "cmd_set_fragment_shading_rate_enum_nv",
        origin: Extension("VK_NV_fragment_shading_rate_enums", 327, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "shadingRate",
            name: "shading_rate",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkFragmentShadingRateNV"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "combinerOps",
            name: "combiner_ops",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Array(Named("VkFragmentShadingRateCombinerOpKHR"), ConstantInt(2)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetVertexInputEXT",
        rename: None,
        name: "cmd_set_vertex_input_ext",
        origin: Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "vertexBindingDescriptionCount",
            name: "vertex_binding_description_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pVertexBindingDescriptions",
            name: "p_vertex_binding_descriptions",
            len: Some("vertexBindingDescriptionCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkVertexInputBindingDescription2EXT"), Variable("vertexBindingDescriptionCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "vertexAttributeDescriptionCount",
            name: "vertex_attribute_description_count",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pVertexAttributeDescriptions",
            name: "p_vertex_attribute_descriptions",
            len: Some("vertexAttributeDescriptionCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkVertexInputAttributeDescription2EXT"), Variable("vertexAttributeDescriptionCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetColorWriteEnableEXT",
        rename: None,
        name: "cmd_set_color_write_enable_ext",
        origin: Extension("VK_EXT_color_write_enable", 382, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "attachmentCount",
            name: "attachment_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pColorWriteEnables",
            name: "p_color_write_enables",
            len: Some("attachmentCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkBool32"), Variable("attachmentCount")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdSetEvent2",
        rename: None,
        name: "cmd_set_event2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "event",
            name: "event",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkEvent"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pDependencyInfo",
            name: "p_dependency_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkDependencyInfo")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdSetEvent2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdResetEvent2",
        rename: None,
        name: "cmd_reset_event2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "event",
            name: "event",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkEvent"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "stageMask",
            name: "stage_mask",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags2"),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdResetEvent2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdWaitEvents2",
        rename: None,
        name: "cmd_wait_events2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "eventCount",
            name: "event_count",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pEvents",
            name: "p_events",
            len: Some("eventCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkEvent"), Variable("eventCount")),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pDependencyInfos",
            name: "p_dependency_infos",
            len: Some("eventCount"),
            no_auto_validity: false,
            optionality: No,
            ty: Slice(Const, Named("VkDependencyInfo"), Variable("eventCount")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdWaitEvents2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdPipelineBarrier2",
        rename: None,
        name: "cmd_pipeline_barrier2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pDependencyInfo",
            name: "p_dependency_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkDependencyInfo")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdPipelineBarrier2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdWriteTimestamp2",
        rename: None,
        name: "cmd_write_timestamp2",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "stage",
            name: "stage",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags2"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "queryPool",
            name: "query_pool",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkQueryPool"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "query",
            name: "query",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdWriteTimestamp2KHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 31,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdWriteBufferMarker2AMD",
        rename: None,
        name: "cmd_write_buffer_marker2_amd",
        origin: Extension("VK_KHR_synchronization2", 315, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "stage",
            name: "stage",
            len: None,
            no_auto_validity: false,
            optionality: Yes,
            ty: Named("VkPipelineStageFlags2"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstBuffer",
            name: "dst_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "dstOffset",
            name: "dst_offset",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkDeviceSize"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "marker",
            name: "marker",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Native(UInt(4)),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 7,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdDecodeVideoKHR",
        rename: None,
        name: "cmd_decode_video_khr",
        origin: Extension("VK_KHR_video_decode_queue", 25, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pFrameInfo",
            name: "p_frame_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkVideoDecodeInfoKHR")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 8,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginVideoCodingKHR",
        rename: None,
        name: "cmd_begin_video_coding_khr",
        origin: Extension("VK_KHR_video_queue", 24, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pBeginInfo",
            name: "p_begin_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkVideoBeginCodingInfoKHR")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 24,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdControlVideoCodingKHR",
        rename: None,
        name: "cmd_control_video_coding_khr",
        origin: Extension("VK_KHR_video_queue", 24, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pCodingControlInfo",
            name: "p_coding_control_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkVideoCodingControlInfoKHR")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 24,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndVideoCodingKHR",
        rename: None,
        name: "cmd_end_video_coding_khr",
        origin: Extension("VK_KHR_video_queue", 24, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pEndCodingInfo",
            name: "p_end_coding_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkVideoEndCodingInfoKHR")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 24,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEncodeVideoKHR",
        rename: None,
        name: "cmd_encode_video_khr",
        origin: Extension("VK_KHR_video_encode_queue", 300, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pEncodeInfo",
            name: "p_encode_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkVideoEncodeInfoKHR")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 1,
      ),
      queues: QueueFlags(
        bits: 16,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdCuLaunchKernelNVX",
        rename: None,
        name: "cmd_cu_launch_kernel_nvx",
        origin: Extension("VK_NVX_binary_import", 30, false),
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: No,
          ),
          FunctionArgument(
            original_name: "pLaunchInfo",
            name: "p_launch_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkCuLaunchInfoNVX")),
            externally_synced: No,
          ),
        ],
        aliases: [],
      ),
      renderpass: RenderpassFlags(
        bits: 3,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 3,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdBeginRendering",
        rename: None,
        name: "cmd_begin_rendering",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
          FunctionArgument(
            original_name: "pRenderingInfo",
            name: "p_rendering_info",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Pointer(Const, Named("VkRenderingInfo")),
            externally_synced: No,
          ),
        ],
        aliases: [
          "vkCmdBeginRenderingKHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 2,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
    Command(
      function: Function(
        original_name: "vkCmdEndRendering",
        rename: None,
        name: "cmd_end_rendering",
        origin: Vulkan1_3,
        return_type: Native(Void),
        success_codes: [],
        error_codes: [],
        arguments: [
          FunctionArgument(
            original_name: "commandBuffer",
            name: "command_buffer",
            len: None,
            no_auto_validity: false,
            optionality: No,
            ty: Named("VkCommandBuffer"),
            externally_synced: Yes,
          ),
        ],
        aliases: [
          "vkCmdEndRenderingKHR",
        ],
      ),
      renderpass: RenderpassFlags(
        bits: 1,
      ),
      buffer_level: BufferLevelFlags(
        bits: 3,
      ),
      queues: QueueFlags(
        bits: 1,
      ),
    ),
  ],
  origins: [
    Opaque,
    Vulkan1_0,
    Vulkan1_1,
    Vulkan1_2,
    Vulkan1_3,
    Extension("VK_KHR_surface", 1, false),
    Extension("VK_KHR_swapchain", 2, false),
    Extension("VK_KHR_display", 3, false),
    Extension("VK_KHR_display_swapchain", 4, false),
    Extension("VK_KHR_xlib_surface", 5, false),
    Extension("VK_KHR_xcb_surface", 6, false),
    Extension("VK_KHR_wayland_surface", 7, false),
    Extension("VK_KHR_mir_surface", 8, true),
    Extension("VK_KHR_android_surface", 9, false),
    Extension("VK_KHR_win32_surface", 10, false),
    Extension("VK_ANDROID_native_buffer", 11, true),
    Extension("VK_EXT_debug_report", 12, false),
    Extension("VK_NV_glsl_shader", 13, false),
    Extension("VK_EXT_depth_range_unrestricted", 14, false),
    Extension("VK_KHR_sampler_mirror_clamp_to_edge", 15, false),
    Extension("VK_IMG_filter_cubic", 16, false),
    Extension("VK_AMD_extension_17", 17, true),
    Extension("VK_AMD_extension_18", 18, true),
    Extension("VK_AMD_rasterization_order", 19, false),
    Extension("VK_AMD_extension_20", 20, true),
    Extension("VK_AMD_shader_trinary_minmax", 21, false),
    Extension("VK_AMD_shader_explicit_vertex_parameter", 22, false),
    Extension("VK_EXT_debug_marker", 23, false),
    Extension("VK_KHR_video_queue", 24, false),
    Extension("VK_KHR_video_decode_queue", 25, false),
    Extension("VK_AMD_gcn_shader", 26, false),
    Extension("VK_NV_dedicated_allocation", 27, false),
    Extension("VK_EXT_extension_28", 28, true),
    Extension("VK_EXT_transform_feedback", 29, false),
    Extension("VK_NVX_binary_import", 30, false),
    Extension("VK_NVX_image_view_handle", 31, false),
    Extension("VK_AMD_extension_32", 32, true),
    Extension("VK_AMD_extension_33", 33, true),
    Extension("VK_AMD_draw_indirect_count", 34, false),
    Extension("VK_AMD_extension_35", 35, true),
    Extension("VK_AMD_negative_viewport_height", 36, false),
    Extension("VK_AMD_gpu_shader_half_float", 37, false),
    Extension("VK_AMD_shader_ballot", 38, false),
    Extension("VK_EXT_video_encode_h264", 39, true),
    Extension("VK_EXT_video_encode_h265", 40, true),
    Extension("VK_EXT_video_decode_h264", 41, true),
    Extension("VK_AMD_texture_gather_bias_lod", 42, false),
    Extension("VK_AMD_shader_info", 43, false),
    Extension("VK_AMD_extension_44", 44, true),
    Extension("VK_KHR_dynamic_rendering", 45, false),
    Extension("VK_AMD_extension_46", 46, true),
    Extension("VK_AMD_shader_image_load_store_lod", 47, false),
    Extension("VK_NVX_extension_48", 48, true),
    Extension("VK_GOOGLE_extension_49", 49, true),
    Extension("VK_GGP_stream_descriptor_surface", 50, true),
    Extension("VK_NV_corner_sampled_image", 51, false),
    Extension("VK_NV_extension_52", 52, true),
    Extension("VK_NV_extension_53", 53, true),
    Extension("VK_KHR_multiview", 54, false),
    Extension("VK_IMG_format_pvrtc", 55, false),
    Extension("VK_NV_external_memory_capabilities", 56, false),
    Extension("VK_NV_external_memory", 57, false),
    Extension("VK_NV_external_memory_win32", 58, false),
    Extension("VK_NV_win32_keyed_mutex", 59, false),
    Extension("VK_KHR_get_physical_device_properties2", 60, false),
    Extension("VK_KHR_device_group", 61, false),
    Extension("VK_EXT_validation_flags", 62, false),
    Extension("VK_NN_vi_surface", 63, false),
    Extension("VK_KHR_shader_draw_parameters", 64, false),
    Extension("VK_EXT_shader_subgroup_ballot", 65, false),
    Extension("VK_EXT_shader_subgroup_vote", 66, false),
    Extension("VK_EXT_texture_compression_astc_hdr", 67, false),
    Extension("VK_EXT_astc_decode_mode", 68, false),
    Extension("VK_IMG_extension_69", 69, true),
    Extension("VK_KHR_maintenance1", 70, false),
    Extension("VK_KHR_device_group_creation", 71, false),
    Extension("VK_KHR_external_memory_capabilities", 72, false),
    Extension("VK_KHR_external_memory", 73, false),
    Extension("VK_KHR_external_memory_win32", 74, false),
    Extension("VK_KHR_external_memory_fd", 75, false),
    Extension("VK_KHR_win32_keyed_mutex", 76, false),
    Extension("VK_KHR_external_semaphore_capabilities", 77, false),
    Extension("VK_KHR_external_semaphore", 78, false),
    Extension("VK_KHR_external_semaphore_win32", 79, false),
    Extension("VK_KHR_external_semaphore_fd", 80, false),
    Extension("VK_KHR_push_descriptor", 81, false),
    Extension("VK_EXT_conditional_rendering", 82, false),
    Extension("VK_KHR_shader_float16_int8", 83, false),
    Extension("VK_KHR_16bit_storage", 84, false),
    Extension("VK_KHR_incremental_present", 85, false),
    Extension("VK_KHR_descriptor_update_template", 86, false),
    Extension("VK_NVX_device_generated_commands", 87, true),
    Extension("VK_NV_clip_space_w_scaling", 88, false),
    Extension("VK_EXT_direct_mode_display", 89, false),
    Extension("VK_EXT_acquire_xlib_display", 90, false),
    Extension("VK_EXT_display_surface_counter", 91, false),
    Extension("VK_EXT_display_control", 92, false),
    Extension("VK_GOOGLE_display_timing", 93, false),
    Extension("VK_RESERVED_do_not_use_94", 94, true),
    Extension("VK_NV_sample_mask_override_coverage", 95, false),
    Extension("VK_NV_geometry_shader_passthrough", 96, false),
    Extension("VK_NV_viewport_array2", 97, false),
    Extension("VK_NVX_multiview_per_view_attributes", 98, false),
    Extension("VK_NV_viewport_swizzle", 99, false),
    Extension("VK_EXT_discard_rectangles", 100, false),
    Extension("VK_NV_extension_101", 101, true),
    Extension("VK_EXT_conservative_rasterization", 102, false),
    Extension("VK_EXT_depth_clip_enable", 103, false),
    Extension("VK_NV_extension_104", 104, true),
    Extension("VK_EXT_swapchain_colorspace", 105, false),
    Extension("VK_EXT_hdr_metadata", 106, false),
    Extension("VK_IMG_extension_107", 107, true),
    Extension("VK_IMG_extension_108", 108, true),
    Extension("VK_KHR_imageless_framebuffer", 109, false),
    Extension("VK_KHR_create_renderpass2", 110, false),
    Extension("VK_IMG_extension_111", 111, true),
    Extension("VK_KHR_shared_presentable_image", 112, false),
    Extension("VK_KHR_external_fence_capabilities", 113, false),
    Extension("VK_KHR_external_fence", 114, false),
    Extension("VK_KHR_external_fence_win32", 115, false),
    Extension("VK_KHR_external_fence_fd", 116, false),
    Extension("VK_KHR_performance_query", 117, false),
    Extension("VK_KHR_maintenance2", 118, false),
    Extension("VK_KHR_extension_119", 119, true),
    Extension("VK_KHR_get_surface_capabilities2", 120, false),
    Extension("VK_KHR_variable_pointers", 121, false),
    Extension("VK_KHR_get_display_properties2", 122, false),
    Extension("VK_MVK_ios_surface", 123, false),
    Extension("VK_MVK_macos_surface", 124, false),
    Extension("VK_MVK_moltenvk", 125, true),
    Extension("VK_EXT_external_memory_dma_buf", 126, false),
    Extension("VK_EXT_queue_family_foreign", 127, false),
    Extension("VK_KHR_dedicated_allocation", 128, false),
    Extension("VK_EXT_debug_utils", 129, false),
    Extension("VK_ANDROID_external_memory_android_hardware_buffer", 130, false),
    Extension("VK_EXT_sampler_filter_minmax", 131, false),
    Extension("VK_KHR_storage_buffer_storage_class", 132, false),
    Extension("VK_AMD_gpu_shader_int16", 133, false),
    Extension("VK_AMD_extension_134", 134, true),
    Extension("VK_AMD_extension_135", 135, true),
    Extension("VK_AMD_extension_136", 136, true),
    Extension("VK_AMD_mixed_attachment_samples", 137, false),
    Extension("VK_AMD_shader_fragment_mask", 138, false),
    Extension("VK_EXT_inline_uniform_block", 139, false),
    Extension("VK_AMD_extension_140", 140, true),
    Extension("VK_EXT_shader_stencil_export", 141, false),
    Extension("VK_AMD_extension_142", 142, true),
    Extension("VK_AMD_extension_143", 143, true),
    Extension("VK_EXT_sample_locations", 144, false),
    Extension("VK_KHR_relaxed_block_layout", 145, false),
    Extension("VK_RESERVED_do_not_use_146", 146, true),
    Extension("VK_KHR_get_memory_requirements2", 147, false),
    Extension("VK_KHR_image_format_list", 148, false),
    Extension("VK_EXT_blend_operation_advanced", 149, false),
    Extension("VK_NV_fragment_coverage_to_color", 150, false),
    Extension("VK_KHR_acceleration_structure", 151, false),
    Extension("VK_KHR_ray_tracing_pipeline", 348, false),
    Extension("VK_KHR_ray_query", 349, false),
    Extension("VK_NV_extension_152", 152, true),
    Extension("VK_NV_framebuffer_mixed_samples", 153, false),
    Extension("VK_NV_fill_rectangle", 154, false),
    Extension("VK_NV_shader_sm_builtins", 155, false),
    Extension("VK_EXT_post_depth_coverage", 156, false),
    Extension("VK_KHR_sampler_ycbcr_conversion", 157, false),
    Extension("VK_KHR_bind_memory2", 158, false),
    Extension("VK_EXT_image_drm_format_modifier", 159, false),
    Extension("VK_EXT_extension_160", 160, true),
    Extension("VK_EXT_validation_cache", 161, false),
    Extension("VK_EXT_descriptor_indexing", 162, false),
    Extension("VK_EXT_shader_viewport_index_layer", 163, false),
    Extension("VK_KHR_portability_subset", 164, false),
    Extension("VK_NV_shading_rate_image", 165, false),
    Extension("VK_NV_ray_tracing", 166, false),
    Extension("VK_NV_representative_fragment_test", 167, false),
    Extension("VK_NV_extension_168", 168, true),
    Extension("VK_KHR_maintenance3", 169, false),
    Extension("VK_KHR_draw_indirect_count", 170, false),
    Extension("VK_EXT_filter_cubic", 171, false),
    Extension("VK_QCOM_render_pass_shader_resolve", 172, true),
    Extension("VK_QCOM_extension_173", 173, true),
    Extension("VK_QCOM_extension_174", 174, true),
    Extension("VK_EXT_global_priority", 175, false),
    Extension("VK_KHR_shader_subgroup_extended_types", 176, false),
    Extension("VK_EXT_extension_177", 177, true),
    Extension("VK_KHR_8bit_storage", 178, false),
    Extension("VK_EXT_external_memory_host", 179, false),
    Extension("VK_AMD_buffer_marker", 180, false),
    Extension("VK_KHR_shader_atomic_int64", 181, false),
    Extension("VK_KHR_shader_clock", 182, false),
    Extension("VK_AMD_extension_183", 183, true),
    Extension("VK_AMD_pipeline_compiler_control", 184, false),
    Extension("VK_EXT_calibrated_timestamps", 185, false),
    Extension("VK_AMD_shader_core_properties", 186, false),
    Extension("VK_AMD_extension_187", 187, true),
    Extension("VK_EXT_video_decode_h265", 188, true),
    Extension("VK_KHR_global_priority", 189, false),
    Extension("VK_AMD_memory_overallocation_behavior", 190, false),
    Extension("VK_EXT_vertex_attribute_divisor", 191, false),
    Extension("VK_GGP_frame_token", 192, true),
    Extension("VK_EXT_pipeline_creation_feedback", 193, false),
    Extension("VK_GOOGLE_extension_194", 194, true),
    Extension("VK_GOOGLE_extension_195", 195, true),
    Extension("VK_GOOGLE_extension_196", 196, true),
    Extension("VK_KHR_driver_properties", 197, false),
    Extension("VK_KHR_shader_float_controls", 198, false),
    Extension("VK_NV_shader_subgroup_partitioned", 199, false),
    Extension("VK_KHR_depth_stencil_resolve", 200, false),
    Extension("VK_KHR_swapchain_mutable_format", 201, false),
    Extension("VK_NV_compute_shader_derivatives", 202, false),
    Extension("VK_NV_mesh_shader", 203, false),
    Extension("VK_NV_fragment_shader_barycentric", 204, false),
    Extension("VK_NV_shader_image_footprint", 205, false),
    Extension("VK_NV_scissor_exclusive", 206, false),
    Extension("VK_NV_device_diagnostic_checkpoints", 207, false),
    Extension("VK_KHR_timeline_semaphore", 208, false),
    Extension("VK_KHR_extension_209", 209, true),
    Extension("VK_INTEL_shader_integer_functions2", 210, false),
    Extension("VK_INTEL_performance_query", 211, false),
    Extension("VK_KHR_vulkan_memory_model", 212, false),
    Extension("VK_EXT_pci_bus_info", 213, false),
    Extension("VK_AMD_display_native_hdr", 214, false),
    Extension("VK_FUCHSIA_imagepipe_surface", 215, false),
    Extension("VK_KHR_shader_terminate_invocation", 216, false),
    Extension("VK_GOOGLE_extension_217", 217, true),
    Extension("VK_EXT_metal_surface", 218, false),
    Extension("VK_EXT_fragment_density_map", 219, false),
    Extension("VK_EXT_extension_220", 220, true),
    Extension("VK_KHR_extension_221", 221, true),
    Extension("VK_EXT_scalar_block_layout", 222, false),
    Extension("VK_EXT_extension_223", 223, true),
    Extension("VK_GOOGLE_hlsl_functionality1", 224, false),
    Extension("VK_GOOGLE_decorate_string", 225, false),
    Extension("VK_EXT_subgroup_size_control", 226, false),
    Extension("VK_KHR_fragment_shading_rate", 227, false),
    Extension("VK_AMD_shader_core_properties2", 228, false),
    Extension("VK_AMD_extension_229", 229, true),
    Extension("VK_AMD_device_coherent_memory", 230, false),
    Extension("VK_AMD_extension_231", 231, true),
    Extension("VK_AMD_extension_232", 232, true),
    Extension("VK_AMD_extension_233", 233, true),
    Extension("VK_AMD_extension_234", 234, true),
    Extension("VK_EXT_shader_image_atomic_int64", 235, false),
    Extension("VK_AMD_extension_236", 236, true),
    Extension("VK_KHR_spirv_1_4", 237, false),
    Extension("VK_EXT_memory_budget", 238, false),
    Extension("VK_EXT_memory_priority", 239, false),
    Extension("VK_KHR_surface_protected_capabilities", 240, false),
    Extension("VK_NV_dedicated_allocation_image_aliasing", 241, false),
    Extension("VK_KHR_separate_depth_stencil_layouts", 242, false),
    Extension("VK_INTEL_extension_243", 243, true),
    Extension("VK_MESA_extension_244", 244, true),
    Extension("VK_EXT_buffer_device_address", 245, false),
    Extension("VK_EXT_tooling_info", 246, false),
    Extension("VK_EXT_separate_stencil_usage", 247, false),
    Extension("VK_EXT_validation_features", 248, false),
    Extension("VK_KHR_present_wait", 249, false),
    Extension("VK_NV_cooperative_matrix", 250, false),
    Extension("VK_NV_coverage_reduction_mode", 251, false),
    Extension("VK_EXT_fragment_shader_interlock", 252, false),
    Extension("VK_EXT_ycbcr_image_arrays", 253, false),
    Extension("VK_KHR_uniform_buffer_standard_layout", 254, false),
    Extension("VK_EXT_provoking_vertex", 255, false),
    Extension("VK_EXT_full_screen_exclusive", 256, false),
    Extension("VK_EXT_headless_surface", 257, false),
    Extension("VK_KHR_buffer_device_address", 258, false),
    Extension("VK_EXT_extension_259", 259, true),
    Extension("VK_EXT_line_rasterization", 260, false),
    Extension("VK_EXT_shader_atomic_float", 261, false),
    Extension("VK_EXT_host_query_reset", 262, false),
    Extension("VK_GGP_extension_263", 263, true),
    Extension("VK_BRCM_extension_264", 264, true),
    Extension("VK_BRCM_extension_265", 265, true),
    Extension("VK_EXT_index_type_uint8", 266, false),
    Extension("VK_EXT_extension_267", 267, true),
    Extension("VK_EXT_extended_dynamic_state", 268, false),
    Extension("VK_KHR_deferred_host_operations", 269, false),
    Extension("VK_KHR_pipeline_executable_properties", 270, false),
    Extension("VK_INTEL_extension_271", 271, true),
    Extension("VK_INTEL_extension_272", 272, true),
    Extension("VK_INTEL_extension_273", 273, true),
    Extension("VK_EXT_shader_atomic_float2", 274, false),
    Extension("VK_KHR_extension_275", 275, true),
    Extension("VK_KHR_extension_276", 276, true),
    Extension("VK_EXT_shader_demote_to_helper_invocation", 277, false),
    Extension("VK_NV_device_generated_commands", 278, false),
    Extension("VK_NV_inherited_viewport_scissor", 279, false),
    Extension("VK_KHR_extension_280", 280, true),
    Extension("VK_KHR_shader_integer_dot_product", 281, false),
    Extension("VK_EXT_texel_buffer_alignment", 282, false),
    Extension("VK_QCOM_render_pass_transform", 283, true),
    Extension("VK_EXT_extension_284", 284, true),
    Extension("VK_EXT_device_memory_report", 285, false),
    Extension("VK_EXT_acquire_drm_display", 286, false),
    Extension("VK_EXT_robustness2", 287, false),
    Extension("VK_EXT_custom_border_color", 288, false),
    Extension("VK_EXT_extension_289", 289, true),
    Extension("VK_GOOGLE_user_type", 290, false),
    Extension("VK_KHR_pipeline_library", 291, false),
    Extension("VK_NV_extension_292", 292, true),
    Extension("VK_NV_extension_293", 293, true),
    Extension("VK_KHR_shader_non_semantic_info", 294, false),
    Extension("VK_KHR_present_id", 295, false),
    Extension("VK_EXT_private_data", 296, false),
    Extension("VK_KHR_extension_297", 297, true),
    Extension("VK_EXT_pipeline_creation_cache_control", 298, false),
    Extension("VK_KHR_extension_299", 299, true),
    Extension("VK_KHR_video_encode_queue", 300, false),
    Extension("VK_NV_device_diagnostics_config", 301, false),
    Extension("VK_QCOM_render_pass_store_ops", 302, true),
    Extension("VK_QCOM_extension_303", 303, true),
    Extension("VK_QCOM_extension_304", 304, true),
    Extension("VK_QCOM_extension_305", 305, true),
    Extension("VK_QCOM_extension_306", 306, true),
    Extension("VK_QCOM_extension_307", 307, true),
    Extension("VK_NV_extension_308", 308, true),
    Extension("VK_KHR_extension_309", 309, true),
    Extension("VK_QCOM_extension_310", 310, true),
    Extension("VK_NV_extension_311", 311, true),
    Extension("VK_EXT_extension_312", 312, true),
    Extension("VK_EXT_extension_313", 313, true),
    Extension("VK_AMD_extension_314", 314, true),
    Extension("VK_KHR_synchronization2", 315, false),
    Extension("VK_AMD_extension_316", 316, true),
    Extension("VK_AMD_extension_317", 317, true),
    Extension("VK_AMD_extension_318", 318, true),
    Extension("VK_AMD_extension_319", 319, true),
    Extension("VK_AMD_extension_320", 320, true),
    Extension("VK_AMD_extension_321", 321, true),
    Extension("VK_AMD_extension_322", 322, true),
    Extension("VK_AMD_extension_323", 323, true),
    Extension("VK_KHR_shader_subgroup_uniform_control_flow", 324, false),
    Extension("VK_KHR_extension_325", 325, true),
    Extension("VK_KHR_zero_initialize_workgroup_memory", 326, false),
    Extension("VK_NV_fragment_shading_rate_enums", 327, false),
    Extension("VK_NV_ray_tracing_motion_blur", 328, false),
    Extension("VK_NV_extension_329", 329, true),
    Extension("VK_NV_extension_330", 330, true),
    Extension("VK_EXT_ycbcr_2plane_444_formats", 331, false),
    Extension("VK_NV_extension_332", 332, true),
    Extension("VK_EXT_fragment_density_map2", 333, false),
    Extension("VK_QCOM_rotated_copy_commands", 334, true),
    Extension("VK_KHR_extension_335", 335, true),
    Extension("VK_EXT_image_robustness", 336, false),
    Extension("VK_KHR_workgroup_memory_explicit_layout", 337, false),
    Extension("VK_KHR_copy_commands2", 338, false),
    Extension("VK_ARM_extension_339", 339, true),
    Extension("VK_EXT_extension_340", 340, true),
    Extension("VK_EXT_4444_formats", 341, false),
    Extension("VK_EXT_extension_342", 342, true),
    Extension("VK_ARM_rasterization_order_attachment_access", 343, false),
    Extension("VK_ARM_extension_344", 344, true),
    Extension("VK_EXT_rgba10x6_formats", 345, false),
    Extension("VK_NV_acquire_winrt_display", 346, false),
    Extension("VK_EXT_directfb_surface", 347, false),
    Extension("VK_KHR_extension_350", 350, true),
    Extension("VK_NV_extension_351", 351, true),
    Extension("VK_VALVE_mutable_descriptor_type", 352, false),
    Extension("VK_EXT_vertex_input_dynamic_state", 353, false),
    Extension("VK_EXT_physical_device_drm", 354, false),
    Extension("VK_EXT_extension_355", 355, true),
    Extension("VK_EXT_depth_clip_control", 356, false),
    Extension("VK_EXT_primitive_topology_list_restart", 357, false),
    Extension("VK_KHR_extension_358", 358, true),
    Extension("VK_EXT_extension_359", 359, true),
    Extension("VK_EXT_extension_360", 360, true),
    Extension("VK_KHR_format_feature_flags2", 361, false),
    Extension("VK_EXT_extension_362", 362, true),
    Extension("VK_EXT_extension_363", 363, true),
    Extension("VK_FUCHSIA_extension_364", 364, true),
    Extension("VK_FUCHSIA_external_memory", 365, false),
    Extension("VK_FUCHSIA_external_semaphore", 366, false),
    Extension("VK_FUCHSIA_buffer_collection", 367, false),
    Extension("VK_FUCHSIA_extension_368", 368, true),
    Extension("VK_QCOM_extension_369", 369, true),
    Extension("VK_HUAWEI_subpass_shading", 370, false),
    Extension("VK_HUAWEI_invocation_mask", 371, false),
    Extension("VK_NV_external_memory_rdma", 372, false),
    Extension("VK_NV_extension_373", 373, true),
    Extension("VK_NV_extension_374", 374, true),
    Extension("VK_NV_extension_375", 375, true),
    Extension("VK_EXT_extension_376", 376, true),
    Extension("VK_EXT_extension_377", 377, true),
    Extension("VK_EXT_extended_dynamic_state2", 378, false),
    Extension("VK_QNX_screen_surface", 379, true),
    Extension("VK_KHR_extension_380", 380, true),
    Extension("VK_KHR_extension_381", 381, true),
    Extension("VK_EXT_color_write_enable", 382, false),
    Extension("VK_EXT_extension_383", 383, true),
    Extension("VK_EXT_extension_384", 384, true),
    Extension("VK_MESA_extension_385", 385, true),
    Extension("VK_GOOGLE_extension_386", 386, true),
    Extension("VK_KHR_extension_387", 387, true),
    Extension("VK_EXT_extension_388", 388, true),
    Extension("VK_EXT_global_priority_query", 389, false),
    Extension("VK_EXT_extension_390", 390, true),
    Extension("VK_EXT_extension_391", 391, true),
    Extension("VK_EXT_image_view_min_lod", 392, false),
    Extension("VK_EXT_multi_draw", 393, false),
    Extension("VK_EXT_extension_394", 394, true),
    Extension("VK_KHR_portability_enumeration", 395, false),
    Extension("VK_KHR_extension_396", 396, true),
    Extension("VK_NV_extension_397", 397, true),
    Extension("VK_NV_extension_398", 398, true),
    Extension("VK_JUICE_extension_399", 399, true),
    Extension("VK_JUICE_extension_400", 400, true),
    Extension("VK_EXT_load_store_op_none", 401, false),
    Extension("VK_FB_extension_402", 402, true),
    Extension("VK_FB_extension_403", 403, true),
    Extension("VK_FB_extension_404", 404, true),
    Extension("VK_HUAWEI_extension_405", 405, true),
    Extension("VK_HUAWEI_extension_406", 406, true),
    Extension("VK_GGP_extension_407", 407, true),
    Extension("VK_GGP_extension_408", 408, true),
    Extension("VK_GGP_extension_409", 409, true),
    Extension("VK_GGP_extension_410", 410, true),
    Extension("VK_GGP_extension_411", 411, true),
    Extension("VK_EXT_border_color_swizzle", 412, false),
    Extension("VK_EXT_pageable_device_local_memory", 413, false),
    Extension("VK_KHR_maintenance4", 414, false),
    Extension("VK_HUAWEI_extension_415", 415, true),
    Extension("VK_ARM_extension_416", 416, true),
    Extension("VK_KHR_extension_417", 417, true),
    Extension("VK_ARM_extension_418", 418, true),
    Extension("VK_EXT_extension_419", 419, true),
    Extension("VK_EXT_extension_420", 420, true),
    Extension("VK_VALVE_descriptor_set_host_mapping", 421, true),
    Extension("VK_EXT_extension_422", 422, true),
    Extension("VK_EXT_disable_cube_map_wrap", 423, true),
    Extension("VK_ARM_extension_424", 424, true),
    Extension("VK_ARM_extension_425", 425, true),
    Extension("VK_QCOM_fragment_density_map_offset", 426, true),
    Extension("VK_NV_extension_427", 427, true),
    Extension("VK_NV_extension_428", 428, true),
    Extension("VK_NV_extension_429", 429, true),
    Extension("VK_NV_extension_430", 430, true),
    Extension("VK_NV_linear_color_attachment", 431, false),
    Extension("VK_NV_extension_432", 432, true),
    Extension("VK_NV_extension_433", 433, true),
    Extension("VK_GOOGLE_surfaceless_query", 434, false),
    Extension("VK_KHR_extension_435", 435, true),
    Extension("VK_NV_extension_436", 436, true),
    Extension("VK_EXT_extension_437", 437, true),
    Extension("VK_EXT_extension_438", 438, true),
    Extension("VK_SEC_extension_439", 439, true),
    Extension("VK_QCOM_extension_440", 440, true),
    Extension("VK_QCOM_extension_441", 441, true),
    Extension("VK_COREAVI_extension_442", 442, true),
    Extension("VK_COREAVI_extension_443", 443, true),
    Extension("VK_COREAVI_extension_444", 444, true),
    Extension("VK_COREAVI_extension_445", 445, true),
    Extension("VK_COREAVI_extension_446", 446, true),
    Extension("VK_COREAVI_extension_447", 447, true),
    Extension("VK_SEC_extension_448", 448, true),
    Extension("VK_SEC_extension_449", 449, true),
    Extension("VK_SEC_extension_450", 450, true),
    Extension("VK_SEC_extension_451", 451, true),
    Extension("VK_NV_extension_452", 452, true),
    Extension("VK_ARM_extension_453", 453, true),
    Extension("VK_GOOGLE_extension_454", 454, true),
    Extension("VK_GOOGLE_extension_455", 455, true),
    Extension("VK_NV_extension_456", 456, true),
    Extension("VK_EXT_extension_457", 457, true),
    Extension("VK_EXT_extension_458", 458, true),
    Extension("VK_ARM_extension_459", 459, true),
    Extension("VK_EXT_extension_460", 460, true),
    Extension("VK_EXT_extension_461", 461, true),
    Extension("VK_EXT_extension_462", 462, true),
    Extension("VK_EXT_extension_463", 463, true),
  ],
  loader_functions: [
    "vkCreateInstance",
    "vkEnumerateInstanceVersion",
    "vkEnumerateInstanceLayerProperties",
    "vkEnumerateInstanceExtensionProperties",
  ],
)